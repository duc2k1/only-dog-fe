var tI=Object.defineProperty,nI=Object.defineProperties;var sI=Object.getOwnPropertyDescriptors;var Hc=Object.getOwnPropertySymbols;var Ub=Object.prototype.hasOwnProperty,Gb=Object.prototype.propertyIsEnumerable;var Hb=(s,t,n)=>t in s?tI(s,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[t]=n,Fe=(s,t)=>{for(var n in t||(t={}))Ub.call(t,n)&&Hb(s,n,t[n]);if(Hc)for(var n of Hc(t))Gb.call(t,n)&&Hb(s,n,t[n]);return s},He=(s,t)=>nI(s,sI(t));var at=(s,t)=>{var n={};for(var r in s)Ub.call(s,r)&&t.indexOf(r)<0&&(n[r]=s[r]);if(s!=null&&Hc)for(var r of Hc(s))t.indexOf(r)<0&&Gb.call(s,r)&&(n[r]=s[r]);return n};import{c as Fr,d as rI,e as Ei,_ as oI,r as te,P as Rs,f as Ke,g as jb}from"./vendor.a34827cf.js";import{c as ht,u as Kt,a as aI,S as iI,g as lI}from"./grey.10382be7.js";import{j as xe,a as Fs,F as jc,A as cI,b as uI,g as hI}from"./index.36ff7bfb.js";function dI(s,t){return t.forEach(function(n){Object.keys(n).forEach(function(r){if(r!=="default"&&!(r in s)){var o=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(s,r,o.get?o:{enumerable:!0,get:function(){return n[r]}})}})}),Object.freeze(s)}function qc(s){return s&&s.ownerDocument||document}function pI(s){var t=qc(s);return t&&t.defaultView||window}function fI(s,t){return pI(s).getComputedStyle(s,t)}var mI=/([A-Z])/g;function gI(s){return s.replace(mI,"-$1").toLowerCase()}var yI=/^ms-/;function Kc(s){return gI(s).replace(yI,"-ms-")}var bI=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;function xI(s){return!!(s&&bI.test(s))}function _r(s,t){var n="",r="";if(typeof t=="string")return s.style.getPropertyValue(Kc(t))||fI(s).getPropertyValue(Kc(t));Object.keys(t).forEach(function(o){var a=t[o];!a&&a!==0?s.style.removeProperty(Kc(o)):xI(o)?r+=o+"("+a+") ":n+=Kc(o)+": "+a+";"}),r&&(n+="transform: "+r+";"),s.style.cssText+=";"+n}var qb={disabled:!1},Kb=Fr.createContext(null),Ai="unmounted",Or="exited",or="entering",Lr="entered",Rp="exiting",_s=function(s){rI(t,s);function t(r,o){var a;a=s.call(this,r,o)||this;var i=o,l=i&&!i.isMounting?r.enter:r.appear,c;return a.appearStatus=null,r.in?l?(c=Or,a.appearStatus=or):c=Lr:r.unmountOnExit||r.mountOnEnter?c=Ai:c=Or,a.state={status:c},a.nextCallback=null,a}t.getDerivedStateFromProps=function(o,a){var i=o.in;return i&&a.status===Ai?{status:Or}:null};var n=t.prototype;return n.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},n.componentDidUpdate=function(o){var a=null;if(o!==this.props){var i=this.state.status;this.props.in?i!==or&&i!==Lr&&(a=or):(i===or||i===Lr)&&(a=Rp)}this.updateStatus(!1,a)},n.componentWillUnmount=function(){this.cancelNextCallback()},n.getTimeouts=function(){var o=this.props.timeout,a,i,l;return a=i=l=o,o!=null&&typeof o!="number"&&(a=o.exit,i=o.enter,l=o.appear!==void 0?o.appear:i),{exit:a,enter:i,appear:l}},n.updateStatus=function(o,a){o===void 0&&(o=!1),a!==null?(this.cancelNextCallback(),a===or?this.performEnter(o):this.performExit()):this.props.unmountOnExit&&this.state.status===Or&&this.setState({status:Ai})},n.performEnter=function(o){var a=this,i=this.props.enter,l=this.context?this.context.isMounting:o,c=this.props.nodeRef?[l]:[Ei.findDOMNode(this),l],u=c[0],h=c[1],d=this.getTimeouts(),p=l?d.appear:d.enter;if(!o&&!i||qb.disabled){this.safeSetState({status:Lr},function(){a.props.onEntered(u)});return}this.props.onEnter(u,h),this.safeSetState({status:or},function(){a.props.onEntering(u,h),a.onTransitionEnd(p,function(){a.safeSetState({status:Lr},function(){a.props.onEntered(u,h)})})})},n.performExit=function(){var o=this,a=this.props.exit,i=this.getTimeouts(),l=this.props.nodeRef?void 0:Ei.findDOMNode(this);if(!a||qb.disabled){this.safeSetState({status:Or},function(){o.props.onExited(l)});return}this.props.onExit(l),this.safeSetState({status:Rp},function(){o.props.onExiting(l),o.onTransitionEnd(i.exit,function(){o.safeSetState({status:Or},function(){o.props.onExited(l)})})})},n.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},n.safeSetState=function(o,a){a=this.setNextCallback(a),this.setState(o,a)},n.setNextCallback=function(o){var a=this,i=!0;return this.nextCallback=function(l){i&&(i=!1,a.nextCallback=null,o(l))},this.nextCallback.cancel=function(){i=!1},this.nextCallback},n.onTransitionEnd=function(o,a){this.setNextCallback(a);var i=this.props.nodeRef?this.props.nodeRef.current:Ei.findDOMNode(this),l=o==null&&!this.props.addEndListener;if(!i||l){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var c=this.props.nodeRef?[this.nextCallback]:[i,this.nextCallback],u=c[0],h=c[1];this.props.addEndListener(u,h)}o!=null&&setTimeout(this.nextCallback,o)},n.render=function(){var o=this.state.status;if(o===Ai)return null;var a=this.props,i=a.children;a.in,a.mountOnEnter,a.unmountOnExit,a.appear,a.enter,a.exit,a.timeout,a.addEndListener,a.onEnter,a.onEntering,a.onEntered,a.onExit,a.onExiting,a.onExited,a.nodeRef;var l=oI(a,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return Fr.createElement(Kb.Provider,{value:null},typeof i=="function"?i(o,l):Fr.cloneElement(Fr.Children.only(i),l))},t}(Fr.Component);_s.contextType=Kb;_s.propTypes={};function Eo(){}_s.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:Eo,onEntering:Eo,onEntered:Eo,onExit:Eo,onExiting:Eo,onExited:Eo};_s.UNMOUNTED=Ai;_s.EXITED=Or;_s.ENTERING=or;_s.ENTERED=Lr;_s.EXITING=Rp;var wI=_s,Xc=!!(typeof window!="undefined"&&window.document&&window.document.createElement),Fp=!1,_p=!1;try{var Op={get passive(){return Fp=!0},get once(){return _p=Fp=!0}};Xc&&(window.addEventListener("test",Op,Op),window.removeEventListener("test",Op,!0))}catch{}function Xb(s,t,n,r){if(r&&typeof r!="boolean"&&!_p){var o=r.once,a=r.capture,i=n;!_p&&o&&(i=n.__once||function l(c){this.removeEventListener(t,l,a),n.call(this,c)},n.__once=i),s.addEventListener(t,i,Fp?r:a)}s.addEventListener(t,n,r)}function Lp(s,t,n,r){var o=r&&typeof r!="boolean"?r.capture:r;s.removeEventListener(t,n,o),n.__once&&s.removeEventListener(t,n.__once,o)}function Yc(s,t,n,r){return Xb(s,t,n,r),function(){Lp(s,t,n,r)}}function vI(s,t,n,r){if(n===void 0&&(n=!1),r===void 0&&(r=!0),s){var o=document.createEvent("HTMLEvents");o.initEvent(t,n,r),s.dispatchEvent(o)}}function $I(s){var t=_r(s,"transitionDuration")||"",n=t.indexOf("ms")===-1?1e3:1;return parseFloat(t)*n}function CI(s,t,n){n===void 0&&(n=5);var r=!1,o=setTimeout(function(){r||vI(s,"transitionend",!0)},t+n),a=Yc(s,"transitionend",function(){r=!0},{once:!0});return function(){clearTimeout(o),a()}}function Yb(s,t,n,r){n==null&&(n=$I(s)||0);var o=CI(s,n,r),a=Yc(s,"transitionend",t);return function(){o(),a()}}function Zb(s,t){const n=_r(s,t)||"",r=n.indexOf("ms")===-1?1e3:1;return parseFloat(n)*r}function kI(s,t){const n=Zb(s,"transitionDuration"),r=Zb(s,"transitionDelay"),o=Yb(s,a=>{a.target===s&&(o(),t(a))},n+r)}function II(s){s.offsetHeight}var Jb=function(t){return!t||typeof t=="function"?t:function(n){t.current=n}};function NI(s,t){var n=Jb(s),r=Jb(t);return function(o){n&&n(o),r&&r(o)}}function Qb(s,t){return te.exports.useMemo(function(){return NI(s,t)},[s,t])}function SI(s){return s&&"setState"in s?Ei.findDOMNode(s):s!=null?s:null}const TI=Fr.forwardRef((d,h)=>{var p=d,{onEnter:s,onEntering:t,onEntered:n,onExit:r,onExiting:o,onExited:a,addEndListener:i,children:l,childRef:c}=p,u=at(p,["onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children","childRef"]);const f=te.exports.useRef(null),m=Qb(f,c),g=S=>{m(SI(S))},y=S=>E=>{S&&f.current&&S(f.current,E)},b=te.exports.useCallback(y(s),[s]),x=te.exports.useCallback(y(t),[t]),v=te.exports.useCallback(y(n),[n]),w=te.exports.useCallback(y(r),[r]),C=te.exports.useCallback(y(o),[o]),N=te.exports.useCallback(y(a),[a]),k=te.exports.useCallback(y(i),[i]);return xe(wI,He(Fe({ref:h},u),{onEnter:b,onEntered:v,onEntering:x,onExit:w,onExited:N,onExiting:C,addEndListener:k,nodeRef:f,children:typeof l=="function"?(S,E)=>l(S,He(Fe({},E),{ref:g})):Fr.cloneElement(l,{ref:g})}))});var EI=TI;function AI(s){var t=te.exports.useRef(s);return te.exports.useEffect(function(){t.current=s},[s]),t}function Pp(s){var t=AI(s);return te.exports.useCallback(function(){return t.current&&t.current.apply(t,arguments)},[t])}function DI(s){var t=te.exports.useRef(s);return te.exports.useEffect(function(){t.current=s},[s]),t}function Di(s){var t=DI(s);return te.exports.useCallback(function(){return t.current&&t.current.apply(t,arguments)},[t])}function RI(){var s=te.exports.useRef(!0),t=te.exports.useRef(function(){return s.current});return te.exports.useEffect(function(){return function(){s.current=!1}},[]),t.current}function FI(s){var t=te.exports.useRef(null);return te.exports.useEffect(function(){t.current=s}),t.current}const _I=["as","disabled"];function OI(s,t){if(s==null)return{};var n={},r=Object.keys(s),o,a;for(a=0;a<r.length;a++)o=r[a],!(t.indexOf(o)>=0)&&(n[o]=s[o]);return n}function LI(s){return!s||s.trim()==="#"}function ex({tagName:s,disabled:t,href:n,target:r,rel:o,onClick:a,tabIndex:i=0,type:l}){s||(n!=null||r!=null||o!=null?s="a":s="button");const c={tagName:s};if(s==="button")return[{type:l||"button",disabled:t},c];const u=d=>{if((t||s==="a"&&LI(n))&&d.preventDefault(),t){d.stopPropagation();return}a==null||a(d)};return[{role:"button",disabled:void 0,tabIndex:t?void 0:i,href:s==="a"&&t?void 0:n,target:s==="a"?r:void 0,"aria-disabled":t||void 0,rel:s==="a"?o:void 0,onClick:u,onKeyDown:d=>{d.key===" "&&(d.preventDefault(),u(d))}},c]}const PI=te.exports.forwardRef((s,t)=>{let{as:n,disabled:r}=s,o=OI(s,_I);const[a,{tagName:i}]=ex(Object.assign({tagName:n,disabled:r},o));return xe(i,Object.assign({},o,a,{ref:t}))});PI.displayName="Button";const MI={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1},zI={[or]:"show",[Lr]:"show"},Mp=te.exports.forwardRef((a,o)=>{var i=a,{className:s,children:t,transitionClasses:n={}}=i,r=at(i,["className","children","transitionClasses"]);const l=te.exports.useCallback((c,u)=>{II(c),r.onEnter==null||r.onEnter(c,u)},[r]);return xe(EI,He(Fe({ref:o,addEndListener:kI},r),{onEnter:l,childRef:t.ref,children:(c,u)=>te.exports.cloneElement(t,He(Fe({},u),{className:ht("fade",s,t.props.className,zI[c],n[c])}))}))});Mp.defaultProps=MI;Mp.displayName="Fade";var tx=Mp;const BI={"aria-label":Rs.string,onClick:Rs.func,variant:Rs.oneOf(["white"])},VI={"aria-label":"Close"},Zc=te.exports.forwardRef((o,r)=>{var a=o,{className:s,variant:t}=a,n=at(a,["className","variant"]);return xe("button",Fe({ref:r,type:"button",className:ht("btn-close",t&&`btn-close-${t}`,s)},n))});Zc.displayName="CloseButton";Zc.propTypes=BI;Zc.defaultProps=VI;var WI=Zc,UI=s=>te.exports.forwardRef((t,n)=>xe("div",He(Fe({},t),{ref:n,className:ht(t.className,s)}))),GI=/-(.)/g;function HI(s){return s.replace(GI,function(t,n){return n.toUpperCase()})}const jI=s=>s[0].toUpperCase()+HI(s).slice(1);function Jc(s,{displayName:t=jI(s),Component:n,defaultProps:r}={}){const o=te.exports.forwardRef((h,u)=>{var d=h,{className:a,bsPrefix:i,as:l=n||"div"}=d,c=at(d,["className","bsPrefix","as"]);const p=Kt(i,s);return xe(l,Fe({ref:u,className:ht(a,p)},c))});return o.defaultProps=r,o.displayName=t,o}const qI={variant:"primary",active:!1,disabled:!1},zp=te.exports.forwardRef((c,l)=>{var u=c,{as:s,bsPrefix:t,variant:n,size:r,active:o,className:a}=u,i=at(u,["as","bsPrefix","variant","size","active","className"]);const h=Kt(t,"btn"),[d,{tagName:p}]=ex(Fe({tagName:s},i));return xe(p,He(Fe(Fe({},i),d),{ref:l,className:ht(a,h,o&&"active",n&&`${h}-${n}`,r&&`${h}-${r}`,i.href&&i.disabled&&"disabled")}))});zp.displayName="Button";zp.defaultProps=qI;var nx=zp;function KI(s){var t=te.exports.useRef(s);return t.current=s,t}function XI(s){var t=KI(s);te.exports.useEffect(function(){return function(){return t.current()}},[])}const YI=["xxl","xl","lg","md","sm","xs"];function ZI(o){var a=o,{as:s,bsPrefix:t,className:n}=a,r=at(a,["as","bsPrefix","className"]);t=Kt(t,"col");const i=[],l=[];return YI.forEach(c=>{const u=r[c];delete r[c];let h,d,p;typeof u=="object"&&u!=null?{span:h,offset:d,order:p}=u:h=u;const f=c!=="xs"?`-${c}`:"";h&&i.push(h===!0?`${t}${f}`:`${t}${f}-${h}`),p!=null&&l.push(`order${f}-${p}`),d!=null&&l.push(`offset${f}-${d}`)}),[He(Fe({},r),{className:ht(n,...i,...l)}),{as:s,bsPrefix:t,spans:i}]}const sx=te.exports.forwardRef((s,t)=>{const[l,...c]=ZI(s),u=l,{className:n}=u,r=at(u,["className"]),[{as:o="div",bsPrefix:a,spans:i}]=c;return xe(o,He(Fe({},r),{ref:t,className:ht(n,!i.length&&a)}))});sx.displayName="Col";var JI=sx,QI=Function.prototype.bind.call(Function.prototype.call,[].slice);function Ao(s,t){return QI(s.querySelectorAll(t))}function rx(s,t){if(s.contains)return s.contains(t);if(s.compareDocumentPosition)return s===t||!!(s.compareDocumentPosition(t)&16)}const eN="data-rr-ui-";function tN(s){return`${eN}${s}`}const nN={type:Rs.string,tooltip:Rs.bool,as:Rs.elementType},Bp=te.exports.forwardRef((i,a)=>{var l=i,{as:s="div",className:t,type:n="valid",tooltip:r=!1}=l,o=at(l,["as","className","type","tooltip"]);return xe(s,He(Fe({},o),{ref:a,className:ht(t,`${n}-${r?"tooltip":"feedback"}`)}))});Bp.displayName="Feedback";Bp.propTypes=nN;var ox=Bp;const sN=te.exports.createContext({});var Os=sN;const ax=te.exports.forwardRef((u,c)=>{var h=u,{id:s,bsPrefix:t,className:n,type:r="checkbox",isValid:o=!1,isInvalid:a=!1,as:i="input"}=h,l=at(h,["id","bsPrefix","className","type","isValid","isInvalid","as"]);const{controlId:d}=te.exports.useContext(Os);return t=Kt(t,"form-check-input"),xe(i,He(Fe({},l),{ref:c,type:r,id:s||d,className:ht(n,t,o&&"is-valid",a&&"is-invalid")}))});ax.displayName="FormCheckInput";var ix=ax;const lx=te.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,htmlFor:n}=i,r=at(i,["bsPrefix","className","htmlFor"]);const{controlId:l}=te.exports.useContext(Os);return s=Kt(s,"form-check-label"),xe("label",He(Fe({},r),{ref:o,htmlFor:n||l,className:ht(t,s)}))});lx.displayName="FormCheckLabel";var cx=lx;const ux=te.exports.forwardRef((v,x)=>{var w=v,{id:s,bsPrefix:t,bsSwitchPrefix:n,inline:r=!1,disabled:o=!1,isValid:a=!1,isInvalid:i=!1,feedbackTooltip:l=!1,feedback:c,feedbackType:u,className:h,style:d,title:p="",type:f="checkbox",label:m,children:g,as:y="input"}=w,b=at(w,["id","bsPrefix","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","className","style","title","type","label","children","as"]);t=Kt(t,"form-check"),n=Kt(n,"form-switch");const{controlId:C}=te.exports.useContext(Os),N=te.exports.useMemo(()=>({controlId:s||C}),[C,s]),k=m!=null&&m!==!1&&!g,S=xe(ix,He(Fe({},b),{type:f==="switch"?"checkbox":f,ref:x,isValid:a,isInvalid:i,disabled:o,as:y}));return xe(Os.Provider,{value:N,children:xe("div",{style:d,className:ht(h,m&&t,r&&`${t}-inline`,f==="switch"&&n),children:g||Fs(jc,{children:[S,k&&xe(cx,{title:p,children:m}),c&&xe(ox,{type:u,tooltip:l,children:c})]})})})});ux.displayName="FormCheck";var Qc=Object.assign(ux,{Input:ix,Label:cx});const hx=te.exports.forwardRef((f,p)=>{var m=f,{bsPrefix:s,type:t,size:n,htmlSize:r,id:o,className:a,isValid:i=!1,isInvalid:l=!1,plaintext:c,readOnly:u,as:h="input"}=m,d=at(m,["bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as"]);const{controlId:g}=te.exports.useContext(Os);s=Kt(s,"form-control");let y;return c?y={[`${s}-plaintext`]:!0}:y={[s]:!0,[`${s}-${n}`]:n},xe(h,He(Fe({},d),{type:t,size:r,ref:p,readOnly:u,id:o||g,className:ht(a,y,i&&"is-valid",l&&"is-invalid",t==="color"&&`${s}-color`)}))});hx.displayName="FormControl";var rN=Object.assign(hx,{Feedback:ox}),oN=Jc("form-floating");const dx=te.exports.forwardRef((o,r)=>{var a=o,{controlId:s,as:t="div"}=a,n=at(a,["controlId","as"]);const i=te.exports.useMemo(()=>({controlId:s}),[s]);return xe(Os.Provider,{value:i,children:xe(t,He(Fe({},n),{ref:r}))})});dx.displayName="FormGroup";var px=dx;const aN={column:!1,visuallyHidden:!1},Vp=te.exports.forwardRef((c,l)=>{var u=c,{as:s="label",bsPrefix:t,column:n,visuallyHidden:r,className:o,htmlFor:a}=u,i=at(u,["as","bsPrefix","column","visuallyHidden","className","htmlFor"]);const{controlId:h}=te.exports.useContext(Os);t=Kt(t,"form-label");let d="col-form-label";typeof n=="string"&&(d=`${d} ${d}-${n}`);const p=ht(o,t,r&&"visually-hidden",n&&d);return a=a||h,n?xe(JI,Fe({ref:l,as:"label",className:p,htmlFor:a},i)):xe(s,Fe({ref:l,className:p,htmlFor:a},i))});Vp.displayName="FormLabel";Vp.defaultProps=aN;var iN=Vp;const fx=te.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,id:n}=i,r=at(i,["bsPrefix","className","id"]);const{controlId:l}=te.exports.useContext(Os);return s=Kt(s,"form-range"),xe("input",He(Fe({},r),{type:"range",ref:o,className:ht(t,s),id:n||l}))});fx.displayName="FormRange";var lN=fx;const mx=te.exports.forwardRef((u,c)=>{var h=u,{bsPrefix:s,size:t,htmlSize:n,className:r,isValid:o=!1,isInvalid:a=!1,id:i}=h,l=at(h,["bsPrefix","size","htmlSize","className","isValid","isInvalid","id"]);const{controlId:d}=te.exports.useContext(Os);return s=Kt(s,"form-select"),xe("select",He(Fe({},l),{size:n,ref:c,className:ht(r,s,t&&`${s}-${t}`,o&&"is-valid",a&&"is-invalid"),id:i||d}))});mx.displayName="FormSelect";var cN=mx;const gx=te.exports.forwardRef((i,a)=>{var l=i,{bsPrefix:s,className:t,as:n="small",muted:r}=l,o=at(l,["bsPrefix","className","as","muted"]);return s=Kt(s,"form-text"),xe(n,He(Fe({},o),{ref:a,className:ht(t,s,r&&"text-muted")}))});gx.displayName="FormText";var uN=gx;const yx=te.exports.forwardRef((s,t)=>xe(Qc,He(Fe({},s),{ref:t,type:"switch"})));yx.displayName="Switch";var hN=Object.assign(yx,{Input:Qc.Input,Label:Qc.Label});const bx=te.exports.forwardRef((l,i)=>{var c=l,{bsPrefix:s,className:t,children:n,controlId:r,label:o}=c,a=at(c,["bsPrefix","className","children","controlId","label"]);return s=Kt(s,"form-floating"),Fs(px,He(Fe({ref:i,className:ht(t,s),controlId:r},a),{children:[n,xe("label",{htmlFor:r,children:o})]}))});bx.displayName="FloatingLabel";var dN=bx;const pN={_ref:Rs.any,validated:Rs.bool,as:Rs.elementType},Wp=te.exports.forwardRef((a,o)=>{var i=a,{className:s,validated:t,as:n="form"}=i,r=at(i,["className","validated","as"]);return xe(n,He(Fe({},r),{ref:o,className:ht(s,t&&"was-validated")}))});Wp.displayName="Form";Wp.propTypes=pN;var Up=Object.assign(Wp,{Group:px,Control:rN,Floating:oN,Check:Qc,Switch:hN,Label:iN,Text:uN,Range:lN,Select:cN,FloatingLabel:dN}),eu;function xx(s){if((!eu&&eu!==0||s)&&Xc){var t=document.createElement("div");t.style.position="absolute",t.style.top="-9999px",t.style.width="50px",t.style.height="50px",t.style.overflow="scroll",document.body.appendChild(t),eu=t.offsetWidth-t.clientWidth,document.body.removeChild(t)}return eu}function fN(){return te.exports.useState(null)}function Gp(s){s===void 0&&(s=qc());try{var t=s.activeElement;return!t||!t.nodeName?null:t}catch{return s.body}}function mN(s){var t=te.exports.useRef(s);return t.current=s,t}function gN(s){var t=mN(s);te.exports.useEffect(function(){return function(){return t.current()}},[])}function yN(){return Math.abs(window.innerWidth-document.documentElement.clientWidth)}const wx=tN("modal-open");class bN{constructor({handleContainerOverflow:t=!0,isRTL:n=!1}={}){this.handleContainerOverflow=t,this.isRTL=n,this.modals=[]}getScrollbarWidth(){return yN()}getElement(){return document.body}setModalAttributes(t){}removeModalAttributes(t){}setContainerStyle(t){const n={overflow:"hidden"},r=this.isRTL?"paddingLeft":"paddingRight",o=this.getElement();t.style={overflow:o.style.overflow,[r]:o.style[r]},t.scrollBarWidth&&(n[r]=`${parseInt(_r(o,r)||"0",10)+t.scrollBarWidth}px`),o.setAttribute(wx,""),_r(o,n)}reset(){[...this.modals].forEach(t=>this.remove(t))}removeContainerStyle(t){const n=this.getElement();n.removeAttribute(wx),Object.assign(n.style,t.style)}add(t){let n=this.modals.indexOf(t);return n!==-1||(n=this.modals.length,this.modals.push(t),this.setModalAttributes(t),n!==0)||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),n}remove(t){const n=this.modals.indexOf(t);n!==-1&&(this.modals.splice(n,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(t))}isTopModal(t){return!!this.modals.length&&this.modals[this.modals.length-1]===t}}var Hp=bN;const jp=s=>{var t;return typeof document=="undefined"?null:s==null?qc().body:(typeof s=="function"&&(s=s()),s&&"current"in s&&(s=s.current),(t=s)!=null&&t.nodeType&&s||null)};function xN(s,t){const[n,r]=te.exports.useState(()=>jp(s));if(!n){const o=jp(s);o&&r(o)}return te.exports.useEffect(()=>{t&&n&&t(n)},[t,n]),te.exports.useEffect(()=>{const o=jp(s);o!==n&&r(o)},[s,n]),n}const wN=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];function vN(s,t){if(s==null)return{};var n={},r=Object.keys(s),o,a;for(a=0;a<r.length;a++)o=r[a],!(t.indexOf(o)>=0)&&(n[o]=s[o]);return n}let qp;function $N(){return qp||(qp=new Hp),qp}function CN(s){const t=s||$N(),n=te.exports.useRef({dialog:null,backdrop:null});return Object.assign(n.current,{add:()=>t.add(n.current),remove:()=>t.remove(n.current),isTopModal:()=>t.isTopModal(n.current),setDialogRef:te.exports.useCallback(r=>{n.current.dialog=r},[]),setBackdropRef:te.exports.useCallback(r=>{n.current.backdrop=r},[])})}const vx=te.exports.forwardRef((s,t)=>{let{show:n=!1,role:r="dialog",className:o,style:a,children:i,backdrop:l=!0,keyboard:c=!0,onBackdropClick:u,onEscapeKeyDown:h,transition:d,backdropTransition:p,autoFocus:f=!0,enforceFocus:m=!0,restoreFocus:g=!0,restoreFocusOptions:y,renderDialog:b,renderBackdrop:x=we=>xe("div",Object.assign({},we)),manager:v,container:w,onShow:C,onHide:N=()=>{},onExit:k,onExited:S,onExiting:E,onEnter:A,onEntering:F,onEntered:D}=s,O=vN(s,wN);const B=xN(w),V=CN(v),z=RI(),H=FI(n),[U,K]=te.exports.useState(!n),X=te.exports.useRef(null);te.exports.useImperativeHandle(t,()=>V,[V]),Xc&&!H&&n&&(X.current=Gp()),!d&&!n&&!U?K(!0):n&&U&&K(!1);const J=Di(()=>{if(V.add(),le.current=Yc(document,"keydown",re),ae.current=Yc(document,"focus",()=>setTimeout(ee),!0),C&&C(),f){const we=Gp(document);V.dialog&&we&&!rx(V.dialog,we)&&(X.current=we,V.dialog.focus())}}),Q=Di(()=>{if(V.remove(),le.current==null||le.current(),ae.current==null||ae.current(),g){var we;(we=X.current)==null||we.focus==null||we.focus(y),X.current=null}});te.exports.useEffect(()=>{!n||!B||J()},[n,B,J]),te.exports.useEffect(()=>{!U||Q()},[U,Q]),gN(()=>{Q()});const ee=Di(()=>{if(!m||!z()||!V.isTopModal())return;const we=Gp();V.dialog&&we&&!rx(V.dialog,we)&&V.dialog.focus()}),se=Di(we=>{we.target===we.currentTarget&&(u==null||u(we),l===!0&&N())}),re=Di(we=>{c&&we.keyCode===27&&V.isTopModal()&&(h==null||h(we),we.defaultPrevented||N())}),ae=te.exports.useRef(),le=te.exports.useRef(),ge=(...we)=>{K(!0),S==null||S(...we)},fe=d;if(!B||!(n||fe&&!U))return null;const ve=Object.assign({role:r,ref:V.setDialogRef,"aria-modal":r==="dialog"?!0:void 0},O,{style:a,className:o,tabIndex:-1});let $e=b?b(ve):xe("div",Object.assign({},ve,{children:te.exports.cloneElement(i,{role:"document"})}));fe&&($e=xe(fe,{appear:!0,unmountOnExit:!0,in:!!n,onExit:k,onExiting:E,onExited:ge,onEnter:A,onEntering:F,onEntered:D,children:$e}));let Re=null;if(l){const we=p;Re=x({ref:V.setBackdropRef,onClick:se}),we&&(Re=xe(we,{appear:!0,in:!!n,children:Re}))}return xe(jc,{children:Ei.createPortal(Fs(jc,{children:[Re,$e]}),B)})});vx.displayName="Modal";var kN=Object.assign(vx,{Manager:Hp});function IN(s,t){return s.classList?!!t&&s.classList.contains(t):(" "+(s.className.baseVal||s.className)+" ").indexOf(" "+t+" ")!==-1}function NN(s,t){s.classList?s.classList.add(t):IN(s,t)||(typeof s.className=="string"?s.className=s.className+" "+t:s.setAttribute("class",(s.className&&s.className.baseVal||"")+" "+t))}function $x(s,t){return s.replace(new RegExp("(^|\\s)"+t+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function SN(s,t){s.classList?s.classList.remove(t):typeof s.className=="string"?s.className=$x(s.className,t):s.setAttribute("class",$x(s.className&&s.className.baseVal||"",t))}const Do={FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",STICKY_CONTENT:".sticky-top",NAVBAR_TOGGLER:".navbar-toggler"};class TN extends Hp{adjustAndStore(t,n,r){const o=n.style[t];n.dataset[t]=o,_r(n,{[t]:`${parseFloat(_r(n,t))+r}px`})}restore(t,n){const r=n.dataset[t];r!==void 0&&(delete n.dataset[t],_r(n,{[t]:r}))}setContainerStyle(t){super.setContainerStyle(t);const n=this.getElement();if(NN(n,"modal-open"),!t.scrollBarWidth)return;const r=this.isRTL?"paddingLeft":"paddingRight",o=this.isRTL?"marginLeft":"marginRight";Ao(n,Do.FIXED_CONTENT).forEach(a=>this.adjustAndStore(r,a,t.scrollBarWidth)),Ao(n,Do.STICKY_CONTENT).forEach(a=>this.adjustAndStore(o,a,-t.scrollBarWidth)),Ao(n,Do.NAVBAR_TOGGLER).forEach(a=>this.adjustAndStore(o,a,t.scrollBarWidth))}removeContainerStyle(t){super.removeContainerStyle(t);const n=this.getElement();SN(n,"modal-open");const r=this.isRTL?"paddingLeft":"paddingRight",o=this.isRTL?"marginLeft":"marginRight";Ao(n,Do.FIXED_CONTENT).forEach(a=>this.restore(r,a)),Ao(n,Do.STICKY_CONTENT).forEach(a=>this.restore(o,a)),Ao(n,Do.NAVBAR_TOGGLER).forEach(a=>this.restore(o,a))}}let Kp;function EN(s){return Kp||(Kp=new TN(s)),Kp}var AN=Jc("modal-body");const DN=te.exports.createContext({onHide(){}});var Cx=DN;const kx=te.exports.forwardRef((h,u)=>{var d=h,{bsPrefix:s,className:t,contentClassName:n,centered:r,size:o,fullscreen:a,children:i,scrollable:l}=d,c=at(d,["bsPrefix","className","contentClassName","centered","size","fullscreen","children","scrollable"]);s=Kt(s,"modal");const p=`${s}-dialog`,f=typeof a=="string"?`${s}-fullscreen-${a}`:`${s}-fullscreen`;return xe("div",He(Fe({},c),{ref:u,className:ht(p,t,o&&`${s}-${o}`,r&&`${p}-centered`,l&&`${p}-scrollable`,a&&f),children:xe("div",{className:ht(`${s}-content`,n),children:i})}))});kx.displayName="ModalDialog";var Ix=kx,RN=Jc("modal-footer");const FN={closeLabel:"Close",closeButton:!1},Nx=te.exports.forwardRef((l,i)=>{var c=l,{closeLabel:s,closeVariant:t,closeButton:n,onHide:r,children:o}=c,a=at(c,["closeLabel","closeVariant","closeButton","onHide","children"]);const u=te.exports.useContext(Cx),h=Pp(()=>{u==null||u.onHide(),r==null||r()});return Fs("div",He(Fe({ref:i},a),{children:[o,n&&xe(WI,{"aria-label":s,variant:t,onClick:h})]}))});Nx.defaultProps=FN;var _N=Nx;const ON={closeLabel:"Close",closeButton:!1},Xp=te.exports.forwardRef((o,r)=>{var a=o,{bsPrefix:s,className:t}=a,n=at(a,["bsPrefix","className"]);return s=Kt(s,"modal-header"),xe(_N,He(Fe({ref:r},n),{className:ht(t,s)}))});Xp.displayName="ModalHeader";Xp.defaultProps=ON;var LN=Xp;const PN=UI("h4");var MN=Jc("modal-title",{Component:PN});const zN={show:!1,backdrop:!0,keyboard:!0,autoFocus:!0,enforceFocus:!0,restoreFocus:!0,animation:!0,dialogAs:Ix};function BN(s){return xe(tx,He(Fe({},s),{timeout:null}))}function VN(s){return xe(tx,He(Fe({},s),{timeout:null}))}const Yp=te.exports.forwardRef((B,O)=>{var V=B,{bsPrefix:s,className:t,style:n,dialogClassName:r,contentClassName:o,children:a,dialogAs:i,"aria-labelledby":l,show:c,animation:u,backdrop:h,keyboard:d,onEscapeKeyDown:p,onShow:f,onHide:m,container:g,autoFocus:y,enforceFocus:b,restoreFocus:x,restoreFocusOptions:v,onEntered:w,onExit:C,onExiting:N,onEnter:k,onEntering:S,onExited:E,backdropClassName:A,manager:F}=V,D=at(V,["bsPrefix","className","style","dialogClassName","contentClassName","children","dialogAs","aria-labelledby","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager"]);const[z,H]=te.exports.useState({}),[U,K]=te.exports.useState(!1),X=te.exports.useRef(!1),J=te.exports.useRef(!1),Q=te.exports.useRef(null),[ee,se]=fN(),re=Qb(O,se),ae=Pp(m),le=aI();s=Kt(s,"modal");const ge=te.exports.useMemo(()=>({onHide:ae}),[ae]);function fe(){return F||EN({isRTL:le})}function ve(Ne){if(!Xc)return;const sn=fe().getScrollbarWidth()>0,es=Ne.scrollHeight>qc(Ne).documentElement.clientHeight;H({paddingRight:sn&&!es?xx():void 0,paddingLeft:!sn&&es?xx():void 0})}const $e=Pp(()=>{ee&&ve(ee.dialog)});XI(()=>{Lp(window,"resize",$e),Q.current==null||Q.current()});const Re=()=>{X.current=!0},we=Ne=>{X.current&&ee&&Ne.target===ee.dialog&&(J.current=!0),X.current=!1},We=()=>{K(!0),Q.current=Yb(ee.dialog,()=>{K(!1)})},Ue=Ne=>{Ne.target===Ne.currentTarget&&We()},Ge=Ne=>{if(h==="static"){Ue(Ne);return}if(J.current||Ne.target!==Ne.currentTarget){J.current=!1;return}m==null||m()},qe=Ne=>{!d&&h==="static"?(Ne.preventDefault(),We()):d&&p&&p(Ne)},ot=(Ne,sn)=>{Ne&&(Ne.style.display="block",ve(Ne)),k==null||k(Ne,sn)},Qn=Ne=>{Q.current==null||Q.current(),C==null||C(Ne)},vt=(Ne,sn)=>{S==null||S(Ne,sn),Xb(window,"resize",$e)},Pn=Ne=>{Ne&&(Ne.style.display=""),E==null||E(Ne),Lp(window,"resize",$e)},nn=te.exports.useCallback(Ne=>xe("div",He(Fe({},Ne),{className:ht(`${s}-backdrop`,A,!u&&"show")})),[u,A,s]),ys=Fe(Fe({},n),z);u||(ys.display="block");const Tn=Ne=>xe("div",He(Fe({role:"dialog"},Ne),{style:ys,className:ht(t,s,U&&`${s}-static`),onClick:h?Ge:void 0,onMouseUp:we,"aria-labelledby":l,children:xe(i,He(Fe({},D),{onMouseDown:Re,className:r,contentClassName:o,children:a}))}));return xe(Cx.Provider,{value:ge,children:xe(kN,{show:c,ref:re,backdrop:h,container:g,keyboard:!0,autoFocus:y,enforceFocus:b,restoreFocus:x,restoreFocusOptions:v,onEscapeKeyDown:qe,onShow:f,onHide:m,onEnter:ot,onEntering:vt,onEntered:w,onExit:Qn,onExiting:N,onExited:Pn,manager:fe(),transition:u?BN:void 0,backdropTransition:u?VN:void 0,renderBackdrop:nn,renderDialog:Tn})})});Yp.displayName="Modal";Yp.defaultProps=zN;var tu=Object.assign(Yp,{Body:AN,Header:LN,Title:MN,Footer:RN,Dialog:Ix,TRANSITION_DURATION:300,BACKDROP_TRANSITION_DURATION:150}),Sx={},Zp={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WN=1e-7,UN=1e-4;class Jp{constructor(t,n){this.backend=t,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,n){this.dataIdsCount++,this.data.set(t,n)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class nu{refCount(t){return Mn("refCount")}incRef(t){return Mn("incRef")}timerAvailable(){return!0}time(t){return Mn("time")}read(t){return Mn("read")}readSync(t){return Mn("readSync")}numDataIds(){return Mn("numDataIds")}disposeData(t,n){return Mn("disposeData")}write(t,n,r){return Mn("write")}move(t,n,r,o,a){return Mn("move")}memory(){return Mn("memory")}floatPrecision(){return Mn("floatPrecision")}epsilon(){return this.floatPrecision()===32?WN:UN}dispose(){return Mn("dispose")}}function Mn(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(s){let t=s.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Ls(s,t,n)}function GN(s,t){if(s.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${s.length}Second array length was ${t.length}`);let n=s.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Ls(s,n,r),Ls(t,n,r)}function ar(s,t,n){return Math.max(s,Math.min(t,n))}function ef(s){return s%2==0?s:s+1}function Ls(s,t,n){const r=s[t];s[t]=s[n],s[n]=r}function Tx(s){let t=0;for(let n=0;n<s.length;n++)t+=s[n];return t}function HN(s,t){const n=Math.random();return t*n+(1-n)*s}function jN(s,t){let n=0;for(let r=0;r<s.length;r++){const o=Number(s[r])-Number(t[r]);n+=o*o}return n}function I(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function Lt(s,t,n=""){I(De(s,t),()=>n+` Shapes ${s} and ${t} must match`)}function Pr(s){I(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Ps(s,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(s)||Pt(s)&&!n)for(let r=0;r<s.length;++r)Ps(s[r],t,n);else t.push(s);return t}function j(s){if(s.length===0)return 1;let t=s[0];for(let n=1;n<s.length;n++)t*=s[n];return t}function qN(s){return s.length===0}function De(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let n=0;n<s.length;n++)if(s[n]!==t[n])return!1;return!0}function $t(s){return s%1==0}function KN(s){if(Math.tanh!=null)return Math.tanh(s);if(s===1/0)return 1;if(s===-1/0)return-1;{const t=Math.exp(2*s);return(t-1)/(t+1)}}function su(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function XN(s){const t=new Uint32Array(s);for(let n=0;n<s;++n)t[n]=n;return Qp(t),t}function Mr(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function tf(s,t=r=>0,n){return new Promise((r,o)=>{let a=0;const i=()=>{if(s()){r();return}a++;const l=t(a);if(n!=null&&a>=n){o();return}setTimeout(i,l)};i()})}function nf(s,t){let n=1,r=-1;for(let a=0;a<s.length;++a)if(s[a]>=0)n*=s[a];else if(s[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(s[a]<0)throw Error(`Shapes can not be < 0. Found ${s[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(n===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=s.slice();return o[r]=t/n,o}function Se(s,t){const n=t.length;return s=s==null?t.map((r,o)=>o):[].concat(s),I(s.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${s}`),I(s.every(r=>$t(r)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(r=>r<0?n+r:r)}function Ms(s,t){const n=[],r=[],o=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||o?null:Se(t,s).sort();let i=0;for(let l=0;l<s.length;++l){if(a!=null){if(a[i]===l&&s[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${s[l]}' is not 1`);(a[i]==null||a[i]>l)&&s[l]===1&&(n.push(s[l]),r.push(l)),a[i]<=l&&i++}s[l]!==1&&(n.push(s[l]),r.push(l))}return{newShape:n,keptDims:r}}function Ct(s,t){let n=null;if(s==null||s==="float32")n=new Float32Array(t);else if(s==="int32")n=new Int32Array(t);else if(s==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return n}function Xt(s,t){let n=null;if(s==null||s==="float32")n=new Float32Array(t);else if(s==="int32")n=new Int32Array(t);else if(s==="bool")n=new Uint8Array(t);else if(s==="string")n=new Array(t);else throw new Error(`Unknown data type ${s}`);return n}function Ex(s,t){for(let n=0;n<s.length;n++){const r=s[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ax(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function sf(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Pt(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function ru(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function Dx(s){if(s==null)return 0;let t=0;return s.forEach(n=>t+=n.length),t}function bs(s){return typeof s=="string"||s instanceof String}function Rx(s){return typeof s=="boolean"}function ou(s){return typeof s=="number"}function Ro(s){return Array.isArray(s)?Ro(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":ou(s)?"float32":bs(s)?"string":Rx(s)?"bool":"float32"}function ir(s){return!!(s&&s.constructor&&s.call&&s.apply)}function au(s,t){for(let n=t;n<s;++n)if(s%n==0)return n;return s}function ye(s){const t=s.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=s[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*s[r+1];return n}function Fx(s,t,n,r=!1){const o=new Array;if(t.length===1){const a=t[0]*(r?2:1);for(let i=0;i<a;i++)o[i]=n[s+i]}else{const a=t[0],i=t.slice(1),l=i.reduce((c,u)=>c*u)*(r?2:1);for(let c=0;c<a;c++)o[c]=Fx(s+c*l,i,n,r)}return o}function En(s,t,n=!1){if(s.length===0)return t[0];const r=s.reduce((o,a)=>o*a)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Fx(0,s,t,n)}function rf(s,t){const n=Mt(s,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Mt(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function of(s,t){const n=s.reduce((r,o)=>r*o,1);if(t==null||t==="float32")return En(s,new Float32Array(n));if(t==="int32")return En(s,new Int32Array(n));if(t==="bool")return En(s,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function af(s){s.forEach(t=>{I(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function ts(s,t,n){if(t===0)return 0;if(t===1)return s[0];let r=s[s.length-1];for(let o=0;o<s.length-1;++o)r+=n[o]*s[o];return r}function Fo(s,t,n){if(t===0)return[];if(t===1)return[s];const r=new Array(t);for(let o=0;o<r.length-1;++o)r[o]=Math.floor(s/n[o]),s-=r[o]*n[o];return r[r.length-1]=s,r}function zr(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(...s){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...s)}function YN(...s){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _x="tfjsflags";class Ox{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ZN,this.populateURLFlags()}setPlatform(t,n){this.platform!=null&&rn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${n}.`),this.platformName=t,this.platform=n}registerFlag(t,n,r){if(this.flagRegistry[t]={evaluationFn:n,setHook:r},this.urlFlags[t]!=null){const o=this.urlFlags[t];rn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const n=this.evaluateFlag(t);if(zr(n))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=n,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,n){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=n,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(n)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const t=this.getQueryParams(this.global.location.search);_x in t&&t[_x].split(",").forEach(r=>{const[o,a]=r.split(":");this.urlFlags[o]=QN(o,a)})}}function ZN(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(JN(t,r[0],r[1]),r.join("="))),t}function JN(s,t,n){s[decodeURIComponent(t)]=decodeURIComponent(n||"")}function QN(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function q(){return lf}let lf=null;function eS(s){lf=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cf;function Lx(){if(cf==null){let s;if(typeof window!="undefined")s=window;else if(typeof global!="undefined")s=global;else if(typeof process!="undefined")s=process;else if(typeof self!="undefined")s=self;else throw new Error("Could not find a global object");cf=s}return cf}function tS(){const s=Lx();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function uf(s,t){const n=tS();if(n.has(s))return n.get(s);{const r=t();return n.set(s,r),n.get(s)}}const Ri="Abs",_o="Acos",Oo="Acosh",Br="Add",Fi="AddN",iu="All",lu="Any",_i="ArgMax",Oi="ArgMin",Lo="Asin",Po="Asinh",Mo="Atan",zo="Atanh",Bo="Atan2",Li="AvgPool",cu="AvgPoolGrad",Pi="AvgPool3D",uu="AvgPool3DGrad",Mi="BatchMatMul",zi="BatchToSpaceND",hu="Bincount",Px="BroadcastTo",du="BroadcastArgs",Vo="Cast",Wo="Ceil",Uo="ClipByValue",pu="Complex",Bi="ComplexAbs",Vi="Concat",Wi="Conv2D",fu="Conv2DBackpropFilter",Ui="Conv2DBackpropInput",Gi="Conv3D",mu="Conv3DBackpropFilterV2",gu="Conv3DBackpropInputV2",Go="Cos",Ho="Cosh",Hi="Cumsum",yu="CropAndResize",bu="DenseBincount",xu="DepthToSpace",ji="DepthwiseConv2dNative",wu="DepthwiseConv2dNativeBackpropFilter",vu="DepthwiseConv2dNativeBackpropInput",$u="Diag",qi="Dilation2D",Cu="Dilation2DBackpropInput",ku="Dilation2DBackpropFilter",jo="RealDiv",Iu="Einsum",qo="Elu",Nu="EluGrad",Ko="Erf",Ki="Equal",Xo="Exp",Xi="ExpandDims",Yo="Expm1",Su="FFT",Tu="Fill",Eu="FlipLeftRight",Zo="Floor",Jo="FloorDiv",Yi="FusedBatchNorm",Zi="GatherV2",Au="GatherNd",Ji="Greater",Qo="GreaterEqual",ea="Identity",Du="IFFT",Ru="Imag",ta="IsFinite",na="IsInf",sa="IsNan",Qi="LeakyRelu",el="Less",tl="LessEqual",Fu="LinSpace",ra="Log",oa="Log1p",nl="LogicalAnd",sl="LogicalNot",rl="LogicalOr",Mx="LogSoftmax",ol="LRN",_u="LRNGrad",al="Max",aa="Maximum",il="MaxPool",Ou="MaxPoolGrad",ll="MaxPool3D",Lu="MaxPool3DGrad",Pu="MaxPoolWithArgmax",cl="Mean",ul="Min",ia="Minimum",hl="MirrorPad",la="Mod",Mu="Multinomial",ca="Multiply",dl="Neg",pl="NotEqual",zu="NonMaxSuppressionV3",Bu="NonMaxSuppressionV4",Vu="NonMaxSuppressionV5",fl="OnesLike",ml="OneHot",gl="Pack",yl="PadV2",nS="Pool",ua="Pow",bl="Prelu",Wu="Prod",Uu="Range",Gu="Real",ha="Reciprocal",da="Relu",xl="Reshape",wl="ResizeNearestNeighbor",Hu="ResizeNearestNeighborGrad",vl="ResizeBilinear",ju="ResizeBilinearGrad",pa="Relu6",$l="Reverse",fa="Round",ma="Rsqrt",qu="ScatterNd",Cl="Select",ga="Selu",kl="Slice",ya="Sin",ba="Sinh",xa="Sign",wa="Sigmoid",va="Softplus",$a="Sqrt",Il="Sum",Nl="SpaceToBatchND",Sl="SplitV",Tl="Softmax",Ku="SparseFillEmptyRows",Xu="SparseReshape",Yu="SparseSegmentMean",Zu="SparseSegmentSum",Ju="SparseToDense",Ca="SquaredDifference",Qu="Square",eh="StridedSlice",th="StringNGrams",nh="StringSplit",sh="StringToHashBucketFast",ka="Sub",Ia="Tan",Na="Tanh",Sa="Tile",rh="TopK",oh="Transform",El="Transpose",ah="Unique",Al="Unpack",Dl="UnsortedSegmentSum",Rl="ZerosLike",Ta="Step",ih="FromPixels",lh="RotateWithOffset",Fl="_FusedMatMul",_l="FusedConv2D",Ol="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea=uf("kernelRegistry",()=>new Map),Ll=uf("gradRegistry",()=>new Map);function ch(s,t){const n=df(s,t);return Ea.get(n)}function hf(s){return Ll.get(s)}function uh(s){const t=Ea.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[a,i]=o,[l]=a.split("_");l===s&&n.push(i)}return n}function hh(s){const{kernelName:t,backendName:n}=s,r=df(t,n);Ea.has(r)&&rn(`The kernel '${t}' for backend '${n}' is already registered`),Ea.set(r,s)}function zx(s){const{kernelName:t}=s;Ll.has(t)&&q().getBool("DEBUG")&&rn(`Overriding the gradient for '${t}'`),Ll.set(t,s)}function sS(s,t){const n=df(s,t);if(!Ea.has(n))throw new Error(`The kernel '${s}' for backend '${t}' is not registered`);Ea.delete(n)}function rS(s){if(!Ll.has(s))throw new Error(`The gradient '${s}' for backend is not registered`);Ll.delete(s)}function oS(s,t){uh(s).forEach(r=>{const o=Object.assign({},r,{backendName:t});hh(o)})}function df(s,t){return`${t}_${s}`}var pf=Je,zn=null;try{zn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Je(s,t,n){this.low=s|0,this.high=t|0,this.unsigned=!!n}Je.prototype.__isLong__;Object.defineProperty(Je.prototype,"__isLong__",{value:!0});function pn(s){return(s&&s.__isLong__)===!0}Je.isLong=pn;var Bx={},Vx={};function Vr(s,t){var n,r,o;return t?(s>>>=0,(o=0<=s&&s<256)&&(r=Vx[s],r)?r:(n=Qe(s,(s|0)<0?-1:0,!0),o&&(Vx[s]=n),n)):(s|=0,(o=-128<=s&&s<128)&&(r=Bx[s],r)?r:(n=Qe(s,s<0?-1:0,!1),o&&(Bx[s]=n),n))}Je.fromInt=Vr;function Bn(s,t){if(isNaN(s))return t?Wr:Vn;if(t){if(s<0)return Wr;if(s>=Ux)return Kx}else{if(s<=-Gx)return fn;if(s+1>=Gx)return qx}return s<0?Bn(-s,t).neg():Qe(s%Aa|0,s/Aa|0,t)}Je.fromNumber=Bn;function Qe(s,t,n){return new Je(s,t,n)}Je.fromBits=Qe;var dh=Math.pow;function ff(s,t,n){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return Vn;if(typeof t=="number"?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=s.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return ff(s.substring(1),t,n).neg();for(var o=Bn(dh(n,8)),a=Vn,i=0;i<s.length;i+=8){var l=Math.min(8,s.length-i),c=parseInt(s.substring(i,i+l),n);if(l<8){var u=Bn(dh(n,l));a=a.mul(u).add(Bn(c))}else a=a.mul(o),a=a.add(Bn(c))}return a.unsigned=t,a}Je.fromString=ff;function ns(s,t){return typeof s=="number"?Bn(s,t):typeof s=="string"?ff(s,t):Qe(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Je.fromValue=ns;var Wx=1<<16,aS=1<<24,Aa=Wx*Wx,Ux=Aa*Aa,Gx=Ux/2,Hx=Vr(aS),Vn=Vr(0);Je.ZERO=Vn;var Wr=Vr(0,!0);Je.UZERO=Wr;var Da=Vr(1);Je.ONE=Da;var jx=Vr(1,!0);Je.UONE=jx;var mf=Vr(-1);Je.NEG_ONE=mf;var qx=Qe(4294967295|0,2147483647|0,!1);Je.MAX_VALUE=qx;var Kx=Qe(4294967295|0,4294967295|0,!0);Je.MAX_UNSIGNED_VALUE=Kx;var fn=Qe(0,2147483648|0,!1);Je.MIN_VALUE=fn;var oe=Je.prototype;oe.toInt=function(){return this.unsigned?this.low>>>0:this.low};oe.toNumber=function(){return this.unsigned?(this.high>>>0)*Aa+(this.low>>>0):this.high*Aa+(this.low>>>0)};oe.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(fn)){var n=Bn(t),r=this.div(n),o=r.mul(n).sub(this);return r.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var a=Bn(dh(t,6),this.unsigned),i=this,l="";;){var c=i.div(a),u=i.sub(c.mul(a)).toInt()>>>0,h=u.toString(t);if(i=c,i.isZero())return h+l;for(;h.length<6;)h="0"+h;l=""+h+l}};oe.getHighBits=function(){return this.high};oe.getHighBitsUnsigned=function(){return this.high>>>0};oe.getLowBits=function(){return this.low};oe.getLowBitsUnsigned=function(){return this.low>>>0};oe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(fn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,n=31;n>0&&(t&1<<n)==0;n--);return this.high!=0?n+33:n+1};oe.isZero=function(){return this.high===0&&this.low===0};oe.eqz=oe.isZero;oe.isNegative=function(){return!this.unsigned&&this.high<0};oe.isPositive=function(){return this.unsigned||this.high>=0};oe.isOdd=function(){return(this.low&1)==1};oe.isEven=function(){return(this.low&1)==0};oe.equals=function(t){return pn(t)||(t=ns(t)),this.unsigned!==t.unsigned&&this.high>>>31==1&&t.high>>>31==1?!1:this.high===t.high&&this.low===t.low};oe.eq=oe.equals;oe.notEquals=function(t){return!this.eq(t)};oe.neq=oe.notEquals;oe.ne=oe.notEquals;oe.lessThan=function(t){return this.comp(t)<0};oe.lt=oe.lessThan;oe.lessThanOrEqual=function(t){return this.comp(t)<=0};oe.lte=oe.lessThanOrEqual;oe.le=oe.lessThanOrEqual;oe.greaterThan=function(t){return this.comp(t)>0};oe.gt=oe.greaterThan;oe.greaterThanOrEqual=function(t){return this.comp(t)>=0};oe.gte=oe.greaterThanOrEqual;oe.ge=oe.greaterThanOrEqual;oe.compare=function(t){if(pn(t)||(t=ns(t)),this.eq(t))return 0;var n=this.isNegative(),r=t.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};oe.comp=oe.compare;oe.negate=function(){return!this.unsigned&&this.eq(fn)?fn:this.not().add(Da)};oe.neg=oe.negate;oe.add=function(t){pn(t)||(t=ns(t));var n=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,i=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,p=0,f=0;return f+=a+u,p+=f>>>16,f&=65535,p+=o+c,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=n+i,h&=65535,Qe(p<<16|f,h<<16|d,this.unsigned)};oe.subtract=function(t){return pn(t)||(t=ns(t)),this.add(t.neg())};oe.sub=oe.subtract;oe.multiply=function(t){if(this.isZero())return Vn;if(pn(t)||(t=ns(t)),zn){var n=zn.mul(this.low,this.high,t.low,t.high);return Qe(n,zn.get_high(),this.unsigned)}if(t.isZero())return Vn;if(this.eq(fn))return t.isOdd()?fn:Vn;if(t.eq(fn))return this.isOdd()?fn:Vn;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(Hx)&&t.lt(Hx))return Bn(this.toNumber()*t.toNumber(),this.unsigned);var r=this.high>>>16,o=this.high&65535,a=this.low>>>16,i=this.low&65535,l=t.high>>>16,c=t.high&65535,u=t.low>>>16,h=t.low&65535,d=0,p=0,f=0,m=0;return m+=i*h,f+=m>>>16,m&=65535,f+=a*h,p+=f>>>16,f&=65535,f+=i*u,p+=f>>>16,f&=65535,p+=o*h,d+=p>>>16,p&=65535,p+=a*u,d+=p>>>16,p&=65535,p+=i*c,d+=p>>>16,p&=65535,d+=r*h+o*u+a*c+i*l,d&=65535,Qe(f<<16|m,d<<16|p,this.unsigned)};oe.mul=oe.multiply;oe.divide=function(t){if(pn(t)||(t=ns(t)),t.isZero())throw Error("division by zero");if(zn){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var n=(this.unsigned?zn.div_u:zn.div_s)(this.low,this.high,t.low,t.high);return Qe(n,zn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Wr:Vn;var r,o,a;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Wr;if(t.gt(this.shru(1)))return jx;a=Wr}else{if(this.eq(fn)){if(t.eq(Da)||t.eq(mf))return fn;if(t.eq(fn))return Da;var i=this.shr(1);return r=i.div(t).shl(1),r.eq(Vn)?t.isNegative()?Da:mf:(o=this.sub(t.mul(r)),a=r.add(o.div(t)),a)}else if(t.eq(fn))return this.unsigned?Wr:Vn;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();a=Vn}for(o=this;o.gte(t);){r=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var l=Math.ceil(Math.log(r)/Math.LN2),c=l<=48?1:dh(2,l-48),u=Bn(r),h=u.mul(t);h.isNegative()||h.gt(o);)r-=c,u=Bn(r,this.unsigned),h=u.mul(t);u.isZero()&&(u=Da),a=a.add(u),o=o.sub(h)}return a};oe.div=oe.divide;oe.modulo=function(t){if(pn(t)||(t=ns(t)),zn){var n=(this.unsigned?zn.rem_u:zn.rem_s)(this.low,this.high,t.low,t.high);return Qe(n,zn.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};oe.mod=oe.modulo;oe.rem=oe.modulo;oe.not=function(){return Qe(~this.low,~this.high,this.unsigned)};oe.and=function(t){return pn(t)||(t=ns(t)),Qe(this.low&t.low,this.high&t.high,this.unsigned)};oe.or=function(t){return pn(t)||(t=ns(t)),Qe(this.low|t.low,this.high|t.high,this.unsigned)};oe.xor=function(t){return pn(t)||(t=ns(t)),Qe(this.low^t.low,this.high^t.high,this.unsigned)};oe.shiftLeft=function(t){return pn(t)&&(t=t.toInt()),(t&=63)==0?this:t<32?Qe(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Qe(0,this.low<<t-32,this.unsigned)};oe.shl=oe.shiftLeft;oe.shiftRight=function(t){return pn(t)&&(t=t.toInt()),(t&=63)==0?this:t<32?Qe(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Qe(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};oe.shr=oe.shiftRight;oe.shiftRightUnsigned=function(t){if(pn(t)&&(t=t.toInt()),t&=63,t===0)return this;var n=this.high;if(t<32){var r=this.low;return Qe(r>>>t|n<<32-t,n>>>t,this.unsigned)}else return t===32?Qe(n,0,this.unsigned):Qe(n>>>t-32,0,this.unsigned)};oe.shru=oe.shiftRightUnsigned;oe.shr_u=oe.shiftRightUnsigned;oe.toSigned=function(){return this.unsigned?Qe(this.low,this.high,!1):this};oe.toUnsigned=function(){return this.unsigned?this:Qe(this.low,this.high,!0)};oe.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};oe.toBytesLE=function(){var t=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};oe.toBytesBE=function(){var t=this.high,n=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Je.fromBytes=function(t,n,r){return r?Je.fromBytesLE(t,n):Je.fromBytesBE(t,n)};Je.fromBytesLE=function(t,n){return new Je(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,n)};Je.fromBytesBE=function(t,n){return new Je(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],n)};var iS=Object.freeze(dI({__proto__:null,[Symbol.toStringTag]:"Module",default:pf},[pf]));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=pf||iS;function Pl(s){return Ur.fromString(s,!0,16)}const Xx=Pl("c3a5c85c97cb3127"),Gr=Pl("b492b66fbe98f273"),Yt=Pl("9ae16a3b2f90404f");function gf(s){return s.xor(s.shru(47))}function Yx(s,t,n){const r=s.slice(t,t+n);return Ur.fromBytes(Array.from(r),!0,!0)}function Ze(s,t){return Yx(s,t,8)}function Zx(s,t){return Yx(s,t,4)}function Et(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function lr(s,t,n=Pl("9ddfea08eb382d69")){let r=s.xor(t).mul(n);r=r.xor(r.shru(47));let o=t.xor(r).mul(n);return o=o.xor(o.shru(47)),o=o.mul(n),o}function lS(s,t,n,r,o,a){o=o.add(s),a=Et(a.add(o).add(r),21);const i=o;return o=o.add(t),o=o.add(n),a=a.add(Et(o,44)),[o.add(r),a.add(i)]}function ph(s,t,n,r){return lS(Ze(s,t),Ze(s,t+8),Ze(s,t+16),Ze(s,t+24),n,r)}function cS(s,t=s.length){if(t>=8){const n=Yt.add(t*2),r=Ze(s,0).add(Yt),o=Ze(s,t-8),a=Et(o,37).mul(n).add(r),i=Et(r,25).add(o).mul(n);return lr(a,i,n)}if(t>=4){const n=Yt.add(t*2),r=Zx(s,0);return lr(r.shl(3).add(t),Zx(s,t-4),n)}if(t>0){const n=s[0],r=s[t>>1],o=s[t-1],a=n+(r<<8),i=t+(o<<2);return gf(Yt.mul(a).xor(Xx.mul(i))).mul(Yt)}return Yt}function uS(s,t=s.length){const n=Yt.add(t*2),r=Ze(s,0).mul(Gr),o=Ze(s,8),a=Ze(s,t-8).mul(n),i=Ze(s,t-16).mul(Yt);return lr(Et(r.add(o),43).add(Et(a,30)).add(i),r.add(Et(o.add(Yt),18)).add(a),n)}function hS(s,t=s.length){const n=Yt.add(t*2),r=Ze(s,0).mul(Yt),o=Ze(s,8),a=Ze(s,t-8).mul(n),i=Ze(s,t-16).mul(Yt),l=Et(r.add(o),43).add(Et(a,30)).add(i),c=lr(l,r.add(Et(o.add(Yt),18)).add(a),n),u=Ze(s,16).mul(n),h=Ze(s,24),d=l.add(Ze(s,t-32)).mul(n),p=c.add(Ze(s,t-24)).mul(n);return lr(Et(u.add(h),43).add(Et(d,30)).add(p),u.add(Et(h.add(r),18)).add(d),n)}function Jx(s,t=s.length){const n=Ur.fromNumber(81,!0);if(t<=32)return t<=16?cS(s,t):uS(s,t);if(t<=64)return hS(s,t);let r=n,o=n.mul(Gr).add(113),a=gf(o.mul(Yt).add(113)).mul(Yt),i=[Ur.UZERO,Ur.UZERO],l=[Ur.UZERO,Ur.UZERO];r=r.mul(Yt).add(Ze(s,0));let c=0;const u=(t-1>>6)*64,h=u+(t-1&63)-63;do r=Et(r.add(o).add(i[0]).add(Ze(s,c+8)),37).mul(Gr),o=Et(o.add(i[1]).add(Ze(s,c+48)),42).mul(Gr),r=r.xor(l[1]),o=o.add(i[0]).add(Ze(s,c+40)),a=Et(a.add(l[0]),33).mul(Gr),i=ph(s,c,i[1].mul(Gr),r.add(l[0])),l=ph(s,c+32,a.add(l[1]),o.add(Ze(s,c+16))),[a,r]=[r,a],c+=64;while(c!==u);const d=Gr.add(a.and(255).shl(1));return c=h,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),r=Et(r.add(o).add(i[0]).add(Ze(s,c+8)),37).mul(d),o=Et(o.add(i[1]).add(Ze(s,c+48)),42).mul(d),r=r.xor(l[1].mul(9)),o=o.add(i[0].mul(9).add(Ze(s,c+40))),a=Et(a.add(l[0]),33).mul(d),i=ph(s,c,i[1].mul(d),r.add(l[0])),l=ph(s,c+32,a.add(l[1]),o.add(Ze(s,c+16))),[a,r]=[r,a],lr(lr(i[0],l[0],d).add(gf(o).mul(Xx)).add(a),lr(i[1],l[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(s,t){return t==="string"?xs(s):cr([s],t)}function dS(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function cr(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=Ps(s)),q().getBool("DEBUG")&&Ex(s,t),dS(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const n=new Uint8Array(s.length);for(let r=0;r<n.length;++r)Math.round(s[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function zt(){return q().platform.now()}function Qx(s,t){return q().platform.fetch(s,t)}function xs(s,t="utf-8"){return t=t||"utf-8",q().platform.encode(s,t)}function Hr(s,t="utf-8"){return t=t||"utf-8",q().platform.decode(s,t)}var pS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",createScalarValue:zs,toTypedArray:cr,now:zt,fetch:Qx,encodeString:xs,decodeString:Hr,shuffle:Qp,shuffleCombo:GN,clamp:ar,nearestLargerEven:ef,swap:Ls,sum:Tx,randUniform:HN,distSquared:jN,assert:I,assertShapesMatch:Lt,assertNonNull:Pr,flatten:Ps,sizeFromShape:j,isScalarShape:qN,arraysEqual:De,isInt:$t,tanh:KN,sizeToSquarishShape:su,createShuffledIndices:XN,rightPad:Mr,repeatedTry:tf,inferFromImplicitShape:nf,parseAxisParam:Se,squeezeShape:Ms,getTypedArrayFromDType:Ct,getArrayFromDType:Xt,checkConversionForErrors:Ex,isValidDtype:Ax,hasEncodingLoss:sf,isTypedArray:Pt,bytesPerElement:ru,bytesFromStringArray:Dx,isString:bs,isBoolean:Rx,isNumber:ou,inferDtype:Ro,isFunction:ir,nearestDivisor:au,computeStrides:ye,toNestedArray:En,makeOnesTypedArray:rf,makeZerosTypedArray:Mt,makeZerosNestedTypedArray:of,assertNonNegativeIntegerDimensions:af,locToIndex:ts,indexToLoc:Fo,isPromise:zr,hexToLong:Pl,fingerPrint64:Jx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fS{constructor(t,n){this.backendTimer=t,this.logger=n,n==null&&(this.logger=new gS)}profileKernel(t,n,r){let o;const a=()=>{o=r()};let i;const l=zt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const u of o)u.dataSync();i=Promise.resolve({kernelMs:zt()-l})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){const h=o[u];h.data().then(d=>{mS(d,h.dtype,t)})}return{kernelName:t,outputs:o,inputs:n,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:n,outputs:r,timeMs:o,inputs:a,extraInfo:i}=t;r.forEach(l=>{Promise.all([l.data(),o,i]).then(c=>{this.logger.logKernelProfile(n,l,c[0],c[1],a,c[2])})})}}function mS(s,t,n){if(t!=="float32")return!1;for(let r=0;r<s.length;r++){const o=s[r];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${n}'`),!0}return!1}class gS{logKernelProfile(t,n,r,o,a,i){const l=typeof o=="number"?Mr(`${o}ms`,9):o.error,c=Mr(t,25),u=n.rank,h=n.size,d=Mr(n.shape.toString(),14);let p="";for(const f in a){const m=a[f];if(m!=null){const g=m.shape||n.shape,y=g.length;p+=`${f}: ${y}D ${y>0?g:""} `}}console.log(`%c${c}	%c${l}	%c${u}D ${d}	%c${h}	%c${p}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(s,t,n){const r={},o={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<s.length;c++){const u=s[c],h=u.inputs;for(const d in h){const p=h[d];let f=!1;for(let m=0;m<t.length;m++)if(r[p.id]){u.outputs.forEach(g=>r[g.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}const a={};a[n.id]=!0;const i={};for(let c=s.length-1;c>=0;c--){const u=s[c],h=u.inputs;for(let d=0;d<u.outputs.length;d++)if(a[u.outputs[d].id]){for(const p in h)a[h[p].id]=!0,i[u.id]=!0;break}}const l=[];for(let c=0;c<s.length;c++){const u=s[c];if(o[u.id]&&i[u.id]){const h={};for(const p in u.inputs){const f=u.inputs[p];r[f.id]&&(h[p]=f)}const d=Object.assign({},u);d.inputs=h,d.outputs=u.outputs,l.push(d)}}return l}function bS(s,t,n,r){for(let o=t.length-1;o>=0;o--){const a=t[o],i=[];if(a.outputs.forEach(c=>{const u=s[c.id];u!=null?i.push(u):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const l=a.gradient(i);for(const c in a.inputs){if(!(c in l))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(l)}.`);const u=n(()=>l[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);const h=a.inputs[c];if(!De(u.shape,h.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${h.shape}'`);if(s[h.id]==null)s[h.id]=u;else{const d=s[h.id];s[h.id]=r(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e0=20,Ml=3,yf=7;function xS(s,t,n,r){const o=ye(t),a=wS(s,t,n,o),i=t.length,l=fh(s,t,n,o,a),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${i}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(l.map(u=>"    "+u).join(`
`)),c.join(`
`)}function wS(s,t,n,r){const o=j(t),a=r[r.length-1],i=new Array(a).fill(0),l=t.length,c=n==="complex64"?Bl(s):s;if(l>1)for(let u=0;u<o/a;u++){const h=u*a;for(let d=0;d<a;d++)i[d]=Math.max(i[d],zl(c[h+d],0,n).length)}return i}function zl(s,t,n){let r;return Array.isArray(s)?r=`${parseFloat(s[0].toFixed(yf))} + ${parseFloat(s[1].toFixed(yf))}j`:bs(s)?r=`'${s}'`:n==="bool"?r=t0(s):r=parseFloat(s.toFixed(yf)).toString(),Mr(r,t)}function t0(s){return s===0?"false":"true"}function fh(s,t,n,r,o,a=!0){const i=n==="complex64"?2:1,l=t[0],c=t.length;if(c===0){if(n==="complex64"){const g=Bl(s);return[zl(g[0],0,n)]}return n==="bool"?[t0(s[0])]:[s[0].toString()]}if(c===1){if(l>e0){const y=Ml*i;let b=Array.from(s.slice(0,y)),x=Array.from(s.slice((l-Ml)*i,l*i));return n==="complex64"&&(b=Bl(b),x=Bl(x)),["["+b.map((v,w)=>zl(v,o[w],n)).join(", ")+", ..., "+x.map((v,w)=>zl(v,o[l-Ml+w],n)).join(", ")+"]"]}const g=n==="complex64"?Bl(s):Array.from(s);return["["+g.map((y,b)=>zl(y,o[b],n)).join(", ")+"]"]}const u=t.slice(1),h=r.slice(1),d=r[0]*i,p=[];if(l>e0){for(let g=0;g<Ml;g++){const y=g*d,b=y+d;p.push(...fh(s.slice(y,b),u,n,h,o,!1))}p.push("...");for(let g=l-Ml;g<l;g++){const y=g*d,b=y+d;p.push(...fh(s.slice(y,b),u,n,h,o,g===l-1))}}else for(let g=0;g<l;g++){const y=g*d,b=y+d;p.push(...fh(s.slice(y,b),u,n,h,o,g===l-1))}const f=c===2?",":"";p[0]="["+p[0]+f;for(let g=1;g<p.length-1;g++)p[g]=" "+p[g]+f;let m=`,
`;for(let g=2;g<c;g++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":m),p}function Bl(s){const t=[];for(let n=0;n<s.length;n+=2)t.push([s[n],s[n+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kt{constructor(t,n,r){if(this.dtype=n,this.shape=t.slice(),this.size=j(t),r!=null){const o=r.length;I(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Xt(n,this.size),this.strides=ye(t)}set(t,...n){n.length===0&&(n=[0]),I(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const r=this.locToIndex(n);this.values[r]=t}get(...t){t.length===0&&(t=[0]);let n=0;for(const o of t){if(o<0||o>=this.shape[n]){const a=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(a)}n++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return n}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const n=new Array(this.shape.length);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(t/this.strides[r]),t-=n[r]*this.strides[r];return n[n.length-1]=t,n}get rank(){return this.shape.length}toTensor(){return ws().makeTensor(this.values,this.shape,this.dtype)}}let ws=null,Ra=null;function vS(s){ws=s}function $S(s){Ra=s}class ze{constructor(t,n,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=n||"float32",this.size=j(t),this.strides=ye(t),this.dataId=r,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ra.buffer(this.shape,this.dtype,t)}bufferSync(){return Ra.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return En(this.shape,t,this.dtype==="complex64")}arraySync(){return En(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=ws().read(this.dataId);if(this.dtype==="string"){const n=await t;try{return n.map(r=>Hr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=ws().readSync(this.dataId);if(this.dtype==="string")try{return t.map(n=>Hr(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await ws().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(ws().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ra.print(this,t)}clone(){return this.throwIfDisposed(),Ra.clone(this)}toString(t=!1){const n=this.dataSync();return xS(n,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ra.cast(this,t)}variable(t=!0,n,r){return this.throwIfDisposed(),ws().makeVariable(this,t,n,r)}}Object.defineProperty(ze,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function G(){return uf("Tensor",()=>ze)}G();class Vl extends ze{constructor(t,n,r,o){super(t.shape,t.dtype,t.dataId,o);this.trainable=n,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!De(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ws().disposeTensor(this),this.dataId=t.dataId,ws().incRef(this,null)}dispose(){ws().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Vl,Symbol.hasInstance,{value:s=>s instanceof ze&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bf;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(bf||(bf={}));var xf;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(xf||(xf={}));var wf;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(wf||(wf={}));var vf;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(vf||(vf={}));var $f;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})($f||($f={}));const CS={float32:vf,int32:xf,bool:wf,complex64:$f};function mn(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return CS[s][t]}function mh(s){return mn(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function it(s,t){if(s.dtype===t.dtype)return[s,t];const n=mn(s.dtype,t.dtype);return[s.cast(n),t.cast(n)]}function n0(s,t){I(s.dtype===t.dtype,()=>`The dtypes of the first(${s.dtype}) and second(${t.dtype}) input must match`)}function gh(s,t){return t.some(n=>n.id===s.id)}function Bs(s){const t=[],n=new Set;return s0(s,t,n),t}function s0(s,t,n){if(s==null)return;if(s instanceof ze){t.push(s);return}if(!kS(s))return;const r=s;for(const o in r){const a=r[o];n.has(a)||(n.add(a),s0(a,t,n))}}function kS(s){return Array.isArray(s)||typeof s=="object"}var IS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",makeTypesMatch:it,assertTypesMatch:n0,isTensorInList:gh,getTensorsInContainer:Bs});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cf(s){return s.kernelName!=null}class r0{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Fa{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new r0}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const r=t[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(rn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new fS(this.backendInstance),!0}setupRegisteredKernels(){uh(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){uh(t).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[t])})}initializeBackend(t){const n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const r=n.factory();if(r&&!(r instanceof nu)&&typeof r.then=="function"){const o=++this.pendingBackendInitId,a=r.then(i=>o<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,rn(`Initialization of backend ${t} failed`),rn(i.stack||i.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return rn(`Initialization of backend ${t} failed`),rn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const r=t[n],{success:o,asyncInit:a}=this.initializeBackend(r);if(a||o)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){const r=this.state.tensorInfo.get(n),o=r.backend,a=this.readSync(n),i=o.refCount(n);o.disposeData(n,!0),r.backend=t,t.move(n,a,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let o;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(o),()=>(o=n(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,n,r){t();try{const o=r();return n(),o}catch(o){throw n(),o}}nextTensorId(){return Fa.nextTensorId++}nextVariableId(){return Fa.nextVariableId++}clone(t){const n=R.runKernel(ea,{x:t}),r={x:t},o=i=>({x:()=>{const l="float32",c={x:i},u={dtype:l};return R.runKernel(Vo,c,u)}}),a=[];return this.addTapeNode(this.state.activeScope.name,r,[n],o,a,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,!(ch(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){const o=this.backend.numDataIds();let a=0;r.forEach(c=>{a+=c.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=o-n-a-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[];const o=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let c;const u=Cf(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Cf(t)){const{kernelName:m,inputs:g,attrs:y}=t;this.backendName==null&&this.backend;const b=ch(m,this.backendName);I(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),l=()=>{const x=this.backend.numDataIds();c=b.kernelFunc({inputs:g,attrs:y,backend:this.backend});const v=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,x,v);const w=v.map(C=>{if(C.rank!=null)return C;const{dataId:N,shape:k,dtype:S}=C;return this.makeTensorFromDataId(N,k,S)});if(o){const C=this.getTensorsForGradient(m,g,w);r=this.saveTensorsForBackwardMode(C)}return w}}else{const{forwardFunc:m}=t,g=y=>{!o||(r=y.map(b=>this.keep(this.clone(b))))};l=()=>{const y=this.backend.numDataIds();c=this.tidy(()=>m(this.backend,g));const b=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,b),b}}const{inputs:h,attrs:d}=t,p=Cf(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=l():(f=this.profiler.profileKernel(u,h,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),n=f.outputs)}),o&&this.addTapeNode(u,h,n,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(m=>h[m]!=null?h[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(t,n,r){const o=hf(t);if(o!=null){const a=o.inputsToSave||[],i=o.outputsToSave||[];let l;o.saveAllInputs?(I(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(n).map(u=>n[u])):l=a.map(u=>n[u]);const c=r.filter((u,h)=>i[h]);return l.concat(c)}return[]}makeTensor(t,n,r,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",o=o||this.backend;let a=t;r==="string"&&bs(t[0])&&(a=t.map(c=>xs(c)));const i=o.write(a,n,r),l=new ze(n,r,i,this.nextTensorId());if(this.trackTensor(l,o),r==="string"){const c=this.state.tensorInfo.get(i),u=Dx(a);this.state.numBytes+=u-c.bytes,c.bytes=u}return l}makeTensorFromDataId(t,n,r,o){r=r||"float32";const a=new ze(n,r,t,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(t,n=!0,r,o){r=r||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));const a=new Vl(t,n,r,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*ru(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Vl||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const r=t.size*ru(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,o,a,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:a},c=hf(t);c!=null&&(o=c.gradFunc),o!=null&&(l.gradient=u=>(u=u.map((h,d)=>{if(h==null){const p=r[d],f=Mt(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),o(u.length>1?u:u[0],a,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){const n=Bs(t),r=new Set(n.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const i=this.state.activeScope.track[a];!i.kept&&!r.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(a=>{!a.kept&&a.scopeId===o.id&&this.track(a)})}gradients(t,n,r,o=!1){if(I(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));I(a instanceof ze,()=>"The result y returned by f() must be a tensor.");const i=yS(this.state.activeTape,n,a);if(!o&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[a.id]=r==null?NS(a.shape):r,bS(l,i,u=>this.tidy(u),SS);const c=n.map(u=>l[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const h of u.saved)h.dispose()}),this.state.activeTape=null),{value:a,grads:c}})}customGrad(t){return I(ir(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{I(n.every(l=>l instanceof ze),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const o={};n.forEach((l,c)=>{o[c]=l});const a=(l,c)=>(r=t(...n,c),I(r.value instanceof ze,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),I(ir(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(l,c)=>{const u=r.gradFunc(l,c),h=Array.isArray(u)?u:[u];I(h.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),I(h.every(p=>p instanceof ze),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,f)=>{d[f]=()=>p}),d};return this.runKernelFunc({forwardFunc:a,backwardsFunc:i,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const n=zt(),r=await this.backend.time(t);return r.wallMs=zt()-n,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new r0;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Fa.nextTensorId=0;Fa.nextVariableId=0;function NS(s){const t=rf(j(s),"float32");return R.makeTensor(t,s,"float32")}function o0(){const s=Lx();if(s._tfengine==null){const t=new Ox(s);s._tfengine=new Fa(t)}return eS(s._tfengine.ENV),vS(()=>s._tfengine),s._tfengine}const R=o0();function SS(s,t){const n={a:s,b:t};return R.runKernel(Br,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(){return typeof navigator!="undefined"&&navigator!=null}let kf;function ES(s){kf=s}function If(s){if(kf!==void 0)return kf;if(s||TS()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window!="undefined"?window.opera:"");if(!t){const n=s;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Nf(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var AS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",mockIsMobile:ES,isMobile:If,isBrowser:Nf});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=q();ss.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ss.registerFlag("IS_BROWSER",()=>Nf());ss.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ss.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ss.registerFlag("PROD",()=>!1);ss.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ss.getBool("DEBUG"));ss.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ss.registerFlag("IS_TEST",()=>!1);ss.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ss.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vs(s,t){let n=s;if(Pt(s))return t==="string"?[]:[s.length];if(!Array.isArray(s))return[];const r=[];for(;Array.isArray(n)||Pt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(s)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&a0(s,r,[]),r}function a0(s,t,n){if(n=n||[],!Array.isArray(s)&&!Pt(s)){I(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}I(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${s.length} elements`),I(s.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const r=t.slice(1);for(let o=0;o<s.length;++o)a0(s[o],r,n.concat(o))}function i0(s,t,n,r){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${s} tensor, but got ${t} tensor`)}}function T(s,t,n,r="numeric"){if(s instanceof ze)return i0(r,s.dtype,t,n),s;let o=Ro(s);if(o!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),i0(r,o,t,n),s==null||!Pt(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const c=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${c}'`)}const a=vs(s,o);!Pt(s)&&!Array.isArray(s)&&(s=[s]);const l=o!=="string"?cr(s,o):Ps(s,[],!0);return R.makeTensor(l,a,o)}function Wl(s,t,n,r="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((a,i)=>T(a,`${t}[${i}]`,n,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0="__op";function _(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=s[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+l0;const o=(...a)=>{R.startScope(n);try{const i=r(...a);return zr(i)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(i),i}catch(i){throw R.endScope(null),i}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(s,t){const n=T(s,"real","complex"),r=T(t,"imag","complex");Lt(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const o={real:n,imag:r};return R.runKernel(pu,o)}const ur=_({complex_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hr(s,t,n,r){if(r==null&&(r=Ro(s)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Pt(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){af(t);const o=j(t),a=j(n);I(o===a,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${a}`);for(let i=0;i<n.length;++i){const l=n[i],c=i===n.length-1?l!==j(t.slice(i)):!0;I(n[i]===t[i]||!c,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Pt(s)&&!Array.isArray(s)&&(s=[s]),t=t||n,s=r!=="string"?cr(s,r):Ps(s,[],!0),R.makeTensor(s,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(s,t,n){const r=vs(s,n);return hr(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yh=4;async function Tf(s,t){const n=[],r=[],o=Array.isArray(s)?s.map(i=>i.name):Object.keys(s);for(let i=0;i<o.length;++i){const l=o[i],c=Array.isArray(s)?s[i].tensor:s[l];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${c.dtype}`);const u={name:l,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const h=new Promise(async d=>{const p=await c.bytes(),f=p.reduce((y,b)=>y+b.length,0)+yh*p.length,m=new Uint8Array(f);let g=0;for(let y=0;y<p.length;y++){const b=p[y],x=new Uint8Array(new Uint32Array([b.length]).buffer);m.set(x,g),g+=yh,m.set(b,g),g+=b.length}d(m)});r.push(h)}else r.push(c.data());t!=null&&(u.group=t),n.push(u)}const a=await Promise.all(r);return{data:RS(a),specs:n}}function bh(s,t){const n={};let r,o=0;for(const a of t){const i=a.name,l=a.dtype,c=a.shape,u=j(c);let h;if("quantization"in a){const d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const p=Sf[d.dtype],f=s.slice(o,o+u*p),m=d.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(l==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){h=new Float32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];h[g]=y*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=MS()),h=r(m);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(l==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];h[g]=Math.round(y*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=u*p}else if(l==="string"){const d=j(a.shape);h=[];for(let p=0;p<d;p++){const f=new Uint32Array(s.slice(o,o+yh))[0];o+=yh;const m=new Uint8Array(s.slice(o,o+f));h.push(m),o+=f}}else{const d=Sf[l],p=s.slice(o,o+u*d);if(l==="float32")h=new Float32Array(p);else if(l==="int32")h=new Int32Array(p);else if(l==="bool")h=new Uint8Array(p);else if(l==="complex64"){h=new Float32Array(p);const f=new Float32Array(h.length/2),m=new Float32Array(h.length/2);for(let b=0;b<f.length;b++)f[b]=h[b*2],m[b]=h[b*2+1];const g=Wn(f,c,"float32"),y=Wn(m,c,"float32");n[i]=ur(g,y),g.dispose(),y.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=u*d}l!=="complex64"&&(n[i]=Wn(h,c,l))}return n}function RS(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const n=[];s.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const r=new Uint8Array(t);let o=0;return n.forEach(a=>{r.set(new Uint8Array(a.buffer),o),o+=a.byteLength}),r.buffer}const Ef=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function c0(s){return Ef?Buffer.byteLength(s):new Blob([s]).size}function FS(s){if(Ef)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let n="";for(let r=0,o=t.length;r<o;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function _S(s){if(Ef){const r=Buffer.from(s,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const t=atob(s),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function xh(s){if(s.length===1)return s[0];let t=0;s.forEach(o=>{t+=o.byteLength});const n=new Uint8Array(t);let r=0;return s.forEach(o=>{n.set(new Uint8Array(o),r),r+=o.byteLength}),n.buffer}function u0(s){const t="/";for(s=s.trim();s.endsWith(t);)s=s.slice(0,s.length-1);const n=s.split(t);return n[n.length-1]}function h0(s,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),n}async function Af(s,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){const[r,o]=await t(s.weightsManifest);n.weightSpecs=r,n.weightData=o}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),n}function Ul(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:c0(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:c0(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function OS(){const s=n=>{let r=n<<13,o=0;for(;(r&8388608)==0;)o-=8388608,r<<=1;return r&=~8388608,o+=947912704,r|o},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=s(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function LS(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let t=1;t<31;t++)s[t]=t<<23;for(let t=33;t<63;t++)s[t]=2147483648+(t-32<<23);return s}function PS(){const s=new Uint32Array(64);for(let t=0;t<64;t++)s[t]=1024;return s[0]=s[32]=0,s}function MS(){const s=OS(),t=LS(),n=PS();return r=>{const o=new ArrayBuffer(4*r.length),a=new Uint32Array(o);for(let i=0;i<r.length;i++){const l=r[i],c=s[n[l>>10]+(l&1023)]+t[l>>10];a[i]=c}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return lt.instance==null&&(lt.instance=new lt),lt.instance}static registerSaveRouter(t){lt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){lt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return lt.getHandlers(t,"save")}static getLoadHandlers(t,n){return lt.getHandlers(t,"load",n)}static getHandlers(t,n,r){const o=[];return(n==="load"?lt.getInstance().loadRouters:lt.getInstance().saveRouters).forEach(i=>{const l=i(t,r);l!==null&&o.push(l)}),o}}const zS=s=>lt.registerSaveRouter(s),BS=s=>lt.registerLoadRouter(s),Df=s=>lt.getSaveHandlers(s),Rf=(s,t)=>lt.getLoadHandlers(s,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ff="tensorflowjs",_f=1,jr="models_store",dr="model_info_store";function d0(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window=="undefined"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Of(s){const t=s.result;t.createObjectStore(jr,{keyPath:"modelPath"}),t.createObjectStore(dr,{keyPath:"modelPath"})}class qr{constructor(t){if(this.indexedDB=d0(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((r,o)=>{const a=this.indexedDB.open(Ff,_f);a.onupgradeneeded=()=>Of(a),a.onsuccess=()=>{const i=a.result;if(n==null){const l=i.transaction(jr,"readonly"),u=l.objectStore(jr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(u.result.modelArtifacts)},u.onerror=h=>(i.close(),o(u.error)),l.oncomplete=()=>i.close()}else{const l=Ul(n),c=i.transaction(dr,"readwrite");let u=c.objectStore(dr);const h=u.put({modelPath:this.modelPath,modelArtifactsInfo:l});let d;h.onsuccess=()=>{d=i.transaction(jr,"readwrite");const f=d.objectStore(jr).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:l});f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=m=>{u=c.objectStore(dr);const g=u.delete(this.modelPath);g.onsuccess=()=>(i.close(),o(f.error)),g.onerror=y=>(i.close(),o(f.error))}},h.onerror=p=>(i.close(),o(h.error)),c.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},a.onerror=i=>o(a.error)})}}qr.URL_SCHEME="indexeddb://";const p0=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(qr.URL_SCHEME)?VS(s.slice(qr.URL_SCHEME.length)):null;lt.registerSaveRouter(p0);lt.registerLoadRouter(p0);function VS(s){return new qr(s)}function WS(s){return s.startsWith(qr.URL_SCHEME)?s.slice(qr.URL_SCHEME.length):s}class US{constructor(){this.indexedDB=d0()}async listModels(){return new Promise((t,n)=>{const r=this.indexedDB.open(Ff,_f);r.onupgradeneeded=()=>Of(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(dr,"readonly"),l=a.objectStore(dr).getAll();l.onsuccess=()=>{const c={};for(const u of l.result)c[u.modelPath]=u.modelArtifactsInfo;t(c)},l.onerror=c=>(o.close(),n(l.error)),a.oncomplete=()=>o.close()},r.onerror=o=>n(r.error)})}async removeModel(t){return t=WS(t),new Promise((n,r)=>{const o=this.indexedDB.open(Ff,_f);o.onupgradeneeded=()=>Of(o),o.onsuccess=()=>{const a=o.result,i=a.transaction(dr,"readwrite"),l=i.objectStore(dr),c=l.get(t);let u;c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{u=a.transaction(jr,"readwrite");const f=u.objectStore(jr).delete(t);f.onsuccess=()=>n(c.result.modelArtifactsInfo),f.onerror=m=>r(c.error)};h.onsuccess=d,h.onerror=p=>(d(),a.close(),r(c.error))}},c.onerror=h=>(a.close(),r(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}},o.onerror=a=>r(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vs="/",_a="tensorflowjs_models",f0="info",GS="model_topology",HS="weight_specs",jS="weight_data",qS="model_metadata";function m0(s){return{info:[_a,s,f0].join(Vs),topology:[_a,s,GS].join(Vs),weightSpecs:[_a,s,HS].join(Vs),weightData:[_a,s,jS].join(Vs),modelMetadata:[_a,s,qS].join(Vs)}}function g0(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function KS(s){const t=s.split(Vs);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(Vs)}function XS(s){return s.startsWith(Kr.URL_SCHEME)?s.slice(Kr.URL_SCHEME.length):s}class Kr{constructor(t){if(!q().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=m0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),o=Ul(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,FS(t.weightData));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:o}}catch{throw g0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=o;const a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){const l=JSON.parse(a);n.format=l.format,n.generatedBy=l.generatedBy,n.convertedBy=l.convertedBy,l.signature!=null&&(n.signature=l.signature),l.userDefinedMetadata!=null&&(n.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(n.modelInitializer=l.modelInitializer),l.trainingConfig!=null&&(n.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=_S(i),n}}Kr.URL_SCHEME="localstorage://";const y0=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Kr.URL_SCHEME)?YS(s.slice(Kr.URL_SCHEME.length)):null;lt.registerSaveRouter(y0);lt.registerLoadRouter(y0);function YS(s){return new Kr(s)}class ZS{constructor(){I(q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),I(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},n=_a+Vs,r=Vs+f0;for(let o=0;o<this.LS.length;++o){const a=this.LS.key(o);if(a.startsWith(n)&&a.endsWith(r)){const i=KS(a);t[i]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){t=XS(t);const n=m0(t);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return g0(n),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa="://";class gn{constructor(){this.managers={}}static getInstance(){return gn.instance==null&&(gn.instance=new gn),gn.instance}static registerManager(t,n){I(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Oa)&&(t=t.slice(0,t.indexOf(Oa))),I(t.length>0,()=>"scheme must not be an empty string.");const r=gn.getInstance();I(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){const n=this.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(this.getInstance().managers)}}function wh(s){if(s.indexOf(Oa)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gn.getSchemes().join(",")}`);return{scheme:s.split(Oa)[0],path:s.split(Oa)[1]}}async function b0(s,t,n=!1){I(s!==t,()=>`Old path and new path are the same: '${s}'`);const r=lt.getLoadHandlers(s);I(r.length>0,()=>`Copying failed because no load handler is found for source URL ${s}.`),I(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${s}.`);const o=r[0],a=lt.getSaveHandlers(t);I(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),I(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],l=wh(s).scheme,c=wh(s).path,u=l===wh(s).scheme,h=await o.load();n&&u&&await gn.getManager(l).removeModel(c);const d=await i.save(h);return n&&!u&&await gn.getManager(l).removeModel(c),d.modelArtifactsInfo}async function JS(){const s=gn.getSchemes(),t={};for(const n of s){const r=await gn.getManager(n).listModels();for(const o in r){const a=n+Oa+o;t[a]=r[o]}}return t}async function QS(s){const t=wh(s);return gn.getManager(t.scheme).removeModel(t.path)}async function eT(s,t){return b0(s,t,!1)}async function tT(s,t){return b0(s,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nT{fetch(t,n){return fetch(t,n)}now(){return performance.now()}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,n){return new TextDecoder(n).decode(t)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new nT);try{gn.registerManager(Kr.URL_SCHEME,new ZS)}catch{}try{gn.registerManager(qr.URL_SCHEME,new US)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT={importFetch:()=>require("node-fetch")};let Lf;class rT{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return q().global.fetch!=null?q().global.fetch(t,n):(Lf==null&&(Lf=sT.importFetch()),Lf(t,n))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(t)}decode(t,n){return t.length===0?"":new this.util.TextDecoder(n).decode(t)}}q().get("IS_NODE")&&q().setPlatform("node",new rT);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(s,t="float32",n){return t=t||"float32",af(s),new kt(s,t,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(s,t){const n=T(s,"x","cast");if(!Ax(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:n},o={dtype:t};return R.runKernel(Vo,r,o)}const ne=_({cast_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(s){const n={x:T(s,"x","clone","string_or_numeric")};return R.runKernel(ea,n)}const Ws=_({clone_:aT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x0(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */o0();const iT={buffer:Ae,cast:ne,clone:Ws,print:x0};$S(iT);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT="model",cT=".json",uT=".weights.bin";function w0(s){return new Promise(t=>setTimeout(t)).then(s)}class Xr{constructor(t){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Xr.URL_SCHEME)&&(t=t.slice(Xr.URL_SCHEME.length)),(t==null||t.length===0)&&(t=lT),this.modelJsonFileName=t+cT,this.weightDataFileName=t+uT}async save(t){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=h0(t,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await w0(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=n,await w0(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ul(t)}}}}Xr.URL_SCHEME="downloads://";class hT{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,n)=>{const r=new FileReader;r.onload=o=>{const a=JSON.parse(o.target.result),i=a.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const c=Af(a,u=>this.loadWeights(u));t(c)},r.onerror=o=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(t){const n=[],r=[];for(const i of t)n.push(...i.weights),r.push(...i.paths);const o=this.checkManifestAndWeightFiles(t),a=r.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(a).then(i=>[n,xh(i)])}loadWeightsFile(t,n){return new Promise((r,o)=>{const a=new FileReader;a.onload=i=>{const l=i.target.result;r(l)},a.onerror=i=>o(`Failed to weights data from file of path '${t}'.`),a.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(t){const n=[],r=this.weightsFiles.map(a=>u0(a.name)),o={};for(const a of t)a.paths.forEach(i=>{const l=u0(i);if(n.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(n.push(l),r.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);o[i]=this.weightsFiles[r.indexOf(l)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}}const dT=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Xr.URL_SCHEME)?pT(s.slice(Xr.URL_SCHEME.length)):null;lt.registerSaveRouter(dT);function pT(s="model"){return new Xr(s)}function fT(s){return new hT(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(s,t,n,r){i(s),n=n==null?0:n,r=r==null?1:r,l(n,r);let o=0;const a=c=>(c.then(u=>{const h=n+ ++o/s.length*(r-n);return t(h),u}),c);function i(c){I(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function l(c,u){I(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),I(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),I(u>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${u}`)}return Promise.all(s.map(a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $0(s,t){t==null&&(t={});const n=t.fetchFunc==null?q().platform.fetch:t.fetchFunc,r=s.map(d=>n(d,t.requestInit,{isBinary:!0})),o=0,a=.5,l=(t.onProgress==null?await Promise.all(r):await v0(r,t.onProgress,o,a)).map(d=>d.arrayBuffer()),c=.5,u=1;return t.onProgress==null?await Promise.all(l):await v0(l,t.onProgress,c,u)}async function C0(s,t="",n,r){return k0(i=>$0(i,{requestInit:r}))(s,t,n)}function k0(s){return async(t,n="",r)=>{const o=t.map(()=>!1),a={},i=r!=null?r.map(()=>!1):[],l=[];if(t.forEach((f,m)=>{let g=0;f.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,x=Sf[b]*j(y.shape),v=()=>{o[m]=!0,a[m]==null&&(a[m]=[]),a[m].push({manifestEntry:y,groupOffset:g,sizeBytes:x})};r!=null?r.forEach((w,C)=>{w===y.name&&(v(),i[C]=!0)}):v(),l.push(y.name),g+=x})}),!i.every(f=>f)){const f=r.filter((m,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const c=o.reduce((f,m,g)=>(m&&f.push(g),f),[]),u=[];c.forEach(f=>{t[f].paths.forEach(m=>{const g=n+(n.endsWith("/")?"":"/")+m;u.push(g)})});const h=await s(u),d={};let p=0;return c.forEach(f=>{const m=t[f].paths.length;let g=0;for(let w=0;w<m;w++)g+=h[p+w].byteLength;const y=new ArrayBuffer(g),b=new Uint8Array(y);let x=0;for(let w=0;w<m;w++){const C=new Uint8Array(h[p+w]);b.set(C,x),x+=C.byteLength}a[f].forEach(w=>{const C=y.slice(w.groupOffset,w.groupOffset+w.sizeBytes),N=bh(C,[w.manifestEntry]);for(const k in N)d[k]=N[k]}),p+=m}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT="application/octet-stream",gT="application/json";class Pf{constructor(t,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(I(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=q().platform.fetch,I(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&I(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=h0(t,r);n.body.append("model.json",new Blob([JSON.stringify(o)],{type:gT}),"model.json"),t.weightData!=null&&n.body.append("model.weights.bin",new Blob([t.weightData],{type:mT}),"model.weights.bin");const a=await this.fetch(this.path,n);if(a.ok)return{modelArtifactsInfo:Ul(t),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=n.modelTopology,o=n.weightsManifest;if(r==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Af(n,a=>this.loadWeights(a))}async loadWeights(t){const n=Array.isArray(this.path)?this.path[1]:this.path,[r,o]=yT(n),a=this.weightPathPrefix||r,i=[];for(const h of t)i.push(...h.weights);const l=[],c=[];for(const h of t)for(const d of h.paths)this.weightUrlConverter!=null?c.push(this.weightUrlConverter(d)):l.push(a+d+o);this.weightUrlConverter&&l.push(...await Promise.all(c));const u=await $0(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,xh(u)]}}Pf.URL_SCHEME_REGEX=/^https?:\/\//;function yT(s){const t=s.lastIndexOf("/"),n=s.lastIndexOf("?"),r=s.substring(0,t),o=n>t?s.substring(n):"";return[r+"/",o]}function Mf(s){return s.match(Pf.URL_SCHEME_REGEX)!=null}const I0=(s,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(s)?n=s.every(r=>Mf(r)):n=Mf(s),n)return zf(s,t)}return null};lt.registerSaveRouter(I0);lt.registerLoadRouter(I0);function zf(s,t){return new Pf(s,t)}function vh(s,t){return zf(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bf{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class bT{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function xT(s,t,n,r){return arguments.length===1?s.modelTopology!=null||s.weightSpecs!=null?new Bf(s):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bf({modelTopology:s})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bf({modelTopology:s,weightSpecs:t,weightData:n,trainingConfig:r}))}function wT(s){return new bT(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",browserFiles:fT,browserHTTPRequest:vh,concatenateArrayBuffers:xh,decodeWeights:bh,encodeWeights:Tf,fromMemory:xT,getLoadHandlers:Rf,getModelArtifactsForJSON:Af,getModelArtifactsInfoForJSON:Ul,getSaveHandlers:Df,http:zf,isHTTPScheme:Mf,loadWeights:C0,registerLoadRouter:BS,registerSaveRouter:zS,weightsLoaderFactory:k0,withSaveHandler:wT,copyModel:eT,listModels:JS,moveModel:tT,removeModel:QS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(s,t,n=!1,r=!1){let o=T(s,"a","matMul"),a=T(t,"b","matMul");[o,a]=it(o,a);const i={a:o,b:a},l={transposeA:n,transposeB:r};return R.runKernel(Mi,i,l)}const Te=_({matMul_:$T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(s,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:T(s,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return R.runKernel(ml,a,i)}const La=_({oneHot_:CT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(s,t){const n=T(s,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),I(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{I(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const r={x:n},o={perm:t};return R.runKernel(El,r,o)}const _e=_({transpose_:kT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(s,t,n){const r=T(s,"labels","confusionMatrix"),o=T(t,"predictions","confusionMatrix");I(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),I(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),I(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),I(r.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),I(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const a=La(ne(r,"int32"),n),i=La(ne(o,"int32"),n),l=_e(a),c=Te(l,i);return ne(c,"int32")}const NT=_({confusionMatrix_:IT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ST=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",confusionMatrix:NT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N0(s,t,n){if(Pr(s),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=vs(s,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return hr(s,t,r,n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pa;function S0(s,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,a=!1,i=!1,l=!1;if(s.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&s instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement)a=!0;else if(s.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${s.constructor.name}`);if(o){const m=2;if(o&&s.readyState<m)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(ch(ih,R.backendName)!=null){const m={pixels:s},g={numChannels:t};return R.runKernel(ih,m,g)}const[u,h]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height];let d;i?d=s.getContext("2d").getImageData(0,0,u,h).data:r||n?d=s.data:(a||o||l)&&(Pa==null&&(Pa=document.createElement("canvas").getContext("2d")),Pa.canvas.width=u,Pa.canvas.height=h,Pa.drawImage(s,0,0,u,h),d=Pa.getImageData(0,0,u,h).data);let p;if(t===4)p=new Int32Array(d);else{const m=u*h;p=new Int32Array(m*t);for(let g=0;g<m;g++)for(let y=0;y<t;++y)p[g*t+y]=d[g*4+y]}return N0(p,[h,u,t],"int32")}function TT(s){return s!=null&&s.data instanceof Uint8Array}function ET(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function AT(s){return s!=null&&s.width!==0&&s.height!==0}function DT(s){return ET()&&!(s instanceof ImageBitmap)&&AT(s)&&!TT(s)}async function RT(s,t=3){let n=null;if(q().getBool("WRAP_TO_IMAGEBITMAP")&&DT(s)){let r;try{r=await createImageBitmap(s,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===s.width&&r.height===s.height?n=r:n=s}else n=s;return S0(n,t)}async function FT(s,t){let n=T(s,"img","toPixels");if(!(s instanceof ze)){const u=n;n=ne(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,o]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),l=n.dtype==="float32"?255:1,c=new Uint8ClampedArray(o*r*4);for(let u=0;u<r*o;++u){const h=[0,0,0,255];for(let p=0;p<a;p++){const f=i[u*a+p];if(n.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(n.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);a===1?(h[0]=f*l,h[1]=f*l,h[2]=f*l):h[p]=f*l}const d=u*4;c[d+0]=Math.round(h[0]),c[d+1]=Math.round(h[1]),c[d+2]=Math.round(h[2]),c[d+3]=Math.round(h[3])}if(t!=null){t.width=o,t.height=r;const u=t.getContext("2d"),h=new ImageData(c,o,r);u.putImageData(h,0,0)}return n!==s&&n.dispose(),c}const T0=_({fromPixels_:S0});var _T=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",fromPixelsAsync:RT,toPixels:FT,fromPixels:T0});function $h(s,t){const n=s.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(j(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const o=t.shape,a=o[o.length-1];let i=1;for(let d=0;d<o.length-1;++d)i*=o[d];const l=s.shape,c=o.slice();c.pop();let u=1;for(let d=a;d<n;++d)u*=l[d],c.push(l[d]);const h=[...ye(s.shape).map(d=>d/u),1].slice(0,a);return[c,i,u,h]}var OT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",prepareAndValidate:$h});function Vf(s,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(a+` update.rank < ${o}. `);if(s.length<r+(n.rank-o))throw new Error(a+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+s.length-r)throw new Error(a+` update.rank != ${o+s.length-r}`);for(let i=0;i<o;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-o;++i)if(n.shape[i+o]!==s[i+r])throw new Error(a+` updates.shape[${i+o}] (${n.shape[i+o]}) != shape[${i+o}] (${s[i+o]})`)}function Wf(s,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}Vf(n,t,s)}function Ma(s,t,n){const r=t.shape.length,o=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let d=o;d<a;++d)i*=n[d];const l=o<1?1:o,c=j(t.shape)/l,u=[...ye(n.slice(0,o)),1],h=j(n);return{sliceRank:o,numUpdates:c,sliceSize:i,strides:u,outputSize:h}}var LT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",validateUpdateShape:Vf,validateInput:Wf,calculateShapes:Ma});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(s,t,n){const r=s.shape.length;I(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),I(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let o=0;o<r;++o)I(t[o]+n[o]<=s.shape[o],()=>`Error in slice${r}D: begin[${o}] + size[${o}] (${t[o]+n[o]}) would overflow input.shape[${o}] (${s.shape[o]})`)}function Ch(s){const t=[];let n=0;for(;s>0;)s&1&&t.push(n),s/=2,n++;return t}function E0(s,t,n){const r=[];for(let o=0;o<s.length;o++)r[o]=Math.ceil((t[o]-s[o])/n[o]);return r}function A0(s,t,n,r){const o=[...s];for(let a=o.length;a<r.length;a++)o.push(1);for(let a=0;a<n;a++)a===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function D0(s,t,n){return n<=s?n:n-(t-1)}function R0(s,t){const n=[];for(let r=0;r<s;r++)n.push(t+r);return n}function F0(s,t,n,r,o,a,i,l,c){const u=s.length;let h=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){const f=t[0],m=n+1;h=_0(i,f,m,r,s),d=O0(l,f,m,o,s),p=A0(a,f,m,s)}else for(let f=0;f<u;f++)h[f]=P0(i,r,a,s,f,c),d[f]=M0(l,o,a,s,f,c),p[f]=L0(a,f,c);return{begin:h,end:d,strides:p}}function _0(s,t,n,r,o){const a=[...o],i=R0(n,t);for(let l=0;l<a.length;l++)if(i.indexOf(l)>-1)a[l]=0;else{const c=D0(t,n,l);let u=r[c];s&1<<c&&(u=0),a[l]=u}return a}function O0(s,t,n,r,o){const a=[...o],i=R0(n,t);for(let l=0;l<a.length;l++)if(i.indexOf(l)>-1)a[l]=Number.MAX_SAFE_INTEGER;else{const c=D0(t,n,l);let u=r[c];s&1<<c&&(u=Number.MAX_SAFE_INTEGER),a[l]=u}for(let l=0;l<a.length;l++){const c=o[l];a[l]<0&&(a[l]+=c),a[l]=ar(0,a[l],o[l])}return a}function L0(s,t,n){let r=s[t];return(n&1<<t||r==null)&&(r=1),r}function P0(s,t,n,r,o,a){let i=t[o];const l=n[o]||1;(s&1<<o||a&1<<o||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const c=r[o];return i<0&&(i+=c),i=ar(0,i,c-1),i}function M0(s,t,n,r,o,a){let i=t[o];const l=n[o]||1;(s&1<<o||a&1<<o||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const c=r[o];return i<0&&(i+=c),l>0?i=ar(0,i,c):i=ar(-1,i,c-1),i}function Gf(s,t,n){let r=n.length;for(let o=0;o<n.length;o++)if(n[o]>1){r=o;break}for(let o=r+1;o<n.length;o++)if(t[o]>0||n[o]!==s[o])return!1;return!0}function Hf(s,t){let n=s.length>0?s[s.length-1]:1;for(let r=0;r<s.length-1;r++)n+=s[r]*t[r];return n}function kh(s,t,n){let r;const o=s.shape.length;typeof t=="number"?r=[t,...new Array(o-1).fill(0)]:t.length<o?r=t.concat(new Array(o-t.length).fill(0)):r=t.slice(),r.forEach(i=>{I(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(o).fill(-1):typeof n=="number"?a=[n,...new Array(o-1).fill(-1)]:n.length<o?a=n.concat(new Array(o-n.length).fill(-1)):a=n,a=a.map((i,l)=>i>=0?i:(I(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),s.shape[l]-r[l])),[r,a]}function jf(s,t,n,r,o,a,i,l,c){let u=t.slice(),h=n.slice(),d=r;r==null&&(d=new Array(u.length));const p=Ch(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&l!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&c!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=s.length-u.length,m=Ch(l),g=s.slice();m.forEach(k=>{u[k]=0,h[k]=1,g.splice(k,0,1)});const{begin:y,end:b,strides:x}=F0(g,p,f,u,h,d,o,a,i);u=y,h=b,d=x;const v=Ch(c);v.forEach(k=>{h[k]=u[k]+1,d[k]=1});const w=E0(u,h,d),C=w.filter((k,S)=>v.indexOf(S)===-1);return{nonStrided:d.every(k=>k===1),$begin:u,$end:h,$strides:d,size:w,newShape:g,outShape:C}}var z0=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",assertParamsValid:Uf,maskToAxes:Ch,computeOutShape:E0,stridesWithElidedDims:A0,getNormalizedAxes:F0,startIndicesWithElidedDims:_0,stopIndicesWithElidedDims:O0,stridesForAxis:L0,startForAxis:P0,stopForAxis:M0,isSliceContinous:Gf,computeFlatOffset:Hf,parseSliceParams:kh,sliceInfo:jf});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yr{getClassName(){return this.constructor.className}static fromConfig(t,n){return new t(n)}}class An{constructor(){this.classNameMap={}}static getMap(){return An.instance==null&&(An.instance=new An),An.instance}static register(t){An.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Y(s){I(s.className!=null,()=>"Class being registered does not have the static className property defined."),I(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),I(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),An.register(s)}var PT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",Serializable:Yr,SerializationMap:An,registerClass:Y});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT=.001,B0=.1;function zT(s,t,n){return n==null&&(n=qf()),Kf(s,t,(r,o)=>Xf(r,o,n))}function qf(){return R.backend.floatPrecision()===32?MT:B0}function Kf(s,t,n){let r=!0;if((Pt(s)||Pt(t))&&(r=!1),Pt(s)&&Pt(t)&&(r=!0),r){const i=s.constructor.name,l=t.constructor.name;if(i!==l)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${l}`)}if(Array.isArray(s)&&Array.isArray(t)){const i=vs(s),l=vs(t);if(!De(i,l))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${l}]`)}const o=Pt(s)?s:Ps(s),a=Pt(t)?t:Ps(t);if(o.length!==a.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${a.length}.
Actual:   ${o}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){const l=o[i],c=a[i];if(!n(l,c))throw new Error(`Arrays differ: actual[${i}] = ${l}, expected[${i}] = ${c}.
Actual:   ${o}.
Expected: ${a}.`)}}function BT(s,t){s().then(()=>t.fail(),()=>t())}function VT(s,t){const n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return bs(s)||bs(s[0])||bs(t)||bs(t[0])?Kf(s,n,(r,o)=>r==o):Kf(s,t,(r,o)=>Xf(r,o,0))}function WT(s,t,n){if(n==null&&(n=qf()),!Xf(s,t,n))throw new Error(`Numbers differ: actual === ${s}, expected === ${t}`)}function Xf(s,t,n){return!isFinite(s)&&!isFinite(t)?!0:!(isNaN(s)||isNaN(t)||Math.abs(s-t)>n)}function UT(s,t,n){for(let r=0;r<s.length;r++)if(s[r]<t||s[r]>n)throw new Error(`Value out of range:${s[r]} low: ${t}, high: ${n}`)}function GT(s,t){expect(new Float32Array(s)).toEqual(new Float32Array(t))}function V0(s){for(let t=0;t<s.length;t++){const n=s[t];Array.isArray(n)?V0(n):s[t]=xs(n)}return s}var HT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",TEST_EPSILON_FLOAT16:B0,expectArraysClose:zT,testEpsilon:qf,expectPromiseToFail:BT,expectArraysEqual:VT,expectNumbersClose:WT,expectValuesInRange:UT,expectArrayBuffersEqual:GT,encodeStrings:V0});/** @license See the LICENSE file. */const W0="3.10.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(){q().set("PROD",!0)}function qT(){q().set("DEBUG",!0)}function KT(){q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function XT(s){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(s+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function YT(){R.disposeVariables()}function pr(){return R}function Ih(){return R.memory()}function ZT(s){return R.profile(s)}function W(s,t){return R.tidy(s,t)}function Ce(s){Bs(s).forEach(n=>n.dispose())}function At(s){return R.keep(s)}function JT(s){return R.time(s)}function QT(s){return R.setBackend(s)}function e2(){return R.ready()}function t2(){return R.backendName}function n2(s){R.removeBackend(s)}function s2(s){return R.findBackend(s)}function r2(s){return R.findBackendFactory(s)}function Yf(s,t,n=1){return R.registerBackend(s,t,n)}function U0(){return R.backend}function o2(s,t){q().setPlatform(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a2(s,t){let n=T(s,"a","add"),r=T(t,"b","add");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(Br,o)}const Z=_({add_:a2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(s,t){let n=T(s,"a","floorDiv"),r=T(t,"b","floorDiv");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(Jo,o)}const Nh=_({floorDiv_:i2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(s,t){let n=T(s,"a","div"),r=T(t,"b","div");if([n,r]=it(n,r),n.dtype==="int32"&&r.dtype==="int32")return Nh(n,r);const o={a:n,b:r},a={};return R.runKernel(jo,o,a)}const de=_({div_:l2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(s,t){let n=T(s,"a","mul"),r=T(t,"b","mul");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(ca,o)}const L=_({mul_:c2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2(s){const t=T(s,"x","abs");if(t.dtype==="complex64"){const n={x:t};return R.runKernel(Bi,n)}else{const n={x:t};return R.runKernel(Ri,n)}}const gt=_({abs_:u2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(s){const n={x:T(s,"x","acos")};return R.runKernel(_o,n)}const Zf=_({acos_:h2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(s){const n={x:T(s,"x","acosh")};return R.runKernel(Oo,n)}const Jf=_({acosh_:d2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(s){I(Array.isArray(s),()=>"The argument passed to tf.addN() must be a list of tensors"),I(s.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${s.length}`);const t=s.map((o,a)=>T(o,`tensors${a}`,"addN")),n=t[0];t.forEach(o=>{if(o.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!De(o.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return R.runKernel(Fi,r)}const G0=_({addN_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(s,t=null,n=!1){const o={x:T(s,"x","all","bool")},a={axis:t,keepDims:n};return R.runKernel(iu,o,a)}const Sh=_({all_:f2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(s,t=null,n=!1){const o={x:T(s,"x","any","bool")},a={axis:t,keepDims:n};return R.runKernel(lu,o,a)}const Gl=_({any_:m2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(s,t=0){const r={x:T(s,"x","argMax")},o={axis:t};return R.runKernel(_i,r,o)}const Zr=_({argMax_:g2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(s,t=0){const r={x:T(s,"x","argMin")},o={axis:t};return R.runKernel(Oi,r,o)}const Qf=_({argMin_:y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(s){const n={x:T(s,"x","asin")};return R.runKernel(Lo,n)}const em=_({asin_:b2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(s){const n={x:T(s,"x","asinh")};return R.runKernel(Po,n)}const tm=_({asinh_:x2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(s){const n={x:T(s,"x","atan")};return R.runKernel(Mo,n)}const nm=_({atan_:w2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(s,t){let n=T(s,"a","atan2"),r=T(t,"b","atan2");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(Bo,o)}const sm=_({atan2_:v2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(s){const n={x:T(s,"x","atanh")};return R.runKernel(zo,n)}const rm=_({atanh_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(s,t,n,r,o="NHWC",a){const i=s[3],l=[...t,i],c=Gs(o);return Dt(s,l,n,a,r,null,null,c)}function Un(s,t,n,r,o,a,i="channelsLast"){const[l,c]=Th(t);let u;if(i==="channelsLast")u=[l,c,s[3],s[3]];else if(i==="channelsFirst")u=[l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${i}`);return Dt(s,u,n,r,o,a,!1,i)}function Us(s,t,n,r,o,a,i="NDHWC"){const[l,c,u]=am(t);let h,d;if(i==="NDHWC")d="channelsLast",h=[l,c,u,s[4],s[4]];else if(i==="NCDHW")d="channelsFirst",h=[l,c,u,s[1],s[1]];else throw new Error(`Unknown dataFormat ${i}`);return fr(s,h,n,r,o,!1,d,a)}function Dt(s,t,n,r,o,a,i=!1,l="channelsLast"){let[c,u,h,d]=[-1,-1,-1,-1];if(l==="channelsLast")[c,u,h,d]=s;else if(l==="channelsFirst")[c,d,u,h]=s;else throw new Error(`Unknown dataFormat ${l}`);const[p,f,,m]=t,[g,y]=Th(n),[b,x]=Th(r),v=za(p,b),w=za(f,x),{padInfo:C,outHeight:N,outWidth:k}=I2(o,u,h,g,y,v,w,a,l),S=i?m*d:m;let E;return l==="channelsFirst"?E=[c,S,N,k]:l==="channelsLast"&&(E=[c,N,k,S]),{batchSize:c,dataFormat:l,inHeight:u,inWidth:h,inChannels:d,outHeight:N,outWidth:k,outChannels:S,padInfo:C,strideHeight:g,strideWidth:y,filterHeight:p,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:s,outShape:E,filterShape:t}}function fr(s,t,n,r,o,a=!1,i="channelsLast",l){let[c,u,h,d,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[c,u,h,d,p]=s;else if(i==="channelsFirst")[c,p,u,h,d]=s;else throw new Error(`Unknown dataFormat ${i}`);const[f,m,g,,y]=t,[b,x,v]=am(n),[w,C,N]=am(r),k=za(f,w),S=za(m,C),E=za(g,N),{padInfo:A,outDepth:F,outHeight:D,outWidth:O}=N2(o,u,h,d,b,x,v,k,S,E,l),B=a?y*p:y;let V;return i==="channelsFirst"?V=[c,B,F,D,O]:i==="channelsLast"&&(V=[c,F,D,O,B]),{batchSize:c,dataFormat:i,inDepth:u,inHeight:h,inWidth:d,inChannels:p,outDepth:F,outHeight:D,outWidth:O,outChannels:B,padInfo:A,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:k,effectiveFilterHeight:S,effectiveFilterWidth:E,dilationDepth:w,dilationHeight:C,dilationWidth:N,inShape:s,outShape:V,filterShape:t}}function C2(s,t,n,r,o){r==null&&(r=om(s,t,n));const a=s[0],i=s[1],l=Jr((a-t+2*r)/n+1,o),c=Jr((i-t+2*r)/n+1,o);return[l,c]}function k2(s,t,n,r,o,a){o==null&&(o=om(s,t,r));const i=s[0],l=s[1],c=s[2],u=Jr((i-t+2*o)/r+1,a),h=Jr((l-t+2*o)/r+1,a),d=Jr((c-t+2*o)/r+1,a);return[u,h,d,n]}function om(s,t,n,r=1){const o=za(t,r);return Math.floor((s[0]*(n-1)-n+o)/2)}function Th(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function am(s){return typeof s=="number"?[s,s,s]:s}function za(s,t){return t<=1?s:s+(s-1)*(t-1)}function I2(s,t,n,r,o,a,i,l,c){let u,h,d;if(typeof s=="number"){u={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=C2([t,n],a,r,s,l);h=f[0],d=f[1]}else if(s==="same"){h=Math.ceil(t/r),d=Math.ceil(n/o);const p=Math.max(0,(h-1)*r+a-t),f=Math.max(0,(d-1)*o+i-n),m=Math.floor(p/2),g=p-m,y=Math.floor(f/2),b=f-y;u={top:m,bottom:g,left:y,right:b,type:"SAME"}}else if(s==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/o);else if(typeof s=="object"){const p=c==="channelsLast"?s[1][0]:s[2][0],f=c==="channelsLast"?s[1][1]:s[2][1],m=c==="channelsLast"?s[2][0]:s[3][0],g=c==="channelsLast"?s[2][1]:s[3][1];u={top:p,bottom:f,left:m,right:g,type:p===0&&f===0&&m===0&&g===0?"VALID":"EXPLICIT"},h=Jr((t-a+p+f)/r+1,l),d=Jr((n-i+m+g)/o+1,l)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:u,outHeight:h,outWidth:d}}function N2(s,t,n,r,o,a,i,l,c,u,h){let d,p,f,m;if(typeof s=="number"){d={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const y=k2([t,n,r,1],l,1,o,s,h);p=y[0],f=y[1],m=y[2]}else if(s==="same"){p=Math.ceil(t/o),f=Math.ceil(n/a),m=Math.ceil(r/i);const g=(p-1)*o+l-t,y=(f-1)*a+c-n,b=(m-1)*i+u-r,x=Math.floor(g/2),v=g-x,w=Math.floor(y/2),C=y-w,N=Math.floor(b/2),k=b-N;d={top:w,bottom:C,left:N,right:k,front:x,back:v,type:"SAME"}}else if(s==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-l+1)/o),f=Math.ceil((n-c+1)/a),m=Math.ceil((r-u+1)/i);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:d,outDepth:p,outHeight:f,outWidth:m}}function Jr(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function mr(s){const[t,n,r]=Th(s);return t===1&&n===1&&r===1}function Bt(s,t){return mr(s)||mr(t)}function Gs(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(s,t){const r={x:T(s,"x","reshape","string_or_numeric")},o={shape:t};return R.runKernel(xl,r,o)}const P=_({reshape_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(s,t,n,r,o){const a=T(s,"x","avgPool","float32"),i=1;I(Bt(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let l=a,c=!1;a.rank===3&&(c=!0,l=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),o!=null&&I($t(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o};let d=R.runKernel(Li,u,h);return d=ne(d,a.dtype),c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const jl=_({avgPool_:T2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(s,t,n,r,o,a="NDHWC"){const i=T(s,"x","avgPool3d","float32");let l=i,c=!1;i.rank===4&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),I(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),o!=null&&I($t(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a};let d=R.runKernel(Pi,u,h);return d=ne(d,l.dtype),c?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const im=_({avgPool3d_:E2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(s,t=0){I(s.length>=1,()=>"Pass at least one tensor to concat");const n=Wl(s,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Ws(n[0]);const r=n,o={axis:t};return R.runKernel(Vi,r,o)}const dt=_({concat_:A2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(s){const n={x:T(s,"x","sigmoid","float32")};return R.runKernel(wa,n)}const rs=_({sigmoid_:D2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(s,t,n){const r=T(s,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const o={x:r},a={begin:t,size:n};return R.runKernel(kl,o,a)}const Oe=_({slice_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(s){const n={x:T(s,"x","tanh","float32")};return R.runKernel(Na,n)}const Qr=_({tanh_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(s,t,n,r,o,a){const i=T(s,"forgetBias","basicLSTMCell"),l=T(t,"lstmKernel","basicLSTMCell"),c=T(n,"lstmBias","basicLSTMCell"),u=T(r,"data","basicLSTMCell"),h=T(o,"c","basicLSTMCell"),d=T(a,"h","basicLSTMCell"),p=dt([u,d],1),f=Te(p,l),m=Z(f,c),g=m.shape[0],y=m.shape[1]/4,b=[g,y],x=Oe(m,[0,0],b),v=Oe(m,[0,y],b),w=Oe(m,[0,y*2],b),C=Oe(m,[0,y*3],b),N=Z(L(rs(x),Qr(v)),L(h,rs(Z(i,w)))),k=L(Qr(N),rs(C));return[N,k]}const O2=_({basicLSTMCell_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(s,t,n){const r=T(s,"x","batchToSpaceND"),o=t.reduce((l,c)=>l*c);I(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),I(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),I(r.shape[0]%o==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const a={x:r},i={blockShape:t,crops:n};return R.runKernel(zi,a,i)}const ql=_({batchToSpaceND_:L2});function P2(s){let t;return s.rank===0||s.rank===1?t=P(s,[1,1,1,s.size]):s.rank===2?t=P(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(s,t,n,r,o,a){a==null&&(a=.001);const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;r!=null&&(h=T(r,"offset","batchNorm")),I(l.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(u==null||l.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:P2(i),scale:u,offset:h,mean:l,variance:c},f={varianceEpsilon:a},m=R.runKernel(Yi,p,f);return P(m,i.shape)}const eo=_({batchNorm_:M2});function z2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),I(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),I(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),I(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&I(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),eo(i,l,c,h,u,a)}const H0=_({batchNorm2d_:z2});function B2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),I(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),I(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),I(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&I(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),eo(i,l,c,h,u,a)}const j0=_({batchNorm3d_:B2});function V2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),I(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),I(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),I(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&I(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&I(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),eo(i,l,c,h,u,a)}const q0=_({batchNorm4d_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(s,t,n){const r=T(s,"x","bincount"),o=T(t,"weights","bincount");I(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),I(n>=0,()=>`size must be non-negative, but got ${n}.`),I(o.size===r.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:n};return R.runKernel(hu,a,i)}const lm=_({bincount_:W2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(s,t){const n=T(s,"s0","broadcastArgs","int32"),r=T(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const o={s0:n,s1:r};return R.runKernel(du,o)}const K0=_({broadcastArgs_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(s,t){let n=T(s,"broadcastTo","x");const r=n.shape;if(t.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=P(n,u)}const o=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(o[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((u,h)=>u>1?h:-1).filter(u=>u>=0).length===0)return Ws(n);const l={x:n},c={reps:a};return R.runKernel(Sa,l,c)}const Ba=_({broadcastTo_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(s){const n={x:T(s,"x","ceil","float32")};return R.runKernel(Wo,n)}const cm=_({ceil_:H2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(s,t,n){const r=T(s,"x","clipByValue");I(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const o={x:r},a={clipValueMin:t,clipValueMax:n};return R.runKernel(Uo,o,a)}const on=_({clipByValue_:j2});function q2(s){return dt(s,0)}const X0=_({concat1d_:q2});function K2(s,t){return dt(s,t)}const Y0=_({concat2d_:K2});function X2(s,t){return dt(s,t)}const Z0=_({concat3d_:X2});function Y2(s,t){return dt(s,t)}const J0=_({concat4d_:Y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(s,t,n,r,o="NHWC",a=[1,1],i){const l=T(s,"x","conv2d","float32"),c=T(t,"filter","conv2d","float32");let u=l,h=!1;l.rank===3&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),I(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),I(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),i!=null&&I($t(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d=o==="NHWC"?u.shape[3]:u.shape[1];I(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),I(Bt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const p={x:u,filter:c},f={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},m=R.runKernel(Wi,p,f);return h?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Hs=_({conv2d_:Z2});function J2(s,t,n,r,o="NWC",a=1,i){const l=T(s,"x","conv1d"),c=T(t,"filter","conv1d");let u=l,h=!1;l.rank===2&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1]])),I(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),I(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),i!=null&&I($t(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),I(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),I(Bt(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),I(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const d=P(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=P(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Hs(p,d,[1,n],r,"NHWC",[1,a],i);return h?P(y,[y.shape[2],y.shape[3]]):P(y,[y.shape[0],y.shape[2],y.shape[3]])}const Eh=_({conv1d_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(s,t,n,r,o,a="NHWC",i){I(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let l=s,c=t,u=!1;t.rank===3&&(u=!0,c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,s[0],s[1],s[2]]),I(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),I(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),I(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const h=a==="NHWC"?l[3]:l[1],d=a==="NHWC"?c.shape[3]:c.shape[1];I(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),I(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),i!=null&&I($t(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const p={dy:c,filter:n},f={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,inputShape:l},m=R.runKernel(Ui,p,f);return u?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const um=_({conv2DBackpropInput_:Q2});function eE(s,t,n,r,o,a){const i=T(s,"x","conv2dTranspose"),l=T(t,"filter","conv2dTranspose");return um(n,i,l,r,o,"NHWC",a)}const Ah=_({conv2dTranspose_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(s,t,n,r,o="NDHWC",a=[1,1,1]){const i=T(s,"x","conv3d"),l=T(t,"filter","conv3d");let c=i,u=!1;i.rank===4&&(u=!0,c=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),I(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),I(c.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${l.shape[3]}.`),I(Bt(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),I(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const h={x:c,filter:l},d={strides:n,pad:r,dataFormat:o,dilations:a},p=R.runKernel(Gi,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const hm=_({conv3d_:tE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(s,t,n,r,o){I(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,i=t,l=!1;t.rank===4&&(l=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,s[0],s[1],s[2],s[3]]);const c=a[4],u=i.shape[4];I(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),I(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),I(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),I(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),I(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},d={pad:o,strides:r,inputShape:a},p=R.runKernel(gu,h,d);return l?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Q0=_({conv3DBackpropInput_:nE});function sE(s,t,n,r,o){const a=T(s,"x","conv3dTranspose"),i=T(t,"filter","conv3dTranspose");return Q0(n,a,i,r,o)}const ew=_({conv3dTranspose_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(s){const n={x:T(s,"x","cos","float32")};return R.runKernel(Go,n)}const Kl=_({cos_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(s){const n={x:T(s,"x","cosh","float32")};return R.runKernel(Ho,n)}const Dh=_({cosh_:oE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(s,t=0,n=!1,r=!1){const a={x:T(s,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return R.runKernel(Hi,a,i)}const Rh=_({cumsum_:aE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(s,t,n,r=!1){const o=T(s,"x","denseBincount"),a=T(t,"weights","denseBincount");I(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),I(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),I(n>=0,()=>`size must be non-negative, but got ${n}.`),I(a.size===o.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${a.shape}.`);const i={x:o,weights:a},l={size:n,binaryOutput:r};return R.runKernel(bu,i,l)}const tw=_({denseBincount_:iE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(s,t,n="NHWC"){const r=T(s,"x","depthToSpace","float32"),o=n==="NHWC"?r.shape[1]:r.shape[2],a=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];I(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),I(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${r.shape}`),I(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),I(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const l={x:r},c={blockSize:t,dataFormat:n};return R.runKernel(xu,l,c)}const dm=_({depthToSpace_:lE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(s,t,n,r,o="NHWC",a=[1,1],i){const l=T(s,"x","depthwiseConv2d","float32"),c=T(t,"filter","depthwiseConv2d","float32");let u=l,h=!1;l.rank===3&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),I(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),I(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),I(u.shape[3]===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),i!=null&&I($t(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d={x:u,filter:c},p={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},f=R.runKernel(ji,d,p);return h?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Va=_({depthwiseConv2d_:cE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(s){const n={x:T(s,"x","diag")};return R.runKernel($u,n)}const hE=_({diag_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(s,t,n,r,o=[1,1],a="NHWC"){const i=T(s,"x","dilation2d"),l=T(t,"filter","dilation2d");I(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),I(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),I(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let c=i,u=!1;i.rank===3&&(c=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const h={x:c,filter:l},d={strides:n,pad:r,dilations:o},p=R.runKernel(qi,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const pm=_({dilation2d_:dE});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wa(s,t){const n=s.length,r=[];for(let o=0;o<n;o++){const a=n-1-o,i=s[a]||1;(t[t.length-1-o]||1)>1&&i===1&&r.unshift(a)}return r}function It(s,t){const n=[];for(let r=0;r<t.length;r++){const o=s[s.length-r-1],a=t.length-r-1,i=t[a];(o==null||o===1&&i>1)&&n.unshift(a)}return n}function Ee(s,t){const n=[],r=Math.max(s.length,t.length);for(let o=0;o<r;o++){let a=s[s.length-o-1];a==null&&(a=1);let i=t[t.length-o-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){const l=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(l)}else n.unshift(a)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(s,t){let n=T(s,"a","equal","string_or_numeric"),r=T(t,"b","equal","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Ki,o)}const yn=_({equal_:pE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(s,t,n){const r=T(t,"a","where"),o=T(n,"b","where"),a=T(s,"condition","where","bool"),i=Ee(Ee(a.shape,r.shape),o.shape),l=Ba(a,i),c=Ba(r,i),u=Ba(o,i),h={condition:l,t:c,e:u};return R.runKernel(Cl,h)}const jt=_({where_:fE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(s){const n={x:T(s,"x","zerosLike")};return R.runKernel(Rl,n)}const Le=_({zerosLike_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(s,t){let n=T(s,"a","div"),r=T(t,"b","div");[n,r]=it(n,r);const o=de(n,r),a=Le(o),i=yn(r,a);return jt(i,a,o)}const fm=_({divNoNan_:gE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(s,t){const n=T(s,"t1","dot"),r=T(t,"t2","dot");I((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const o=n.rank===1?n.size:n.shape[1],a=r.rank===1?r.size:r.shape[0];if(I(o===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${a}.`),n.rank===1&&r.rank===1){const i=P(n,[1,-1]),l=P(r,[-1,1]),c=Te(i,l);return P(c,[])}else if(n.rank===1&&r.rank===2){const i=P(n,[1,-1]),l=P(r,[r.shape[0],r.shape[1]]),c=Te(i,l);return P(c,[c.size])}else if(n.rank===2&&r.rank===1){const i=P(r,[-1,1]),l=Te(n,i);return P(l,[l.size])}else{const i=P(r,[r.shape[0],r.shape[1]]);return Te(n,i)}}const nw=_({dot_:yE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(s,...t){const n=t.map((o,a)=>T(o,`tensors${a}`,"einsum")),r={equation:s};return R.runKernel(Iu,n,r)}const sw=_({einsum_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(s){const n={x:T(s,"x","elu","float32")};return R.runKernel(qo,n)}const Ua=_({elu_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(s){let t=T(s,"x","erf");I(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ne(t,"float32"));const n={x:t};return R.runKernel(Ko,n)}const mm=_({erf_:wE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(s){const n={x:T(s,"x","exp")};return R.runKernel(Xo,n)}const bn=_({exp_:vE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(s,t=0){const n=T(s,"x","expandDims","string_or_numeric");I(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},o={dim:t};return R.runKernel(Xi,r,o)}const an=_({expandDims_:$E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(s){const n={x:T(s,"x","expm1")};return R.runKernel(Yo,n)}const gm=_({expm1_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(s,t){const n=T(s,"x","tile","string_or_numeric");I(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},o={reps:t};return R.runKernel(Sa,r,o)}const Dn=_({tile_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(s,t,n,r="float32"){t==null&&(t=s);const o=Ae([s,t],r),a=s<=t?s:t;for(let l=0;l<a;++l)o.set(1,l,l);const i=P(o.toTensor(),[s,t]);if(n==null)return i;if(n.length===1)return Dn(an(i,0),[n[0],1,1]);if(n.length===2)return Dn(an(an(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Dn(an(an(an(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const ym=_({eye_:IE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ga(s,t,n){const r={shape:s,value:t,dtype:n};return R.runKernel(Tu,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(s){const n={x:T(s,"x","floor","float32")};return R.runKernel(Zo,n)}const Ha=_({floor_:NE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(s,t,n=0,r=0){const o=T(s,"x","gather"),a=T(t,"indices","gather","int32"),i={x:o,indices:a},l={axis:n,batchDims:r};return R.runKernel(Zi,i,l)}const to=_({gather_:SE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(s,t){let n=T(s,"a","greater","string_or_numeric"),r=T(t,"b","greater","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Ji,o)}const ln=_({greater_:TE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(s,t){let n=T(s,"a","greaterEqual","string_or_numeric"),r=T(t,"b","greaterEqual","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Qo,o)}const gr=_({greaterEqual_:EE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(s){const n={input:T(s,"input","imag")};return R.runKernel(Ru,n)}const Fh=_({imag_:AE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(s){const n={x:T(s,"x","isFinite")};return R.runKernel(ta,n)}const rw=_({isFinite_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(s){const n={x:T(s,"x","isInf")};return R.runKernel(na,n)}const ow=_({isInf_:RE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(s){const n={x:T(s,"x","isNaN")};return R.runKernel(sa,n)}const bm=_({isNaN_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(s,t=.2){const r={x:T(s,"x","leakyRelu")},o={alpha:t};return R.runKernel(Qi,r,o)}const Xl=_({leakyRelu_:_E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(s,t){let n=T(s,"a","less","string_or_numeric"),r=T(t,"b","less","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(el,o)}const _h=_({less_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(s,t){let n=T(s,"a","lessEqual","string_or_numeric"),r=T(t,"b","lessEqual","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(tl,o)}const yr=_({lessEqual_:LE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(s,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:s,stop:t,num:n};return R.runKernel(Fu,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(s,t=5,n=1,r=1,o=.5){const a=T(s,"x","localResponseNormalization");I(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),I($t(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,l=!1;a.rank===3&&(l=!0,i=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const c={x:i},u={depthRadius:t,bias:n,alpha:r,beta:o},h=R.runKernel(ol,c,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const xm=_({localResponseNormalization_:PE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(s){const n={x:T(s,"x","log","float32")};return R.runKernel(ra,n)}const xn=_({log_:ME});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(s){const n={x:T(s,"x","log1p")};return R.runKernel(oa,n)}const Yl=_({log1p_:zE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(s){return I(ir(s),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=T(t,"x","tf.grad","string_or_numeric"),o=n!=null?T(n,"dy","tf.grad"):null;return R.tidy(()=>{const{value:a,grads:i}=R.gradients(()=>s(r),[r],o);return o!=null&&Lt(a.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Oh(i),i[0]})}}function VE(s){return I(ir(s),()=>"The f passed in grads(f) must be a function"),(t,n)=>{I(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Wl(t,"args","tf.grads","string_or_numeric"),o=n!=null?T(n,"dy","tf.grads"):null;return R.tidy(()=>{const{value:a,grads:i}=R.gradients(()=>s(...r),r,o);return o!=null&&Lt(a.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Oh(i),i})}}function WE(s){return I(ir(s),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{I(t instanceof ze,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),I(n==null||n instanceof ze,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:o}=R.gradients(()=>s(t),[t],n);return Oh(r),{grad:r[0],value:o}}}function UE(s){return I(ir(s),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{I(Array.isArray(t)&&t.every(o=>o instanceof ze),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),I(n==null||n instanceof ze,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=R.gradients(()=>s(...t),t,n);return n!=null&&Lt(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Oh(r.grads),r}}function iw(s,t){I(ir(s),()=>"The f passed in variableGrads(f) must be a function"),I(t==null||Array.isArray(t)&&t.every(u=>u instanceof Vl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=t!=null;if(!n){t=[];for(const u in R.registeredVariables)t.push(R.registeredVariables[u])}const r=n?t.filter(u=>!u.trainable):null,o=t.length;t=t.filter(u=>u.trainable),I(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const a=!0,{value:i,grads:l}=R.gradients(s,t,null,a);I(l.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),I(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const c={};return t.forEach((u,h)=>{l[h]!=null&&(c[u.name]=l[h])}),r!=null&&r.forEach(u=>c[u.name]=null),{value:i,grads:c}}function $s(s){return R.customGrad(s)}function Oh(s){if(s.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(s){const n={x:T(s,"x","neg")};return R.runKernel(dl,n)}const nt=_({neg_:GE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(s){const n={x:T(s,"x","softplus")};return R.runKernel(va,n)}const no=_({softplus_:HE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(s){const t=T(s,"x","logSigmoid");return $s(r=>({value:nt(no(nt(r))),gradFunc:i=>L(i,rs(nt(r)))}))(t)}const lw=_({logSigmoid_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(s,t=null,n=!1){const o={x:T(s,"x","max")},a={reductionIndices:t,keepDims:n};return R.runKernel(al,o,a)}const Gn=_({max_:qE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(s,t){let n=T(s,"a","sub"),r=T(t,"b","sub");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(ka,o)}const ce=_({sub_:KE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(s,t=null,n=!1){let r=T(s,"x","sum");r.dtype==="bool"&&(r=ne(r,"int32"));const o={x:r},a={axis:t,keepDims:n};return R.runKernel(Il,o,a)}const ue=_({sum_:XE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(s,t=-1){const n=T(s,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return $s((o,a)=>{const i=!0,l=Gn(o,t,!0),c=ce(o,l),u=ce(ne(c,"float32"),xn(ue(bn(c),t,i)));return a([u]),{value:u,gradFunc:(d,p)=>{const[f]=p,m=!0,g=bn(f);return ce(d,L(ue(d,t,m),g))}}})(n)}const Lh=_({logSoftmax_:YE});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wm(s,t){for(let n=0;n<s.length;++n)if(s[s.length-n-1]!==t-1-n)return!1;return!0}function cw(s,t,n){const r=s.length+t.length,o=[];let a=0,i=0;for(let l=0;l<r;l++)n.indexOf(l)===-1?o.push(s[a++]):o.push(t[i++]);return o}function Rt(s,t){const n=[],r=s.length;for(let a=0;a<r;a++)t.indexOf(a)===-1&&n.push(s[a]);const o=t.map(a=>s[a]);return[n,o]}function pt(s,t){const n=t.map(r=>1);return cw(s,n,t)}function Vt(s,t,n){I(wm(t,n),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function ft(s,t){if(wm(s,t))return null;const n=[];for(let r=0;r<t;++r)s.indexOf(r)===-1&&n.push(r);return s.forEach(r=>n.push(r)),n}function ja(s){return s.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function yt(s,t){const n=[];for(let r=t-s;r<t;++r)n.push(r);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(s,t=null,n=!1){const r=T(s,"x","logSumExp"),o=Se(t,r.shape),a=Gn(r,o,!0),i=ce(r,a),l=bn(i),c=ue(l,o),u=xn(c),h=Z(P(a,u.shape),u);if(n){const d=pt(h.shape,o);return P(h,d)}return h}const vm=_({logSumExp_:ZE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(s,t){const n=T(s,"a","logicalAnd","bool"),r=T(t,"b","logicalAnd","bool");Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(nl,o)}const Hn=_({logicalAnd_:JE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(s){const n={x:T(s,"x","logicalNot","bool")};return R.runKernel(sl,n)}const Zl=_({logicalNot_:QE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(s,t){const n=T(s,"a","logicalOr","bool"),r=T(t,"b","logicalOr","bool");Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(rl,o)}const Ph=_({logicalOr_:eA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(s,t){const n=T(s,"a","logicalXor","bool"),r=T(t,"b","logicalXor","bool");return Ee(n.shape,r.shape),Hn(Ph(s,t),Zl(Hn(s,t)))}const uw=_({logicalXor_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(s,t,n,r,o){const a=T(s,"x","maxPool"),i=1;let l=a,c=!1;a.rank===3&&(c=!0,l=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),I(Bt(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),o!=null&&I($t(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o},d=R.runKernel(il,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Jl=_({maxPool_:nA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(s,t=[1,1,1],n,r,o,a="NDHWC"){const i=T(s,"x","maxPool3d");let l=i,c=!1;i.rank===4&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),I(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),o!=null&&I($t(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a},d=R.runKernel(ll,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const $m=_({maxPool3d_:sA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(s,t,n,r,o=!1){const i={x:T(s,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:o},c=R.runKernel(Pu,i,l);return{result:c[0],indexes:c[1]}}const hw=_({maxPoolWithArgmax_:rA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(s,t){let n=T(s,"a","maximum"),r=T(t,"b","maximum");[n,r]=it(n,r),n.dtype==="bool"&&(n=ne(n,"int32"),r=ne(r,"int32")),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(aa,o)}const Cs=_({maximum_:oA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(s,t=null,n=!1){const o={x:T(s,"x","mean")},a={axis:t,keepDims:n};return R.runKernel(cl,o,a)}const ct=_({mean_:aA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(s,t="float32"){if(t==="complex64"){const r=bt(s,"float32"),o=bt(s,"float32");return ur(r,o)}const n=Mt(j(s),t);return R.makeTensor(n,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(s,t="float32"){if(t==="complex64"){const r=wn(s,"float32"),o=bt(s,"float32");return ur(r,o)}const n=rf(j(s),t);return R.makeTensor(n,s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(s,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(s===void 0)return[];let r=T(s,"x","meshgrid",s instanceof ze?s.dtype:"float32");if(t===void 0)return[r];let o=T(t,"y","meshgrid",t instanceof ze?t.dtype:"float32");const a=j(r.shape),i=j(o.shape);return n==="xy"?(r=P(r,[1,-1]),o=P(o,[-1,1]),[Te(wn([i,1],r.dtype),r),Te(o,wn([1,a],o.dtype))]):(r=P(r,[-1,1]),o=P(o,[1,-1]),[Te(r,wn([1,i],r.dtype)),Te(wn([a,1],o.dtype),o)])}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(s,t=null,n=!1){const o={x:T(s,"x","min")},a={axis:t,keepDims:n};return R.runKernel(ul,o,a)}const Ql=_({min_:lA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(s,t){let n=T(s,"a","minimum"),r=T(t,"b","minimum");[n,r]=it(n,r),n.dtype==="bool"&&(n=ne(n,"int32"),r=ne(r,"int32")),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(ia,o)}const qa=_({minimum_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(s,t,n){I(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=T(s,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const o=n==="reflect"?1:0;for(let l=0;l<r.rank;l++)I(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),I(t[l][0]>=0&&t[l][0]<=r.shape[l]-o&&t[l][1]>=0&&t[l][1]<=r.shape[l]-o,()=>`Padding in dimension ${l} cannot be greater than or equal to ${r.shape[l]-o} or less than 0 for input of shape ${r.shape}`);const a={paddings:t,mode:n},i={x:r};return R.runKernel(hl,i,a)}const Cm=_({mirrorPad_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(s,t){let n=T(s,"a","mod"),r=T(t,"b","mod");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(la,o)}const km=_({mod_:hA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(s){const t=T(s,"x","square"),n={};return R.runKernel("Square",{x:t},n)}const je=_({square_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(s,t=null,n=!1){s=T(s,"x","moments");const r=Se(t,s.shape),o=ct(s,r,n);let a=o.shape;n||(a=pt(o.shape,r));const i=je(ce(ne(s,"float32"),P(o,a))),l=ct(i,r,n);return{mean:o,variance:l}}const Mh=_({moments_:pA});function fA(s,t,n,r){const o=T(t,"data","multiRNNCell"),a=Wl(n,"c","multiRNNCell"),i=Wl(r,"h","multiRNNCell");let l=o;const c=[];for(let d=0;d<s.length;d++){const p=s[d](l,a[d],i[d]);c.push(p[0]),c.push(p[1]),l=p[1]}const u=[],h=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),h.push(c[d+1]);return[u,h]}const mA=_({multiRNNCell_:fA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(s,t,n,r=!1){const o=T(s,"logits","multinomial"),a=o.size,i=o.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const c={logits:i===1?P(o,[1,-1]):o},u={numSamples:t,seed:n,normalized:r},h=R.runKernel(Mu,c,u);return i===1?P(h,[h.size]):h}const dw=_({multinomial_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(s,t){let n=T(s,"a","notEqual","string_or_numeric"),r=T(t,"b","notEqual","string_or_numeric");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(pl,o)}const so=_({notEqual_:yA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(s){const n={x:T(s,"x","onesLike")};return R.runKernel(fl,n)}const vn=_({onesLike_:bA});function xA(s,t){const n=T(s,"v1","outerProduct"),r=T(t,"v2","outerProduct");I(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const o=P(n,[-1,1]),a=P(r,[1,-1]);return Te(o,a)}const wA=_({outerProduct_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(s,t,n=0){const r=T(s,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},a={x:r};return R.runKernel(yl,a,o)}const js=_({pad_:vA});function $A(s,t,n=0){return I(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),js(s,[t],n)}const CA=_({pad1d_:$A});function kA(s,t,n=0){return I(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),js(s,t,n)}const IA=_({pad2d_:kA});function NA(s,t,n=0){return I(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),js(s,t,n)}const SA=_({pad3d_:NA});function TA(s,t,n=0){return I(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),js(s,t,n)}const EA=_({pad4d_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(s,t,n){const r=T(s,"x","spaceToBatchND");I(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),I(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),I(r.shape.reduce((i,l,c)=>c>0&&c<=t.length?i&&(l+n[c-1][0]+n[c-1][1])%t[c-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:r},a={blockShape:t,paddings:n};return R.runKernel(Nl,o,a)}const ec=_({spaceToBatchND_:AA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(s,t,n,r,o,a){o==null&&(o=[1,1]),a==null&&(a=1),r===0&&(r="valid");const i=T(s,"x","maxPool");let l=i,c=!1;i.rank===3&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]])),I(Bt(a,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${o}'`);const u=Un(l.shape,t,a,o,r),h=[u.dilationHeight,u.dilationWidth];let d;r==="same"?d=FA([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=RA([u.inHeight,u.inWidth],h,d),g=p?r:"valid",y=p?l:ec(l,h,f),x=(n==="avg"?()=>jl(y,t,a,g):()=>Jl(y,t,a,g))(),v=p?x:ql(x,h,m);return c?P(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function RA(s,t,n){const r=n.map(h=>h[0]),o=n.map(h=>h[1]),a=s.concat(r,o),i=t.map((h,d)=>(h-a[d]%h)%h),l=o.map((h,d)=>h+i[d]),c=t.map((h,d)=>[r[d],l[d]]),u=t.map((h,d)=>[0,i[d]]);return[c,u]}function FA(s,t){const r=s.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),o=r.map(i=>Math.floor(i/2)),a=r.map((i,l)=>i-o[l]);return r.map((i,l)=>[o[l],a[l]])}const pw=_({pool_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(s,t){let n=T(s,"base","pow"),r=T(t,"exp","pow");[n,r]=it(n,r);const o={a:n,b:r};return R.runKernel(ua,o)}const qs=_({pow_:_A});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(s,t){const n=T(s,"x","prelu"),r=T(t,"alpha","prelu"),o={x:n,alpha:r};return R.runKernel(bl,o)}const tc=_({prelu_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(s,t=null,n=!1){let r=T(s,"x","prod");r.dtype==="bool"&&(r=ne(r,"int32"));const o={x:r},a={axis:t,keepDims:n};return R.runKernel(Wu,o,a)}const zh=_({prod_:LA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(s,t,n){const r=j(s);let o=null;if(n==null||n==="float32")o=new Float32Array(r);else if(n==="int32")o=new Int32Array(r);else if(n==="bool")o=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<r;a++)o[a]=t();return R.makeTensor(o,s,n)}const MA=_({rand_:PA});var fw={exports:{}};(function(s){(function(t,n,r){function o(c){var u=this,h=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(c),u.s0<0&&(u.s0+=1),u.s1-=h(c),u.s1<0&&(u.s1+=1),u.s2-=h(c),u.s2<0&&(u.s2+=1),h=null}function a(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var h=new o(c),d=u&&u.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&a(d,h),p.state=function(){return a(h,{})}),p}function l(){var c=4022871197,u=function(h){h=h.toString();for(var d=0;d<h.length;d++){c+=h.charCodeAt(d);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(Ke,s,!1)})(fw);var mw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(Ke,s,!1)})(mw);var gw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,h==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(Ke,s,!1)})(gw);var yw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.x,d=c.i,p,f;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,c.i=d+1&7,f};function u(h,d){var p,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,p=0;p<d.length;++p)f[p&7]=f[p&7]<<15^d.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8&&(f[7]=-1),h.x=f,h.i=0,p=256;p>0;--p)h.next()}u(c,l)}function a(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.x&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(Ke,s,!1)})(yw);var bw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.w,d=c.X,p=c.i,f,m;return c.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,c.i=p,m+(h^h>>>16)|0};function u(h,d){var p,f,m,g,y,b=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=b[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],p=b[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,b[m]=f^p;h.w=y,h.X=b,h.i=m}u(c,l)}function a(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.X&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(Ke,s,!1)})(bw);var xw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.b,p=c.c,f=c.d,m=c.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,c.b=d=d<<20^d>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)c.b^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(Ke,s,!1)})(xw);var ww={exports:{}};(function(s){(function(t,n){var r=this,o=256,a=6,i=52,l="random",c=n.pow(o,a),u=n.pow(2,i),h=u*2,d=o-1,p;function f(w,C,N){var k=[];C=C==!0?{entropy:!0}:C||{};var S=b(y(C.entropy?[w,v(t)]:w==null?x():w,3),k),E=new m(k),A=function(){for(var F=E.g(a),D=c,O=0;F<u;)F=(F+O)*o,D*=o,O=E.g(1);for(;F>=h;)F/=2,D/=2,O>>>=1;return(F+O)/D};return A.int32=function(){return E.g(4)|0},A.quick=function(){return E.g(4)/4294967296},A.double=A,b(v(E.S),t),(C.pass||N||function(F,D,O,B){return B&&(B.S&&g(B,E),F.state=function(){return g(E,{})}),O?(n[l]=F,D):F})(A,S,"global"in C?C.global:this==n,C.state)}n["seed"+l]=f;function m(w){var C,N=w.length,k=this,S=0,E=k.i=k.j=0,A=k.S=[];for(N||(w=[N++]);S<o;)A[S]=S++;for(S=0;S<o;S++)A[S]=A[E=d&E+w[S%N]+(C=A[S])],A[E]=C;(k.g=function(F){for(var D,O=0,B=k.i,V=k.j,z=k.S;F--;)D=z[B=d&B+1],O=O*o+z[d&(z[B]=z[V=d&V+D])+(z[V]=D)];return k.i=B,k.j=V,O})(o)}function g(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function y(w,C){var N=[],k=typeof w,S;if(C&&k=="object")for(S in w)try{N.push(y(w[S],C-1))}catch{}return N.length?N:k=="string"?w:w+"\0"}function b(w,C){for(var N=w+"",k,S=0;S<N.length;)C[d&S]=d&(k^=C[d&S]*19)+N.charCodeAt(S++);return v(C)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(o):(w=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(w)),v(w)}catch{var C=r.navigator,N=C&&C.plugins;return[+new Date,r,N,r.screen,v(t)]}}function v(w){return String.fromCharCode.apply(0,w)}if(b(n.random(),t),s.exports){s.exports=f;try{p=require("crypto")}catch{}}})([],Math)})(ww);var zA=fw.exports,BA=mw.exports,VA=gw.exports,WA=yw.exports,UA=bw.exports,GA=xw.exports,ro=ww.exports;ro.alea=zA;ro.xor128=BA;ro.xorwow=VA;ro.xorshift7=WA;ro.xor4096=UA;ro.tychei=GA;var Ka=ro;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im{constructor(t,n,r,o,a){this.mean=t,this.stdDev=n,this.dtype=r,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=a||Math.random();this.random=Ka.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let t,n,r=!1;for(;!r;){let o,a,i;do o=2*this.random()-1,a=2*this.random()-1,i=o*o+a*a;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*l,n=this.mean+this.stdDev*a*l,(!this.truncated||this.isValidTruncated(t))&&(r=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class HA{constructor(t,n,r,o){this.alpha=t,this.beta=1/n,this.dtype=r;const a=o||Math.random();this.randu=Ka.alea(a.toString()),this.randn=new Im(0,1,r,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,n,r,o,a,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,t=o*o,n=1-.331*t*t,r=.5*t+this.d*(1-i+Math.log(i)),a=this.randu(),a<n||Math.log(a)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class jA{constructor(t=0,n=1,r,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=n-t,this.dtype=r,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${n} <= 1 and dtype is not float`);this.random=Ka.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(s,t,n=1,r="float32",o){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const a=new HA(t,n,r,o),i=Ae(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const KA=_({randomGamma_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(s,t=0,n=1,r,o){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const a=new Im(t,n,r,!1,o),i=Ae(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const vw=_({randomNormal_:XA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(s,t=0,n=1,r="float32",o){const a=Ae(s,r),i=new jA(t,n,null,o);for(let l=0;l<a.values.length;l++)a.values[l]=i.nextValue();return a.toTensor()}const Xa=_({randomUniform_:YA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(s,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");const o={start:s,stop:t,step:n,dtype:r};return R.runKernel(Uu,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(s){const n={input:T(s,"input","real")};return R.runKernel(Gu,n)}const nc=_({real_:ZA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(s){const n={x:T(s,"x","reciprocal")};return R.runKernel(ha,n)}const Nm=_({reciprocal_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(s){const n={x:T(s,"x","relu")};return R.runKernel(da,n)}const os=_({relu_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(s){const n={x:T(s,"x","relu6")};return R.runKernel(pa,n)}const Bh=_({relu6_:eD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(s,t){const r={x:T(s,"x","reverse")},o={dims:t};return R.runKernel($l,r,o)}const $n=_({reverse_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(s){const t=T(s,"x","reverse");return I(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),$n(t,0)}const sD=_({reverse1d_:nD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(s,t){const n=T(s,"x","reverse");return I(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),$n(n,t)}const oD=_({reverse2d_:rD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(s,t){const n=T(s,"x","reverse");return I(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),$n(n,t)}const iD=_({reverse3d_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(s,t){const n=T(s,"x","reverse");return I(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),$n(n,t)}const cD=_({reverse4d_:lD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(s){const n={x:T(s,"x","round")};return R.runKernel(fa,n)}const Vh=_({round_:uD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(s){const n={x:T(s,"x","rsqrt","float32")};return R.runKernel(ma,n)}const Wh=_({rsqrt_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(s,t){if((Pt(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Pt(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hr(s,[],[],t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(s){const n={x:T(s,"x","selu")};return R.runKernel(ga,n)}const Uh=_({selu_:dD});function pD(s,t,n,r,o,a=[1,1],i="NHWC"){const l=T(s,"x","separableConv2d"),c=T(t,"depthwiseFilter","separableConv2d"),u=T(n,"pointwiseFilter","separableConv2d");let h=l,d=!1;if(l.rank===3&&(d=!0,h=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),I(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),I(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),I(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),I(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const p=c.shape[2],f=c.shape[3];I(u.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`);const m=Va(h,c,r,o,i,a),y=Hs(m,u,1,"valid",i);return d?P(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const Sm=_({separableConv2d_:pD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fD(s,t){const n=T(s,"x","setdiff1d"),r=T(t,"y","setdiff1d");I(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),I(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),I(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),a=await r.data(),i=new Set(a);let l=0;for(let h=0;h<o.length;h++)i.has(o[h])||l++;const c=new kt([l],n.dtype),u=new kt([l],"int32");for(let h=0,d=0;h<o.length;h++)i.has(o[h])||(c.values[d]=o[h],u.values[d]=h,d++);return[c.toTensor(),u.toTensor()]}const $w=fD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(s){const n={x:T(s,"x","sign")};return R.runKernel(xa,n)}const Tm=_({sign_:mD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(s){const n={x:T(s,"x","sin","float32")};return R.runKernel(ya,n)}const Gh=_({sin_:gD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(s){const n={x:T(s,"x","sinh")};return R.runKernel(ba,n)}const Hh=_({sinh_:yD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(s,t,n){const r=T(s,"x","slice1d");return I(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Oe(r,[t],[n])}const jh=_({slice1d_:bD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(s,t,n){const r=T(s,"x","slice2d");return I(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Oe(r,t,n)}const Em=_({slice2d_:xD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(s,t,n){const r=T(s,"x","slice3d");return I(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Oe(r,t,n)}const qh=_({slice3d_:wD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(s,t,n){const r=T(s,"x","slice4d");return I(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Oe(r,t,n)}const sc=_({slice4d_:vD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(s,t=-1){const n=T(s,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},o={dim:t};return R.runKernel(Tl,r,o)}const rc=_({softmax_:$D});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(s){I(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return R.runKernel(Su,t)}const oc=_({fft_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(s){I(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return R.runKernel(Du,t)}const Za=_({ifft_:kD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(s){const t=s.shape[s.shape.length-1],n=s.size/t;let r;if(t<=2){const o=P(s,[n,t]);r=Za(o)}else{const o=[n,2*(t-1)],a=P(nc(s),[n,t]),i=P(Fh(s),[n,t]),l=$n(Oe(a,[0,1],[n,t-2]),1),c=L($n(Oe(i,[0,1],[n,t-2]),1),me(-1)),u=dt([a,l],1),h=dt([i,c],1),d=P(ur(u,h),[o[0],o[1]]);r=Za(d)}if(r=nc(r),s.rank===3&&s.shape[0]!==0){const o=r,a=s.shape[0];r=P(r,[a,r.shape[0]/a,r.shape[1]]),o.dispose()}return r}const Kh=_({irfft_:ID});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(s,t,n=0){const o={x:T(s,"x","split")},a={numOrSizeSplits:t,axis:n};return R.runKernel(Sl,o,a)}const cn=_({split_:ND});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(s,t){I(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let n=s.shape[s.shape.length-1];const r=s.size/n;let o;if(t!=null&&t<n){const m=s.shape.map(y=>0),g=s.shape.map(y=>y);g[s.shape.length-1]=t,o=Oe(s,m,g),n=t}else if(t!=null&&t>n){const m=s.shape.map(g=>g);m[s.shape.length-1]=t-n,o=dt([s,bt(m)],s.shape.length-1),n=t}else o=s;const a=Le(o),i=P(ur(o,a),[r,n]),l=oc(i),c=Math.floor(n/2)+1,u=nc(l),h=Fh(l),d=cn(u,[c,n-c],u.shape.length-1),p=cn(h,[c,n-c],h.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=c,P(ur(d[0],p[0]),f)}const ac=_({rfft_:SD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(s){const n={x:T(s,"x","sqrt","float32")};return R.runKernel($a,n)}const Wt=_({sqrt_:TD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(s,t){let n=T(s,"a","squaredDifference"),r=T(t,"b","squaredDifference");[n,r]=it(n,r),Ee(n.shape,r.shape);const o={a:n,b:r},a={};return R.runKernel(Ca,o,a)}const Xh=_({squaredDifference_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(s,t){const n=T(s,"x","squeeze");return P(n,Ms(n.shape,t).newShape)}const ks=_({squeeze_:AD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(s,t=0){const n=Wl(s,"tensors","stack","string_or_numeric");I(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&I(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,o={axis:t};return R.runKernel(gl,r,o)}const Cn=_({stack_:DD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(s,t=0){const r={x:T(s,"x","step")},o={alpha:t};return R.runKernel(Ta,r,o)}const Ja=_({step_:RD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(s,t,n,r,o=0,a=0,i=0,l=0,c=0){const h={x:T(s,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:o,endMask:a,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:c};return R.runKernel(eh,h,d)}const Am=_({stridedSlice_:FD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(s){const n={x:T(s,"x","tan","float32")};return R.runKernel(Ia,n)}const Dm=_({tan_:_D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(s,t){Pr(s);const n=vs(s,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hr(s,null,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(s,t,n){if(Pr(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=vs(s,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hr(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(s,t,n){if(Pr(s),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=vs(s,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return hr(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(s,t,n){if(Pr(s),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=vs(s,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return hr(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(s,t,n){if(Pr(s),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=vs(s,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,hr(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(s,t=1,n=!0){const r=T(s,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[l,c]=R.runKernel(rh,a,i);return{values:l,indices:c}}const Rm=_({topk_:MD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(s,t=0,n=1,r,o){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const a=new Im(t,n,r,!0,o),i=Ae(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const Yh=_({truncatedNormal_:zD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(s,t=0){const n=T(s,"x","unique","string_or_numeric");I(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},o={axis:t},[a,i]=R.runKernel(ah,r,o);return{values:a,indices:i}}const Zh=_({unique_:BD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(s,t,n){const r=T(s,"x","unsortedSegmentSum"),o=T(t,"segmentIds","unsortedSegmentSum","int32");I($t(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:o},i={numSegments:n};return R.runKernel(Dl,a,i)}const Fm=_({unsortedSegmentSum_:VD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(s,t=0){const n=T(s,"x","unstack","string_or_numeric");I(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},o={axis:t};return R.runKernel(Al,r,o)}const jn=_({unstack_:WD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(s,t=!0,n,r){return R.makeVariable(s,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jh(s,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=Ae(s,"int32"),o=Ae([n.length,s.length],"int32");for(let a=0;a<n.length;a++){const i=r.indexToLoc(n[a]),l=a*s.length;o.values.set(i,l)}return o.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UD(s){const t=T(s,"condition","whereAsync","bool"),n=await t.data(),r=Jh(t.shape,n);return s!==t&&t.dispose(),r}const _m=UD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function GD(s,t,n){const r=T(s,"tensor","boolMask"),o=T(t,"mask","boolMask","bool"),a=n==null?0:n,i=o.rank,l=r.shape;I(i>0,()=>"mask cannot be scalar"),Lt(l.slice(a,a+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let g=a;g<a+i;g++)c*=l[g];const u=l.slice(0,a).concat([c],l.slice(a+i)),h=P(r,u),d=P(o,[-1]),p=await _m(d),f=ks(p,[1]),m=to(h,f,a);return s!==r&&r.dispose(),t!==o&&o.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),m}const HD=GD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(s,t="euclidean",n=null,r=!1){s=T(s,"x","norm");const o=kw(s,t,n);let a=o.shape;if(r){const i=Se(n,s.shape);a=pt(o.shape,i)}return P(o,a)}function kw(s,t,n=null){if(s.rank===0)return gt(s);if(s.rank!==1&&n===null)return kw(P(s,[-1]),t,n);if(s.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ue(gt(s),n);if(t===1/0)return Gn(gt(s),n);if(t===-1/0)return Ql(gt(s),n);if(t==="euclidean"||t===2)return Wt(ue(qs(gt(s),me(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Gn(ue(gt(s),n[0]),n[1]-1);if(t===1/0)return Gn(ue(gt(s),n[1]),n[0]);if(t===-1/0)return Ql(ue(gt(s),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Wt(ue(je(s),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Qh=_({norm_:jD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(s,t,n,r,o=!0){const a=T(s,"v","movingAverage"),i=T(t,"x","movingAverage"),l=T(n,"decay","movingAverage");n0(a,i),I(De(a.shape,i.shape),()=>"Shape mismatch in v and x");const c=me(1),u=ce(c,l);let h=L(ce(i,a),u);if(o){I(r!=null,()=>"When using zeroDebias: true, step is required.");const d=T(r,"step","movingAverage");h=de(h,ce(c,qs(l,d)))}return Z(a,h)}const KD=_({movingAverage_:qD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(s,t,n){const r=T(s,"indices","scatterND","int32"),o=T(t,"updates","scatterND");Wf(o,r,n);const a={indices:r,updates:o},i={shape:n};return R.runKernel(qu,a,i)}const Iw=_({scatterND_:XD});function YD(s,t,n,r){if(s.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${s.shape}.`);const o=s.rank>0?s.shape[0]:1,a=s.rank>1?s.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(s,t,n,r=0){const o=T(s,"sparseIndices","sparseToDense","int32"),a=T(t,"sparseValues","sparseToDense"),i=T(r,"defaultValue","sparseToDense",a.dtype);YD(o,a,n,i);const l={sparseIndices:o,sparseValues:a,defaultValue:i},c={outputShape:n};return R.runKernel(Ju,l,c)}const Om=_({sparseToDense_:ZD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(s,t){const n=T(t,"indices","gatherND","int32"),o={params:T(s,"x","gatherND","string_or_numeric"),indices:n};return R.runKernel(Au,o)}const Nw=_({gatherND_:JD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(s,t){if(t==null)return s.shape.slice();if(De(s.shape,t))return t;if(s.shape.length===t.length){const n=[];for(let r=0;r<s.shape.length;r++)t[r]==null&&s.shape[r]!=null?n.push(s.shape[r]):n.push(t[r]);return n}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(s,t,n,r){const o=T(s,"x","dropout");if(I(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),I(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof ze?o.clone():o;const a=QD(o,n),i=1-t,l=de(Ha(Z(Xa(a,0,1,"float32",r),i)),i);return L(o,l)}const Sw=_({dropout_:eR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function Lm(s,t,n){const r=1-s%2,o=new Float32Array(s);for(let a=0;a<s;++a){const i=2*Math.PI*a/(s+r-1);o[a]=t-n*Math.cos(i)}return Ut(o,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function tR(s,t,n=1){const r=T(s,"predictions","inTopK"),o=T(t,"targets","inTopK");I(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),I(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),Lt(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];I(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),l=await o.data(),[c,u]=[i.length/a,a],h=Ct("bool",c);for(let d=0;d<c;d++){const p=d*u,f=i.subarray(p,p+u),m=[];for(let g=0;g<f.length;g++)m.push({value:f[g],index:g});m.sort((g,y)=>y.value-g.value),h[d]=0;for(let g=0;g<n;g++)if(m[g].index===l[d]){h[d]=1;break}}return s!==r&&r.dispose(),t!==o&&o.dispose(),Wn(h,o.shape,"bool")}const nR=tR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(s,t,n,r,o,a="NHWC",i){let l=s;s.rank===3&&(l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let c=t;c.rank===3&&(c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),I(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),I(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),I(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=a==="NHWC"?l.shape[3]:l.shape[1],h=a==="NHWC"?c.shape[3]:c.shape[1];I(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),I(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),i!=null&&I($t(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const d={x:l,dy:c},p={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,filterShape:n};return R.runKernel(fu,d,p)}const Pm=_({conv2DBackpropFilter_:sR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ed(s,t,n){if(n==null||n==="linear")return s;if(n==="relu")return L(s,Ja(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function td(s,t){let n=t;const r=It(s.shape,t.shape);return r.length>0&&(n=ue(n,r)),P(n,s.shape)}function nd(s,t,n,r){if(t==="linear")return s;if(t==="relu")return os(s);if(t==="elu")return Ua(s);if(t==="relu6")return Bh(s);if(t==="prelu")return tc(s,n);if(t==="leakyrelu")return Xl(s,r);if(t==="sigmoid")return rs(s);throw new Error(`Unknown fused activation ${t}.`)}const sd=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR({x:s,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:l,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(c=c||"linear",sd(R.state.gradientDepth,c)===!1){let C=Hs(s,t,n,r,o,a,i);return l!=null&&(C=Z(C,l)),nd(C,c,u,h)}const d=T(s,"x","conv2d","float32"),p=T(t,"filter","conv2d","float32");let f=d,m=!1;d.rank===3&&(m=!0,f=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),I(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),i!=null&&I($t(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),I(f.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`),I(Bt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),I(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);const g=Dt(f.shape,p.shape,n,a,r,i);let y;l!=null&&(y=T(l,"bias","fused conv2d"),[y]=it(y,d),Ee(g.outShape,y.shape));let b;u!=null&&(b=T(u,"prelu weights","fused conv2d"));const x=(C,N)=>{const[k,S,E,A]=N,F=ed(C,E,c);I(mr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const D=um(S.shape,F,k,n,r),O=Pm(S,F,k.shape,n,r),B=[D,O];if(A!=null){const V=td(A,F);B.push(V)}return B},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:c,leakyreluAlpha:h};return l==null?$s((N,k,S)=>{let E=R.runKernel(_l,v,w);return S([k,N,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,p):$s((N,k,S,E)=>{let A=R.runKernel(_l,v,w);return E([k,N,A,S]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(f,p,y)}const Mm=_({fusedConv2d_:rR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(s,t,n,r,o,a=[1,1],i){let l=s;s.rank===3&&(l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let c=t;c.rank===3&&(c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:l,dy:c},h={strides:r,pad:o,dimRoundingMode:i,dilations:a,filterShape:n};return R.runKernel(wu,u,h)}const Ew=_({depthwiseConv2dNativeBackpropFilter_:oR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(s,t,n,r,o,a=[1,1],i){let l=t,c=!1;t.rank===3&&(c=!0,l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:l,filter:n},h={strides:r,pad:o,dimRoundingMode:i,dilations:a,inputShape:s},d=R.runKernel(vu,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Aw=_({depthwiseConv2dNativeBackpropInput_:aR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR({x:s,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:l,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(sd(R.state.gradientDepth,c)===!1){let C=Va(s,t,n,r,o,a,i);return l!=null&&(C=Z(C,l)),nd(C,c,u,h)}const d=T(s,"x","depthwiseConv2d","float32"),p=T(t,"filter","depthwiseConv2d","float32");let f=d,m=!1;d.rank===3&&(m=!0,f=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),I(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),I(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),I(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),I(Bt(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),i!=null&&I($t(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const g=Dt(f.shape,p.shape,n,a,r,i,!0);let y;l!=null&&(y=T(l,"bias","fused conv2d"),[y]=it(y,d),Ee(g.outShape,y.shape));let b;u!=null&&(b=T(u,"prelu weights","fused depthwiseConv2d"));const x=(C,N)=>{I(mr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[k,S,E,A]=N,F=ed(C,E,c),D=Aw(S.shape,F,k,n,r,a,i),O=Ew(S,F,k.shape,n,r,a,i);if(A!=null){const B=td(y,F);return[D,O,B]}return[D,O]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:c,leakyreluAlpha:h};return l==null?$s((N,k,S)=>{let E=R.runKernel(Ol,v,w);return S([k,N,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,p):$s((N,k,S,E)=>{let A=R.runKernel(Ol,v,w);return E([k,N,A,S]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(f,p,y)}const Dw=_({fusedDepthwiseConv2d_:iR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR({a:s,b:t,transposeA:n=!1,transposeB:r=!1,bias:o,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:l}){if(sd(R.state.gradientDepth,a)===!1){let A=Te(s,t,n,r);return o!=null&&(A=Z(A,o)),nd(A,a,i,l)}let c=T(s,"a","fused matMul"),u=T(t,"b","fused matMul");[c,u]=it(c,u);const h=n?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=c.shape.slice(0,-2),g=u.shape.slice(0,-2),y=j(m),b=j(g);I(c.rank>=2&&u.rank>=2&&c.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${u.rank}.`),I(De(m,g),()=>`Error in fused matMul: outer dimensions (${m}) and (${g}) of Tensors with shapes ${c.shape} and ${u.shape} must match.`),I(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([p,f]),v=n?P(c,[y,h,p]):P(c,[y,p,h]),w=r?P(u,[b,f,d]):P(u,[b,d,f]);let C;o!=null&&(C=T(o,"bias","fused matMul"),[C]=it(C,c),Ee(x,C.shape));let N;i!=null&&(N=T(i,"prelu weights","fused matMul"));const k=(A,F)=>{const[D,O,B,V]=F,z=ed(P(A,B.shape),B,a);let H,U;if(!n&&!r?(H=Te(z,O,!1,!0),U=Te(D,z,!0,!1)):!n&&r?(H=Te(z,O,!1,!1),U=Te(z,D,!0,!1)):n&&!r?(H=Te(O,z,!1,!0),U=Te(D,z,!1,!1)):(H=Te(O,z,!0,!0),U=Te(z,D,!0,!0)),o!=null){const K=td(V,z);return[H,U,K]}else return[H,U]},S={a:v,b:w,bias:C,preluActivationWeights:N},E={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:l};return o==null?$s((F,D,O)=>{const B=R.runKernel(Fl,S,E);return O([F,D,B]),{value:P(B,x),gradFunc:k}})(v,w):$s((F,D,O,B)=>{const V=R.runKernel(Fl,S,E);return B([F,D,V,O]),{value:P(V,x),gradFunc:k}})(v,w,C)}const rd=_({fusedMatMul_:lR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cR=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",conv2d:Mm,depthwiseConv2d:Dw,matMul:rd});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(s){return Lm(s,.54,.46)}const hR=_({hammingWindow_:uR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(s){return Lm(s,.5,.5)}const Rw=_({hannWindow_:dR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(s,t,n,r=!1,o=0){let a=0;const i=[];for(;a+t<=s.size;)i.push(Oe(s,a,t)),a+=n;if(r)for(;a<s.size;){const l=a+t-s.size,c=dt([Oe(s,a,t-l),Ga([l],o)]);i.push(c),a+=n}return i.length===0?oo([],[0,t]):P(dt(i),[i.length,t])}const Fw=_({frame_:pR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(s,t,n,r,o=Rw){r==null&&(r=Tw(t));const a=Fw(s,t,n),i=L(a,o(t));return ac(i,r)}const mR=_({stft_:fR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(s,t,n,r,o="bilinear",a=0){const i=T(s,"image","cropAndResize"),l=T(t,"boxes","cropAndResize","float32"),c=T(n,"boxInd","cropAndResize","int32"),u=l.shape[0];I(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),I(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${l.shape}.`),I(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${l.shape}.`),I(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),I(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),I(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const h={image:i,boxes:l,boxInd:c},d={method:o,extrapolationValue:a,cropSize:r};return R.runKernel(yu,h,d)}const yR=_({cropAndResize_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(s){const t=T(s,"image","flipLeftRight","float32");I(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return R.runKernel(Eu,n,{})}const xR=_({flipLeftRight_:bR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(s){const t=T(s,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];I(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),I(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const o=new Array(t.rank);return o.fill(1,0,n),o[n]=3,Dn(t,o)}const vR=_({grayscaleToRGB_:wR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(s,t,n=0,r=.5){const o=T(s,"image","rotateWithOffset","float32");I(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const a={image:o},i={radians:t,fillValue:n,center:r};return R.runKernel(lh,a,i)}const CR=_({rotateWithOffset_:$R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(s,t,n,r,o,a){r==null&&(r=.5),o==null&&(o=Number.NEGATIVE_INFINITY),a==null&&(a=0);const i=s.shape[0];return n=Math.min(n,i),I(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),I(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),I(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),I(t.rank===1,()=>"scores must be a 1D tensor"),I(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),I(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const a=T(s,"boxes","nonMaxSuppression","float32"),i=T(t,"scores","nonMaxSuppression","float32"),l=Qa(a,i,n,r,o);n=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;const c={maxOutputSize:n,iouThreshold:r,scoreThreshold:o};return R.runKernel(zu,{boxes:a,scores:i},c)}const IR=_({nonMaxSuppression_:kR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(s,t,n){const r=SR(s,t,n),o=r<0?-(r+1):r;s.splice(o,0,t)}function SR(s,t,n){return ER(s,t,n||TR)}function TR(s,t){return s>t?1:s<t?-1:0}function ER(s,t,n){let r=0,o=s.length,a=0,i=!1;for(;r<o;){a=r+(o-r>>>1);const l=n(t,s[a]);l>0?r=a+1:(o=a,i=!l)}return i?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function od(s,t,n,r,o){return zm(s,t,n,r,o,0)}function ad(s,t,n,r,o,a){return zm(s,t,n,r,o,0,!1,a,!0)}function id(s,t,n,r,o,a){return zm(s,t,n,r,o,a,!0)}function zm(s,t,n,r,o,a,i=!1,l=!1,c=!1){const u=[];for(let y=0;y<t.length;y++)t[y]>o&&u.push({score:t[y],boxIndex:y,suppressBeginIndex:0});u.sort(_w);const h=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&u.length>0;){const y=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:v}=y;if(b<o)break;let w=!1;for(let C=d.length-1;C>=v;--C){const N=AR(s,x,d[C]);if(N>=r){w=!0;break}if(y.score=y.score*DR(r,h,N),y.score<=o)break}y.suppressBeginIndex=d.length,w||(y.score===b?(d.push(x),p.push(y.score)):y.score>o&&NR(u,y,_w))}const f=d.length,m=n-f;l&&m>0&&(d.push(...new Array(m).fill(0)),p.push(...new Array(m).fill(0)));const g={selectedIndices:d};return i&&(g.selectedScores=p),c&&(g.validOutputs=f),g}function AR(s,t,n){const r=s.subarray(t*4,t*4+4),o=s.subarray(n*4,n*4+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),l=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(o[0],o[2]),h=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),p=Math.max(o[1],o[3]),f=(l-a)*(c-i),m=(d-u)*(p-h);if(f<=0||m<=0)return 0;const g=Math.max(a,u),y=Math.max(i,h),b=Math.min(l,d),x=Math.min(c,p),v=Math.max(b-g,0)*Math.max(x-y,0);return v/(f+m-v)}function DR(s,t,n){const r=Math.exp(t*n*n);return n<=s?r:0}function _w(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function RR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const a=T(s,"boxes","nonMaxSuppressionAsync"),i=T(t,"scores","nonMaxSuppressionAsync"),l=Qa(a,i,n,r,o);n=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;const c=await Promise.all([a.data(),i.data()]),u=c[0],h=c[1],{selectedIndices:d}=od(u,h,n,r,o);return a!==s&&a.dispose(),i!==t&&i.dispose(),Ut(d,"int32")}const FR=RR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=0){const i=T(s,"boxes","nonMaxSuppression"),l=T(t,"scores","nonMaxSuppression"),c=Qa(i,l,n,r,o,a);n=c.maxOutputSize,r=c.iouThreshold,o=c.scoreThreshold,a=c.softNmsSigma;const u={boxes:i,scores:l},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:a},d=R.runKernel(Vu,u,h);return{selectedIndices:d[0],selectedScores:d[1]}}const OR=_({nonMaxSuppressionWithScore_:_R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=0){const i=T(s,"boxes","nonMaxSuppressionAsync"),l=T(t,"scores","nonMaxSuppressionAsync"),c=Qa(i,l,n,r,o,a);n=c.maxOutputSize,r=c.iouThreshold,o=c.scoreThreshold,a=c.softNmsSigma;const u=await Promise.all([i.data(),l.data()]),h=u[0],d=u[1],{selectedIndices:p,selectedScores:f}=id(h,d,n,r,o,a);return i!==s&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Ut(p,"int32"),selectedScores:Ut(f)}}const PR=LR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=!1){const i=T(s,"boxes","nonMaxSuppression"),l=T(t,"scores","nonMaxSuppression"),c=Qa(i,l,n,r,o,null),u=c.maxOutputSize,h=c.iouThreshold,d=c.scoreThreshold,p={boxes:i,scores:l},f={maxOutputSize:u,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:a},m=R.runKernel(Bu,p,f);return{selectedIndices:m[0],validOutputs:m[1]}}const zR=_({nonMaxSuppressionPadded_:MR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=!1){const i=T(s,"boxes","nonMaxSuppressionAsync"),l=T(t,"scores","nonMaxSuppressionAsync"),c=Qa(i,l,n,r,o,null),u=c.maxOutputSize,h=c.iouThreshold,d=c.scoreThreshold,[p,f]=await Promise.all([i.data(),l.data()]),{selectedIndices:m,validOutputs:g}=ad(p,f,u,h,d,a);return i!==s&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Ut(m,"int32"),validOutputs:me(g,"int32")}}const VR=BR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(s,t,n=!1,r=!1){const o=T(s,"images","resizeBilinear");I(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),I(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),I(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=o,i=!1;o.rank===3&&(i=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=R.runKernel(vl,l,c);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Ow=_({resizeBilinear_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(s,t,n=!1,r=!1){const o=T(s,"images","resizeNearestNeighbor");I(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),I(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),I(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),I(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=o,i=!1;o.rank===3&&(i=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=R.runKernel(wl,l,c);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Lw=_({resizeNearestNeighbor_:UR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(s,t="binary",n=!1,r=.5){const o=T(s,"image","threshold"),a=.2989,i=.587,l=.114,c=o.shape[0]*o.shape[1];let u=L(Ut([r]),255),h,d,p,f;if(I(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),I(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),I(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),I(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[h,d,p]=cn(o,[1,1,1],-1);const y=L(h,a),b=L(d,i),x=L(p,l);f=Z(Z(y,b),x)}else f=s;if(t==="otsu"){const y=lm(ne(Vh(f),"int32"),Wn([]),256);u=HR(y,c)}const m=n?yr(f,u):ln(f,u);return ne(L(m,255),"int32")}function HR(s,t){let n=Ut([-1]),r=Ut([0]),o=Ut([0]),a,i,l,c,u,h;for(let d=0;d<s.size-1;d++){a=Oe(s,0,d+1),i=Oe(s,d+1),u=de(ue(a),t),h=de(ue(i),t);const p=ue(L(a,Ya(0,a.size)));l=de(p,ue(a));const f=Ga(i.shape,a.size),m=Z(Ya(0,i.size),f),g=L(i,m);c=de(ue(g),ue(i));const y=ce(l,c),b=ce(l,c),x=L(u,h);o=L(L(x,y),b);const v=ln(o,r);r=jt(v,o,r),n=jt(v,Ut([d]),n)}return n}const jR=_({threshold_:GR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(s,t,n="nearest",r="constant",o=0,a){const i=T(s,"image","transform","float32"),l=T(t,"transforms","transform","float32");I(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),I(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),I(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const c={image:i,transforms:l},u={interpolation:n,fillMode:r,fillValue:o,outputShape:a};return R.runKernel(oh,c,u)}const KR=_({transform_:qR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(s,t,n){I(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),I(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=T(s,"a","bandPart");I(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const o=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const l=P(Ya(0,a,1,"int32"),[-1,1]),c=Ya(0,i,1,"int32"),u=ce(l,c),h=Hn(yr(u,me(+t,"int32")),gr(u,me(-n,"int32"))),d=bt([a,i],r.dtype);return P(Cn(jn(P(r,[-1,a,i])).map(p=>jt(h,p,d))),o)}const YR=_({bandPart_:XR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(s){let t;if(Array.isArray(s)){t=!1,I(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=s[0].shape[0];for(let a=1;a<s.length;++a)I(s[a].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[a].shape[0]} vs. ${o})`)}else t=!0,s=cn(s,s.shape[0],0).map(o=>ks(o,[0]));I(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const n=[],r=s;for(let o=0;o<s.length;++o)n.push(R.tidy(()=>{let a=r[o];if(o>0)for(let i=0;i<o;++i){const l=L(ue(L(n[i],a)),n[i]);a=ce(a,l)}return de(a,Qh(a,"euclidean"))}));return t?Cn(n,0):n}const JR=_({gramSchmidt_:ZR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(s,t=!1){if(I(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return Pw(s,t);{const n=s.shape.slice(0,s.shape.length-2).reduce((c,u)=>c*u),r=jn(P(s,[n,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),o=[],a=[];r.forEach(c=>{const[u,h]=Pw(c,t);o.push(u),a.push(h)});const i=P(Cn(o,0),s.shape),l=P(Cn(a,0),s.shape);return[i,l]}}function Pw(s,t=!1){return R.tidy(()=>{I(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const n=s.shape[0],r=s.shape[1];let o=ym(n),a=Ws(s);const i=oo([[1]],[1,1]);let l=Ws(i);const c=n>=r?r:n;for(let u=0;u<c;++u){const h=a,d=l,p=o;[l,a,o]=R.tidy(()=>{const f=Oe(a,[u,u],[n-u,1]),m=Qh(f),g=Oe(a,[u,u],[1,1]),y=jt(ln(g,0),oo([[-1]]),oo([[1]])),b=ce(g,L(y,m)),x=de(f,b);x.shape[0]===1?l=Ws(i):l=dt([i,Oe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const v=nt(de(Te(y,b),m)),w=Oe(a,[u,0],[n-u,r]),C=L(v,l),N=_e(l);if(u===0)a=ce(w,Te(C,Te(N,w)));else{const E=ce(w,Te(C,Te(N,w)));a=dt([Oe(a,[0,0],[u,r]),E],0)}const k=_e(C),S=Oe(o,[0,u],[n,o.shape[1]-u]);if(u===0)o=ce(S,Te(Te(S,l),k));else{const E=ce(S,Te(Te(S,l),k));o=dt([Oe(o,[0,0],[n,u]),E],1)}return[l,a,o]}),Ce([h,d,p])}return!t&&n>r&&(o=Oe(o,[0,0],[n,r]),a=Oe(a,[0,0],[r,r])),[o,a]})}const eF=_({qr_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Zt;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Zt||(Zt={}));function tF(s,t,n=Zt.SUM_BY_NONZERO_WEIGHTS){const r=T(s,"losses","computeWeightedLoss");let o=null;t!=null&&(o=T(t,"weights","computeWeightedLoss"));const a=o==null?r:L(r,o);if(n===Zt.NONE)return a;if(n===Zt.SUM)return ue(a);if(n===Zt.MEAN){if(o==null)return ct(a);{const i=r.size/o.size,l=de(ue(a),ue(o));return i>1?de(l,me(i)):l}}if(n===Zt.SUM_BY_NONZERO_WEIGHTS){if(o==null)return de(ue(a),me(r.size));{const i=L(o,wn(r.shape)),l=ne(ue(so(i,me(0))),"float32");return de(ue(a),l)}}throw Error(`Unknown reduction: ${n}`)}const Ks=_({computeWeightedLoss_:tF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(s,t,n,r=Zt.SUM_BY_NONZERO_WEIGHTS){const o=T(s,"labels","absoluteDifference"),a=T(t,"predictions","absoluteDifference");let i=null;n!=null&&(i=T(n,"weights","absoluteDifference")),Lt(o.shape,a.shape,"Error in absoluteDifference: ");const l=gt(ce(o,a));return Ks(l,i,r)}const sF=_({absoluteDifference_:nF});function rF(s,t,n,r,o=Zt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","cosineDistance"),i=T(t,"predictions","cosineDistance");let l=null;r!=null&&(l=T(r,"weights","cosineDistance")),Lt(a.shape,i.shape,"Error in cosineDistance: ");const c=me(1),u=ce(c,ue(L(a,i),n,!0));return Ks(u,l,o)}const oF=_({cosineDistance_:rF});function aF(s,t,n,r=Zt.SUM_BY_NONZERO_WEIGHTS){let o=T(s,"labels","hingeLoss");const a=T(t,"predictions","hingeLoss");let i=null;n!=null&&(i=T(n,"weights","hingeLoss")),Lt(o.shape,a.shape,"Error in hingeLoss: ");const l=me(1);o=ce(L(me(2),o),l);const c=os(ce(l,L(o,a)));return Ks(c,i,r)}const iF=_({hingeLoss_:aF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lF(s,t,n,r=1,o=Zt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","huberLoss"),i=T(t,"predictions","huberLoss");let l=null;n!=null&&(l=T(n,"weights","huberLoss")),Lt(a.shape,i.shape,"Error in huberLoss: ");const c=me(r),u=gt(ce(i,a)),h=qa(u,c),d=ce(u,h),p=Z(L(me(.5),je(h)),L(c,d));return Ks(p,l,o)}const cF=_({huberLoss_:lF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(s,t,n,r=1e-7,o=Zt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","logLoss"),i=T(t,"predictions","logLoss");let l=null;n!=null&&(l=T(n,"weights","logLoss")),Lt(a.shape,i.shape,"Error in logLoss: ");const c=me(1),u=me(r),h=nt(L(a,xn(Z(i,u)))),d=L(ce(c,a),xn(Z(ce(c,i),u))),p=ce(h,d);return Ks(p,l,o)}const hF=_({logLoss_:uF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(s,t,n,r=Zt.SUM_BY_NONZERO_WEIGHTS){const o=T(s,"labels","meanSquaredError"),a=T(t,"predictions","meanSquaredError");let i=null;n!=null&&(i=T(n,"weights","meanSquaredError")),Lt(o.shape,a.shape,"Error in meanSquaredError: ");const l=Xh(o,a);return Ks(l,i,r)}const pF=_({meanSquaredError_:dF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(s,t){const n=T(s,"labels","sigmoidCrossEntropyWithLogits"),r=T(t,"logits","sigmoidCrossEntropyWithLogits");Lt(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=os(r),a=L(r,n),i=Yl(bn(nt(gt(r))));return Z(ce(o,a),i)}function mF(s,t,n,r=0,o=Zt.SUM_BY_NONZERO_WEIGHTS){let a=T(s,"multiClassLabels","sigmoidCrossEntropy");const i=T(t,"logits","sigmoidCrossEntropy");let l=null;if(n!=null&&(l=T(n,"weights","sigmoidCrossEntropy")),Lt(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const u=me(r),h=me(1),d=me(.5);a=Z(L(a,ce(h,u)),L(d,u))}const c=fF(a,i);return Ks(c,l,o)}const gF=_({sigmoidCrossEntropy_:mF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(s,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return $s((o,a,i)=>{const c=vm(a,[n],!0),u=ce(ne(a,"float32"),c);i([o,u]);const h=nt(L(u,o));return{value:ue(h,[n]),gradFunc:(f,m)=>{const[g,y]=m,b=pt(f.shape,[n]);return[L(P(f,b),ce(ne(g,"float32"),bn(y))),L(P(f,b),ce(bn(y),ne(g,"float32")))]}}})(s,t)}function bF(s,t,n,r=0,o=Zt.SUM_BY_NONZERO_WEIGHTS){let a=T(s,"onehotLabels","softmaxCrossEntropy");const i=T(t,"logits","softmaxCrossEntropy");let l=null;if(n!=null&&(l=T(n,"weights","softmaxCrossEntropy")),Lt(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const u=me(r),h=me(1),d=me(a.shape[1]);a=Z(L(a,ce(h,u)),de(u,d))}const c=yF(a,i);return Ks(c,l,o)}const xF=_({softmaxCrossEntropy_:bF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(s,t,n,r){const o=T(s,"indices","sparseFillEmptyRows"),a=T(t,"values","sparseFillEmptyRows"),i=T(n,"denseShape","sparseFillEmptyRows"),l=T(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const c={indices:o,values:a,denseShape:i,defaultValue:l},u=R.runKernel(Ku,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const vF=_({sparseFillEmptyRows_:wF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(s,t,n){const r=T(s,"inputIndices","sparseReshape"),o=T(t,"inputShape","sparseReshape"),a=T(n,"newShape","sparseReshape");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:o,newShape:a},l=R.runKernel(Xu,i);return{outputIndices:l[0],outputShape:l[1]}}const CF=_({sparseReshape_:$F});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kF(s,t,n){const r=T(s,"data","sparseSegmentMean"),o=T(t,"indices","sparseSegmentMean"),a=T(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);const i={data:r,indices:o,segmentIds:a};return R.runKernel(Yu,i)}const IF=_({sparseSegmentMean_:kF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(s,t,n){const r=T(s,"data","sparseSegmentSum"),o=T(t,"indices","sparseSegmentSum"),a=T(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);const i={data:r,indices:o,segmentIds:a};return R.runKernel(Zu,i)}const SF=_({sparseSegmentSum_:NF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(s,t,n,r,o,a,i,l){const c=T(s,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const u=T(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:o,rightPad:a,padWidth:i,preserveShortSequences:l},d={data:c,dataSplits:u},p=R.runKernel(th,d,h);return{nGrams:p[0],nGramsSplits:p[1]}}const EF=_({stringNGrams_:TF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(s,t,n=!0){const r=T(s,"input","stringSplit","string"),o=T(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const a={skipEmpty:n},i={input:r,delimiter:o},l=R.runKernel(nh,i,a);return{indices:l[0],values:l[1],shape:l[2]}}const DF=_({stringSplit_:AF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(s,t){const n=T(s,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const o={input:n};return R.runKernel(sh,o,r)}const FF=_({stringToHashBucketFast_:RF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={fft:oc,ifft:Za,rfft:ac,irfft:Kh},OF={hammingWindow:hR,hannWindow:Rw,frame:Fw,stft:mR},qn={flipLeftRight:xR,grayscaleToRGB:vR,resizeNearestNeighbor:Lw,resizeBilinear:Ow,rotateWithOffset:CR,cropAndResize:yR,nonMaxSuppression:IR,nonMaxSuppressionAsync:FR,nonMaxSuppressionWithScore:OR,nonMaxSuppressionWithScoreAsync:PR,nonMaxSuppressionPadded:zR,nonMaxSuppressionPaddedAsync:VR,threshold:jR,transform:KR},Mw={bandPart:YR,gramSchmidt:JR,qr:eF},LF={absoluteDifference:sF,computeWeightedLoss:Ks,cosineDistance:oF,hingeLoss:iF,huberLoss:cF,logLoss:hF,meanSquaredError:pF,sigmoidCrossEntropy:gF,softmaxCrossEntropy:xF},ic={sparseFillEmptyRows:vF,sparseReshape:CF,sparseSegmentMean:IF,sparseSegmentSum:SF},ld={stringNGrams:EF,stringSplit:DF,stringToHashBucketFast:FF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xs extends Yr{minimize(t,n=!1,r){const{value:o,grads:a}=this.computeGradients(t,r);if(r!=null){const i=r.map(l=>({name:l.name,tensor:a[l.name]}));this.applyGradients(i)}else this.applyGradients(a);return Ce(a),n?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,n){return iw(t,n)}dispose(){this.iterations_!=null&&Ce(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Xs,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cd extends Xs{constructor(t,n,r=null){super();this.learningRate=t,this.rho=n,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${r}/accum_grad`,variable:W(()=>Le(a).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${r}/accum_var`,variable:W(()=>Le(a).variable(i))});const l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;const c=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;W(()=>{const h=Z(L(c,this.rho),L(je(l),1-this.rho)),d=L(de(Wt(Z(u,this.epsilon)),Wt(Z(c,this.epsilon))),l),p=Z(L(u,this.rho),L(je(d),1-this.rho));c.assign(h),u.assign(p);const f=Z(L(d,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ce(this.accumulatedGrads.map(t=>t.variable)),Ce(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=t.length/2,r=!1;this.accumulatedGrads=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedUpdates=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.rho,n.epsilon)}}cd.className="Adadelta";Y(cd);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ud extends Xs{constructor(t,n=.1){super();this.learningRate=t,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r];if(this.accumulatedGrads[o]==null){const c=!1;this.accumulatedGrads[o]={originalName:`${r}/accumulator`,variable:W(()=>Ga(a.shape,this.initialAccumulatorValue).variable(c))}}const i=Array.isArray(t)?t[o].tensor:t[r];if(i==null)return;const l=this.accumulatedGrads[o].variable;W(()=>{const c=Z(l,je(i));l.assign(c);const u=Z(L(de(i,Wt(Z(c,R.backend.epsilon()))),-this.learningRate),a);a.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ce(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,n){return new t(n.learningRate,n.initialAccumulatorValue)}}ud.className="Adagrad";Y(ud);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hd extends Xs{constructor(t,n,r,o=null){super();this.learningRate=t,this.beta1=n,this.beta2=r,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=me(n).variable(),this.accBeta2=me(r).variable()}),o==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const n=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);W(()=>{const r=ce(1,this.accBeta1),o=ce(1,this.accBeta2);n.forEach((a,i)=>{const l=R.registeredVariables[a],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:W(()=>Le(l).variable(c))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:W(()=>Le(l).variable(c))});const u=Array.isArray(t)?t[i].tensor:t[a];if(u==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,p=Z(L(h,this.beta1),L(u,1-this.beta1)),f=Z(L(d,this.beta2),L(je(u),1-this.beta2)),m=de(p,r),g=de(f,o);h.assign(p),d.assign(f);const y=Z(L(de(m,Z(Wt(g),this.epsilon)),-this.learningRate),l);l.assign(y)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Ce(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t),W(()=>{this.accBeta1.assign(qs(this.beta1,this.iterations_+1)),this.accBeta2.assign(qs(this.beta2,this.iterations_+1))});const n=t.length/2,r=!1;this.accumulatedFirstMoment=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedSecondMoment=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon)}}hd.className="Adam";Y(hd);/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/class dd extends Xs{constructor(t,n,r,o=null,a=0){super();this.learningRate=t,this.beta1=n,this.beta2=r,this.epsilon=o,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=me(0).variable(),this.accBeta1=me(n).variable()}),o==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const n=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);W(()=>{const r=ce(1,this.accBeta1),o=de(-this.learningRate,Z(L(this.iteration,this.decay),1));n.forEach((a,i)=>{const l=R.registeredVariables[a],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:Le(l).variable(c)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:Le(l).variable(c)});const u=Array.isArray(t)?t[i].tensor:t[a];if(u==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,p=Z(L(h,this.beta1),L(u,1-this.beta1)),f=L(d,this.beta2),m=gt(u),g=Cs(f,m);h.assign(p),d.assign(g);const y=Z(L(de(o,r),de(p,Z(g,this.epsilon))),l);l.assign(y)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ce(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Ce(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}dd.className="Adamax";Y(dd);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lc extends Xs{constructor(t){super();this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=Array.isArray(t)?t[o].tensor:t[r];if(a==null)return;const i=R.registeredVariables[r];W(()=>{const l=Z(L(this.c,a),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=At(me(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,n){return new t(n.learningRate)}}lc.className="SGD";Y(lc);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pd extends lc{constructor(t,n,r=!1){super(t);this.learningRate=t,this.momentum=n,this.useNesterov=r,this.accumulations=[],this.m=me(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r];if(this.accumulations[o]==null){const c=!1;this.accumulations[o]={originalName:`${r}/momentum`,variable:W(()=>Le(a).variable(c))}}const i=this.accumulations[o].variable,l=Array.isArray(t)?t[o].tensor:t[r];l!=null&&W(()=>{let c;const u=Z(L(this.m,i),l);this.useNesterov?c=Z(L(this.c,Z(l,L(u,this.m))),a):c=Z(L(this.c,u),a),i.assign(u),a.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ce(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,n){return new t(n.learningRate,n.momentum,n.useNesterov)}}pd.className="Momentum";Y(pd);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fd extends Xs{constructor(t,n=.9,r=0,o=null,a=!1){super();if(this.learningRate=t,this.decay=n,this.momentum=r,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,o==null&&(this.epsilon=R.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${r}/rms`,variable:W(()=>Le(a).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${r}/momentum`,variable:W(()=>Le(a).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${r}/mg`,variable:W(()=>Le(a).variable(i))});const l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;const c=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;W(()=>{const h=Z(L(c,this.decay),L(je(l),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[o].variable,p=Z(L(d,this.decay),L(l,1-this.decay)),f=de(L(l,this.learningRate),Wt(ce(h,Z(je(p),this.epsilon)))),m=Z(L(u,this.momentum),f);c.assign(h),d.assign(p),u.assign(m);const g=ce(a,m);a.assign(g)}else{const d=Z(L(c,this.decay),L(je(l),1-this.decay)),p=Z(L(u,this.momentum),de(L(l,this.learningRate),Wt(Z(d,this.epsilon))));c.assign(d),u.assign(p);const f=ce(a,p);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ce(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ce(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Ce(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=this.centered?t.length/3:t.length/2,r=!1;this.accumulatedMeanSquares=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedMoments=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=t.slice(n*2,n*3).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,n){return new t(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}fd.className="RMSProp";Y(fd);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ao{static sgd(t){return new lc(t)}static momentum(t,n,r=!1){return new pd(t,n,r)}static rmsprop(t,n=.9,r=0,o=null,a=!1){return new fd(t,n,r,o,a)}static adam(t=.001,n=.9,r=.999,o=null){return new hd(t,n,r,o)}static adadelta(t=.001,n=.95,r=null){return new cd(t,n,r)}static adamax(t=.002,n=.9,r=.999,o=null,a=0){return new dd(t,n,r,o,a)}static adagrad(t,n=.1){return new ud(t,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io={sgd:ao.sgd,momentum:ao.momentum,adadelta:ao.adadelta,adagrad:ao.adagrad,rmsprop:ao.rmsprop,adamax:ao.adamax,adam:ao.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:s=>s())();function zw(){return new Promise(s=>PF(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bm(s,t){const n=s[0].length;s.forEach((o,a)=>{I(o.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),I(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=s[0];s.forEach((o,a)=>{for(let i=0;i<n;i++)I(i===t||o[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${o}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Is(s,t){const n=s[0].slice();for(let r=1;r<s.length;r++)n[t]+=s[r][t];return n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm=30;function md(s){return s<=Vm?s:au(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wm(s,t,n){const r=n*(typeof s=="number"?s:s[0]),o=t*(typeof s=="number"?s:s[1]);return[r,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cc(s,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(s[0]/n),o=o.concat(s.slice(1));else{o=o.concat(s[0]);const a=t.length;for(let i=0;i<a;++i)o=o.concat([s[i+1]/t[i],t[i]]);o=o.concat(s.slice(a+1))}return o}function uc(s,t,n=!0){const r=[];if(n){r.push(t);for(let o=t+1;o<s;++o)o<=2*t?(r.push(o),r.push(o-(t+1))):r.push(o)}else{const o=[],a=[];for(let i=1;i<s;++i)i>=t*2+1||i%2==1?a.push(i):o.push(i);r.push(...o),r.push(0),r.push(...a)}return r}function hc(s,t,n,r=!0){const o=[];r?o.push(s[0]/n):o.push(s[0]*n);for(let a=1;a<s.length;++a)a<=t.length?r?o.push(t[a-1]*s[a]):o.push(s[a]/t[a-1]):o.push(s[a]);return o}function Um(s,t){const n=[0];for(let r=0;r<t;++r)n.push(s[r][0]);return n}function Gm(s,t,n){const r=s.slice(0,1);for(let o=0;o<n;++o)r.push(s[o+1]-t[o][0]-t[o][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gd=1.7580993408473768,yd=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hm=.3275911,jm=.254829592,qm=-.284496736,Km=1.421413741,Xm=-1.453152027,Ym=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const n=new Float32Array(s.length*2);for(let r=0;r<n.length;r+=2)n[r]=s[r/2],n[r+1]=t[r/2];return n}function Bw(s){const t=new Float32Array(s.length/2),n=new Float32Array(s.length/2);for(let r=0;r<s.length;r+=2)t[r/2]=s[r],n[r/2]=s[r+1];return{real:t,imag:n}}function Vw(s){const t=Math.ceil(s.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=0;o<s.length;o+=4)n[Math.floor(o/4)]=s[o],r[Math.floor(o/4)]=s[o+1];return{real:n,imag:r}}function Ww(s){const t=Math.floor(s.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=2;o<s.length;o+=4)n[Math.floor(o/4)]=s[o],r[Math.floor(o/4)]=s[o+1];return{real:n,imag:r}}function Zm(s,t){const n=s[t*2],r=s[t*2+1];return{real:n,imag:r}}function Uw(s,t,n,r){s[r*2]=t,s[r*2+1]=n}function Gw(s,t){const n=new Float32Array(s/2),r=new Float32Array(s/2);for(let o=0;o<Math.ceil(s/2);o++){const a=(t?2:-2)*Math.PI*(o/s);n[o]=Math.cos(a),r[o]=Math.sin(a)}return{real:n,imag:r}}function Hw(s,t,n){const r=(n?2:-2)*Math.PI*(s/t),o=Math.cos(r),a=Math.sin(r);return{real:o,imag:a}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jm="->",MF=/->/g,jw=",",qw="...";function Qm(s,t){s=s.replace(/\s/g,"");const n=(s.length-s.replace(MF,"").length)/Jm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Jm}").`);const[r,o]=s.split(Jm);I(r.indexOf(qw)===-1,()=>`The ellipsis notation ("${qw}") is not supported yet.`);const a=r.split(jw),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let p=0;p<o.length;++p){const f=o[p];if(!a.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);l.indexOf(f)===-1&&l.push(f)}for(let p=0;p<r.length;++p){const f=r[p];l.indexOf(f)===-1&&f!==jw&&l.push(f)}const c=new Array(a.length);for(let p=0;p<i;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let f=0;f<a[p].length;++f)c[p].push(l.indexOf(a[p][f]))}const u=l.length,h=o.length,d=[];for(let p=h;p<u;++p)d.push(p);return{allDims:l,summedDims:d,idDims:c}}function eg(s,t){let n=new Array(s);n.fill(-1);for(let o=0;o<t.length;++o)n[t[o]]=o;const r=[];for(let o=0;o<s;++o)n[o]===-1&&r.push(o);return n=n.filter(o=>o!==-1),{permutationIndices:n,expandDims:r}}function tg(s,t,n){const r=new Array(s);for(let o=0;o<n.length;++o){const a=n[o].shape;for(let i=0;i<t[o].length;++i)r[t[o][i]]===void 0?r[t[o][i]]=a[i]:I(r[t[o][i]]===a[i],()=>`Expected dimension ${r[t[o][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function ng(s,t){const n=s,r=[];let o=0;s.length===0&&n.push(-1),o=s.length+1;for(let i=0;i<o;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const l=n[i],c=zF(t,l);for(const u of c)a.indexOf(u)===-1&&(r[i].push(u),a.push(u))}return{path:n,steps:r}}function sg(s){return s.every((t,n)=>t===n)}function zF(s,t){const n=[];for(let r=0;r<s.length;++r)(s[r].length===0||s[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function rg(s,t,n=0){let r=[];if(typeof t=="number")I(s.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(s.shape[n]/t);else{const o=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);I(o<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(a!==-1){const i=t.reduce((l,c)=>c>0?l+c:l);t[a]=s.shape[n]-i}I(s.shape[n]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(s,t){let n=!1,r;for(s<=Vm?(r=s,n=!0):r=au(s,Math.floor(Math.sqrt(s)));!n;)r>t||r===s?n=!0:r=au(s,r+1);return r}function Xw(s,t,n){const r=[],o=s.length;for(let a=0;a<o;a++)a!==t?r.push(s[a]):r.push(n);return r}function og(s,t,n,r){const o=t.shape.length,a=s.shape.length;if(r!==0&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(s.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${s.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=s.shape[n],l=[];let c=1,u=1,h=1;for(let d=0;d<r;++d)l.push(s.shape[d]),c*=s.shape[d];for(let d=r;d<n;d++)l.push(s.shape[d]),u*=s.shape[d];for(let d=r;d<o;d++)l.push(t.shape[d]);for(let d=n+1;d<a;d++)l.push(s.shape[d]),h*=s.shape[d];return{batchSize:c,sliceSize:h,outerSize:u,dimSize:i,outputShape:l}}var BF=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",segOpComputeOptimalWindowSize:Kw,computeOutShape:Xw,collectGatherOpShapeInfo:og});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lo(s){try{return s.map(t=>Hr(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Yw(s){return s.map(t=>xs(t))}var Zw=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",slice_util:z0,segment_util:BF,fromUint8ToStringArray:lo,fromStringArrayToUint8:Yw,upcastType:mn,axesAreInnerMostDims:wm,combineLocations:cw,computeOutAndReduceShapes:Rt,expandShapeToKeepDim:pt,assertAxesAreInnerMostDims:Vt,getAxesPermutation:ft,getUndoAxesPermutation:ja,getInnerMostAxes:yt,getBroadcastDims:Wa,getReductionAxes:It,assertAndGetBroadcastShape:Ee,assertParamsConsistent:Bm,computeOutShape:Is,computeDilation2DInfo:Hl,computePool2DInfo:Un,computePool3DInfo:Us,computeConv2DInfo:Dt,computeConv3DInfo:fr,computeDefaultPad:om,tupleValuesAreOne:mr,eitherStridesOrDilationsAreOne:Bt,convertConv2DDataFormat:Gs,getFusedDyActivation:ed,getFusedBiasGradient:td,applyActivation:nd,shouldFuse:sd,PARALLELIZE_THRESHOLD:Vm,computeOptimalWindowSize:md,getImageCenter:Wm,getReshaped:cc,getPermuted:uc,getReshapedPermuted:hc,getSliceBeginCoords:Um,getSliceSize:Gm,prepareAndValidate:$h,validateUpdateShape:Vf,validateInput:Wf,calculateShapes:Ma,SELU_SCALEALPHA:gd,SELU_SCALE:yd,ERF_P:Hm,ERF_A1:jm,ERF_A2:qm,ERF_A3:Km,ERF_A4:Xm,ERF_A5:Ym,warn:rn,log:YN,mergeRealAndImagArrays:Ys,splitRealAndImagArrays:Bw,complexWithEvenIndex:Vw,complexWithOddIndex:Ww,getComplexWithIndex:Zm,assignToTypedArray:Uw,exponents:Gw,exponent:Hw,decodeEinsumEquation:Qm,getEinsumPermutation:eg,checkEinsumDimSizes:tg,getEinsumComputePath:ng,isIdentityPermutation:sg,prepareSplitSize:rg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var VF=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",nonMaxSuppressionV3Impl:od,nonMaxSuppressionV4Impl:ad,nonMaxSuppressionV5Impl:id,whereImpl:Jh});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw={kernelName:Ri,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,Ja(ne(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF={kernelName:_o,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=je(ne(n,"float32")),o=Wt(ce(me(1),r));return nt(de(s,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF={kernelName:Oo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=Wt(ce(je(ne(n,"float32")),1));return de(s,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF={kernelName:Br,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{let l=s;const c=It(n.shape,o);return c.length>0&&(l=ue(l,c)),P(l,n.shape)},b:()=>{let l=s;const c=It(r.shape,o);return c.length>0&&(l=ue(l,c)),P(l,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF={kernelName:Fi,saveAllInputs:!0,gradFunc:(s,t)=>{const n={};return t.forEach((r,o)=>{n[o]=()=>s.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF={kernelName:_i,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>Le(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF={kernelName:Oi,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>Le(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KF={kernelName:Lo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,Wt(ce(me(1),je(ne(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XF={kernelName:Po,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=Wt(Z(me(1),je(ne(n,"float32"))));return de(s,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YF={kernelName:Bo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{const l=Z(je(n),je(r));let c=L(s,de(r,l));const u=It(n.shape,o);return u.length>0&&(c=ue(c,u)),P(c,n.shape)},b:()=>{const l=Z(je(n),je(r));let c=nt(L(s,de(n,l)));const u=It(r.shape,o);return u.length>0&&(c=ue(c,u)),P(c,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF={kernelName:Mo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,Z(je(ne(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF={kernelName:zo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,ce(me(1),je(ne(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(s,t,n,r,o,a){const i=T(s,"dy","avgPool3dGrad"),l=T(t,"input","avgPool3dGrad");let c=i,u=l,h=!1;l.rank===4&&(h=!0,c=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),I(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),I(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),a!=null&&I($t(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const d={dy:c,input:u},p={filterSize:n,strides:r,pad:o,dimRoundingMode:a},f=R.runKernel(uu,d,p);return h?P(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const e_=_({avgPool3dGrad_:QF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_={kernelName:Pi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=n;return{x:()=>e_(s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(s,t,n,r,o){const a=T(s,"dy","avgPoolGrad"),i=T(t,"input","avgPoolGrad");I(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let l=i,c=a,u=!1;i.rank===3&&(u=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),I(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const h={dy:c,input:l},d={filterSize:n,strides:r,pad:o},p=R.runKernel(cu,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const s_=_({avgPoolGrad_:n_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r_={kernelName:Li,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{filterSize:o,strides:a,pad:i}=n;return{x:()=>s_(s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o_={kernelName:Mi,inputsToSave:["a","b"],gradFunc:(s,t,n)=>{const[r,o]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Te(s,o,!1,!0),b:()=>Te(r,s,!0,!1)}:!a&&i?{a:()=>Te(s,o,!1,!1),b:()=>Te(s,r,!0,!1)}:a&&!i?{a:()=>Te(o,s,!1,!0),b:()=>Te(r,s,!1,!1)}:{a:()=>Te(o,s,!0,!0),b:()=>Te(s,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_={kernelName:zi,gradFunc:(s,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>ec(s,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i_={kernelName:Px,gradFunc:(s,t,n)=>{const r=n,o=r.inputShape,a=r.shape,i=Array.from(a);for(let c=o.length-1;c>=0;c--)if(o[c]===a[c])i[c]=1;else if(o[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${a}].`);const l=[];for(let c=0;c<i.length;c++)i[c]>1&&l.push(c);return{x:()=>ue(s,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l_={kernelName:Vo,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c_={kernelName:Wo,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_={kernelName:Uo,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:a}=n;return{x:()=>jt(Hn(gr(r,o),yr(r,a)),s,Le(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_={kernelName:Bi,inputsToSave:["x"],gradFunc:Jw.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_={kernelName:Vi,saveAllInputs:!0,gradFunc:(s,t,n)=>{const r=t.map(c=>c.shape),{axis:o}=n,a=Se(o,t[0].shape)[0],i=r.map(c=>c[a]);return cn(s,i,a).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_={kernelName:Wi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,{dilations:a,strides:i,pad:l,dataFormat:c}=n;return I(mr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>um(r.shape,s,o,i,l,c),filter:()=>Pm(r,s,o.shape,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f_={kernelName:Ui,inputsToSave:["dy","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c}=n;return{dy:()=>Hs(s,o,a,i,l,1,c),filter:()=>Pm(s,r,o.shape,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(s,t,n,r,o){let a=s;s.rank===4&&(a=P(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),I(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),I(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),I(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),I(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),I(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const l={x:a,dy:i},c={strides:r,pad:o,filterShape:n};return R.runKernel(mu,l,c)}const g_=_({conv3DBackpropFilter_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_={kernelName:Gi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const{dilations:r,strides:o,pad:a}=n;I(mr(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,l]=t;return{x:()=>Q0(i.shape,s,l,o,a),filter:()=>g_(i,s,l.shape,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b_={kernelName:Go,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(nt(Gh(ne(n,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x_={kernelName:Ho,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(Hh(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_={kernelName:Hi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{axis:o,exclusive:a,reverse:i}=n;return{x:()=>{const l=ft([o],r.rank);let c=Rh(s,o,a,!i);return l!=null&&(c=_e(c,l)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_={kernelName:ji,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const{dilations:r,strides:o,pad:a,dimRoundingMode:i}=n,l=r==null?[1,1]:r;I(mr(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[c,u]=t;return I(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),I(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),I(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),I(Bt(o,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${l}'.`),i!=null&&I($t(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>Aw(c.shape,s,u,o,a,l,i),filter:()=>Ew(c,s,u.shape,o,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $_={kernelName:qi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,a={x:r,filter:o,dy:s},i={x:r,filter:o,dy:s};return{x:()=>R.runKernel(Cu,a,n),filter:()=>R.runKernel(ku,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C_={kernelName:qo,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t,r={dy:s,y:n};return{x:()=>R.runKernel(Nu,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_={kernelName:Ko,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t,r=L(bn(nt(je(n))),2/Math.sqrt(Math.PI));return{x:()=>L(s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_={kernelName:Xo,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_={kernelName:Xi,inputsToSave:["input"],gradFunc:(s,t)=>{const[n]=t;return{input:()=>P(s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_={kernelName:Yo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,bn(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_={kernelName:Zo,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_={kernelName:Jo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{const l=de(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{let l=L(s,ne(n,"float32"));const c=It(r.shape,o);c.length>0&&(l=P(ue(l,c),r.shape));const u=je(r);return nt(de(l,ne(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_={kernelName:Yi,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,n)=>{const{varianceEpsilon:r}=n,[o,a,i,l]=t,c=l==null?me(1):l,u=It(a.shape,o.shape),h=[];if(a.rank===1){for(let w=0;w<o.shape.length-1;++w)h.push(o.shape[w]);h.push(1)}const d=ce(o,a),p=L(s,c),f=Wh(Z(i,me(r))),m=L(L(L(f,f),f),me(-.5));return{x:()=>a.rank===1?P(L(L(s,Dn(P(f,[1,1,1,a.shape[0]]),h)),c),o.shape):P(L(L(s,f),c),o.shape),mean:()=>{let w=L(L(f,me(-1)),p);return a.rank===1&&(w=ue(w,u)),P(w,a.shape)},variance:()=>{let w=L(L(m,d),p);return a.rank===1&&(w=ue(w,u)),P(w,a.shape)},scale:()=>{const w=L(d,f);let C=L(s,w);return a.rank===1&&(C=ue(C,u)),P(C,a.shape)},offset:()=>{let w=s;return a.rank===1&&(w=ue(w,u)),P(w,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_={kernelName:Zi,inputsToSave:["x","indices"],gradFunc:(s,t,n)=>{const[r,o]=t,{axis:a}=n,i=Se(a,r.shape)[0];return{x:()=>{const c=r.shape,u=o.size,h=c.slice(0,i),d=h.length,p=c.slice(a,c.length).slice(1),f=p.length,m=Qw(0,d),g=Qw(d+1,d+1+f),y=e1([h,[u],p]),b=P(s,y),x=P(o,[u]),v=e1([[d],m,g]),w=_e(b,v);let C=Fm(w,x,r.shape[i]);const N=ja(v);return C=_e(C,N),C},indices:()=>o}}};function Qw(s,t){const n=[];for(let r=s;r<t;++r)n.push(r);return n}function e1(s){const t=[];for(let n=0;n<s.length;++n)for(let r=0;r<s[n].length;++r)t.push(s[n][r]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_={kernelName:Qo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>Le(n),b:()=>Le(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_={kernelName:ea,gradFunc:s=>({x:()=>ne(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __={kernelName:ta,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_={kernelName:na,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_={kernelName:sa,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P_={kernelName:Qi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{alpha:o}=n,a=ln(r,0);return{x:()=>jt(a,s,L(s,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_={kernelName:oa,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,Z(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_={kernelName:ra,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,ne(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_={kernelName:Mx,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const a=!0,i=bn(r);return ce(s,L(ue(s,o,a),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(s,t,n,r=5,o=1,a=1,i=.5){const l={x:s,y:t,dy:n},c={depthRadius:r,bias:o,alpha:a,beta:i};return R.runKernel(_u,l,c)}const W_=_({localResponseNormalizationBackprop_:V_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={kernelName:ol,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{depthRadius:a,bias:i,alpha:l,beta:c}=n;return{x:()=>W_(r,o,s,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(s,t,n,r){return t.rank<n.rank&&(t=P(t,pt(t.shape,r))),s.rank<n.rank&&(s=P(s,pt(s.shape,r))),{x:()=>L(s,ne(yn(n,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n1={kernelName:al,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const r=n,{reductionIndices:o}=r,a=t[0],i=t[1],l=Se(o,a.shape),c=t1(s,i,a,l);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={kernelName:aa,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>L(s,ne(gr(n,r),"float32")),b:()=>L(s,ne(_h(n,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(s,t,n,r,o,a,i){const l=T(s,"dy","maxPool3dGrad"),c=T(t,"input","maxPool3dGrad"),u=T(n,"output","maxPool3dGrad");let h=l,d=c,p=u,f=!1;c.rank===4&&(f=!0,h=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=P(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),I(h.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),I(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),I(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),i!=null&&I($t(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const m={dy:h,input:d,output:p},g={filterSize:r,strides:o,pad:a,dimRoundingMode:i},y=R.runKernel(Lu,m,g);return f?P(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const j_=_({maxPool3dGrad_:H_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_={kernelName:ll,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=n;return{x:()=>j_(s,r,o,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(s,t,n,r,o,a,i){const l=T(s,"dy","maxPoolGrad"),c=T(t,"input","maxPoolGrad"),u=T(n,"output","maxPoolGrad");I(c.rank===l.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${l.rank})`),I(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),I(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),i!=null&&I($t(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h={dy:l,input:c,output:u},d={filterSize:r,strides:o,pad:a,dimRoundingMode:i};return R.runKernel(Ou,h,d)}const X_=_({maxPoolGrad_:K_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y_={kernelName:il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{filterSize:a,strides:i,pad:l}=n;return{x:()=>X_(s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_={kernelName:cl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{axis:o}=n,a=Se(o,r.shape),l=Rt(r.shape,a)[1],c=j(l);return{x:()=>{const h=r.shape.slice();a.forEach(f=>{h[f]=1});const d=P(s,h);return de(L(d,wn(r.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_={kernelName:ul,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const r=n,{axis:o}=r,[a,i]=t,l=Se(o,a.shape),c=t1(s,i,a,l);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_={kernelName:ia,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>L(s,ne(yr(n,r),"float32")),b:()=>L(s,ne(ln(n,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO={kernelName:hl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const r=t[0],{paddings:o}=n,a=o.map(i=>i[0]);return{x:()=>Oe(s,a,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO={kernelName:la,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{const l=It(n.shape,o);return l.length>0?P(ue(s,l),n.shape):s},b:()=>{const l=L(s,nt(Ha(de(n,r)))),c=It(r.shape,o);return c.length>0?P(ue(l,c),r.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO={kernelName:ca,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{const l=L(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{const l=L(s,ne(n,"float32")),c=It(r.shape,o);return c.length>0?P(ue(l,c),r.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO={kernelName:dl,gradFunc:s=>({x:()=>nt(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO={kernelName:ml,inputsToSave:["indices"],gradFunc:(s,t)=>{const n=t[0];return{indices:()=>bt(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO={kernelName:fl,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO={kernelName:gl,saveAllInputs:!0,gradFunc:(s,t,n)=>{const{axis:r}=n;return jn(s,r).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s1={kernelName:yl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const r=t[0],{paddings:o}=n,a=o.map(i=>i[0]);return{x:()=>Oe(s,a,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO={kernelName:ua,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[n,r,o]=t,a=n,i=r,l=Ee(a.shape,i.shape);return{a:()=>{const h=ne(i,"float32");let d=L(s,L(h,qs(a,ce(h,me(1)))));const p=It(a.shape,l);return p.length>0&&(d=ue(d,p)),P(d,a.shape)},b:()=>{const h=ln(a,0),d=jt(h,xn(a),Le(a));let p=L(s,L(o,d));const f=It(i.shape,l);return f.length>0&&(p=ue(p,f)),P(p,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO={kernelName:bl,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[n,r]=t,o=ln(n,0);return{x:()=>jt(o,s,L(s,r)),alpha:()=>{let a=jt(o,Le(s),L(s,n));const i=It(r.shape,s.shape);return i.length>0&&(a=ue(a,i)),P(a,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO={kernelName:jo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{const l=de(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{let l=L(s,ne(n,"float32"));const c=It(r.shape,o);c.length>0&&(l=P(ue(l,c),r.shape));const u=je(r);return nt(de(l,ne(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uO={kernelName:ha,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,nt(je(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO={kernelName:pa,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t,r=L(yr(n,6),Ja(n));return{x:()=>L(s,ne(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO={kernelName:da,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,ne(Ja(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO={kernelName:xl,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>P(s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO={kernelName:vl,inputsToSave:["images"],gradFunc:(s,t,n)=>{const[r]=t,o={dy:s,images:r};return{images:()=>R.runKernel(ju,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO={kernelName:wl,inputsToSave:["images"],gradFunc:(s,t,n)=>{const[r]=t,o={dy:s,images:r};return{images:()=>R.runKernel(Hu,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gO={kernelName:$l,gradFunc:(s,t,n)=>{const{dims:r}=n,o=Se(r,s.shape);return{x:()=>$n(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO={kernelName:fa,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO={kernelName:ma,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>nt(de(s,L(qs(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xO={kernelName:Cl,inputsToSave:["condition"],gradFunc:(s,t)=>{const[n]=t;return{condition:()=>ne(Le(n),"float32"),t:()=>L(s,ne(n,s.dtype)),e:()=>L(s,ne(Zl(n),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO={kernelName:ga,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=ln(n,me(0)),o=me(gd),a=me(yd),i=L(s,a),l=L(L(s,o),bn(ne(n,"float32")));return jt(r,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO={kernelName:wa,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,L(n,ce(me(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O={kernelName:xa,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CO={kernelName:ya,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(Kl(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kO={kernelName:ba,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(Dh(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO={kernelName:kl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{begin:o,size:a}=n,i=r.shape,[l,c]=kh(r,o,a),u=[];for(let h=0;h<s.rank;h++)u.push([l[h],i[h]-l[h]-c[h]]);return{x:()=>js(s,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NO={kernelName:Tl,outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r]=t,{dim:o}=n,a=!0,i=L(s,r);return{logits:()=>ce(i,L(ue(i,[o],a),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO={kernelName:va,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,rs(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r1={kernelName:Nl,gradFunc:(s,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>ql(s,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o1={kernelName:Sl,gradFunc:(s,t,n)=>{const{axis:r}=n;return{x:()=>dt(s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO={kernelName:$a,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,L(Wt(ne(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EO={kernelName:Qu,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,L(ne(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO={kernelName:Ca,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=me(2);return{a:()=>L(s,L(o,ce(n,r))),b:()=>L(s,L(o,ce(r,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO={kernelName:Ta,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO={kernelName:ka,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Ee(n.shape,r.shape);return{a:()=>{let l=s;const c=It(n.shape,o);return c.length>0&&(l=ue(l,c)),P(l,n.shape)},b:()=>{let l=s;const c=It(r.shape,o);return c.length>0&&(l=ue(l,c)),P(nt(l),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FO={kernelName:Il,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:a}=n;Se(a,r.shape).forEach(u=>{o[u]=1});const l=P(s,o),c=L(l,wn(r.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _O={kernelName:Ia,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>de(s,je(Kl(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO={kernelName:Na,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(ce(me(1),je(n)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO={kernelName:Sa,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let i=Le(r);if(r.rank===1)for(let l=0;l<o[0];++l)i=Z(i,Oe(s,[l*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)i=Z(i,Oe(s,[l*r.shape[0],c*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)i=Z(i,Oe(s,[l*r.shape[0],c*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)for(let h=0;h<o[3];++h)i=Z(i,Oe(s,[l*r.shape[0],c*r.shape[1],u*r.shape[2],h*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PO={kernelName:El,gradFunc:(s,t,n)=>{const r=n,{perm:o}=r,a=ja(o);return{x:()=>_e(s,a)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MO={kernelName:Al,gradFunc:(s,t,n)=>{const r=n,{axis:o}=r;return{value:()=>Cn(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO={kernelName:Dl,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>BO(s,n)}}};function BO(s,t){const n=Cs(t,Le(t)),r=to(s,n);let o=gr(t,me(0,"int32"));const a=r.rank-o.rank;for(let l=0;l<a;++l)o=an(o,l+1);o=Hn(o,wn(r.shape,"bool"));const i=Le(r);return jt(o,r,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VO={kernelName:Rl,gradFunc:s=>({x:()=>Le(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=[Jw,WF,UF,GF,HF,jF,qF,KF,XF,YF,ZF,JF,t_,r_,o_,a_,i_,l_,c_,u_,h_,d_,f_,p_,y_,b_,x_,w_,v_,$_,cO,C_,k_,I_,N_,S_,E_,T_,A_,D_,R_,F_,__,O_,L_,P_,M_,z_,B_,U_,n1,n1,G_,q_,Y_,Z_,J_,Q_,eO,tO,nO,sO,rO,oO,aO,s1,s1,iO,lO,uO,hO,dO,pO,fO,mO,gO,yO,bO,xO,wO,vO,$O,CO,kO,IO,NO,SO,r1,r1,o1,o1,TO,AO,EO,DO,RO,FO,_O,OO,LO,PO,MO,zO,VO];for(const s of WO)zx(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.abs=function(){return this.throwIfDisposed(),gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acos=function(){return this.throwIfDisposed(),Zf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acosh=function(){return this.throwIfDisposed(),Jf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.add=function(s){return this.throwIfDisposed(),Z(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.all=function(s,t){return this.throwIfDisposed(),Sh(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.any=function(s,t){return this.throwIfDisposed(),Gl(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMax=function(s){return this.throwIfDisposed(),Zr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMin=function(s){return this.throwIfDisposed(),Qf(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asScalar=function(){return this.throwIfDisposed(),I(this.size===1,()=>"The array must have only 1 element."),P(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asType=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as2D=function(s,t){return this.throwIfDisposed(),P(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as3D=function(s,t,n){return this.throwIfDisposed(),P(this,[s,t,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as4D=function(s,t,n,r){return this.throwIfDisposed(),P(this,[s,t,n,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as5D=function(s,t,n,r,o){return this.throwIfDisposed(),P(this,[s,t,n,r,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asin=function(){return this.throwIfDisposed(),em(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asinh=function(){return this.throwIfDisposed(),tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan=function(){return this.throwIfDisposed(),nm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan2=function(s){return this.throwIfDisposed(),sm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atanh=function(){return this.throwIfDisposed(),rm(this)};G().prototype.avgPool=function(s,t,n,r){return this.throwIfDisposed(),jl(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),ql(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchNorm=function(s,t,n,r,o){return this.throwIfDisposed(),eo(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.broadcastTo=function(s){return this.throwIfDisposed(),Ba(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cast=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ceil=function(){return this.throwIfDisposed(),cm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),on(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof ze&&(s=[s]),dt([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv1d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Eh(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2dTranspose=function(s,t,n,r,o){return this.throwIfDisposed(),Ah(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Hs(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cos=function(){return this.throwIfDisposed(),Kl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cosh=function(){return this.throwIfDisposed(),Dh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cumsum=function(s,t,n){return this.throwIfDisposed(),Rh(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),dm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthwiseConv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Va(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dilation2d=function(s,t,n,r,o){return this.throwIfDisposed(),pm(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.divNoNan=function(s){return this.throwIfDisposed(),fm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.div=function(s){return this.throwIfDisposed(),de(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dot=function(s){return this.throwIfDisposed(),nw(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.elu=function(){return this.throwIfDisposed(),Ua(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.equal=function(s){return this.throwIfDisposed(),yn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.erf=function(){return this.throwIfDisposed(),mm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.exp=function(){return this.throwIfDisposed(),bn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expandDims=function(s){return this.throwIfDisposed(),an(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expm1=function(){return this.throwIfDisposed(),gm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.fft=function(){return this.throwIfDisposed(),oc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floor=function(){return this.throwIfDisposed(),Ha(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floorDiv=function(s){return this.throwIfDisposed(),Nh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.gather=function(s,t){return this.throwIfDisposed(),to(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greaterEqual=function(s){return this.throwIfDisposed(),gr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greater=function(s){return this.throwIfDisposed(),ln(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ifft=function(){return this.throwIfDisposed(),Za(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.irfft=function(){return this.throwIfDisposed(),Kh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isFinite=function(){return this.throwIfDisposed(),rw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isInf=function(){return this.throwIfDisposed(),ow(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isNaN=function(){return this.throwIfDisposed(),bm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Xl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.lessEqual=function(s){return this.throwIfDisposed(),yr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.less=function(s){return this.throwIfDisposed(),_h(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.localResponseNormalization=function(s,t,n,r){return this.throwIfDisposed(),xm(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSigmoid=function(){return this.throwIfDisposed(),lw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSoftmax=function(s){return this.throwIfDisposed(),Lh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),vm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log=function(){return this.throwIfDisposed(),xn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log1p=function(){return this.throwIfDisposed(),Yl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalAnd=function(s){return this.throwIfDisposed(),Hn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalNot=function(){return this.throwIfDisposed(),Zl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalOr=function(s){return this.throwIfDisposed(),Ph(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalXor=function(s){return this.throwIfDisposed(),uw(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.matMul=function(s,t,n){return this.throwIfDisposed(),Te(this,s,t,n)};G().prototype.maxPool=function(s,t,n,r){return this.throwIfDisposed(),Jl(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.max=function(s,t){return this.throwIfDisposed(),Gn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.maximum=function(s){return this.throwIfDisposed(),Cs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mean=function(s,t){return this.throwIfDisposed(),ct(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.min=function(s,t){return this.throwIfDisposed(),Ql(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.minimum=function(s){return this.throwIfDisposed(),qa(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),Cm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mod=function(s){return this.throwIfDisposed(),km(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mul=function(s){return this.throwIfDisposed(),L(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.neg=function(){return this.throwIfDisposed(),nt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.norm=function(s,t,n){return this.throwIfDisposed(),Qh(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.notEqual=function(s){return this.throwIfDisposed(),so(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.oneHot=function(s,t=1,n=0){return this.throwIfDisposed(),La(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.onesLike=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pad=function(s,t){return this.throwIfDisposed(),js(this,s,t)};G().prototype.pool=function(s,t,n,r,o){return this.throwIfDisposed(),pw(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pow=function(s){return this.throwIfDisposed(),qs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prelu=function(s){return this.throwIfDisposed(),tc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prod=function(s,t){return this.throwIfDisposed(),zh(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reciprocal=function(){return this.throwIfDisposed(),Nm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu6=function(){return this.throwIfDisposed(),Bh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshapeAs=function(s){return this.throwIfDisposed(),P(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshape=function(s){return this.throwIfDisposed(),P(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeBilinear=function(s,t,n){return this.throwIfDisposed(),Ow(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeNearestNeighbor=function(s,t,n){return this.throwIfDisposed(),Lw(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reverse=function(s){return this.throwIfDisposed(),$n(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rfft=function(){return this.throwIfDisposed(),ac(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.round=function(){return this.throwIfDisposed(),Vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rsqrt=function(){return this.throwIfDisposed(),Wh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.selu=function(){return this.throwIfDisposed(),Uh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.separableConv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Sm(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sigmoid=function(){return this.throwIfDisposed(),rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sign=function(){return this.throwIfDisposed(),Tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sin=function(){return this.throwIfDisposed(),Gh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sinh=function(){return this.throwIfDisposed(),Hh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.slice=function(s,t){return this.throwIfDisposed(),Oe(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softmax=function(s){return this.throwIfDisposed(),rc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softplus=function(){return this.throwIfDisposed(),no(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),ec(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.split=function(s,t){return this.throwIfDisposed(),cn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sqrt=function(){return this.throwIfDisposed(),Wt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.square=function(){return this.throwIfDisposed(),je(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squaredDifference=function(s){return this.throwIfDisposed(),Xh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squeeze=function(s){return this.throwIfDisposed(),ks(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stack=function(s,t){this.throwIfDisposed();const n=s instanceof ze?[this,s]:[this,...s];return Cn(n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.step=function(s){return this.throwIfDisposed(),Ja(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stridedSlice=function(s,t,n,r,o,a,i,l){return this.throwIfDisposed(),Am(this,s,t,n,r,o,a,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sub=function(s){return this.throwIfDisposed(),ce(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sum=function(s,t){return this.throwIfDisposed(),ue(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tan=function(){return this.throwIfDisposed(),Dm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tanh=function(){return this.throwIfDisposed(),Qr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tile=function(s){return this.throwIfDisposed(),Dn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.topk=function(s,t){return this.throwIfDisposed(),Rm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.transpose=function(s){return this.throwIfDisposed(),_e(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unique=function(s){return this.throwIfDisposed(),Zh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),Fm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unstack=function(s){return this.throwIfDisposed(),jn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.where=function(s,t){return this.throwIfDisposed(),jt(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.zerosLike=function(){return this.throwIfDisposed(),Le(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let ag;function Nt(){return ag==null&&(ag=U0().epsilon()),ag}function as(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ns extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Ns.prototype)}}class Kn extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Kn.prototype)}}class M extends Error{constructor(t){super(t);Object.setPrototypeOf(this,M.prototype)}}class ke extends Error{constructor(t){super(t);Object.setPrototypeOf(this,ke.prototype)}}class ig extends Error{constructor(t){super(t);Object.setPrototypeOf(this,ig.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function co(s,t){if(Array.isArray(s)){let n=[];for(let r=0;r<t;r++)n=n.concat(s);return n}else{const n=new Array(t);return n.fill(s),n}}function Ss(s,t){if(!s)throw new ig(t)}function a1(s,t){let n=0;for(const r of s)r===t&&n++;return n}function un(s){return s.length===1?s[0]:s}function et(s){return Array.isArray(s)?s:[s]}function Zs(s){const n=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function uo(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}let Xn={};function lg(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function cg(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>cg(t));else{const t=Object.keys(s);for(const n of t){const r=s[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?s[n]=r.value:cg(r))}}}function dc(s,t={},n={},r="object",o=!1){if(typeof s=="string"){const a=s;let i;if(a in n)i=n[a];else if(a in Xn)i=Xn[a];else if(i=t[a],i==null)throw new M(`Unknown ${r}: ${s}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const a=s;if(a.className==null||a.config==null)throw new M(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);const i=a.className;let l,c;if(i in n?[l,c]=n[i]:i in Xn?[l,c]=Xn.className:i in t&&([l,c]=t[i]),l==null)throw new M(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const u={};for(const f of Object.keys(Xn))u[f]=Xn[f];for(const f of Object.keys(n))u[f]=n[f];const h=a.config;h.customObjects=u;const d=Object.assign({},Xn);for(const f of Object.keys(n))Xn[f]=n[f];cg(a.config);const p=c(l,a.config,n,o);return Xn=Object.assign({},d),p}else{const u=Object.assign({},Xn);for(const d of Object.keys(n))Xn[d]=n[d];const h=new l(a.config);return Xn=Object.assign({},u),h}}}function UO(s,t){return s<t?-1:s>t?1:0}function bd(s,t){return-1*UO(s,t)}function br(s){if(s==null)return s;const t=[];for(const n of s)t.indexOf(n)===-1&&t.push(n);return t}function GO(s){if(s==null)throw new M(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function ho(s,t,n){if(n!=null&&s.indexOf(n)<0)throw new M(`${n} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function ug(s,t,n=0,r=1/0){return Ss(n>=0),Ss(r>=n),Array.isArray(s)&&s.length>=n&&s.length<=r&&s.every(o=>typeof o===t)}function Ft(s,t){Array.isArray(s)?(I(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((n,r)=>Ft(n,`element ${r+1} of ${t}`))):I(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${i1(s)}.`)}function i1(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>i1(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function HO(s,t,n){let r=n!=null?n():zt(),o;return(...i)=>{const l=n!=null?n():zt();return l-r<t||(r=l,o=s(...i)),o}}function l1(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hg(s,t){return W(()=>Wt(ue(L(s,s),t,!0)))}class pc extends Yr{getConfig(){return{}}}class dg extends pc{constructor(t){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>{const n=hg(t,this.axis),r=on(n,0,this.maxValue);return L(t,de(r,Z(Nt(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}dg.className="MaxNorm";Y(dg);class pg extends pc{constructor(t){super();this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>de(t,Z(Nt(),hg(t,this.axis))))}getConfig(){return{axis:this.axis}}}pg.className="UnitNorm";Y(pg);class fg extends pc{apply(t){return os(t)}}fg.className="NonNeg";Y(fg);class mg extends pc{constructor(t){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return W(()=>{const n=hg(t,this.axis),r=Z(L(this.rate,on(n,this.minValue,this.maxValue)),L(1-this.rate,n));return L(t,de(r,Z(Nt(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}mg.className="MinMaxNorm";Y(mg);const c1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function St(s){return lg(s)}function u1(s,t={}){return dc(s,An.getMap().classNameMap,t,"constraint")}function Tt(s){if(s==null)return null;if(typeof s=="string"){const n={className:s in c1?c1[s]:s,config:{}};return u1(n)}else return s instanceof pc?s:u1(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jO(s){return new dg(s)}function qO(s){return new pg(s)}function KO(){return new fg}function XO(s){return new mg(s)}var YO=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",maxNorm:jO,unitNorm:qO,nonNeg:KO,minMaxNorm:XO});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ZO=["channelsFirst","channelsLast"],JO=["nearest","bilinear"],QO=["valid","same","causal"],eL=["max","avg"],tL=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ei=new Map;function mt(s){ho(ZO,"DataFormat",s)}function nL(s){ho(JO,"InterpolationFormat",s)}function Rn(s){ho(QO,"PaddingMode",s)}function h1(s){ho(eL,"PoolMode",s)}const fc=[],d1="/";function po(s,t){fc.push(s);try{const n=t();return fc.pop(),n}catch(n){throw fc.pop(),n}}function sL(){return fc.length===0?"":fc.join(d1)+d1}function p1(s){if(!m1(s))throw new Error("Not a valid tensor name: '"+s+"'");return sL()+s}function f1(s){if(!m1(s))throw new Error("Not a valid tensor name: '"+s+"'");ei.has(s)||ei.set(s,0);const t=ei.get(s);if(ei.set(s,ei.get(s)+1),t>0){const n=`${s}_${t}`;return ei.set(n,1),n}else return s}const rL=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function m1(s){return!!s.match(rL)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oL(s){return s===parseInt(s.toString(),10)}function xr(s,t,n){t==null&&(t=0),n==null&&(n=s.length);let r=1;for(let o=t;o<n;++o)r*=s[o];return r}function ti(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<s.length;n++){const r=s[n];r<t&&(t=r)}return t}function wr(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<s.length;n++){const r=s[n];r>t&&(t=r)}return t}function is(s,t){if(t<s)throw new M(`end (${t}) < begin (${s}) is forbidden.`);const n=[];for(let r=s;r<t;++r)n.push(r);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xd(s,t){return ne(s,t)}function mc(s,t=-1){const n=s.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),P(s,n)}function aL(s,t){return W(()=>{if(s.shape.length!==2)throw new M(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const n=mc(s,1);return bg(n,[1,t,1])})}function iL(s){const t=[xr(s.shape)];return P(s,t)}function lL(s){if(s.rank<=1)throw new M(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],xr(s.shape,1)];return P(s,t)}function fo(s,t,n){return W(()=>{switch(s.rank){case 1:return jh(s,t,n);case 2:return Em(s,[t,0],[n,s.shape[1]]);case 3:return qh(s,[t,0,0],[n,s.shape[1],s.shape[2]]);case 4:return sc(s,[t,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Oe(s,[t,0,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Oe(s,[t,0,0,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new M(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function gg(s,t,n){return W(()=>{switch(s.rank){case 1:return jh(s,t,n);case 2:return Em(s,[0,t],[s.shape[0],n]);case 3:return qh(s,[0,0,t],[s.shape[0],s.shape[1],n]);case 4:return sc(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],n]);default:throw new M(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function wd(s,t,n,r){return W(()=>{switch(s.rank){case 1:return jh(s,t,n);case 2:switch(r){case 1:return fo(s,t,n);case 2:return gg(s,t,n);default:throw new M(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return fo(s,t,n);case 2:return qh(s,[0,t,0],[s.shape[0],n,s.shape[2]]);case 3:return gg(s,t,n);default:throw new M(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return fo(s,t,n);case 2:return sc(s,[0,t,0,0],[s.shape[0],n,s.shape[2],s.shape[3]]);case 3:return sc(s,[0,0,t,0],[s.shape[0],s.shape[1],n,s.shape[3]]);case 4:return gg(s,t,n);default:throw new M(`The axis is not within the rank of the tensor ${r}`)}default:throw new M(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function yg(s,t=-1){let n;return t<0&&(n=s[0].rank,n!==0?t=n:t=0),t===s[0].rank&&(t=-1),dt(s,t)}function g1(s,t){switch(s.rank){case 1:return X0([s,t]);case 2:return Y0([s,t],0);case 3:return Z0([s,t],0);case 4:return J0([s,t],0);default:throw new M(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function bg(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new M(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return Dn(s,t)}function vd(s,t=0,n=1,r,o){return vw(s,t,n,r,o)}function Ts(s,t,n,r){if(s.rank<2||t.rank<2)throw new ke(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const o=s.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(o!==a)throw new ke(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return rd({a:s,b:t,transposeA:!1,transposeB:!1,bias:r?xg(s.rank,r,as()):null,activation:n});{const o=s.shape.slice(),a=o.pop();s=P(s,[-1,a]);const i=t.shape.slice(),l=i.pop(),c=i.pop(),u=[...i,l],h=Array.from({length:t.rank},(m,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=P(_e(t,h),[c,-1]);const d=[...o,...u];return P(rd({a:s,b:t,transposeA:!1,transposeB:!1,bias:r?xg(s.rank,r,as()):null,activation:n}),d)}}function y1(s,t,n){return W(()=>(Array.isArray(t)?t=Ut(t,"int32"):t=ne(t,"int32"),to(s,t,n)))}function gc(s){return L(s,s)}function xg(s,t,n){const r=t.shape;if(t.rank!==1&&t.rank!==s)throw new M(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1,1]):P(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,1,r[0]]):P(t,[1].concat(r))}else if(s===4){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1]):P(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,r[0]]):P(t,[1].concat(r))}else if(s===3){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1]):P(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,r[0]]):P(t,[1].concat(r))}else if(s<3)return t;throw new M(`Unsupported input rank by biasAdd: ${t.rank}`)}function ls(s,t,n){return W(()=>(n==null&&(n=as()),mt(n),Z(s,xg(s.rank,t,n))))}function cL(s,t=1){if(t!==1)throw new ke(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ua(s)}function uL(s){return W(()=>de(s,Z(gt(s),1)))}function b1(s,t,n,r){return W(()=>Sw(s,t,n,r))}function hL(s){return W(()=>{const t=Z(.5,L(.2,s));return on(t,0,1)})}function yc(s,t,n=!1){return n?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dL=["fanIn","fanOut","fanAvg"],pL=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fL(s){ho(dL,"FanMode",s)}function mL(s){ho(pL,"Distribution",s)}class Yn extends Yr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class wg extends Yn{apply(t,n){return bt(t,n)}}wg.className="Zeros";Y(wg);class $d extends Yn{apply(t,n){return wn(t,n)}}$d.className="Ones";Y($d);class vg extends Yn{constructor(t){super();if(typeof t!="object")throw new M(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new M(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return W(()=>L(me(this.value),wn(t,n)))}getConfig(){return{value:this.value}}}vg.className="Constant";Y(vg);class $g extends Yn{constructor(t){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return Xa(t,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}$g.className="RandomUniform";Y($g);class Cg extends Yn{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ke(`randomNormal does not support dType ${n}.`);return vd(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cg.className="RandomNormal";Y(Cg);class kg extends Yn{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ke(`truncatedNormal does not support dType ${n}.`);return Yh(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}kg.className="TruncatedNormal";Y(kg);class Ig extends Yn{constructor(t){super();this.gain=t.gain!=null?t.gain:1}apply(t,n){return W(()=>{if(t.length!==2||t[0]!==t[1])throw new M("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,ym(t[0]))})}getConfig(){return{gain:this.gain}}}Ig.className="Identity";Y(Ig);function gL(s,t="channelsLast"){let n,r;if(mt(t),s.length===2)n=s[0],r=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const o=xr(s,2);n=s[1]*o,r=s[0]*o}else if(t==="channelsLast"){const o=xr(s,0,s.length-2);n=s[s.length-2]*o,r=s[s.length-1]*o}}else{const o=xr(s);n=Math.sqrt(o),r=Math.sqrt(o)}return[n,r]}class hn extends Yn{constructor(t){super();if(t.scale<0)throw new M(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,fL(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,mL(this.distribution),this.seed=t.seed}apply(t,n){const r=gL(t),o=r[0],a=r[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(o+a)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new ke(`${this.getClassName()} does not support dType ${n}.`);return Yh(t,0,l,n,this.seed)}else{const l=Math.sqrt(3*i);return Xa(t,-l,l,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}hn.className="VarianceScaling";Y(hn);class Cd extends hn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Cd.className="GlorotUniform";Y(Cd);class kd extends hn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}kd.className="GlorotNormal";Y(kd);class Id extends hn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Id.className="HeNormal";Y(Id);class Nd extends hn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Nd.className="HeUniform";Y(Nd);class Sd extends hn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Sd.className="LeCunNormal";Y(Sd);class Td extends hn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Td.className="LeCunNormal";Y(Td);class Ng extends Yn{constructor(t){super();if(this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new ke("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,n){return W(()=>{if(t.length<2)throw new ke("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const r=t[0]>t[1]?[t[1],t[0]]:t,o=vd(r,0,1,"float32");let a=Mw.gramSchmidt(o);return t[0]>t[1]&&(a=_e(a)),L(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Ng.className="Orthogonal";Y(Ng);const x1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function w1(s,t={}){return dc(s,An.getMap().classNameMap,t,"initializer")}function ut(s){return lg(s)}function st(s){if(typeof s=="string"){const t=s in x1?x1[s]:s;if(t==="GlorotNormal")return new kd;if(t==="GlorotUniform")return new Cd;if(t==="HeNormal")return new Id;if(t==="HeUniform")return new Nd;if(t==="LeCunNormal")return new Sd;if(t==="LeCunUniform")return new Td;{const n={};return n.className=t,n.config={},w1(n)}}else return s instanceof Yn?s:w1(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yL(){return new wg}function bL(){return new $d}function xL(s){return new vg(s)}function wL(s){return new $g(s)}function vL(s){return new Cg(s)}function $L(s){return new kg(s)}function CL(s){return new Ig(s)}function kL(s){return new hn(s)}function IL(s){return new Cd(s)}function NL(s){return new kd(s)}function SL(s){return new Id(s)}function TL(s){return new Nd(s)}function EL(s){return new Sd(s)}function AL(s){return new Td(s)}function DL(s){return new Ng(s)}var RL=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",zeros:yL,ones:bL,constant:xL,randomUniform:wL,randomNormal:vL,truncatedNormal:$L,identity:CL,varianceScaling:kL,glorotUniform:IL,glorotNormal:NL,heNormal:SL,heUniform:TL,leCunNormal:EL,leCunUniform:AL,orthogonal:DL});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let FL=0;function v1(){return FL++}const Ed={};function Ad(s=""){return s in Ed||(Ed[s]=0),Ed[s]+=1,s+Ed[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sg(s){return Array.isArray(s)&&Array.isArray(s[0])}function Dd(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function Ie(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new M(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Be(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new M(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rd(s){let t=0;for(const n of s)n.shape.length===0?t+=1:t+=n.shape.reduce((r,o)=>r*o);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $1="Variable";class C1{constructor(t,n="float32",r=$1,o=!0,a=null){this.dtype=n==null?"float32":n,this.shape=t.shape,this.id=v1(),r=r==null?$1:r,this.originalName=p1(r),this.name=f1(this.originalName),this.trainable_=o,this.constraint=a,this.val=Cw(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),_L(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function _L(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function Tg(s){return s.map(t=>t.read())}function Eg(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xt{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class cs{constructor(t,n,r,o,a,i,l){this.dtype=t,this.shape=n,this.sourceLayer=r,this.inputs=o,this.callArgs=a,this.outputTensorIndex=l,this.id=v1(),i!=null&&(this.originalName=p1(i),this.name=f1(this.originalName)),this.rank=n.length}}let OL=0;class Fd{constructor(t,n){this.callArgs=n,this.id=OL++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const r of t.inboundLayers)r!=null&&r.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const n of this.inboundLayers)n!=null?t.push(n.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let LL=0;class Pe extends Yr{constructor(t={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=LL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=t.name;if(!n){const r=this.getClassName();n=Zs(r)+"_"+Ad(r)}if(this.name=n,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let r;if(t.batchInputShape!=null)r=t.batchInputShape;else if(t.inputShape!=null){let a=null;t.batchSize!=null&&(a=t.batchSize),r=[a].concat(t.inputShape)}this.batchInputShape=r;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,n){return t.name+"_ib-"+n.toString()}getNodeAtIndex(t,n){if(this.inboundNodes.length===0)throw new Kn(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=t)throw new M(`Asked to get ${n} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return un(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return un(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} is not connected, no input to return.`);return un(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return un(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(n=>n.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=et(t),this.inputSpec==null||this.inputSpec.length===0)return;const n=et(this.inputSpec);if(t.length!==n.length)throw new M(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){const o=t[r],a=n[r];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new M(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new M(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new M(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new M(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const l=o.shape;for(const c in a.axes){const u=Number(c),h=a.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new M(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const c=a.shape[l],u=o.shape[l];if(c!=null&&u!=null&&c!==u)throw new M(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(t,n){return t}invokeCallHook(t,n){this._callHook!=null&&this._callHook(t,n)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,n){n=n||{},this.assertNotDisposed();const r=et(t);let o=!0;for(const i of r)if(!(i instanceof cs)){o=!1;break}let a=!0;for(const i of r)if(i instanceof cs){a=!1;break}if(o===a)throw new M("Arguments to apply() must be all SymbolicTensors or all Tensors");return po(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of et(t))i.push(l.shape);this.build(un(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let i=this.call(t,n);const l=et(i),c=[];for(let u of l)r.indexOf(u)!==-1&&(u=u.clone()),c.push(u);if(i=un(c),this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=PL(t),l=this.computeOutputShape(i);let c;const u=ML(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?c=l.map((h,d)=>new cs(u,h,this,et(t),n,this.name,d)):c=new cs(u,l,this,et(t),n,this.name),this.addInboundNode(t,c,null,null,i,l,n),this._refCount++,this.activityRegularizer!=null)throw new ke("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((r,o)=>{r!=null&&t[o]!=null&&t[o]!==r&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ns(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const n of this.inboundNodes){const r=JSON.stringify(n.outputShapes);t.indexOf(r)===-1&&t.push(r)}if(t.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Ns(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Kn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rd(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Tg(t?this.trainableWeights:this.weights)}setWeights(t){W(()=>{const n=this.weights;if(n.length!==t.length)throw new M(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${n.length} weights. Provided weights: ${t}...`);if(n.length===0)return;const r=[],o=Tg(n);for(let a=0;a<o.length;++a){const i=o[a],l=n[a],c=t[a];if(!De(i.shape,c.shape))throw new M(`Layer weight shape ${i.shape} not compatible with provided weight shape ${c.shape}`);r.push([l,c])}Eg(r)})}addWeight(t,n,r,o,a,i,l,c){if(this._addedWeightNames.indexOf(t)!==-1)throw new M(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(o=c!=null?c():st("zeros"));const u=o.apply(n,r),h=new C1(u,r,t,i,l);return u.dispose(),a!=null&&this.addLoss(()=>a.apply(h.read())),i==null&&(i=!0),i?this._trainableWeights.push(h):this._nonTrainableWeights.push(h),h}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=et(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(t,n,r,o,a,i,l=null){const c=et(t);n=et(n),r=et(r),o=et(o),a=Dd(a),i=Dd(i);const u=[],h=[],d=[];for(const p of c)u.push(p.sourceLayer),h.push(p.nodeIndex),d.push(p.tensorIndex);new Fd({outboundLayer:this,inboundLayers:u,nodeIndices:h,tensorIndices:d,inputTensors:c,outputTensors:n,inputMasks:r,outputMasks:o,inputShapes:a,outputShapes:i},l);for(let p=0;p<n.length;p++)n[p].sourceLayer=this,n[p].nodeIndex=this.inboundNodes.length-1,n[p].tensorIndex=p}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount==0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function PL(s){s=et(s);const t=[];for(const n of s)t.push(n.shape);return un(t)}function ML(s){return"float32"}function k1(s,t,n){if((t==null||n!=null&&n>0)&&(t=s.sourceLayer,n=s.nodeIndex),t.inboundNodes.length===0)return[s];{const r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{const o=[];for(let a=0;a<r.inboundLayers.length;a++){const i=r.inputTensors[a],l=r.inboundLayers[a],c=r.nodeIndices[a],u=k1(i,l,c);for(const h of u)o.indexOf(h)===-1&&o.push(h)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ni extends Pe{constructor(t){super({dtype:t.dtype,name:t.name!=null?t.name:Ad("input").toString()});if(t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new M("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new M("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new M("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=t.dtype||"float32";this.batchInputShape=n,this.dtype=r,this.inputSpec=[{shape:n}];const o=new cs(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Fd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new M(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ni.className="InputLayer";Y(ni);function I1(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new M("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let n=s.dtype;return n==null&&(n="float32"),new ni({batchInputShape:t,name:s.name,dtype:n,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function vr(s){if(s==null)return;const t=[],n=[],r=[];for(const o in s){const a=s[o];if(typeof a!="number"){const i=a;t.push(i.data()),n.push(o),r.push(i)}}if(t.length>0){const o=await Promise.all(t);for(let a=0;a<o.length;++a)s[n[a]]=o[a][0];Ce(r)}}function N1(s){if(s!=null)for(const t in s){const n=s[t];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var S1;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(S1||(S1={}));const zL=125;class si{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,n){}async onEpochEnd(t,n){}async onBatchBegin(t,n){}async onBatchEnd(t,n){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class T1{constructor(t,n=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=n}append(t){this.callbacks.push(t)}setParams(t){for(const n of this.callbacks)n.setParams(t)}setModel(t){for(const n of this.callbacks)n.setModel(t)}async onEpochBegin(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onEpochBegin(t,n)}async onEpochEnd(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onEpochEnd(t,n)}async onBatchBegin(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onBatchBegin(t,n)}async onBatchEnd(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onBatchEnd(t,n)}async onTrainBegin(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainEnd(t)}}class BL extends si{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,n){n==null&&(n={});const r=n.size==null?0:n.size;this.seen+=r;for(const o in n){const a=n[o];if(typeof a=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+a*r;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const l=W(()=>Z(this.totals[o],L(a,r)));this.totals[o]=l,i!=null&&i.dispose()}}}async onEpochEnd(t,n){if(n!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?n[r]=this.totals[r]/this.seen:W(()=>{const o=L(de(1,this.seen),this.totals[r]);n[r]=o,this.totals[r].dispose(),At(n[r])}))}}class E1 extends si{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,n){n==null&&(n={}),this.epoch.push(t);for(const r in n)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(n[r])}async syncData(){const t=[],n=[],r=[];for(const a in this.history){const i=this.history[a];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const c=i[l];t.push(c.data()),n.push(a),r.push(l)}}const o=await Promise.all(t);for(let a=0;a<o.length;++a)this.history[n[a]][r[a]].dispose(),this.history[n[a]][r[a]]=o[a][0]}}class A1 extends si{constructor(t,n){super();if(this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||zw,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=zL),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ou(this.yieldEvery)&&(this.maybeWait=HO(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,n,r){const o=[];this.yield!=null&&(await vr(r),o.push(this.yield(t,n,r))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(t,n){this.currentEpoch=t,this.epochBegin!=null&&(await vr(n),await this.epochBegin(t,n))}async onEpochEnd(t,n){const r=[];this.epochEnd!=null&&(await vr(n),r.push(this.epochEnd(t,n))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(t,n){this.batchBegin!=null&&(await vr(n),await this.batchBegin(t,n))}async onBatchEnd(t,n){const r=[];this.batchEnd!=null&&(await vr(n),r.push(this.batchEnd(t,n))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):ou(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,t,n)),await Promise.all(r)}async onTrainBegin(t){this.trainBegin!=null&&(await vr(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await vr(t),await this.trainEnd(t))}}function D1(s,t){return s==null&&(s={}),s instanceof si?[s]:Array.isArray(s)&&s[0]instanceof si?s:et(s).map(r=>new A1(r,t))}class Fn{constructor(){}static registerCallbackConstructor(t,n){I(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Fn.checkForDuplicate(n),Fn.constructors[t]==null&&(Fn.constructors[t]=[]),Fn.constructors[t].push(n)}static checkForDuplicate(t){for(const n in Fn.constructors)Fn.constructors[+n].forEach(o=>{if(o===t)throw new M("Duplicate callback constructor.")})}static clear(){Fn.constructors={}}static createCallbacks(t){const n=[];for(const r in Fn.constructors){const o=+r;t>=o&&n.push(...Fn.constructors[o])}return n.map(r=>new r)}}Fn.constructors={};function R1(s,t,n,r,o,a,i,l,c){const u=new E1,h=[new BL,...Fn.createCallbacks(t)];s!=null&&h.push(...s),h.push(u);const d=new T1(h);return d.setParams({epochs:n,initialEpoch:r,samples:o,steps:a,batchSize:i,verbose:t,doValidation:l,metrics:c}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function us(s,t={},n=!1){return dc(s,An.getMap().classNameMap,t,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _d(s,t){return W(()=>{s.dtype!=="float32"&&(s=ne(s,"float32"));const n=ue(gc(s),t,!0),r=Ga(n.shape,Nt()),o=Wt(Cs(n,r));return de(s,o)})}function mo(s,t){return W(()=>ct(gc(ce(t,s)),-1))}function Od(s,t){return W(()=>ct(gt(ce(t,s)),-1))}function ri(s,t){return W(()=>{const n=ce(s,t),r=on(gt(s),Nt(),Number.MAX_VALUE),o=gt(de(n,r));return L(100,ct(o,-1))})}function VL(s,t){return W(()=>{const n=on(t,Nt(),Number.MAX_VALUE),r=xn(Z(1,n)),o=on(s,Nt(),Number.MAX_VALUE),a=xn(Z(1,o));return ct(gc(ce(r,a)),-1)})}function WL(s,t){return W(()=>{const n=Cs(0,ce(1,L(s,t)));return ct(gc(n),-1)})}function UL(s,t){return W(()=>{const n=Cs(0,ce(1,L(s,t)));return ct(n,-1)})}function GL(s,t){return W(()=>{const n=ue(L(s,t),-1),r=Gn(L(ce(1,s),t),-1);return Cs(0,Z(1,ce(r,n)))})}function HL(s,t){return W(()=>{const n=Math.log(2),r=ce(t,s),o=ce(Z(r,no(L(-2,r))),n);return ct(o,-1)})}function bc(s,t,n=!1){return W(()=>{if(n)t=rc(t);else{const r=ue(t,t.shape.length-1,!0);t=de(t,r)}return t=on(t,Nt(),1-Nt()),nt(ue(L(ne(s,"float32"),xn(t)),t.shape.length-1))})}function Ld(s,t,n=!1){return W(()=>{const r=ne(Ha(iL(s)),"int32");t=on(t,Nt(),1-Nt());const o=t.shape,a=P(La(r,o[o.length-1]),o);return bc(a,t,n)})}function jL(s,t){if(!De(s.shape,t.shape))throw new M(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{const n=os(t),r=nt(gt(t));return Z(ce(n,L(t,s)),Yl(bn(r)))})}function Pd(s,t){return W(()=>{let n;return n=on(t,Nt(),1-Nt()),n=xn(de(n,ce(1,n))),ct(jL(s,n),-1)})}function qL(s,t){return W(()=>{const n=on(s,Nt(),1),r=on(t,Nt(),1);return ue(L(s,xn(de(n,r))),-1)})}function KL(s,t){return W(()=>{const n=xn(Z(Nt(),t));return ct(ce(t,L(s,n)),-1)})}function Ag(s,t){return W(()=>{const n=_d(s,-1),r=_d(t,-1),o=L(n,r);return nt(ue(o,-1))})}const Md={meanSquaredError:mo,meanAbsoluteError:Od,meanAbsolutePercentageError:ri,meanSquaredLogarithmicError:VL,squaredHinge:WL,hinge:UL,categoricalHinge:GL,logcosh:HL,categoricalCrossentropy:bc,sparseCategoricalCrossentropy:Ld,binaryCrossentropy:Pd,kullbackLeiblerDivergence:qL,poisson:KL,cosineProximity:Ag};function Dg(s){if(typeof s=="string"){if(s in Md)return Md[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new M(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rg(s,t){return W(()=>{const n=L(.5,vn(t)),r=xd(ln(t,n),s.dtype);return ct(yn(s,r),-1)})}function Fg(s,t){return W(()=>xd(yn(Zr(s,-1),Zr(t,-1)),"float32"))}function F1(s,t){return W(()=>ne(ue(Hn(yn(s,1),yn(t,1))),"float32"))}function XL(s,t){return W(()=>ne(ue(Hn(yn(s,1),yn(t,0))),"float32"))}function YL(s,t){return W(()=>ne(ue(Hn(yn(s,0),yn(t,1))),"float32"))}function _1(s,t){return W(()=>{const n=F1(s,t),r=YL(s,t),o=Z(n,r);return ne(jt(ln(o,0),de(n,o),0),"float32")})}function ZL(s,t){return W(()=>{const n=F1(s,t),r=XL(s,t),o=Z(n,r);return ne(jt(ln(o,0),de(n,o),0),"float32")})}function O1(s,t){return Pd(s,t)}function L1(s,t){return s.rank===t.rank&&(s=ks(s,[s.rank-1])),t=Zr(t,-1),t.dtype!==s.dtype&&(t=ne(t,s.dtype)),ne(yn(s,t),"float32")}const JL=mo,QL=mo,e3=Od,t3=Od,n3=ri,s3=ri,_g=bc,r3=Ag,P1=Ld,zd={binaryAccuracy:Rg,categoricalAccuracy:Fg,precision:_1,categoricalCrossentropy:_g,sparseCategoricalCrossentropy:P1,mse:JL,MSE:QL,mae:e3,MAE:t3,mape:n3,MAPE:s3,cosine:r3};function o3(s){if(typeof s=="string"&&s in zd)return zd[s];if(typeof s!="string"&&s!=null)return s;throw new M(`Unknown metric ${s}`)}function Bd(s){if(Ss(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const n of Object.keys(Md))if(Md[n]===s){t=n;break}if(t!==void 0)return t;for(const n of Object.keys(zd))if(zd[n]===s){t=n;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a3(s){const t={Adagrad:()=>io.adagrad(.01),Adadelta:()=>io.adadelta(1,.95,Nt()),Adam:()=>io.adam(.001,.9,.999,Nt()),Adamax:()=>io.adamax(.002,.9,.999,Nt(),0),RMSProp:()=>io.rmsprop(.001,.9,0,Nt()),SGD:()=>io.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new M(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const M1=1*1024*1024;function z1(s,t,n=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!Og(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const r=JSON.stringify(s);r.length>M1&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${M1}.`)}}function Og(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const n of t)if(typeof n!="string"||!Og(s[n]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!Og(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i3(s,t,n,r=console.log){const o=c3(s),a=["Layer (type)","Output shape","Param #"];o?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(h=>Math.floor(t*h)));let i;if(!o){a.push("Receives inputs"),i=[];for(const h in s.nodesByDepth)i.push(...s.nodesByDepth[h])}r("_".repeat(t)),Vd(a,n,r),r("=".repeat(t));const l=s.layers;for(let h=0;h<l.length;++h)o?u3(l[h],n,r):h3(l[h],n,i,r),r((h===l.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const c=l3(s),u=Rd(s.nonTrainableWeights);r(`Total params: ${c+u}`),r(`Trainable params: ${c}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function l3(s){let t;return s.collectedTrainableWeights!=null?t=Rd(s.collectedTrainableWeights):t=Rd(s.trainableWeights),t}function c3(s){let t=!0;const n=[],r=[];for(const o in s.nodesByDepth)n.push(s.nodesByDepth[o]);for(const o of n){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}r.push(...o)}if(t)for(const o of s.layers){let a=!1;for(const i of o.inboundNodes)if(r.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Vd(s,t,n=console.log){let r="";for(let o=0;o<s.length;++o)o>0&&(r=r.slice(0,r.length-1)+" "),r+=s[o],r=r.slice(0,t[o]),r+=" ".repeat(t[o]-r.length);n(r)}function u3(s,t,n){let r;try{r=JSON.stringify(s.outputShape)}catch{r="multiple"}const o=s.name,a=s.getClassName(),i=[`${o} (${a})`,r,s.countParams().toString()];Vd(i,t,n)}function h3(s,t,n,r){let o;try{o=JSON.stringify(s.outputShape)}catch{o="multiple"}const a=[];for(const h of s.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${p}[${f}][${m}]`)}const i=s.name,l=s.getClassName(),c=a.length===0?"":a[0],u=[`${i} (${l})`,o,s.countParams().toString(),c];Vd(u,t,r);for(let h=1;h<a.length;++h)Vd(["","","",a[h]],t,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function B1(s,t,n){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof n=="string"}function xc(s,t){if(s===null)return null;if(typeof s=="string")return uo(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const n=[],r=s.length;for(let o=0;o<r;++o){const a=s[o];B1(t,o,a)?n.push(a):n.push(xc(a,t))}return n}else{const n={};for(const r of Object.keys(s)){const o=s[r];if(r==="name"&&typeof o=="string")n[r]=o;else{const a=uo(r);n[a]=xc(o,a)}}return n}}function Lg(s,t){if(s==null)return null;if(typeof s=="string")return Zs(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const n=[],r=s.length;for(let o=0;o<r;++o){const a=s[o];B1(t,o,a)?n.push(a):n.push(Lg(a,t))}return n}else{const n={};for(const r of Object.keys(s)){const o=s[r],a=Zs(r);(r==="name"||r==="className")&&typeof o=="string"?n[a]=o:n[a]=Lg(o,r)}return n}}/** @license See the LICENSE file. */const Wd="3.10.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d3(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return ne(t,s.dtype)}catch{throw new M(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class $r{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof $r)for(const n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(const n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=d3(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new M(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof cs){if(this.id2Value[t.id]==null)throw new M(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const n=this.name2Id[t];if(n==null)throw new M(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof cs){if(this.id2Value[t.id]==null)throw new M(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const n=this.name2Id[t];if(n==null)throw new M(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Ce(this.id2Mask)}}const Pg={},V1={};function wc(s,t,n,r){const o=n==null?!1:n.training,a=Array.isArray(s),i=a?s:[s],l=i.map(m=>m.name),c=[],u=t.names();for(const m of l)u.indexOf(m)!==-1?c.push(t.getValue(m)):c.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let d,p;if(Pg[h]==null){const m=p3(i,t);d=m.sorted,p=m.recipientCounts,Pg[h]=d,V1[h]=p}d=Pg[h],p={},o||Object.assign(p,V1[h]);const f=new $r(t);for(let m=0;m<d.length;++m){if(r!=null){const E=Ih().numTensors;E>r.maxNumTensors&&(r.maxNumTensors=E),E<r.minNumTensors&&(r.minNumTensors=E)}const g=d[m],y=g.sourceLayer;if(y instanceof ni)continue;const b=[],x=[],v=[];let w=!1;for(const E of g.inputs){const A=f.getValue(E),F=f.getMask(E);b.push(A),x.push(F),F!=null&&(w=!0),o||(p[E.name]--,p[E.name]===0&&!t.hasKey(E)&&l.indexOf(E.name)===-1&&!A.isDisposed&&E.sourceLayer.stateful!==!0&&v.push(A))}w&&(n=n||{},n.mask=x[0]);const C=et(y.apply(b,n));let N=null;y.supportsMasking&&(N=y.computeMask(b,x));const k=m3(g),S=Array.isArray(k)?k:[k];for(let E=0;E<S.length;++E){f.hasKey(S[E])||f.add(S[E],C[E],Array.isArray(N)?N[0]:N);const A=l.indexOf(S[E].name);A!==-1&&(c[A]=C[E])}o||Ce(v)}return f.disposeMasks(),a?c:c[0]}function p3(s,t){I(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(s.length===1){const o=W1(s[0],t);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const a of s){const{sorted:i,recipientMap:l}=W1(a,t);for(const c of i)o.has(c.name)||(n.push(c),o.add(c.name));for(const c in l)r[c]==null&&(r[c]=new Set),l[c].forEach(u=>r[c].add(u))}}return{sorted:n,recipientCounts:f3(r)}}function f3(s){const t={};for(const n in s)t[n]=s[n].size;return t}function W1(s,t){const n=new Set,r=[],o={};for(const l of t.names())n.add(l);const a=[],i=[];for(a.push(s);a.length>0;){const l=a[a.length-1];if(n.has(l.name)){a.pop();continue}const c=i[i.length-1]===a.length-1;if(l.inputs.length===0||c)a.pop(),r.push(l),n.add(l.name),c&&i.pop();else{i.push(a.length-1);for(const u of l.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(l.name),!n.has(u.name)&&a.push(u)}}return{sorted:r,recipientMap:o}}function m3(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let n=null;for(let r=0;r<s.sourceLayer.inboundNodes.length;++r)for(const o of s.sourceLayer.inboundNodes[r].outputTensors)if(o.id===s.id){n=r;break}t=s.sourceLayer.getOutputAt(n)}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hs extends Pe{constructor(t){super({});if(this.containerNodes=new Set,this.name=t.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Ad(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],br(this.inputs).length!==this.inputs.length)throw new M(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);br(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const v=x.sourceLayer,w=x.nodeIndex,C=x.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(C)}for(const x of this.inputs){const v=x.sourceLayer,w=x.nodeIndex,C=x.tensorIndex;Ss(w===0,"input layer has >1 nodes"),Ss(C===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const v=this.inputLayers[x];if(!(v instanceof ni))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},r={},o={},a={},i={},l=[],c=(x,v,w,C,N,k)=>{(C==null||N==null||k==null)&&(C=x.sourceLayer,N=x.nodeIndex,k=x.tensorIndex);const S=C.inboundNodes[N];if(w.indexOf(S)!==-1)throw new Kn(`The tensor ${x.name} at layer "${C.name}" is part of a cycle.`);if(v.indexOf(S)!==-1)return;this.containerNodes.add(hs.nodeKey(C,N)),C.id in i||(i[C.id]=Object.keys(i).length),w.indexOf(S)===-1&&w.push(S);const E=S.inboundLayers.length;for(let A=0;A<E;A++){const F=S.inputTensors[A],D=S.inboundLayers[A],O=S.nodeIndices[A],B=S.tensorIndices[A];c(F,v,w,D,O,B)}for(v.push(S);w.indexOf(S)>=0;)w.splice(w.indexOf(S),1);l.push(S)},u=[],h=[];for(const x of this.outputs)c(x,u,h);const d=l.slice().reverse();for(const x of d){r[x.id]=x,x.id in n||(n[x.id]=0);let v=n[x.id];const w=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];v=Math.max(v,w),o[x.outboundLayer.id]=v,a[x.outboundLayer.id]=x.outboundLayer,n[x.id]=v;for(let C=0;C<x.inboundLayers.length;C++){const N=x.inboundLayers[C],k=x.nodeIndices[C],S=N.inboundNodes[k],E=n[S.id]==null?0:n[S.id];n[S.id]=Math.max(v+1,E),r[S.id]=S}}const p={};for(const x in n){const v=n[x];v in p||(p[v]=[]),p[v].push(r[x])}const f={};for(const x in o){const v=o[x];v in f||(f[v]=[]),f[v].push(a[x])}let m=Object.keys(f).map(x=>parseInt(x,10)).sort(bd);this.layers=[];for(const x of m){const v=f[x];v.sort((w,C)=>{const N=i[w.id],k=i[C.id];return N<k?-1:N>k?1:0});for(const w of v)w instanceof hs&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=f,m=Object.keys(p).map(x=>parseInt(x,10)).sort(bd);const g=this.inputs.slice(),y=[];for(const x of m)for(const v of p[x]){const w=v.outboundLayer;if(w!=null){for(const C of v.inputTensors)if(g.indexOf(C)===-1)throw new Kn(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${w.name}". The following previous layers were accessed without issue: ${y}`);for(const C of v.outputTensors)g.push(C);y.push(w.name)}}this.nodesByDepth=p;const b=this.layers.map(x=>x.name);for(const x of b){const v=b.filter(w=>w===x).length;if(v!==1)throw new Kn(`The name "${x}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Fd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(const n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new M("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){const r={};let o=0;for(const i of this.layers)for(const l of i.weights){if(r[l.originalName]!=null)throw new M(`Duplicate weight name: ${l.originalName}`);r[l.originalName]=l,o++}const a=[];for(const i in t){let l=i;if(r[i]==null){const c=i.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(r[l]!=null)a.push([r[l],t[i]]);else if(n)throw new M(`Provided weight data has no target variable: ${i}`);delete r[l]}if(n){const i=[];for(const l in r)i.push(l);if(i.length>0)throw new M(`${i.length} of ${o} weights are not set: ${i}`)}Eg(a)}updatedConfig(){const t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${Wd}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){const r=Lg(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return W(()=>{t=et(t);const r=new $r;for(let o=0;o<this.inputs.length;++o)r.add(this.inputs[o],t[o]);return wc(this.outputs,r,n)})}computeMask(t,n){return W(()=>{t=et(t);let r;return n==null?r=co(null,t.length):r=et(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){const n=Dd(t);if(n.length!==this.inputLayers.length)throw new M(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let l=0;l<n.length;l++){const c=this.inputLayers[l],u=n[l],h=c.name+"_0_0";r[h]=u}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(bd);if(o.length>1)for(const l of o){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(h.id)!==-1)continue;const d=[];for(let g=0;g<u.inboundLayers.length;g++){const y=u.inboundLayers[g],b=u.nodeIndices[g],x=u.tensorIndices[g],v=`${y.name}_${b}_${x}`,w=r[v];d.push(w)}const p=h.computeOutputShape(un(d)),f=Dd(p),m=h.inboundNodes.indexOf(u);for(let g=0;g<f.length;g++){const y=`${h.name}_${m}_${g}`;r[y]=f[g]}}}const a=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const c=this.outputLayers[l],u=this.outputLayersNodeIndices[l],h=this.outputLayersTensorIndices[l],d=`${c.name}_${u}_${h}`;i.push(d)}for(let l=0;l<i.length;l++){const c=i[l];Ss(c in r),a.push(r[c])}return un(a)}runInternalGraph(t,n){n==null&&(n=co(null,t.length));const r={};for(let c=0;c<this.inputs.length;++c){const u=this.inputs[c],h=t[c],d=n[c];r[u.id]=[h,d]}const o=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(bd);for(const c of o){const u=this.nodesByDepth[c];for(const h of u){const d=h.outboundLayer,p=h.inputTensors,f=h.outputTensors,m=new Array;for(const g of p)g.id in r&&m.push(r[g.id]);if(m.length===p.length){let g={},y,b,x,v;if(h.callArgs!=null&&(g=h.callArgs),m.length===1){const[w,C]=m[0];g.mask==null&&(g.mask=C),x=et(d.call(w,g)),v=et(d.computeMask(w,C)),y=[w],b=[C]}else y=m.map(w=>w[0]),b=m.map(w=>w[1]),g.mask==null&&(g.mask=b),x=et(d.call(y,g)),v=et(d.computeMask(y,b));if(d.activityRegularizer)throw new ke("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<f.length;++w){const C=f[w],N=x[w],k=v[w];r[C.id]=[N,k]}}}}const a=[],i=[],l=[];for(const c of this.outputs){Ss(c.id in r,`Could not compute output ${c.name} : ${c.id}`);const[u,h]=r[c.id];l.push(u.shape),a.push(u),i.push(h)}return[a,i,l]}buildNodeConversionMap(t){const n={};let r;for(const o of this.layers){r=o instanceof hs?1:0;for(let a=0;a<o.inboundNodes.length;a++){const i=hs.nodeKey(o,a);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null){if(this.layers.length<=n)throw new M(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(t==null)throw new M("Provide either a layer name or layer index");for(const r of this.layers)if(r.name===t)return r;throw new M(`No such layer: ${t}`)}calculateLosses(){return W(()=>{const t=[];for(const n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){const o=hs.nodeKey(n,r);this.containerNodes.has(o)&&t.push(...n.calculateLosses())}return t})}getConfig(){const t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(const i of this.layers){const l=i.getClassName(),c=i.getConfig(),u=[];for(let d=0;d<i.inboundNodes.length;d++){const p=i.inboundNodes[d],f=hs.nodeKey(i,d);let m={};if(this.containerNodes.has(f)){if(p.callArgs)try{JSON.stringify(p.callArgs),m=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(p.inboundLayers.length>0){const g=[];for(let y=0;y<p.inboundLayers.length;y++){const b=p.inboundLayers[y],x=p.nodeIndices[y],v=p.tensorIndices[y],w=hs.nodeKey(b,x);let C=n[w];C==null&&(C=0),g.push([b.name,C,v,m])}u.push(g)}}}const h={};h.name=i.name,h.className=l,h.config=c,h.inboundNodes=u,r.push(h)}t.layers=r;const o=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],c=this.inputLayersNodeIndices[i],u=hs.nodeKey(l,c);if(!this.containerNodes.has(u))continue;let h=n[u];h==null&&(h=0);const d=this.inputLayersTensorIndices[i];o.push([l.name,h,d])}t.inputLayers=o;const a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],c=this.outputLayersNodeIndices[i],u=hs.nodeKey(l,c);if(!this.containerNodes.has(u))continue;let h=n[u];h==null&&(h=0);const d=this.outputLayersTensorIndices[i];a.push([l.name,h,d])}return t.outputLayers=a,t}static fromConfig(t,n,r={},o=!1){const a={},i={};function l(y,b){y.name in i?i[y.name].push(b):i[y.name]=[b]}function c(y,b){const x=[];let v;for(const w of b){const C=w[0],N=w[1],k=w[2];if(v=w[3]==null?{}:w[3],!(C in a)){l(y,b);return}const S=a[C];if(S.inboundNodes.length<=N){l(y,b);return}const E=S.inboundNodes[N];x.push(E.outputTensors[k])}x.length>0&&y.apply(un(x),v)}function u(y){const b=y.name,x=us(y,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(o),a[b]=x,y.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new M(`Corrupted configuration, expected array for nodeData: ${w}`);l(x,w)})}const h=n.name,d=n.layers;for(const y of d)u(y);for(;!GO(i);)for(const y of d){const b=a[y.name];if(b.name in i){const x=i[b.name];delete i[b.name];for(const v of x)c(b,v)}}const p=[],f=[],m=n.inputLayers;for(const y of m){const b=y[0],x=y[1],v=y[2];Ss(b in a);const C=a[b].inboundNodes[x].outputTensors;p.push(C[v])}const g=n.outputLayers;for(const y of g){const b=y[0],x=y[1],v=y[2];Ss(b in a);const C=a[b].inboundNodes[x].outputTensors;f.push(C[v])}return new t({inputs:p,outputs:f,name:h})}get stateful(){if(this._stateful)throw new M("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g3(s,t,n){const r=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(o=>null);if(r===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==r)throw new Error(`Provided ${n} is an array of ${s.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const o=[];return t.forEach(a=>{a in s?o.push(s[a]):o.push(null)}),o}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(s)}`)}function U1(s,t){return g3(s,t,"classWeight")}async function G1(s,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const o=W(()=>{if(s.shape.length===1)return Ws(s);if(s.shape.length===2){if(s.shape[1]>1)return Zr(s,1);if(s.shape[1]===1)return P(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await o.data());Ce(o);const i=[];return a.forEach(l=>{if(n[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(n[l])}),Ut(i,"float32")}else return null}function y3(s,t){return L(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const b3=32;function H1(s,t){let n,r;const o=t;n=o.xs,r=o.ys,I(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=j1("input",s.inputNames,n),i=j1("output",s.outputNames,r),l=a[0].shape[0];I(a.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),I(i.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let c=0;c<a.length;c++)I(a[c].shape[0]===l,()=>`Batch size mismatch: input ${s.inputNames[c]} has ${a[c].shape[0]}; expected  ${l} based on input ${s.inputNames[0]}.`);for(let c=0;c<i.length;c++)I(i[c].shape[0]===l,()=>`Batch size mismatch: output ${s.outputNames[c]} has ${i[c].shape[0]}; expected  ${l} based on input ${s.inputNames[0]}.`);return{xs:a,ys:i}}function j1(s,t,n){if(n instanceof ze)return[n];if(Array.isArray(n))return I(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),n;{const r=[];for(const o of t){if(n[o]==null)throw new M(`The feature data generated by the dataset lacks the required ${s} key '${o}'.`);r.push(n[o])}return r}}function x3(s){if(s.length===3)throw new ke("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function w3(s,t,n){const r=n.batchesPerEpoch!=null;if(I(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),I(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),I(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),I(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),I(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const o=n.validationData!=null;let a,i;if(o)if(q1(n.validationData))I(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=x3(n.validationData);a=y.xs,i=y.ys}const l=s.makeTrainFunction(),c=s.getDedupedMetricsNames();let u;o?u=c.slice().concat(c.map(y=>"val_"+y)):u=c.slice();const h=D1(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:f}=R1(h,d,n.epochs,null,null,v3(t,n),null,o,u);p.setModel(s),s.history=f,await p.onTrainBegin(),s.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const y={};await p.onEpochBegin(m);let b=0,x=0;for(r||(g=await t.iterator());r?b<n.batchesPerEpoch:!0;){const v=await g.next();if(r&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:w,ys:C}=H1(s,v.value),N={};N.batch=x,N.size=w[0].shape[0],await p.onBatchBegin(x,N);const k=[];if(n.classWeight!=null){const A=U1(n.classWeight,s.outputNames);for(let F=0;F<A.length;++F)k.push(await G1(C[F],null,A[F]))}const S=w.concat(C).concat(k),E=l(S);Ce(S);for(let A=0;A<c.length;++A){const F=c[A],D=E[A];N[F]=D,At(D)}await p.onBatchEnd(x,N),N1(N),x++,b++}if(r?b>=n.batchesPerEpoch:v.done){if(o){let w;q1(n.validationData)?w=et(await s.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=et(s.evaluate(a,i,{batchSize:n.validationBatchSize==null?b3:n.validationBatchSize,verbose:0}));for(let C=0;C<s.metricsNames.length;++C)y[`val_${s.metricsNames[C]}`]=w[C]}break}if(s.stopTraining_)break}if(await p.onEpochEnd(m,y),m++,s.stopTraining_)break}return await p.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function v3(s,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(s.size)&&(n=s.size),n}function q1(s){return typeof s.iterator=="function"}function $3(s){return typeof s.next=="function"}async function C3(s,t,n){n=n||{};const r=n.batches!=null,o=s.testFunction;let a=[];if(n.verbose>0)throw new ke("Verbose mode is not implemented yet.");I(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=$3(t)?t:await t.iterator();let l=0,c=0;for(;r?c<n.batches:!0;){const u=await i.next();if(a=W(()=>{if(u.value){const{xs:h,ys:d}=H1(s,u.value),p=h.concat(d),f=W(()=>o(p));if(Ce(p),c===0)for(let g=0;g<f.length;++g)a.push(me(0));const m=p[0].shape[0];for(let g=0;g<f.length;++g){const y=f[g],b=a[g];a[g]=W(()=>Z(a[g],L(m,y))),c>0&&Ce(b)}Ce(f),l+=m,++c}return a}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const h=a[u];a[u]=de(a[u],l),Ce(h)}return un(a)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mg(s){I(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function vc(s,t,n){return s==null?[null]:Array.isArray(s)?s.map(r=>fo(r,t,n-t)):fo(s,t,n-t)}function zg(s,t){return W(()=>s==null?null:Array.isArray(s)?s.map(n=>zg(n,t)):y1(s,t.dtype==="int32"?t:ne(t,"int32")))}function Bg(s,t){const n=[];let r=0,o=null;for(;r<s;)o=r+t,o>=s&&(o=s),n.push([r,o]),r=o;return n}async function k3(s,t,n,r,o,a,i,l,c,u,h,d,p,f,m){o==null&&(o=32),a==null&&(a=1),h==null&&(h=!0),p==null&&(p=0);let g=!1;if(c!=null&&u!=null&&(g=!0),m!=null&&(g=!0,f==null))throw new M("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=s.checkNumSamples(n,o,f,"steps_per_epoch");let b;y!=null&&(b=is(0,y)),i==null&&(i=1);const{callbackList:x,history:v}=R1(l,i,a,p,y,f,o,g,d);x.setModel(s),s.history=v,await x.onTrainBegin(),s.stopTraining_=!1;for(let w=p;w<a;++w){await x.onEpochBegin(w);const C={};if(f!=null)throw new ke("stepsPerEpoch mode is not implemented yet.");{if(h==="batch")throw new ke("batch shuffling is not implemneted yet");h&&Qp(b);const N=Ut(b),k=Bg(y,o);for(let S=0;S<k.length;++S){const E={};if(await x.onBatchBegin(S,E),W(()=>{const A=k[S][0],F=k[S][1],D=fo(N,A,F-A);E.batch=S,E.size=F-A;const O=zg(n,D),B=t(O);for(let V=0;V<r.length;++V){const z=r[V],H=B[V];E[z]=H,At(H)}if(S===k.length-1&&g){const V=s.testLoop(c,u,o);for(let z=0;z<r.length;++z){const H=r[z],U=V[z];At(U),C["val_"+H]=U}}}),await x.onBatchEnd(S,E),N1(E),s.stopTraining_)break}N.dispose()}if(await x.onEpochEnd(w,C),s.stopTraining_)break}return await x.onTrainEnd(),await s.history.syncData(),s.history}async function I3(s,t,n,r={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let o,a,i,l,c,u,h;try{const d=r.batchSize==null?32:r.batchSize;Mg(d);const p=!1,f=await s.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);o=f[0],a=f[1],h=f[2];let m=!1,g;if(r.validationData!=null&&r.validationData.length>0){if(m=!0,r.validationData.length===2)i=r.validationData[0],l=r.validationData[1];else throw r.validationData.length===3?new ke("validationData including sample weights is not supported yet."):new M(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const k=!0,S=await s.standardizeUserData(i,l,null,null,k,d);c=S[0],u=S[1],g=c.concat(u)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){m=!0;const k=Math.floor(o[0].shape[0]*(1-r.validationSplit)),S=o[0].shape[0];c=vc(o,k,S),o=vc(o,0,k),u=vc(a,k,S),a=vc(a,0,k),g=c.concat(u)}else r.validationSteps!=null&&(m=!0);const y=o.concat(a).concat(h);s.checkTrainableWeightsConsistency();const b=s.makeTrainFunction(),x=s.getDedupedMetricsNames();let v,w;m?(s.makeTestFunction(),v=s.testFunction,w=x.slice().concat(x.map(k=>"val_"+k))):(v=null,g=[],w=x.slice());const C=D1(r.callbacks,r.yieldEvery);return await k3(s,b,y,x,d,r.epochs,r.verbose,C,v,g,r.shuffle,w,r.initialEpoch,null,null)}finally{s.isTraining=!1,go(o,t),go(a,n),go(c,i),go(u,l),h!=null&&Ce(h)}}function K1(s){const t=[];s instanceof ze&&(s=[s]);for(let n=0;n<s.length;++n){const r=s[n];if(r.rank===1)t.push(mc(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function go(s,t){if(s==null)return;const n=[];if(t instanceof ze)n.push(t.id);else if(Array.isArray(t))t.forEach(o=>n.push(o.id));else if(t!=null)for(const o in t){const a=t[o];n.push(a.id)}const r=[];if(s instanceof ze)n.indexOf(s.id)===-1&&r.push(s);else if(Array.isArray(s))s.forEach(o=>{n.indexOf(o.id)===-1&&r.push(o)});else if(s!=null)for(const o in s){const a=s[o];n.indexOf(a.id)===-1&&r.push(a)}r.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N3(s){return s instanceof ze}function Vg(s){return Array.isArray(s)}function X1(s){return!N3(s)&&!Vg(s)}function Y1(s,t,n,r=!0,o=""){if(t==null||t.length===0){if(s!=null){let i=!1;if(Vg(s)&&s.length>0)i=!0;else if(X1(s)){for(const l in s)if(s.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new M(`Error when checking model ${o} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(i=>null);let a;if(X1(s)){s=s,a=[];for(const i of t){if(s[i]==null)throw new M(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(s[i])}}else if(Vg(s)){if(s=s,s.length!==t.length)throw new M(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);a=s}else{if(s=s,t.length>1)throw new M(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);a=[s]}if(a=K1(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;const l=a[i];if(l.shape.length!==n[i].length)throw new M(`Error when checking ${o}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${l.shape}`);for(let c=0;c<n[i].length;++c){if(c===0&&!r)continue;const u=l.shape[c],h=n[i][c];if(h!=null&&h>=0&&u!==h)throw new M(`${o} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${o} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return a}function S3(s,t,n){const r=br(s.map(a=>a.shape[0]));r.sort();const o=br(t.map(a=>a.shape[0]));if(o.sort(),r.length>1)throw new M(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(a=>a.shape))}`);if(o.length>1)throw new M(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&o.length>0&&!De(r,o))throw new M(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${o[0]} target sample(s).`)}function T3(s,t,n){const r=[mo,Pd,bc];for(let o=0;o<s.length;++o){const a=s[o],i=t[o],l=n[o];if(i!=null){if(i===bc&&a.shape[a.shape.length-1]===1)throw new M(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){const c=a.shape.slice(1),u=l.slice(1);for(let h=0;h<c.length;++h){const d=c[h],p=u[h];if(p!=null&&d!==p)throw new M(`A target Tensor with shape ${a.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Z1(s,t,n,r=!0,o=""){let a;if(Array.isArray(s)){if(s.length!==t.length)throw new M(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);a=s}else{if(t.length>1)throw new M(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);a=[s]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;const l=a[i];if(l.shape.length!==n[i].length)throw new M(`Error when checking ${o}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let c=0;c<n[i].length;++c){if(c===0&&!r)continue;const u=l.shape[c],h=n[i][c];if(h!=null&&h!==u)throw new M(`Error when checking ${o}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function E3(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(r=>[]);let n;if(typeof s=="string"||typeof s=="function")n=[s];else if(Array.isArray(s)||typeof s=="object")n=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(n))return t.map(r=>n);{const r=[];for(const o of t){let a=n.hasOwnProperty(o)?n[o]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}const A3="layers-model";class Js extends hs{constructor(t){super(t);this.isTraining=!1}summary(t,n,r=console.log){if(!this.built)throw new M("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");i3(this,t,n,r)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=a3(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Xs))throw new M("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new M(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(Dg(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new M(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);n=t.loss.map(l=>Dg(l))}else{const i=Dg(t.loss);this.outputs.forEach(l=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],c=this.outputNames[i];this.feedOutputNames.push(c),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],po("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(r.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=E3(t.metrics,this.outputNames),a=(i,l,c)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([c,i])};po("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(r.indexOf(i)!==-1)continue;const l=o[i];(u=>{const h="";let d,p,f;for(const m of u){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===Pd?["accuracy","acc"].indexOf(m)!==-1?p=Rg:["crossentropy","ce"].indexOf(m)!==-1&&(p=O1):this.lossFunctions[i]===Ld?["accuracy","acc"].indexOf(m)!==-1?p=L1:["crossentropy","ce"].indexOf(m)!==-1&&(p=P1):["accuracy","acc"].indexOf(m)!==-1?p=Fg:["crossentropy","ce"].indexOf(m)!==-1&&(p=_g);let b;["accuracy","acc"].indexOf(m)!==-1?b="acc":["crossentropy","ce"].indexOf(m)!==-1&&(b="ce"),f=p,d=h+b}else f=o3(m),d=h+Bd(m);let g;po(d,()=>{g=f}),a(i,d,g)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,n,r={}){const o=r.batchSize==null?32:r.batchSize;Mg(o);const a=!0,i=this.standardizeUserDataXY(t,n,a,o);try{const l=i[0].concat(i[1]);this.makeTestFunction();const c=this.testFunction,u=this.testLoop(c,l,o,r.verbose,r.steps);return un(u)}finally{go(i[0],t),go(i[1],n)}}async evaluateDataset(t,n){return this.makeTestFunction(),C3(this,t,n)}checkNumSamples(t,n,r,o="steps"){let a;if(r!=null){if(a=null,n!=null)throw new M(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(t!=null)Array.isArray(t)?a=t[0].shape[0]:a=t.shape[0];else throw new M(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return a}execute(t,n){if(Array.isArray(n)&&n.length===0)throw new M("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(n),o=r?n:[n],a=this.retrieveSymbolicTensors(o),i=new $r;if(t instanceof ze&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new M(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)i.add(this.inputs[c],t[c])}else for(const c of this.inputs){const u=t[c.name];if(u==null)throw new M(`No value is provided for the model's input ${c.name}`);i.add(c,u)}const l=wc(a,i);return r?l:l[0]}retrieveSymbolicTensors(t){const n=co(null,t.length);let r=t.length;for(const o of this.layers){const a=Array.isArray(o.output)?o.output:[o.output],i=a.map(l=>l.name);for(let l=0;l<t.length;++l){const c=i.indexOf(t[l]);if(c!==-1&&(n[l]=a[c],r--),r===0)break}if(r===0)break}if(r>0){const o=[];throw n.forEach((a,i)=>{a==null&&o.push(t[i])}),new M(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return n}predictLoop(t,n=32,r=!1){return W(()=>{const o=this.checkNumSamples(t);if(r)throw new ke("Verbose predictLoop() is not implemented yet.");const a=Bg(o,n),i=this.outputs.map(l=>[]);for(let l=0;l<a.length;++l)W(()=>{const u=a[l][0],h=a[l][1],d=vc(t,u,h),p=[];if(Array.isArray(d))for(let m=0;m<d.length;++m)p.push({key:this.inputs[m],value:d[m]});else p.push({key:this.inputs[0],value:d});const f=new $r(p);return wc(this.outputs,f)}).forEach((u,h)=>i[h].push(u));return un(i.map(l=>dt(l,0)))})}predict(t,n={}){const r=K1(t);Z1(r,this.inputNames,this.feedInputShapes,!1);try{const o=n.batchSize==null?32:n.batchSize;return Mg(o),this.predictLoop(r,o)}finally{go(r,t)}}predictOnBatch(t){Z1(t,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,n)}standardizeUserDataXY(t,n,r=!0,o){if(this.optimizer_==null)throw new Kn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===Ld?a.push(l.slice(0,l.length-1).concat([1])):a.push(l)}if(t=Y1(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=Y1(n,this.feedOutputNames,a,!1,"target"),S3(t,n),T3(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!=0)throw new M(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,n,r,o,a=!0,i){const[l,c]=this.standardizeUserDataXY(t,n,a,i);if(r!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){const h=U1(o,this.outputNames);u=[];for(let d=0;d<h.length;++d)u.push(await G1(c[d],null,h[d]))}return[l,c,u]}testLoop(t,n,r,o=0,a){return W(()=>{const i=this.checkNumSamples(n,r,a,"steps"),l=[];if(o>0)throw new ke("Verbose mode is not implemented yet.");if(a!=null)throw new ke("steps mode in testLoop() is not implemented yet");{const c=Bg(i,r),u=Ut(is(0,i));for(let h=0;h<c.length;++h){const d=c[h][0],p=c[h][1],f=fo(u,d,p-d),m=zg(n,f),g=t(m);if(h===0)for(let y=0;y<g.length;++y)l.push(me(0));for(let y=0;y<g.length;++y){const b=g[y];l[y]=Z(l[y],L(p-d,b))}}for(let h=0;h<l.length;++h)l[h]=de(l[h],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,n=[];for(let r=0;r<t.length;++r){const o=t[r];let a=o;a1(t,o)>1&&(a+=`_${a1(t.slice(0,r),o)}`),n.push(a)}return n}makeTrainFunction(){return t=>{const n=[],r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const d=[];for(let g=0;g<this.inputs.length;++g)d.push({key:this.inputs[g],value:r[g]});const p=new $r(d),f=wc(this.outputs,p,{training:!0});let m;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g](o[g],f[g]);a[g]!=null&&(b=y3(b,a[g]));const x=ct(b);n.push(x),g===0?m=b:m=Z(m,b)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=n[g];else{const b=this.metricsTensors[g][0],x=this.metricsTensors[g][1];y=ct(b(o[x],f[x]))}At(y),i.push(y)}return m=ct(m),this.calculateLosses().forEach(g=>{m=Z(m,g)}),m},c=this.collectedTrainableWeights.map(d=>d.read()),u=!0;return[this.optimizer_.minimize(l,u,c)].concat(i)}}makeTestFunction(){this.testFunction=t=>W(()=>{const n=[];let r;const o=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:o[u]});const l=new $r(i),c=wc(this.outputs,l);for(let u=0;u<this.lossFunctions.length;++u){const h=this.lossFunctions[u],d=ct(h(a[u],c[u]));u===0?r=d:r=Z(r,d),n.push(r)}for(let u=0;u<this.metricsTensors.length;++u){const h=this.metricsTensors[u][0],d=this.metricsTensors[u][1],p=ct(h(a[d],c[d]));n.push(p)}return n})}async fit(t,n,r={}){return I3(this,t,n,r)}async fitDataset(t,n){return w3(this,t,n)}async trainOnBatch(t,n){const r=await this.standardizeUserData(t,n),o=r[0],a=r[1],l=this.makeTrainFunction()(o.concat(a)),c=[];for(const u of l){const h=await u.data();c.push(h[0])}return Ce(l),un(c)}getNamedWeights(t){const n=[],r=t!=null&&t.trainableOnly,o=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let i=0;i<o.length;++i)r&&!o[i].trainable||n.push({name:o[i].originalName,tensor:a[i]});return n}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=Ih().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=n-Ih().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Zs(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(n=>Zs(n))}else{const n=Object.keys(this.loss);t={};const r=this.loss;for(const o of n)if(typeof r[o]=="string")t[o]=Zs(r[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Zs(Bd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Zs(Bd(t)));{const t={};for(const n in this.metrics)t[n]=Zs(Bd(this.metrics[n]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=xc(t.optimizer_config),r=us(n);let o;if(typeof t.loss=="string")o=uo(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(i=>uo(i));else if(t.loss!=null){o={};for(const i in t.loss)o[i]=uo(t.loss[i])}let a;if(Array.isArray(t.metrics))a=t.metrics.map(i=>uo(i));else if(t.metrics!=null){a={};for(const i in t.metrics)a[i]=uo(t.metrics[i])}this.compile({loss:o,metrics:a,optimizer:r})}async save(t,n){if(typeof t=="string"){const u=Df(t);if(u.length===0)throw new M(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new M(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new M("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Tf(this.getNamedWeights(n)),o=!1,a=null,l={modelTopology:this.toJSON(a,o),format:A3,generatedBy:`TensorFlow.js tfjs-layers v${Wd}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:h,specs:d}=await Tf(await this.optimizer.getWeights(),u);r.specs.push(...d),r.data=xh([r.data,h])}if(this.userDefinedMetadata!=null){const u=!0;z1(this.userDefinedMetadata,this.name,u),l.userDefinedMetadata=this.userDefinedMetadata}return l.weightData=r.data,l.weightSpecs=r.specs,t.save(l)}setUserDefinedMetadata(t){z1(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Js.className="Model";Y(Js);class J1 extends Js{}J1.className="Functional";Y(J1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function D3(s,t){"modelTopology"in s||(s={modelTopology:s}),s=s;let n=s.modelTopology;n.model_config!=null&&(n=n.model_config);const r=xc(n),o=us(r,t);if(s.weightsManifest!=null){const a=await C0(s.weightsManifest,s.pathPrefix,o.weights.map(l=>l.originalName)),i={};for(const l of o.weights)i[l.originalName]=a[l.originalName];o.loadWeights(i),Ce(a)}return o}async function R3(s,t){if(t==null&&(t={}),typeof s=="string"){const n=Rf(s,t);if(n.length===0)n.push(vh(s,t));else if(n.length>1)throw new M(`Found more than one (${n.length}) load handlers for URL '${s}'`);s=n[0]}return F3(s,void 0,t)}async function F3(s,t,n){if(n==null&&(n={}),s.load==null)throw new M("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await s.load();let o=r.modelTopology;o.model_config!=null&&(o=o.model_config);const a=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&a,l=us(xc(o),t,i),c=r.trainingConfig;if(c!=null&&l.loadTrainingConfig(c),r.userDefinedMetadata!=null&&l.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new M("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:h}=_3(r.weightData,r.weightSpecs);l.loadWeights(u,a),l.optimizer!=null&&h.length>0&&await l.optimizer.setWeights(h),Ce(u),Ce(h.map(d=>d.tensor))}return l}function _3(s,t){const n=bh(s,t),r={},o=[];return t.forEach(a=>{a.group==="optimizer"?o.push({name:a.name,tensor:n[a.name]}):r[a.name]=n[a.name]}),{modelWeights:r,optimizerWeights:o}}class yo extends Js{constructor(t){super({inputs:[],outputs:[]});if(t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Ad("sequential_"),t.layers!=null)for(const n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new M(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const n=t instanceof yo||t instanceof Js;let r;if(n){if(r=t,r.outputs.length!==1)throw new M("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new M("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new M("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=I1({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new M(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new M("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=k1(this.outputs[0])}this.inboundNodes=[],new Fd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:co(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Be(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Js({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,r=console.log){this.built||this.build(),super.summary(t,n,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,r={}){if(!this.built)throw new Kn("The model needs to be compiled before being used.");return this.model.evaluate(t,n,r)}async evaluateDataset(t,n){if(!this.built)throw new Kn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,r={}){if(!this.built)throw new Kn("The model needs to be compiled before being used.");return this.model.fit(t,n,r)}async fitDataset(t,n){if(!this.built)throw new Kn("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,r={},o=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new M("Legacy serialization format not supported yet.");a=n}else I(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;const l=new t(i);if(!(l instanceof yo))throw new ke(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const c of a){const h=us(c,void 0,o);o&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(t){if(this.model==null)throw new M("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new M("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const n of this.layers){const r={};r.className=n.getClassName(),r.config=n.getConfig(),t.push(r)}return{name:this.name,layers:t}}}yo.className="Sequential";Y(yo);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function O3(s){return new Js(s)}function L3(s){return new yo(s)}function P3(s,t){return t==null&&(t={}),R3(s,t)}function Q1(s){return I1(s)}function M3(s,t){Fn.registerCallbackConstructor(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dn extends Yr{getConfig(){return{}}}class ev extends dn{apply(t,n=1){return cL(t,n)}}ev.className="elu";Y(ev);class tv extends dn{apply(t){return Uh(t)}}tv.className="selu";Y(tv);class nv extends dn{apply(t){return os(t)}}nv.className="relu";Y(nv);class sv extends dn{apply(t){return W(()=>qa(6,os(t)))}}sv.className="relu6";Y(sv);class rv extends dn{apply(t){return t}}rv.className="linear";Y(rv);class ov extends dn{apply(t){return rs(t)}}ov.className="sigmoid";Y(ov);class av extends dn{apply(t){return hL(t)}}av.className="hardSigmoid";Y(av);class iv extends dn{apply(t){return no(t)}}iv.className="softplus";Y(iv);class lv extends dn{apply(t){return uL(t)}}lv.className="softsign";Y(lv);class cv extends dn{apply(t){return Qr(t)}}cv.className="tanh";Y(cv);class Wg extends dn{apply(t,n=-1){return rc(t,n)}}Wg.className="softmax";Y(Wg);class uv extends dn{apply(t,n=-1){return Lh(t,n)}}uv.className="logSoftmax";Y(uv);class hv extends dn{apply(t,n=1){return W(()=>L(rs(L(t,n)),t))}}hv.className="swish";Y(hv);class dv extends dn{apply(t){return W(()=>L(t,Qr(no(t))))}}dv.className="mish";Y(dv);function Cr(s){return s.getClassName()}function Ug(s,t={}){return dc(s,An.getMap().classNameMap,t,"activation")}function kr(s){if(s==null){const t={};return t.className="linear",t.config={},Ug(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},Ug(t)}else return s instanceof dn?s:Ug(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gg(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class pv extends Yr{}class $c extends pv{constructor(t){super();Gg(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return W(()=>{let n=bt([1]);return this.hasL1&&(n=Z(n,ue(L(this.l1,gt(t))))),this.hasL2&&(n=Z(n,ue(L(this.l2,gc(t))))),P(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,n){return new t({l1:n.l1,l2:n.l2})}}$c.className="L1L2";Y($c);function z3(s){return Gg(s),new $c({l1:s!=null?s.l1:null,l2:0})}function B3(s){return Gg(s),new $c({l2:s!=null?s.l2:null,l1:0})}const fv={l1l2:"L1L2"};function Xe(s){return lg(s)}function mv(s,t={}){return dc(s,An.getMap().classNameMap,t,"regularizer")}function rt(s){if(s==null)return null;if(typeof s=="string"){const n={className:s in fv?fv[s]:s,config:{}};return mv(n)}else return s instanceof pv?s:mv(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hg extends Pe{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=Ie(t);let r=os(t);return this.maxValue!=null&&(r=on(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}}Hg.className="ReLU";Y(Hg);class jg extends Pe{constructor(t){super(t==null?{}:t);this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const r=Ie(t);return Xl(r,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}jg.className="LeakyReLU";Y(jg);class qg extends Pe{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=st(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=rt(t.alphaRegularizer),this.alphaConstraint=Tt(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new M(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Be(t);const n=t.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)n[o-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)r[o]=t[o];this.inputSpec=[new xt({ndim:t.length,axes:r})],this.built=!0}call(t,n){return t=Ie(t),tc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ut(this.alphaInitializer),alphaRegularizer:Xe(this.alphaRegularizer),alphaConstraint:St(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}}qg.className="PReLU";Y(qg);class Kg extends Pe{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new ke(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const r=Ie(t);return Ua(r)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}Kg.className="ELU";Y(Kg);class Xg extends Pe{constructor(t){super(t==null?{}:t);this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){const r=Ie(t);return L(r,ne(ln(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}}Xg.className="ThresholdedReLU";Y(Xg);class Yg extends Pe{constructor(t){super(t==null?{}:t);this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Wg().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){const r=Ie(t);return this.softmax(r,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}Yg.className="Softmax";Y(Yg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oi(s,t,n){if(typeof s=="number")return co(s,t);if(s.length!==t)throw new M(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let r=0;r<t;++r){const o=s[r];if(!oL(o))throw new M(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${o}`)}return s}function ds(s,t,n,r,o=1){if(s==null)return s;const a=t+(t-1)*(o-1);let i;return n==="same"?i=s:i=s-a+1,Math.floor((i+r-1)/r)}function Es(s,t,n,r){if(s==null)return null;if(r==="valid")s=s*t+wr([n-t,0]);else if(r==="same")s=s*t;else throw new M(`Unsupport padding mode: ${r}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zg(s,t){return W(()=>(mt(t),t==="channelsFirst"?_e(s,[0,2,3,1]):s))}function gv(s,t){return W(()=>(mt(t),t==="channelsFirst"?_e(s,[0,2,3,4,1]):s))}function V3(s,t,n,r=1,o="valid",a,i=1){return W(()=>{if(a==null&&(a=as()),mt(a),s.shape.length!==3)throw new M(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new M(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new M(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(s=_e(s,[0,2,1])),o==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=Eh(s,t,r,o==="same"?"same":"valid","NWC",i);return n!=null&&(l=ls(l,n)),l})}function yv(s,t,n,r=[1,1],o="valid",a,i,l=null){return W(()=>{if(a==null&&(a=as()),mt(a),s.rank!==3&&s.rank!==4)throw new M(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new M(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let c=Zg(s,a);if(o==="causal")throw new ke("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=Mm({x:c,filter:t,strides:r,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:l}),a==="channelsFirst"&&(c=_e(c,[0,3,1,2])),c})}function W3(s,t,n,r=[1,1,1],o="valid",a,i){return W(()=>{if(a==null&&(a=as()),mt(a),s.rank!==4&&s.rank!==5)throw new M(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new M(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let l=gv(s,a);if(o==="causal")throw new ke("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=hm(l,t,r,o==="same"?"same":"valid","NDHWC",i),n!=null&&(l=ls(l,n)),a==="channelsFirst"&&(l=_e(l,[0,4,1,2,3])),l})}class Ud extends Pe{constructor(t,n){super(n);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ud.verifyArgs(n),this.rank=t,Ft(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new ke(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=oi(n.kernelSize,t,"kernelSize"),this.strides=oi(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,Rn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,mt(this.dataFormat),this.activation=kr(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=st(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tt(n.biasConstraint),this.biasRegularizer=rt(n.biasRegularizer),this.activityRegularizer=rt(n.activityRegularizer),this.dilationRate=oi(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new M(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new M(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new M(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Ss("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,3))throw new M(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Cr(this.activation),useBias:this.useBias,biasInitializer:ut(this.biasInitializer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),biasConstraint:St(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}class ai extends Ud{constructor(t,n){super(t,n);this.kernel=null,ai.verifyArgs(n),this.filters=n.filters,Ft(this.filters,"filters"),this.kernelInitializer=st(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tt(n.kernelConstraint),this.kernelRegularizer=rt(n.kernelRegularizer)}build(t){t=Be(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new M(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],o=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return W(()=>{t=Ie(t);let r;const o=this.bias==null?null:this.bias.read(),a=l1(this.activation.getClassName());if(a!=null&&this.rank===2)r=yv(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)r=V3(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=yv(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=W3(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new ke("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Be(t);const n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<r.length;++a){const i=ds(r[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(n),o.push(this.filters)):(o.push(this.filters),o=o.concat(n)),o}getConfig(){const t={filters:this.filters,kernelInitializer:ut(this.kernelInitializer),kernelRegularizer:Xe(this.kernelRegularizer),kernelConstraint:St(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new M(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ii extends ai{constructor(t){super(2,t);ii.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,2))throw new M(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ii.className="Conv2D";Y(ii);class li extends ai{constructor(t){super(3,t);li.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new M(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}li.className="Conv3D";Y(li);class Jg extends ii{constructor(t){super(t);if(this.inputSpec=[new xt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new M(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Be(t),t.length!==4)throw new M("Input should have rank 4; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new M("The channel dimension of the inputs should be defined. Found `None`.");const r=t[n],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new xt({ndim:4,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{let r=Ie(t);if(r.shape.length!==4)throw new M(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape,a=o[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const c=o[i],u=o[l],h=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],f=this.strides[1],m=Es(c,p,h,this.padding),g=Es(u,f,d,this.padding),y=[a,m,g,this.filters];this.dataFormat!=="channelsLast"&&(r=_e(r,[0,2,3,1]));let b=Ah(r,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=_e(b,[0,3,1,2])),this.bias!=null&&(b=ls(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=Be(t);const n=t.slice();let r,o,a;this.dataFormat==="channelsFirst"?(r=1,o=2,a=3):(r=3,o=1,a=2);const i=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],u=this.strides[1];return n[r]=this.filters,n[o]=Es(n[o],c,i,this.padding),n[a]=Es(n[a],u,l,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Jg.className="Conv2DTranspose";Y(Jg);class Qg extends li{constructor(t){super(t);if(this.inputSpec=[new xt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new M(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Be(t),t.length!==5)throw new M("Input should have rank 5; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new M("The channel dimension of the inputs should be defined. Found `None`.");const r=t[n],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new xt({ndim:5,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{let r=Ie(t);if(r.shape.length!==5)throw new M(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape,a=o[0];let i,l,c;this.dataFormat==="channelsFirst"?(c=2,i=3,l=4):(c=1,i=2,l=3);const u=o[c],h=o[i],d=o[l],p=this.kernelSize[0],f=this.kernelSize[1],m=this.kernelSize[2],g=this.strides[0],y=this.strides[1],b=this.strides[2],x=Es(u,g,p,this.padding),v=Es(h,y,f,this.padding),w=Es(d,b,m,this.padding),C=[a,x,v,w,this.filters];this.dataFormat!=="channelsLast"&&(r=_e(r,[0,2,3,4,1]));let N=ew(r,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(N=_e(N,[0,4,1,2,3])),this.bias!==null&&(N=ls(N,this.bias.read(),this.dataFormat)),this.activation!==null&&(N=this.activation.apply(N)),N})}computeOutputShape(t){t=Be(t);const n=t.slice();let r,o,a,i;this.dataFormat==="channelsFirst"?(r=1,o=2,a=3,i=4):(r=4,o=1,a=2,i=3);const l=this.kernelSize[0],c=this.kernelSize[1],u=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return n[r]=this.filters,n[o]=Es(n[o],h,l,this.padding),n[a]=Es(n[a],d,c,this.padding),n[i]=Es(n[i],p,u,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Qg.className="Conv3DTranspose";Y(Qg);class bv extends ai{constructor(t,n){super(t,n);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new M("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new M("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new M(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=st(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=rt(n.depthwiseRegularizer),this.depthwiseConstraint=Tt(n.depthwiseConstraint),this.pointwiseInitializer=st(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=rt(n.pointwiseRegularizer),this.pointwiseConstraint=Tt(n.pointwiseConstraint)}build(t){if(t=Be(t),t.length<this.rank+2)throw new M(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new M(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);const r=t[n],o=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let l=0;l<this.rank;++l)a.push(1);a.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new xt({ndim:this.rank+2,axes:{[n]:r}})],this.built=!0}call(t,n){return W(()=>{t=Ie(t);let r;if(this.rank===1)throw new ke("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=_e(t,[0,2,3,1])),r=Sm(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=ls(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=_e(r,[0,3,1,2])),r})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ut(this.depthwiseInitializer),t.pointwiseInitializer=ut(this.pointwiseInitializer),t.depthwiseRegularizer=Xe(this.depthwiseRegularizer),t.pointwiseRegularizer=Xe(this.pointwiseRegularizer),t.depthwiseConstraint=St(this.depthwiseConstraint),t.pointwiseConstraint=St(this.pointwiseConstraint),t}}bv.className="SeparableConv";class ey extends bv{constructor(t){super(2,t)}}ey.className="SeparableConv2D";Y(ey);class Cc extends ai{constructor(t){super(1,t);Cc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,1))throw new M(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Cc.className="Conv1D";Y(Cc);class ty extends Pe{constructor(t){super(t);typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return W(()=>{if(t=Ie(t),this.dataFormat==="channelsLast"){const r=wd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wd(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=wd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wd(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}ty.className="Cropping2D";Y(ty);class ny extends Pe{constructor(t){super(t);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,mt(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,nL(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const n=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,r]}else{const n=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],n,r,t[3]]}}call(t,n){return W(()=>{let r=Ie(t);const o=r.shape;if(this.dataFormat==="channelsFirst"){r=_e(r,[0,2,3,1]);const a=this.size[0]*o[2],i=this.size[1]*o[3],l=this.interpolation==="nearest"?qn.resizeNearestNeighbor(r,[a,i]):qn.resizeBilinear(r,[a,i]);return _e(l,[0,3,1,2])}else{const a=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?qn.resizeNearestNeighbor(r,[a,i]):qn.resizeBilinear(r,[a,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}ny.className="UpSampling2D";Y(ny);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U3(s,t,n=[1,1],r="valid",o,a){return W(()=>{o==null&&(o=as()),mt(o);let i=Zg(s,o);if(s.rank!==4)throw new M(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new M(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Va(i,t,n,r==="same"?"same":"valid","NHWC",a),o==="channelsFirst"&&(i=_e(i,[0,3,1,2])),i})}class sy extends Ud{constructor(t){super(2,t);this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=st(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tt(t.depthwiseConstraint),this.depthwiseRegularizer=rt(t.depthwiseRegularizer)}build(t){if(t=Be(t),t.length<4)throw new M(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new M(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);const r=t[n],o=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return W(()=>{t=Ie(t);let r=U3(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=ls(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Be(t);const n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=ds(n,this.kernelSize[0],this.padding,this.strides[0]),i=ds(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,a,i]:[t[0],a,i,o]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ut(this.depthwiseInitializer),t.depthwiseRegularizer=Xe(this.depthwiseRegularizer),t.depthwiseConstraint=St(this.depthwiseRegularizer),t}}sy.className="DepthwiseConv2D";Y(sy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xv(s,t,n,r){if(Array.isArray(s)){if(t!=null||n!=null)throw new M("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=s.slice(s.length-r,s.length),s=s.slice(0,s.length-r)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function o(a){return a==null||Array.isArray(a)?a:[a]}return t=o(t),n=o(n),{inputs:s,initialState:t,constants:n}}function wv(s,t,n,r=!1,o,a,i=!1,l=!1){return W(()=>{const c=t.shape.length;if(c<3)throw new M(`Input should be at least 3D, but is ${c}D.`);const u=[1,0].concat(is(2,c));if(t=_e(t,u),a!=null)throw new ke("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===c-1&&(o=an(o,-1)),o=_e(o,u)),r&&(t=$n(t,0),o!=null&&(o=$n(o,0)));const h=[];let d,p=n;const f=t.shape[0],m=jn(t);let g;o!=null&&(g=jn(o));for(let b=0;b<f;++b){const x=m[b],v=W(()=>s(x,p));if(o==null)d=v[0],p=v[1];else{const w=W(()=>{const C=g[b],N=ce(vn(C),C),k=Z(L(v[0],C),L(p[0],N)),S=p.map((E,A)=>Z(L(v[1][A],C),L(E,N)));return{output:k,newStates:S}});d=w.output,p=w.newStates}l&&h.push(d)}let y;return l&&(y=Cn(h,1)),[d,y,p]})}class ps extends Pe{constructor(t){super(t);let n;if(t.cell==null)throw new M("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new jd({cells:t.cell}):n=t.cell,n.stateSize==null)throw new M("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new xt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return is(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Sg(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const r=n[0];let o;if(this.returnSequences?o=[t[0],t[1],r]:o=[t[0],r],this.returnState){const a=[];for(const i of n)a.push([t[0],i]);return[o].concat(a)}else return o}computeMask(t,n){return W(()=>{Array.isArray(n)&&(n=n[0]);const r=this.returnSequences?n:null;if(this.returnState){const o=this.states.map(a=>null);return[r].concat(o)}else return r})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let r=0;r<t;++r)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new ke("Constants support is not implemented in RNN yet.");Sg(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new xt({shape:[n,null,...r]});const o=[t[0]].concat(t.slice(2));this.cell.build(o);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!De(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new M(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new xt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){W(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new M("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([r,o])):this.states_=[bt([r,this.cell.stateSize])];else if(t==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>bt([r,o])):this.states_[0]=bt([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new M(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let o=0;o<this.states_.length;++o){const a=t[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,i];if(!De(a.shape,l))throw new M(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${a.shape}`);this.states_[o]=a}}this.states_=this.states_.map(o=>At(o.clone()))})}apply(t,n){let r=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const a=xv(t,r,o,this.numConstants);t=a.inputs,r=a.initialState,o=a.constants;let i=[],l=[];if(r!=null){n.initialState=r,i=i.concat(r),this.stateSpec=[];for(const u of r)this.stateSpec.push(new xt({shape:u.shape}));l=l.concat(this.stateSpec)}if(o!=null&&(n.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof cs){const u=[t].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,n);return this.inputSpec=d,p}else return super.apply(t,n)}call(t,n){return W(()=>{const r=n==null?null:n.mask,o=n==null?null:n.training;let a=n==null?null:n.initialState;t=Ie(t),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new M(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:o},u=wv((m,g)=>{const y=this.cell.call([m].concat(g),l);return[y[0],y.slice(1)]},t,a,this.goBackwards,r,null,this.unroll,this.returnSequences),h=u[0],d=u[1],p=u[2];this.stateful&&this.resetStates(p,o);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(t){return W(()=>{let n=bt(t.shape);return n=ue(n,[1,2]),n=mc(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?bg(n,[1,r]):n):this.cell.stateSize>1?[bg(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===ps.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,t,n)}static fromConfig(t,n,r={}){const o=n.cell,a=us(o,r);return new t(Object.assign(n,{cell:a}))}}ps.className="RNN";Y(ps);class kc extends Pe{}class Gd extends kc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ft(this.units,"units"),this.activation=kr(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=st(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=st(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=st(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rt(t.kernelRegularizer),this.recurrentRegularizer=rt(t.recurrentRegularizer),this.biasRegularizer=rt(t.biasRegularizer),this.kernelConstraint=Tt(t.kernelConstraint),this.recurrentConstraint=Tt(t.recurrentConstraint),this.biasConstraint=Tt(t.biasConstraint),this.dropout=ti([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ti([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Be(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return W(()=>{if(t=t,t.length!==2)throw new M(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];const o=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ir({ones:()=>vn(t),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ir({ones:()=>vn(r),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let a;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?a=Ts(L(t,i),this.kernel.read()):a=Ts(t,this.kernel.read()),this.bias!=null&&(a=ls(a,this.bias.read())),l!=null&&(r=L(r,l));let c=Z(a,Ts(r,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:Cr(this.activation),useBias:this.useBias,kernelInitializer:ut(this.kernelInitializer),recurrentInitializer:ut(this.recurrentInitializer),biasInitializer:ut(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:St(this.kernelConstraint),recurrentConstraint:St(this.recurrentConstraint),biasConstraint:St(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,n)}}Gd.className="SimpleRNNCell";Y(Gd);class ry extends ps{constructor(t){t.cell=new Gd(t);super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return new t(n)}}ry.className="SimpleRNN";Y(ry);class Hd extends kc{constructor(t){super(t);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new M("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Ft(this.units,"units"),this.activation=kr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=kr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=st(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=st(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=st(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=rt(t.kernelRegularizer),this.recurrentRegularizer=rt(t.recurrentRegularizer),this.biasRegularizer=rt(t.biasRegularizer),this.kernelConstraint=Tt(t.kernelConstraint),this.recurrentConstraint=Tt(t.recurrentConstraint),this.biasConstraint=Tt(t.biasConstraint),this.dropout=ti([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ti([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Be(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return W(()=>{if(t=t,t.length!==2)throw new M(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const r=n.training==null?!1:n.training;let o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ir({ones:()=>vn(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ir({ones:()=>vn(o),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,c,u;0<this.dropout&&this.dropout<1&&(t=L(t,a[0]));let h=Ts(t,this.kernel.read());this.useBias&&(h=ls(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,i[0]));const d=this.recurrentKernel.read(),[p,f]=cn(d,[2*this.units,this.units],d.rank-1),m=Ts(o,p),[g,y,b]=cn(h,3,h.rank-1),[x,v]=cn(m,2,m.rank-1);l=this.recurrentActivation.apply(Z(g,x)),c=this.recurrentActivation.apply(Z(y,v));const w=Ts(L(c,o),f);u=this.activation.apply(Z(b,w));const C=Z(L(l,o),L(Z(1,nt(l)),u));return[C,C]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:Cr(this.activation),recurrentActivation:Cr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ut(this.kernelInitializer),recurrentInitializer:ut(this.recurrentInitializer),biasInitializer:ut(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:St(this.kernelConstraint),recurrentConstraint:St(this.recurrentConstraint),biasConstraint:St(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,n)}}Hd.className="GRUCell";Y(Hd);class oy extends ps{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Hd(t);super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}oy.className="GRU";Y(oy);class Ic extends kc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Ft(this.units,"units"),this.activation=kr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=kr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=st(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=st(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=st(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=rt(t.kernelRegularizer),this.recurrentRegularizer=rt(t.recurrentRegularizer),this.biasRegularizer=rt(t.biasRegularizer),this.kernelConstraint=Tt(t.kernelConstraint),this.recurrentConstraint=Tt(t.recurrentConstraint),this.biasConstraint=Tt(t.biasConstraint),this.dropout=ti([1,wr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=ti([1,wr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Be(t);const r=t[t.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const a=this.biasInitializer,i=this.units;o=new(n=class extends Yn{apply(c,u){const h=a.apply([i]),d=new $d().apply([i]),p=a.apply([i*2]);return g1(g1(h,d),p)}},n.className="CustomInit",n)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return W(()=>{const r=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new M(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ir({ones:()=>vn(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ir({ones:()=>vn(o),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let c,u,h,d;0<this.dropout&&this.dropout<1&&(t=L(t,i[0]));let p=Ts(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,l[0])),p=Z(p,Ts(o,this.recurrentKernel.read())),this.useBias&&(p=ls(p,this.bias.read()));const[f,m,g,y]=cn(p,4,p.rank-1);c=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(m),h=Z(L(u,a),L(c,this.activation.apply(g))),d=this.recurrentActivation.apply(y);const b=L(d,this.activation.apply(h));return[b,b,h]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:Cr(this.activation),recurrentActivation:Cr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ut(this.kernelInitializer),recurrentInitializer:ut(this.recurrentInitializer),biasInitializer:ut(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:St(this.kernelConstraint),recurrentConstraint:St(this.recurrentConstraint),biasConstraint:St(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,n)}}Ic.className="LSTMCell";Y(Ic);class ay extends ps{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ic(t);super(t)}call(t,n){return W(()=>{this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}ay.className="LSTM";Y(ay);class jd extends kc{constructor(t){super(t);this.cells=t.cells}get stateSize(){const t=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return W(()=>{t=t;let r=t.slice(1);const o=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();const a=[];let i;for(let l=0;l<this.cells.length;++l){const c=this.cells[l];r=o[l],l===0?i=[t[0]].concat(r):i=[i[0]].concat(r),i=c.call(i,n),a.push(i.slice(1))}r=[];for(const l of a.slice().reverse())r.push(...l);return[i[0]].concat(r)})}build(t){Sg(t)&&(t=t[0]),t=t;let n;this.cells.forEach((r,o)=>{po(`RNNCell_${o}`,()=>{r.build(t),Array.isArray(r.stateSize)?n=r.stateSize[0]:n=r.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){const t=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),o={cells:this.cells.map(n)};return Object.assign({},t,o)}static fromConfig(t,n,r={}){const o=[];for(const a of n.cells)o.push(us(a,r));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const r of this.cells)n.push(...r.trainableWeights);return n.concat(t)}return t}getWeights(){const t=[];for(const n of this.cells)t.push(...n.weights);return Tg(t)}setWeights(t){const n=[];for(const r of this.cells){const o=r.weights.length,a=t.splice(o);for(let i=0;i<r.weights.length;++i)n.push([r.weights[i],a[i]])}Eg(n)}}jd.className="StackedRNNCells";Y(jd);function Ir(s){const{ones:t,rate:n,training:r=!1,count:o=1,dropoutFunc:a}=s,i=()=>a!=null?a(t(),n):b1(t(),n),l=()=>yc(i,t,r);return!o||o<=1?At(l().clone()):Array(o).fill(void 0).map(l).map(u=>At(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var G3=function(s,t){var n={};for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&t.indexOf(r)<0&&(n[r]=s[r]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,r=Object.getOwnPropertySymbols(s);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(s,r[o])&&(n[r[o]]=s[r[o]]);return n};class vv extends ps{constructor(t){if(t.unroll)throw new ke("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new ke("It is not possible at the moment to stack convolutional cells.");super(t);this.inputSpec=[new xt({ndim:5})]}call(t,n){return W(()=>{if(this.cell.dropoutMask!=null&&(Ce(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ce(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new M("ConvRNN2D cell does not support constants");const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}computeOutputShape(t){let n=this.computeSingleOutputShape(t);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([t[0],...n.slice(-3)])]),n}getInitialState(t){return W(()=>{const{stateSize:n}=this.cell,r=t.shape,o=this.computeSingleOutputShape(r),a=[o[0],...o.slice(2)],i=bt(a);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(t,n=!1){W(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),a=[o[0],...o.slice(2)];if(r[0]==null)throw new M("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(a)):this.states_=[bt(a)];else if(t==null)Ce(this.states_),this.keptStates!=null&&(Ce(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bt(a)):this.states_[0]=bt(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new M(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n?this.keptStates.push(this.states_.slice()):Ce(this.states_);for(let l=0;l<this.states_.length;++l){const c=t[l],u=a;if(!De(c.shape,u))throw new M(`State ${l} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${c.shape}`);this.states_[l]=c}}this.states_=this.states_.map(l=>At(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:n,filters:r,kernelSize:o,padding:a,strides:i,dilationRate:l}=this.cell,c=n==="channelsFirst",u=t[c?3:2],h=t[c?4:3],d=ds(u,o[0],a,i[0],l[0]),p=ds(h,o[1],a,i[1],l[1]);return[...t.slice(0,2),...c?[r,d,p]:[d,p,r]]}}vv.className="ConvRNN2D";class qd extends Ic{constructor(t){const{filters:n,kernelSize:r,strides:o,padding:a,dataFormat:i,dilationRate:l}=t;super(Object.assign({},t,{units:n}));this.filters=n,Ft(this.filters,"filters"),this.kernelSize=oi(r,2,"kernelSize"),this.kernelSize.forEach(c=>Ft(c,"kernelSize")),this.strides=oi(o||1,2,"strides"),this.strides.forEach(c=>Ft(c,"strides")),this.padding=a||"valid",Rn(this.padding),this.dataFormat=i||"channelsLast",mt(this.dataFormat),this.dilationRate=oi(l||1,2,"dilationRate"),this.dilationRate.forEach(c=>Ft(c,"dilationRate"))}build(t){var n;t=Be(t);const r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new M(`The channel dimension of the input should be defined. Found ${t[r]}`);const o=t[r],a=4,i=this.kernelSize.concat([o,this.filters*a]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const u=this.biasInitializer,h=this.filters;c=new(n=class extends Yn{apply(p,f){const m=u.apply([h]),g=wn([h]),y=u.apply([h*2]);return yg([m,g,y])}},n.className="CustomInit",n)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return W(()=>{if(t.length!==3)throw new M(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const r=n.training||!1,o=t[0],a=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ir({ones:()=>vn(o),rate:this.dropout,training:r,count:l,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,u=(X,J,Q)=>!J||!J[Q]?X:L(J[Q],X);let h=u(o,c,0),d=u(o,c,1),p=u(o,c,2),f=u(o,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ir({ones:()=>vn(a),rate:this.recurrentDropout,training:r,count:l,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=u(a,m,0),y=u(a,m,1),b=u(a,m,2),x=u(a,m,3);const v=3,[w,C,N,k]=cn(this.kernel.read(),l,v),[S,E,A,F]=this.useBias?cn(this.bias.read(),l):[null,null,null,null];h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,N,A,this.padding),f=this.inputConv(f,k,F,this.padding);const[D,O,B,V]=cn(this.recurrentKernel.read(),l,v);g=this.recurrentConv(g,D),y=this.recurrentConv(y,O),b=this.recurrentConv(b,B),x=this.recurrentConv(x,V);const z=this.recurrentActivation.apply(Z(h,g)),H=this.recurrentActivation.apply(Z(d,y)),U=Z(L(H,i),L(z,this.activation.apply(Z(p,b)))),K=L(this.recurrentActivation.apply(Z(f,x)),this.activation.apply(U));return[K,K,U]})}getConfig(){const t=super.getConfig(),n=G3(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,n,r,o){const a=Hs(t,n,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?ls(a,r,this.dataFormat):a}recurrentConv(t,n){return Hs(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}qd.className="ConvLSTM2DCell";Y(qd);class iy extends vv{constructor(t){const n=new qd(t);super(Object.assign({},t,{cell:n}))}static fromConfig(t,n){return new t(n)}}iy.className="ConvLSTM2D";Y(iy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kd extends Pe{constructor(t){super(t);this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const n=t.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(this.noiseShape[o]==null?n[o]:this.noiseShape[o]);return r}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t);if(0<this.rate&&this.rate<1){const o=n.training==null?!1:n.training,a=this.getNoiseShape(r);return yc(()=>b1(r,this.rate,a,this.seed),()=>r,o)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}}Kd.className="Dropout";Y(Kd);class ly extends Kd{constructor(t){super(t);this.inputSpec=[{ndim:3}]}getNoiseShape(t){const n=t.shape;return[n[0],1,n[2]]}}ly.className="SpatialDropout1D";Y(ly);class cy extends Pe{constructor(t){super(t);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,Ft(this.units,"units"),this.activation=kr(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=st(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=st(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tt(t.kernelConstraint),this.biasConstraint=Tt(t.biasConstraint),this.kernelRegularizer=rt(t.kernelRegularizer),this.biasRegularizer=rt(t.biasRegularizer),this.activityRegularizer=rt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Be(t);const n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Be(t);const n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t),o=l1(this.activation.getClassName());let a;return o!=null?a=Ts(r,this.kernel.read(),o,this.bias?this.bias.read():null):(a=Ts(r,this.kernel.read()),this.bias!=null&&(a=ls(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:Cr(this.activation),useBias:this.useBias,kernelInitializer:ut(this.kernelInitializer),biasInitializer:ut(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:St(this.kernelConstraint),biasConstraint:St(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}cy.className="Dense";Y(cy);class uy extends Pe{constructor(t){t=t||{};super(t);this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Be(t);for(const n of t.slice(1))if(n==null)throw new M(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],xr(t,1)]}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Ie(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){const o=[0];for(let a=2;a<r.rank;++a)o.push(a);o.push(1),r=_e(r,o)}return lL(r)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(t,n),t}}uy.className="Flatten";Y(uy);class hy extends Pe{constructor(t){super(t);this.supportsMasking=!0,this.activation=kr(t.activation)}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t);return this.activation.apply(r)})}getConfig(){const t={activation:Cr(this.activation)},n=super.getConfig();return Object.assign(t,n),t}}hy.className="Activation";Y(hy);class dy extends Pe{constructor(t){super(t);this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return W(()=>(t=Ie(t),aL(t,this.n)))}getConfig(){const t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}}dy.className="RepeatVector";Y(dy);class py extends Pe{constructor(t){super(t);this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){const r="Total size of new array must be unchanged.",o=n.slice();let a=1,i=null;for(let c=0;c<o.length;++c){const u=o[c];if(this.isUnknown(u))if(i===null)i=c;else throw new M("Can only specifiy one unknown dimension.");else a*=u}const l=xr(t);if(i!==null){if(a===0||l%a!=0)throw new M(r);o[i]=l/a}else if(l!==a)throw new M(r);return o}computeOutputShape(t){let n=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t),o=r.shape,a=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return P(r,a)})}getConfig(){const t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}}py.className="Reshape";Y(py);class fy extends Pe{constructor(t){super(t);if(t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const n=is(1,t.dims.length+1);if(!De(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new xt({ndim:this.dims.length+1})]}computeOutputShape(t){t=Be(t);const n=t.slice();return this.dims.forEach((r,o)=>{n[o+1]=t[r]}),n}call(t,n){return _e(Ie(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}}fy.className="Permute";Y(fy);class my extends Pe{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){const r=Ie(t),o=-1;return Gl(so(r,this.maskValue),o)}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t),o=-1,a=!0,i=Gl(so(r,this.maskValue),o,a);return L(r,ne(i,r.dtype))})}}my.className="Masking";Y(my);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class gy extends Pe{constructor(t){super(t);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(et(t.inputLength))}this.inputDim=t.inputDim,Ft(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Ft(this.outputDim,"outputDim"),this.embeddingsInitializer=st(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=rt(t.embeddingsRegularizer),this.activityRegularizer=rt(t.activityRegularizer),this.embeddingsConstraint=Tt(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return W(()=>this.maskZero?(t=Ie(t),so(t,Le(t))):null)}computeOutputShape(t){if(t=Be(t),this.inputLength==null)return[...t,this.outputDim];const n=et(this.inputLength);if(n.length!==t.length-1)throw new M(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let o=0;o<n.length;++o){const a=n[o],i=t[o+1];if(a!=null&&i!=null&&a!==i)throw new M(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);a==null&&(n[r]=i),r++}}return[t[0],...n,this.outputDim]}call(t,n){return W(()=>{this.invokeCallHook(t,n);let r=Ie(t);r.dtype!=="int32"&&(r=xd(r,"int32"));const o=y1(this.embeddings.read(),P(r,[r.size]));return P(o,Be(this.computeOutputShape(r.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ut(this.embeddingsInitializer),embeddingsRegularizer:Xe(this.embeddingsRegularizer),activityRegularizer:Xe(this.activityRegularizer),embeddingsConstraint:St(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}}gy.className="Embedding";Y(gy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bo extends Pe{constructor(t){super(t||{});this.supportsMasking=!0}mergeFunction(t){throw new ke}computeElementwiseOpOutputShape(t,n){if(t==null||n==null)return null;if(t.length<n.length)return this.computeElementwiseOpOutputShape(n,t);if(n.length===0)return t;const r=t.slice(0,t.length-n.length);for(let o=0;o<n.length;++o){const a=t[t.length-n.length+o],i=n[o];if(a==null||i==null||a<0||i<0)r.push(null);else if(a===1)r.push(i);else if(i===1)r.push(a);else{if(a!==i)throw new M("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(n));r.push(a)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Be(t)]),t=t,t.length<2)throw new M(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let n=[];for(const a of t)a!=null&&a[0]!==null&&n.push(a[0]);if(n=br(n),n.length>1)throw new M(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=t[0]==null?null:t[0].slice(1);for(let a=1;a<t.length;++a){const i=t[a]==null?null:t[a].slice(1);r=this.computeElementwiseOpOutputShape(r,i)}const o=t.map(a=>a.length);t.indexOf(null)===-1&&br(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,n){return W(()=>{if(t=t,this.reshapeRequired){const r=[],o=t.map(a=>a.rank);if(o.indexOf(null)===-1){const a=wr(o);for(let i of t){const l=i.rank;for(let c=0;c<a-l;++c)i=mc(i,1);r.push(i)}return this.mergeFunction(r)}else{let a=!1;for(const c of t){const u=c.rank;if(u==null){const h=c.shape,d=h[0],p=h.slice(1).concat([d]);let f=P(c,[d].concat(xr(h.slice(1))));f=_e(f,[1,0]),f=P(f,p),r.push(f),a=!0}else if(u>1){const h=is(1,u).concat([0]);r.push(_e(c,h)),a=!0}else r.push(c)}let i=this.mergeFunction(r);const l=i.rank;if(a){if(l==null){const c=i.shape,u=c.length,h=c[u-1],d=[h].concat(c.slice(0,c.length-1));i=P(_e(P(i,[-1,h]),[1,0]),d)}else if(l>1){const c=[l-1].concat(is(0,l-1));i=_e(i,c)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let n;t[0]==null?n=null:n=t[0].slice(1);for(let o=1;o<t.length;++o){const a=t[o]==null?null:t[o].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let r=[];for(const o of t)o!=null&&o[0]!==null&&r.push(o[0]);return r=br(r),r.length===1?n=r.concat(n):n=[null].concat(n),n}computeMask(t,n){return W(()=>{if(n==null)return null;if(!Array.isArray(n))throw new M("`mask` should be an Array");if(!Array.isArray(t))throw new M("`inputs` should be an Array");if(n.length!==t.length)throw new M(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${n.length})`);if(n.every(o=>o==null))return null;n=n.map(o=>o==null?o:an(o,0));let r=n[0];for(let o=1;o<n.length-1;++o)r=Hn(r,n[o]);return r})}}class yy extends bo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=Z(n,t[r]);return n})}}yy.className="Add";Y(yy);class by extends bo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=L(n,t[r]);return n})}}by.className="Multiply";Y(by);class xy extends bo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=Z(n,t[r]);return L(1/t.length,n)})}}xy.className="Average";Y(xy);class wy extends bo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=Cs(n,t[r]);return n})}}wy.className="Maximum";Y(wy);class vy extends bo{constructor(t){super(t)}mergeFunction(t){return W(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=qa(n,t[r]);return n})}}vy.className="Minimum";Y(vy);class $y extends bo{constructor(t){super(t);this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new M("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(const o of t)if(o!=null){n=!1;break}if(n)return;const r=[];for(let o=0;o<t.length;++o){const a=t[o].slice();a.splice(this.axis,1);let i=!1;for(const l of r)if(De(l,a)){i=!0;break}i||r.push(a)}if(r.length>1)throw new M("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return W(()=>yg(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new M("A `Concatenate` layer should be called on a list of inputs.");const n=t,r=n[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(const a of n.slice(1)){if(r[o]==null||a[o]==null){r[o]=null;break}r[o]+=a[o]}return r}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new M("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new M("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new M(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return W(()=>{let r=!0;if(n.forEach(i=>{if(i!=null){r=!1;return}}),r)return null;const o=[];for(let i=0;i<t.length;++i)n[i]==null?o.push(ne(vn(t[i]),"bool")):n[i].rank<t[i].rank?o.push(an(n[i],-1)):o.push(n[i]);const a=dt(o,this.axis);return Sh(a,-1,!1)})}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}$y.className="Concatenate";Y($y);function Nc(s,t){for(;s<0;)s+=t;return s}function H3(s,t,n){if(s.shape.length>3||t.shape.length>3)throw new ke("batchDot is not implemented for tensors of 4D or higher rank yet");if(I(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),I(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),s.dtype==="complex64"||t.dtype==="complex64")throw new ke("batchDot is not implemented for complex64-type Tensors yet.");const r=s.shape.length,o=t.shape.length;n==null&&(n=[r-1,o-2]);const a=n;return W(()=>{let i;if(r>o){i=r-o;const c=[];for(let u=0;u<i;++u)c.push(1);t=P(t,t.shape.concat(c))}else if(o>r){i=o-r;const c=[];for(let u=0;u<i;++u)c.push(1);s=P(s,s.shape.concat(c))}else i=0;let l;if(s.shape.length===2&&t.shape.length===2)a[0]===a[1]?l=ue(L(s,t),a[0]):l=ue(L(_e(s,[1,0]),t),a[1]);else{const c=a[0]!==s.shape.length-1,u=a[1]===t.shape.length-1;l=Te(s,t,c,u)}if(i>0){let c;r>o?c=r+o-3:c=r-1;const u=[];for(let h=c;h<c+i;++h)u.push(h);l=ks(l,u)}return l.shape.length===1&&(l=an(l,1)),l})}class Cy extends bo{constructor(t){super(t);this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){I(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0],r=t[1];if(n.length>3||r.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,r);if(n[o[0]]!==r[o[1]])throw new M(`Dimension incompatibility: ${n[o[0]]} !== ${r[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new M(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],r=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((a,i)=>Nc(a,t[i].shape.length)):o=[Nc(this.axes,n.shape.length),Nc(this.axes,r.shape.length)],this.normalize&&(n=_d(n,o[0]),r=_d(r,o[1])),H3(n,r,o)}interpretAxes(t,n){let r;return Array.isArray(this.axes)?r=this.axes:r=[Nc(this.axes,t.length),Nc(this.axes,n.length)],r}computeOutputShape(t){I(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0].slice(),r=t[1].slice();if(n.length>3||r.length>3)throw new ke("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,r);n.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);const a=n.concat(r);return a.length===1&&a.push(1),a}computeMask(t,n){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}}Cy.className="Dot";Y(Cy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ky extends Pe{constructor(t){super(t);this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t);return yc(()=>Z(vd(r.shape,0,this.stddev),r),()=>r,n.training||!1)})}}ky.className="GaussianNoise";Y(ky);class Iy extends Pe{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return W(()=>{this.invokeCallHook(t,n);const r=Ie(t);return this.rate>0&&this.rate<1?yc(()=>{const a=Math.sqrt(this.rate/(1-this.rate));return L(r,vd(r.shape,1,a))},()=>r,n.training||!1):r})}}Iy.className="GaussianDropout";Y(Iy);class Ny extends Pe{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ie(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return W(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(t);return yc(()=>{const a=Ie(t),i=1.6732632423543772,l=1.0507009873554805,c=-i*l;let u=gr(Xa(r),this.rate);u=xd(u,"float32");const h=((1-this.rate)*(1+this.rate*c**2))**-.5,d=-h*c*this.rate,p=Z(L(a,u),L(Z(u,-1),c));return Z(L(p,h),d)},()=>Ie(t),n.training||!1)}return t})}}Ny.className="AlphaDropout";Y(Ny);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sc(s,t,n,r,o,a=.001){let i;if(s.rank===2)i=H0(s,t,n,r,o,a);else if(s.rank===3)i=j0(s,t,n,r,o,a);else if(s.rank===4)i=q0(s,t,n,r,o,a);else throw new ke(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return i}function j3(s,t,n,r,o=.001){return W(()=>{const a=Mh(s,r),i=a.mean,l=a.variance;return[Sc(s,i,l,n,t,o),i,l]})}function q3(s,t,n,r,o=.001){return W(()=>{const a=Mh(s,r),i=a.mean,l=a.variance,c=[];for(const m of is(0,s.rank))r.indexOf(m)!==-1?c.push(1):c.push(s.shape[m]);const u=P(i,c),h=P(l,c),d=t==null?null:P(t,c),p=n==null?null:P(n,c);return[Sc(s,u,h,p,d,o),i,l]})}function K3(s,t,n,r,o=.001){return De(r.slice().sort(),is(0,s.rank-1))?j3(s,t,n,r,o):q3(s,t,n,r,o)}class Sy extends Pe{constructor(t){t==null&&(t={});super(t);this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=st(t.betaInitializer||"zeros"),this.gammaInitializer=st(t.gammaInitializer||"ones"),this.movingMeanInitializer=st(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=st(t.movingVarianceInitializer||"ones"),this.betaConstraint=Tt(t.betaConstraint),this.gammaConstraint=Tt(t.gammaConstraint),this.betaRegularizer=rt(t.betaRegularizer),this.gammaRegularizer=rt(t.gammaRegularizer)}build(t){t=Be(t);const n=this.axis>=0?this.axis:this.axis+t.length,r=t[n];if(r==null)throw new M(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new xt({ndim:t.length,axes:{[n]:r}})];const o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return W(()=>{const r=n.training==null?!1:n.training,o=Ie(t),a=o.shape,i=a.length,l=is(0,i),c=this.axis>=0?this.axis:this.axis+i;l.splice(c,1);const u=co(1,i);u[c]=a[c];const h=l.slice();h.sort();const d=!De(h,is(0,i).slice(0,i-1)),p=()=>{if(d){const x=P(this.movingMean.read(),u),v=P(this.movingVariance.read(),u),w=this.center?P(this.beta.read(),u):null,C=this.scale?P(this.gamma.read(),u):null;return Sc(o,x,v,w,C,this.epsilon)}else return Sc(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return p();const[f,m,g]=K3(o,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(x,v,w)=>{W(()=>{const C=1-w,N=x.read(),k=L(ce(N,v),C);x.write(ce(N,k))})};return(()=>{y(this.movingMean,m,this.momentum),y(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ut(this.betaInitializer),gammaInitializer:ut(this.gammaInitializer),movingMeanInitializer:ut(this.movingMeanInitializer),movingVarianceInitializer:ut(this.movingVarianceInitializer),betaRegularizer:Xe(this.betaRegularizer),gammaRegularizer:Xe(this.gammaRegularizer),betaConstraint:St(this.betaConstraint),gammaConstraint:St(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}}Sy.className="BatchNormalization";Y(Sy);class Ty extends Pe{constructor(t){t==null&&(t={});super(t);if(this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=st(t.betaInitializer||"zeros"),this.gammaInitializer=st(t.gammaInitializer||"ones"),this.betaRegularizer=rt(t.betaRegularizer),this.gammaRegularizer=rt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Be(t);const n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(const a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==br(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(a=>t[a]),o=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,n){const r=Ie(t),o=r.shape,a=o.length;return W(()=>{const i=!0;let{mean:l,variance:c}=Mh(r,this.axis,i);const u=co(1,a);for(const g of this.axis)u[g]=o[g];const h=g=>g!=null&&g.shape.length!==a?P(g,u):g;let d=h(this.gamma.read()),p=h(this.beta.read());const f=[],m=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(o[g]),m.push(1)):(f.push(1),m.push(o[g]));return l=Dn(l,f),c=Dn(c,f),d=Dn(d,m),p=Dn(p,m),Sc(r,l,c,p,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ut(this.betaInitializer),gammaInitializer:ut(this.gammaInitializer),betaRegularizer:Xe(this.betaRegularizer),gammaRegularizer:Xe(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}}Ty.className="LayerNormalization";Y(Ty);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function X3(s,t,n){return W(()=>{if(s.rank!==4)throw new M(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new M("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=as()),n!=="channelsLast"&&n!=="channelsFirst")throw new M(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],js(s,r)})}class Ey extends Pe{constructor(t){t==null&&(t={});super(t);if(this.dataFormat=t.dataFormat==null?as():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new M(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,r;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new M(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new M(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[n,r]}this.inputSpec=[new xt({ndim:4})]}computeOutputShape(t){t=Be(t);let n,r;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?r=t[3]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],t[1],n,r]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?r=t[2]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],n,r,t[3]])}call(t,n){return W(()=>X3(Ie(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}Ey.className="ZeroPadding2D";Y(Ey);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xd(s,t,n,r,o,a){return W(()=>{mt(o),h1(a),Rn(r),n==null&&(n=[1,1]),r==null&&(r="valid"),o==null&&(o=as()),a==null&&(a="max"),s=Zg(s,o);let i;const l=r==="same"?"same":"valid";return a==="max"?i=Jl(s,t,n,l):i=jl(s,t,n,l),o==="channelsFirst"&&(i=_e(i,[0,3,1,2])),i})}function $v(s,t,n,r,o,a){return W(()=>{mt(o),h1(a),Rn(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),o==null&&(o=as()),a==null&&(a="max"),s=gv(s,o);let i;const l=r==="same"?"same":"valid";return a==="max"?i=$m(s,t,n,l):i=im(s,t,n,l),o==="channelsFirst"&&(i=_e(i,[0,4,1,2,3])),i})}class Cv extends Pe{constructor(t){t.poolSize==null&&(t.poolSize=2);super(t);if(typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new M(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Ft(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new M(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Ft(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Rn(this.padding),this.inputSpec=[new xt({ndim:3})]}computeOutputShape(t){t=Be(t);const n=ds(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],n,t[2]]}call(t,n){return W(()=>{this.invokeCallHook(t,n),t=mc(Ie(t),2);const r=this.poolingFunction(Ie(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ks(r,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(t,n),t}}class Ay extends Cv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),Xd(t,n,r,o,a,"max")}}Ay.className="MaxPooling1D";Y(Ay);class Dy extends Cv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),Xd(t,n,r,o,a,"avg")}}Dy.className="AveragePooling1D";Y(Dy);class kv extends Pe{constructor(t){t.poolSize==null&&(t.poolSize=[2,2]);super(t);if(this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new M(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ft(this.poolSize,"poolSize"),Ft(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,mt(this.dataFormat),Rn(this.padding),this.inputSpec=[new xt({ndim:4})]}computeOutputShape(t){t=Be(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2];return n=ds(n,this.poolSize[0],this.padding,this.strides[0]),r=ds(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,r]:[t[0],n,r,t[3]]}call(t,n){return W(()=>(this.invokeCallHook(t,n),this.poolingFunction(Ie(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class Ry extends kv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),Xd(t,n,r,o,a,"max")}}Ry.className="MaxPooling2D";Y(Ry);class Fy extends kv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),Xd(t,n,r,o,a,"avg")}}Fy.className="AveragePooling2D";Y(Fy);class Iv extends Pe{constructor(t){t.poolSize==null&&(t.poolSize=[2,2,2]);super(t);if(this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new M(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ft(this.poolSize,"poolSize"),Ft(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,mt(this.dataFormat),Rn(this.padding),this.inputSpec=[new xt({ndim:5})]}computeOutputShape(t){t=Be(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return n=ds(n,this.poolSize[0],this.padding,this.strides[0]),r=ds(r,this.poolSize[1],this.padding,this.strides[1]),o=ds(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,r,o]:[t[0],n,r,o,t[4]]}call(t,n){return W(()=>(this.invokeCallHook(t,n),this.poolingFunction(Ie(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class _y extends Iv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),$v(t,n,r,o,a,"max")}}_y.className="MaxPooling3D";Y(_y);class Oy extends Iv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return mt(a),Rn(o),$v(t,n,r,o,a,"avg")}}Oy.className="AveragePooling3D";Y(Oy);class Nv extends Pe{constructor(t){super(t);this.inputSpec=[new xt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,n){throw new ke}}class Ly extends Nv{constructor(t){super(t||{})}call(t,n){return W(()=>{const r=Ie(t);return ct(r,1)})}}Ly.className="GlobalAveragePooling1D";Y(Ly);class Py extends Nv{constructor(t){super(t||{})}call(t,n){return W(()=>{const r=Ie(t);return Gn(r,1)})}}Py.className="GlobalMaxPooling1D";Y(Py);class Sv extends Pe{constructor(t){super(t);this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,mt(this.dataFormat),this.inputSpec=[new xt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,n){throw new ke}getConfig(){const t={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class My extends Sv{call(t,n){return W(()=>{const r=Ie(t);return this.dataFormat==="channelsLast"?ct(r,[1,2]):ct(r,[2,3])})}}My.className="GlobalAveragePooling2D";Y(My);class zy extends Sv{call(t,n){return W(()=>{const r=Ie(t);return this.dataFormat==="channelsLast"?Gn(r,[1,2]):Gn(r,[2,3])})}}zy.className="GlobalMaxPooling2D";Y(zy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Tv extends Pe{constructor(t){super(t);this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(t,n),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,n,r={}){const o=n.layer,a=us(o,r);delete n.layer;const i={layer:a};return Object.assign(i,n),new t(i)}}class By extends Tv{constructor(t){super(t);this.supportsMasking=!0}build(t){if(t=Be(t),t.length<3)throw new M(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const n=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Be(t);const n=[t[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(n),o=t[1];return[r[0],o].concat(r.slice(1))}call(t,n){return W(()=>(t=Ie(t),wv((i,l)=>[Ie(this.layer.call(i,n)),[]],t,[],!1,null,null,!1,!0)[1]))}}By.className="TimeDistributed";Y(By);function Y3(s){ho(tL,"BidirectionalMergeMode",s)}const Z3="concat";class Vy extends Tv{constructor(t){super(t);const n=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=n,this.forwardLayer=us(r),n.goBackwards=n.goBackwards!==!0;const o={};if(o.className=t.layer.getClassName(),o.config=n,this.backwardLayer=us(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?Z3:t.mergeMode,Y3(this.mergeMode),t.weights)throw new ke("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const n=t.length,r=Math.floor(n/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let n=this.forwardLayer.computeOutputShape(t);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let r,o,a;return this.returnState&&(a=n.slice(1)),r=n[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,o=[r]):this.mergeMode==null?o=[r,r.slice()]:o=[r],this.returnState?this.mergeMode==null?o.concat(a).concat(a.slice()):[r].concat(a).concat(a.slice()):un(o)}apply(t,n){let r=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const a=xv(t,r,o,this.numConstants);if(t=a.inputs,r=a.initialState,o=a.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(r==null||r.length===0)&&o==null)return super.apply(t,n);const i=[],l=[];if(r!=null){const u=r.length;if(u%2>0)throw new M("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=r,i.push(...r);const h=r.map(d=>new xt({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,u/2),this.backwardLayer.stateSpec=h.slice(u/2),l.push(...h)}if(o!=null)throw new ke("Support for constants in Bidirectional layers is not implemented yet.");const c=i[0]instanceof cs;for(const u of i)if(u instanceof cs!==c)throw new M("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const u=[t].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,n);return this.inputSpec=d,p}else return super.apply(t,n)}call(t,n){return W(()=>{const r=n.initialState;let o,a;if(r==null)o=this.forwardLayer.call(t,n),a=this.backwardLayer.call(t,n);else{const c=r.slice(0,r.length/2),u=r.slice(r.length/2);o=this.forwardLayer.call(t,Object.assign(n,{initialState:c})),a=this.backwardLayer.call(t,Object.assign(n,{initialState:u}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(a.slice(1))),o=o[0],a=a[0]),this.returnSequences&&(a=$n(a,1));let l;return this.mergeMode==="concat"?l=yg([o,a]):this.mergeMode==="sum"?l=Z(o,a):this.mergeMode==="ave"?l=L(.5,Z(o,a)):this.mergeMode==="mul"?l=L(o,a):this.mergeMode==null&&(l=[o,a]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){po(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),po(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,n){Array.isArray(n)&&(n=n[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[n,n]:r=n:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const a=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(a).concat(a):[r].concat(a).concat(a)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,n){const r=us(n.layer);if(delete n.layer,n.numConstants!=null)throw new ke("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=n;return o.layer=r,new t(o)}}Vy.className="Bidirectional";Y(Vy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function J3(s){return new ni(s)}function Q3(s){return new Kg(s)}function eP(s){return new Hg(s)}function tP(s){return new jg(s)}function nP(s){return new qg(s)}function sP(s){return new Yg(s)}function rP(s){return new Xg(s)}function oP(s){return new Cc(s)}function aP(s){return new ii(s)}function iP(s){return new Jg(s)}function lP(s){return new li(s)}function cP(s){return new Qg(s)}function uP(s){return new ey(s)}function hP(s){return new ty(s)}function dP(s){return new ny(s)}function pP(s){return new sy(s)}function fP(s){return new hy(s)}function mP(s){return new cy(s)}function gP(s){return new Kd(s)}function yP(s){return new ly(s)}function bP(s){return new uy(s)}function xP(s){return new dy(s)}function wP(s){return new py(s)}function vP(s){return new fy(s)}function $P(s){return new gy(s)}function CP(s){return new yy(s)}function kP(s){return new xy(s)}function IP(s){return new $y(s)}function NP(s){return new wy(s)}function SP(s){return new vy(s)}function TP(s){return new by(s)}function EP(s){return new Cy(s)}function AP(s){return new Sy(s)}function DP(s){return new Ty(s)}function RP(s){return new Ey(s)}function Wy(s){return new Dy(s)}function FP(s){return Wy(s)}function _P(s){return Wy(s)}function Uy(s){return new Fy(s)}function OP(s){return Uy(s)}function LP(s){return Uy(s)}function Gy(s){return new Oy(s)}function PP(s){return Gy(s)}function MP(s){return Gy(s)}function zP(s){return new Ly(s)}function BP(s){return new My(s)}function Ev(s){return new Py(s)}function Av(s){return new zy(s)}function Dv(s){return new Ay(s)}function Rv(s){return new Ry(s)}function VP(s){return new _y(s)}function WP(s){return new oy(s)}function UP(s){return new Hd(s)}function GP(s){return new ay(s)}function HP(s){return new Ic(s)}function jP(s){return new ry(s)}function qP(s){return new Gd(s)}function KP(s){return new iy(s)}function XP(s){return new qd(s)}function YP(s){return new ps(s)}function ZP(s){return new jd(s)}function JP(s){return new Vy(s)}function QP(s){return new By(s)}const eM=Ev,tM=Av,nM=Dv,sM=Rv;function rM(s){return new ky(s)}function oM(s){return new Iy(s)}function aM(s){return new Ny(s)}function iM(s){return new my(s)}var lM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",inputLayer:J3,elu:Q3,reLU:eP,leakyReLU:tP,prelu:nP,softmax:sP,thresholdedReLU:rP,conv1d:oP,conv2d:aP,conv2dTranspose:iP,conv3d:lP,conv3dTranspose:cP,separableConv2d:uP,cropping2D:hP,upSampling2d:dP,depthwiseConv2d:pP,activation:fP,dense:mP,dropout:gP,spatialDropout1d:yP,flatten:bP,repeatVector:xP,reshape:wP,permute:vP,embedding:$P,add:CP,average:kP,concatenate:IP,maximum:NP,minimum:SP,multiply:TP,dot:EP,batchNormalization:AP,layerNormalization:DP,zeroPadding2d:RP,averagePooling1d:Wy,avgPool1d:FP,avgPooling1d:_P,averagePooling2d:Uy,avgPool2d:OP,avgPooling2d:LP,averagePooling3d:Gy,avgPool3d:PP,avgPooling3d:MP,globalAveragePooling1d:zP,globalAveragePooling2d:BP,globalMaxPooling1d:Ev,globalMaxPooling2d:Av,maxPooling1d:Dv,maxPooling2d:Rv,maxPooling3d:VP,gru:WP,gruCell:UP,lstm:GP,lstmCell:HP,simpleRNN:jP,simpleRNNCell:qP,convLstm2d:KP,convLstm2dCell:XP,rnn:YP,stackedRNNCells:ZP,bidirectional:JP,timeDistributed:QP,globalMaxPool1d:eM,globalMaxPool2d:tM,maxPool1d:nM,maxPool2d:sM,Layer:Pe,RNN:ps,RNNCell:kc,input:Q1,gaussianNoise:rM,gaussianDropout:oM,alphaDropout:aM,masking:iM});function cM(s,t){return Rg(s,t)}function uM(s,t){return O1(s,t)}function hM(s,t){return L1(s,t)}function dM(s,t){return Fg(s,t)}function pM(s,t){return _g(s,t)}function fM(s,t){return _1(s,t)}function mM(s,t){return ZL(s,t)}function gM(s,t){return Ag(s,t)}function yM(s,t){return Od(s,t)}function bM(s,t){return ri(s,t)}function xM(s,t){return ri(s,t)}function wM(s,t){return ri(s,t)}function vM(s,t){return mo(s,t)}function $M(s,t){return mo(s,t)}function CM(s,t){return mo(s,t)}var kM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",binaryAccuracy:cM,binaryCrossentropy:uM,sparseCategoricalAccuracy:hM,categoricalAccuracy:dM,categoricalCrossentropy:pM,precision:fM,recall:mM,cosineProximity:gM,meanAbsoluteError:yM,meanAbsolutePercentageError:bM,MAPE:xM,mape:wM,meanSquaredError:vM,MSE:$M,mse:CM});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var IM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",modelFromJSON:D3});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NM(s){return new $c(s)}function SM(s){return z3(s)}function TM(s){return B3(s)}var EM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",l1l2:NM,l1:SM,l2:TM});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fv extends si{constructor(){super(...arguments);this.model=null}setModel(t){if(!(t instanceof Js))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Yd(s,t){return s<t}function _v(s,t){return s>t}class Ov extends Fv{constructor(t){super();if(t==null&&(t={}),t.restoreBestWeights)throw new ke("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Yd:this.mode==="max"?this.monitorFunc=_v:this.monitor.indexOf("acc")!==-1?this.monitorFunc=_v:this.monitorFunc=Yd,this.monitorFunc===Yd&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Yd?1/0:-1/0}async onEpochEnd(t,n){await vr(n);const r=this.getMonitorValue(n);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){t==null&&(t={});const n=t[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),n}}function AM(s){return new Ov(s)}const DM={earlyStopping:AM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var fs;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(fs||(fs={}));var Lv;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(Lv||(Lv={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hy={};function RM(s,t){const n={tfOpName:s,category:"custom",inputs:[],attrs:[],customExecutor:t};Hy[s]=n}function Pv(s){return Hy[s]}function FM(s){delete Hy[s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $(s,t,n,r,o){const a=t.inputParams[s];if(a&&a.inputIndexStart!==void 0){const l=a.inputIndexStart,c=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?l+1:a.inputIndexEnd;if(a.type==="tensor")return Jt(t.inputNames[a.inputIndexStart],n,r,o);if(a.type==="tensors")return t.inputNames.slice(l,c).map(p=>Jt(p,n,r,o));const u=Jt(t.inputNames.slice(l)[0],n,r,o),h=u.dataSync();return a.type==="number"?h[0]:En(u.shape,h)}const i=t.attrParams[s];return i&&i.value}function Jt(s,t,n,r){const[o,a]=kn(s);if(r!=null){const l=r.getHashTableHandleByName(o);if(l!=null)return l}const i=n.currentContextIds.find(l=>!!t[Zd(o,l)]);return i!==void 0?t[Zd(o,i)][a]:void 0}function _M(s,t,n){return t[Zd(s,n.currentContextId)]}function Qs(s,t){const[n,r,o]=kn(s);return[Zd(n,t&&t.currentContextId),r,o]}function Zd(s,t){return t?`${s}-${t}`:s}function kn(s){const t=s.split(":");if(t.length===1)return[s,0,void 0];const n=t[0],r=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[n,o,r]}function Jd(s,t,n){let r=$("pad",s,t,n);if(r==="explicit"){r=$("explicitPaddings",s,t,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)o[a][0]=r[a*2],o[a][1]=r[a*2+1];return o}return r}function er(s){return s.kept?s:Ws(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var LM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:OM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var MM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:PM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zM=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var BM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:zM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var WM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:VM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var GM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:UM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var jM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:HM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var KM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:qM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var YM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:XM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var JM=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:ZM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QM=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var ez=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:QM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var nz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:tz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var rz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:sz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var az=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:oz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var lz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:iz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cz=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var uz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:cz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hz=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var dz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:hz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:pz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var gz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:mz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yz=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var bz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mv{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[LM,MM,BM,WM,GM,jM,KM,YM,JM,ez,nz,rz,az,lz,uz,dz,fz,gz,bz],n=[].concat(...t.map(r=>r.json));this.opMappers=n.reduce((r,o)=>(r[o.tfOpName]=o,r),{})}transformGraph(t,n={}){const r=t.node,o=[],a=[],i=[],l=r.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?o.push(g[y.name]):y.op==="Const"?a.push(g[y.name]):(y.input==null||y.input.length===0)&&i.push(g[y.name]),g),{});let c=[];const u=[];let h={},d={};n!=null&&(h=this.mapSignatureEntries(n.inputs),d=this.mapSignatureEntries(n.outputs));const p=Object.keys(l);p.forEach(g=>{const y=l[g];y.inputNames.forEach((b,x)=>{const[v,,w]=Qs(b),C=l[v];if(C.outputs!=null){const N=C.outputs.indexOf(w);if(N!==-1){const k=`${v}:${N}`;y.inputNames[x]=k}}y.inputs.push(C),C.children.push(y)})}),Object.keys(d).length===0?p.forEach(g=>{const y=l[g];y.children.length===0&&u.push(y)}):Object.keys(d).forEach(g=>{const[y]=Qs(g),b=l[y];b!=null&&(b.signatureKey=d[g],u.push(b))}),Object.keys(h).length>0?Object.keys(h).forEach(g=>{const[y]=Qs(g),b=l[y];b&&(b.signatureKey=h[g],c.push(b))}):c=o;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const m={nodes:l,inputs:c,outputs:u,weights:a,placeholders:o,signature:n,functions:f};return i.length>0&&(m.initNodes=i),m}mapSignatureEntries(t){return Object.keys(t||{}).reduce((n,r)=>(n[t[r].name]=r,n),{})}mapNode(t){const n=Pv(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const r={name:t.name,op:t.op,category:n.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:n.outputs};return n.inputs!=null&&(r.inputParams=n.inputs.reduce((o,a)=>(o[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},o),{})),n.attrs!=null&&(r.attrParams=n.attrs.reduce((o,a)=>{const i=a.type;let l;switch(a.type){case"string":l=jy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=jy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":l=eb(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=eb(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":l=Ky(t.attr,a.tfName,a.defaultValue||0),l===void 0&&!!a.tfDeprecatedName&&(l=Ky(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":l=Qy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Qy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":l=qy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=qy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":l=nb(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=nb(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":l=Jy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Jy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":l=tb(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=tb(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":l=Yy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Yy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":l=Zy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Zy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":l=Bv(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Bv(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${t.op}`)}return o[a.name]={value:l,type:i},o},{})),r}mapFunction(t){const n=t.nodeDef,r=[],o=[];let a={};n!=null&&(a=n.reduce((d,p)=>(d[p.name]=this.mapNode(p),p.op==="Const"&&o.push(d[p.name]),d),{}));const i=[],l=[];t.signature.inputArg.forEach(d=>{const[p]=Qs(d.name),f={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Xy(d.type),type:"dtype"}},children:[]};f.signatureKey=d.name,i.push(f),a[p]=f}),Object.keys(a).forEach(d=>{const p=a[d];p.inputNames.forEach((f,m)=>{const[g,,y]=Qs(f),b=a[g];if(b.outputs!=null){const x=b.outputs.indexOf(y);if(x!==-1){const v=`${g}:${x}`;p.inputNames[m]=v}}p.inputs.push(b),b.children.push(p)})});const u=t.ret;t.signature.outputArg.forEach(d=>{const[p,f]=Qs(u[d.name]),m=a[p];m!=null&&(m.defaultOutput=f,l.push(m))});const h=this.mapArgsToSignature(t);return{nodes:a,inputs:i,outputs:l,weights:o,placeholders:r,signature:h}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r),n),{}),outputs:t.signature.outputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r,t.ret),n),{})}}mapArgToTensorInfo(t,n){let r=t.name;return n!=null&&(r=n[r]),{name:r,dtype:t.type}}}function xz(s){const t=q().global;if(typeof t.atob!="undefined")return t.atob(s);if(typeof Buffer!="undefined")return new Buffer(s,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function zv(s,t){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):xz(s);return t?n:n.toLowerCase()}function jy(s,t,n,r=!1){const o=s[t];return o!=null?zv(o.s,r):n}function qy(s,t,n){const r=s[t];return r?r.b:n}function Ky(s,t,n){const r=s[t]||{},o=r.i!=null?r.i:r.f!=null?r.f:n;return typeof o=="number"?o:parseInt(o,10)}function Xy(s){switch(typeof s=="string"&&(s=fs[s]),s){case fs.DT_FLOAT:return"float32";case fs.DT_INT32:case fs.DT_INT64:case fs.DT_INT8:case fs.DT_UINT8:return"int32";case fs.DT_BOOL:return"bool";case fs.DT_DOUBLE:return"float32";case fs.DT_STRING:return"string";default:return null}}function Bv(s,t,n){const r=s[t];return r&&r.func?r.func.name:n}function Yy(s,t,n){const r=s[t];return r&&r.type?Xy(r.type):n}function Zy(s,t,n){const r=s[t];return r&&r.list&&r.list.type?r.list.type.map(o=>Xy(o)):n}function Vv(s){if(!s.unknownRank)return s.dim!=null?s.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Jy(s,t,n){const r=s[t];return r&&r.shape?Vv(r.shape):n}function Qy(s,t,n){const r=s[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):n}function eb(s,t,n,r=!1){const o=s[t];return o&&o.list&&o.list.s?o.list.s.map(a=>zv(a,r)):n}function tb(s,t,n){const r=s[t];return r&&r.list&&r.list.shape?r.list.shape.map(o=>Vv(o)):n}function nb(s,t,n){const r=s[t];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wz{constructor(t,n,r){this.node=t,this.tensorMap=n,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,a)=>(o[a]=this.getAttr(a),o),{}))}getInput(t){return Jt(t,this.tensorMap,this.context)}getAttr(t,n){const r=this.node.rawAttrs[t];if(r.tensor!=null)return Jt(t,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Ky(this.node.rawAttrs,t,n);if(r.s!=null)return jy(this.node.rawAttrs,t,n);if(r.b!=null)return qy(this.node.rawAttrs,t,n);if(r.shape!=null)return Jy(this.node.rawAttrs,t,n);if(r.type!=null)return Yy(this.node.rawAttrs,t,n);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Qy(this.node.rawAttrs,t,n);if(r.list.s!=null)return eb(this.node.rawAttrs,t,n);if(r.list.shape!=null)return tb(this.node.rawAttrs,t,n);if(r.list.b!=null)return nb(this.node.rawAttrs,t,n);if(r.list.type!=null)return Zy(this.node.rawAttrs,t,n)}return n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz=(s,t,n)=>{switch(s.op){case"BiasAdd":case"AddV2":case"Add":return[Z($("a",s,t,n),$("b",s,t,n))];case"AddN":return[G0($("tensors",s,t,n))];case"FloorMod":case"Mod":return[km($("a",s,t,n),$("b",s,t,n))];case"Mul":return[L($("a",s,t,n),$("b",s,t,n))];case"RealDiv":case"Div":return[de($("a",s,t,n),$("b",s,t,n))];case"DivNoNan":return[fm($("a",s,t,n),$("b",s,t,n))];case"FloorDiv":return[Nh($("a",s,t,n),$("b",s,t,n))];case"Sub":return[ce($("a",s,t,n),$("b",s,t,n))];case"Minimum":return[qa($("a",s,t,n),$("b",s,t,n))];case"Maximum":return[Cs($("a",s,t,n),$("b",s,t,n))];case"Pow":return[qs($("a",s,t,n),$("b",s,t,n))];case"SquaredDifference":return[Xh($("a",s,t,n),$("b",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $z=(s,t,n)=>{switch(s.op){case"Abs":case"ComplexAbs":return[gt($("x",s,t,n))];case"Acos":return[Zf($("x",s,t,n))];case"Acosh":return[Jf($("x",s,t,n))];case"Asin":return[em($("x",s,t,n))];case"Asinh":return[tm($("x",s,t,n))];case"Atan":return[nm($("x",s,t,n))];case"Atan2":return[sm($("x",s,t,n),$("y",s,t,n))];case"Atanh":return[rm($("x",s,t,n))];case"Ceil":return[cm($("x",s,t,n))];case"Complex":return[ur($("real",s,t,n),$("imag",s,t,n))];case"Cos":return[Kl($("x",s,t,n))];case"Cosh":return[Dh($("x",s,t,n))];case"Elu":return[Ua($("x",s,t,n))];case"Erf":return[mm($("x",s,t,n))];case"Exp":return[bn($("x",s,t,n))];case"Expm1":return[gm($("x",s,t,n))];case"Floor":return[Ha($("x",s,t,n))];case"Log":return[xn($("x",s,t,n))];case"Log1p":return[Yl($("x",s,t,n))];case"Imag":return[Fh($("x",s,t,n))];case"Neg":return[nt($("x",s,t,n))];case"Reciprocal":return[Nm($("x",s,t,n))];case"Real":return[nc($("x",s,t,n))];case"Relu":return[os($("x",s,t,n))];case"Round":return[Vh($("x",s,t,n))];case"Selu":return[Uh($("x",s,t,n))];case"Sigmoid":return[rs($("x",s,t,n))];case"Sin":return[Gh($("x",s,t,n))];case"Sign":return[Tm($("x",s,t,n))];case"Sinh":return[Hh($("x",s,t,n))];case"Softplus":return[no($("x",s,t,n))];case"Sqrt":return[Wt($("x",s,t,n))];case"Square":return[je($("x",s,t,n))];case"Tanh":return[Qr($("x",s,t,n))];case"Tan":return[Dm($("x",s,t,n))];case"ClipByValue":return[on($("x",s,t,n),$("clipValueMin",s,t,n),$("clipValueMax",s,t,n))];case"Relu6":return[Bh($("x",s,t,n))];case"Rsqrt":return[Wh(Jt(s.inputNames[0],t,n))];case"Prod":return[zh($("x",s,t,n),$("axes",s,t,n))];case"LeakyRelu":return[Xl($("x",s,t,n),$("alpha",s,t,n))];case"Prelu":return[tc($("x",s,t,n),$("alpha",s,t,n))];case"IsNan":return[bm(Jt(s.inputNames[0],t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(s,t,n=""){if(!(typeof s=="number"||typeof t=="number")){I(s.length===t.length,()=>n+` Shapes ${s} and ${t} must match`);for(let r=0;r<s.length;r++){const o=s[r],a=t[r];I(o<0||a<0||o===a,()=>n+` Shapes ${s} and ${t} must match`)}}}function Wv(s){return!(typeof s=="number"||s.some(t=>t<0))}function Tc(s,t,n){let r=sb(s,n);const o=!Wv(r);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(o&&t.forEach(a=>{r=sb(a.shape,r)}),!Wv(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function sb(s,t){if(typeof s=="number")return t;if(typeof t=="number")return s;if(s.length!==t.length)throw new Error(`Incompatible ranks during merge: ${s} vs. ${t}`);const n=[];for(let r=0;r<s.length;++r){const o=s[r],a=t[r];if(o>=0&&a>=0&&o!==a)throw new Error(`Incompatible shape during merge: ${s} vs. ${t}`);n[r]=o>=0?o:a}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cz{constructor(t,n,r,o,a,i,l){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=o,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=me(0),At(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const n=this.tensors[t];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(t){return t.map(n=>this.read(n))}write(t,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[t]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Zn(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=n,At(n),r.written=!0,this.tensors[t]=r}writeMany(t,n){if(t.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${n.length}.`);t.forEach((r,o)=>this.write(r,n[o]))}gather(t,n){if(!!n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return Wn([],[0].concat(this.elementShape));const r=this.readMany(t);return Zn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Cn(r,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Wn([],[0].concat(this.elementShape));const n=[];for(let o=0;o<this.size();o++)n.push(o);const r=this.readMany(n);return Zn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),dt(r,0)}scatter(t,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,jn(n,0))}split(t,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let r=0;const o=t.map(c=>(r+=c,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=r===0?0:n.size/r,i=[];W(()=>{n=P(n,[1,r,a]);for(let c=0;c<t.length;++c){const u=c===0?0:o[c-1],h=[0,u,0],d=[1,t[c],a];i[c]=P(Oe(n,h,d),this.elementShape)}return i});const l=[];for(let c=0;c<t.length;c++)l[c]=c;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ci{constructor(t,n,r,o=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t!=null&&t.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);Zn(n,a.shape,"TensorList shape mismatch: "),At(a)}),this.idTensor=me(0),this.maxNumElements=o,At(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ci([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Zn(t,this.elementShape,"TensorList shape mismatch: ");const o=Tc(this.elementShape,this.tensors,t);return W(()=>{const a=this.tensors.map(i=>P(i,o));return Cn(a,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Tc(this.elementShape,this.tensors,t),o=this.tensors.pop();return Zn(o.shape,t,"TensorList shape mismatch: "),P(o,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Zn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");At(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Zn(this.tensors[t].shape,n,"TensorList shape mismatch: ");const o=Tc(this.elementShape,this.tensors,n);return P(this.tensors[t],o)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Zn(this.elementShape,n.shape,"TensorList shape mismatch: "),At(n),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Zn(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());const o=Tc(this.elementShape,this.tensors,r);return t.length===0?Wn([],[0].concat(o)):W(()=>{const a=t.map(i=>P(this.tensors[i],o));return Cn(a,0)})}concat(t,n){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Zn(this.elementShape,n,"TensorList shape mismatch: ");const r=Tc(this.elementShape,this.tensors,n);return this.size()===0?Wn([],[0].concat(r)):W(()=>{const o=this.tensors.map(a=>P(a,r));return dt(o,0)})}}function kz(s,t,n){const r=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==n)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${n}`);const o=s.shape.slice(1);Zn(o,t,"TensorList shape mismatch: ");const a=jn(s);return new ci(a,t,r)}function Iz(s,t,n){return new ci([],s,t,n)}function Nz(s,t,n,r){if(t.length!==s.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${s.shape[0]}`);const o=Math.max(...t);if(r!=null&&r!==-1&&o>=r)throw new Error(`Max index must be < array size (${o}  vs. ${r})`);const a=new ci([],n,s.dtype,r),i=jn(s,0);return t.forEach((l,c)=>{a.setItem(l,i[c])}),a}function Sz(s,t,n){let r=0;const o=t.map(h=>(r+=h,r));if(r!==s.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${s.shape}`);const a=s.shape.slice(1),i=sb(a,n),l=r===0?0:s.size/r,c=W(()=>{const h=[];s=P(s,[1,r,l]);for(let d=0;d<t.length;++d){const p=d===0?0:o[d-1],f=[0,p,0],m=[1,t[d],l];h[d]=P(Oe(s,f,m),i)}return s.dispose(),h}),u=new ci([],n,s.dtype,t.length);for(let h=0;h<c.length;h++)u.setItem(h,c[h]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=async(s,t,n)=>{switch(s.op){case"If":case"StatelessIf":{const r=$("thenBranch",s,t,n),o=$("elseBranch",s,t,n),a=$("cond",s,t,n),i=$("args",s,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[o].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",s,t,n),o=$("cond",s,t,n),a=$("args",s,t,n),i=await n.functionMap[o].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),l=a.map(h=>h.id);let c=await i[0].data();i.forEach(h=>{!h.kept&&l.indexOf(h.id)===-1&&h.dispose()});let u=a;for(;c[0];){const h=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const d=u.map(f=>f.id);h.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()});const p=await n.functionMap[o].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);c=await p[0].data(),p.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const r=$("pred",s,t,n);return[er(r)]}case"Switch":{const r=$("pred",s,t,n);let o=$("data",s,t,n);return o.kept||(o=er(o)),(await r.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{const r=s.inputNames.find(o=>Jt(o,t,n)!==void 0);if(r){const o=Jt(r,t,n);return[er(o)]}return}case"Enter":{const r=$("frameName",s,t,n),o=$("tensor",s,t,n);return n.enterFrame(r),[er(o)]}case"Exit":{const r=$("tensor",s,t,n);return n.exitFrame(),[er(r)]}case"NextIteration":{const r=$("tensor",s,t,n);return n.nextIteration(),[er(r)]}case"TensorArrayV3":{const r=$("size",s,t,n),o=$("dtype",s,t,n),a=$("elementShape",s,t,n),i=$("dynamicSize",s,t,n),l=$("clearAfterRead",s,t,n),c=$("identicalElementShapes",s,t,n),u=$("name",s,t,n),h=new Cz(u,o,r,a,c,i,l);return n.addTensorArray(h),[h.idTensor,me(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",s,t,n),o=$("index",s,t,n),a=$("tensor",s,t,n),i=n.getTensorArray(r.id);return i.write(o,a),[i.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",s,t,n),o=$("index",s,t,n);return[n.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",s,t,n),o=$("indices",s,t,n),a=$("dtype",s,t,n);return[n.getTensorArray(r.id).gather(o,a)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",s,t,n),o=$("indices",s,t,n),a=$("tensor",s,t,n),i=n.getTensorArray(r.id);return i.scatter(o,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id),a=$("dtype",s,t,n);return[o.concat(a)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",s,t,n),o=$("tensor",s,t,n),a=$("lengths",s,t,n),i=n.getTensorArray(r.id);return i.split(a,o),[i.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id);return[me(o.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",s,t,n),o=$("index",s,t,n),a=$("tensor",s,t,n),i=n.getTensorList(r.id);return i.setItem(o,a),[i.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",s,t,n),o=$("index",s,t,n),a=$("elementShape",s,t,n),i=$("elementDType",s,t,n);return[n.getTensorList(r.id).getItem(o,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",s,t,n),o=$("tensor",s,t,n),a=$("elementShape",s,t,n),i=$("numElements",s,t,n),l=Nz(o,r,a,i);return n.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",s,t,n),o=$("elementDType",s,t,n);let a;s.op==="TensorListReserve"?a="numElements":a="maxNumElements";const i=$(a,s,t,n),l=Iz(r,o,i);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=$("tensorListId",s,t,n),o=$("indices",s,t,n),a=$("elementShape",s,t,n),i=$("elementDType",s,t,n);return[n.getTensorList(r.id).gather(o,i,a)]}case"TensorListStack":{const r=$("tensorListId",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n),i=$("numElements",s,t,n);return[n.getTensorList(r.id).stack(o,a,i)]}case"TensorListFromTensor":{const r=$("tensor",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n),i=kz(r,o,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{const r=$("tensorListId",s,t,n),o=n.getTensorList(r.id),a=$("dtype",s,t,n),i=$("elementShape",s,t,n);return[o.concat(a,i)]}case"TensorListPushBack":{const r=$("tensorListId",s,t,n),o=$("tensor",s,t,n),a=n.getTensorList(r.id);return a.pushBack(o),[a.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n);return[n.getTensorList(r.id).popBack(o,a)]}case"TensorListSplit":{const r=$("tensor",s,t,n),o=$("elementShape",s,t,n),a=$("lengths",s,t,n),i=Sz(r,a,o);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uv(s,t,n){const[r,o]=$("fusedOps",s,t,n),a=r==="biasadd",i=!a,l=o==="prelu",c=r==="fusedbatchnorm",u=$("numArgs",s,t,n);if(a){if(l&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const h=$("strides",s,t,n),d=Jd(s,t,n),p=$("dataFormat",s,t,n).toUpperCase(),f=$("dilations",s,t,n);let[m,g]=$("args",s,t,n);i&&(g=m,m=void 0);const y=$("leakyreluAlpha",s,t,n);return{stride:h,pad:d,dataFormat:p,dilations:f,biasArg:m,preluArg:g,activationFunc:o,leakyreluAlpha:y}}const Ez=(s,t,n)=>{switch(s.op){case"Conv1D":{const r=$("stride",s,t,n),o=$("pad",s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilation",s,t,n);return[Eh($("x",s,t,n),$("filter",s,t,n),r,o,a,i)]}case"Conv2D":{const r=$("strides",s,t,n),o=Jd(s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilations",s,t,n);return[Hs($("x",s,t,n),$("filter",s,t,n),[r[1],r[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Uv(s,t,n);return[Mm({x:$("x",s,t,n),filter:$("filter",s,t,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Uv(s,t,n);return[Dw({x:$("x",s,t,n),filter:$("filter",s,t,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$("outputShape",s,t,n),o=$("strides",s,t,n),a=Jd(s,t,n);return[Ah($("x",s,t,n),$("filter",s,t,n),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$("strides",s,t,n),o=Jd(s,t,n),a=$("dilations",s,t,n),i=$("dataFormat",s,t,n).toUpperCase();return[Va($("input",s,t,n),$("filter",s,t,n),[r[1],r[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilations",s,t,n);return[hm($("x",s,t,n),$("filter",s,t,n),[r[1],r[2],r[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[jl($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[Jl($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n),i=$("includeBatchInIndex",s,t,n),{result:l,indexes:c}=hw($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o,i);return[l,c]}case"AvgPool3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[im($("x",s,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[$m($("x",s,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("dilations",s,t,n),i=r[1],l=r[2],c=a[1],u=a[2];return[pm($("x",s,t,n),$("filter",s,t,n),[i,l],o,[c,u],"NHWC")]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=(s,t,n)=>{switch(s.op){case"Fill":{const r=$("shape",s,t,n),o=$("dtype",s,t,n),a=$("value",s,t,n);return[Ga(r,a,o)]}case"LinSpace":{const r=$("start",s,t,n),o=$("stop",s,t,n),a=$("num",s,t,n);return[aw(r,o,a)]}case"Multinomial":{const r=$("logits",s,t,n),o=$("numSamples",s,t,n),a=$("seed",s,t,n);return[dw(r,o,a)]}case"OneHot":{const r=$("indices",s,t,n),o=$("depth",s,t,n),a=$("onValue",s,t,n),i=$("offValue",s,t,n);return[La(r,o,a,i)]}case"Ones":return[wn($("shape",s,t,n),$("dtype",s,t,n))];case"OnesLike":return[vn($("x",s,t,n))];case"RandomUniform":return[Xa($("shape",s,t,n),$("minval",s,t,n),$("maxval",s,t,n),$("dtype",s,t,n))];case"Range":{const r=$("start",s,t,n),o=$("stop",s,t,n),a=$("step",s,t,n);return[Ya(r,o,a,$("dtype",s,t,n))]}case"TruncatedNormal":{const r=$("shape",s,t,n),o=$("mean",s,t,n),a=$("stdDev",s,t,n),i=$("seed",s,t,n);return[Yh(r,o,a,$("dtype",s,t,n),i)]}case"Zeros":return[bt($("shape",s,t,n),$("dtype",s,t,n))];case"ZerosLike":return[Le($("x",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(s,t,n){const r=$("boxes",s,t,n),o=$("scores",s,t,n),a=$("maxOutputSize",s,t,n),i=$("iouThreshold",s,t,n),l=$("scoreThreshold",s,t,n),c=$("softNmsSigma",s,t,n);return{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}}const Dz=async(s,t,n)=>{switch(s.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=rb(s,t,n),u=await qn.nonMaxSuppressionWithScoreAsync(r,o,a,i,l,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=rb(s,t,n),c=$("padToMaxOutputSize",s,t,n),u=await qn.nonMaxSuppressionPaddedAsync(r,o,a,i,l,c);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=rb(s,t,n);return[await qn.nonMaxSuppressionAsync(r,o,a,i,l)]}case"Where":{const r=ne($("condition",s,t,n),"bool"),o=[await _m(r)];return r.dispose(),o}case"ListDiff":return $w($("x",s,t,n),$("y",s,t,n));default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz=(s,t,n)=>{switch(s.op){case"TopKV2":{const r=$("x",s,t,n),o=$("k",s,t,n),a=$("sorted",s,t,n),i=Rm(r,o,a);return[i.values,i.indices]}case"Unique":{const r=$("x",s,t,n),o=Zh(r);return[o.values,o.indices]}case"UniqueV2":{const r=$("x",s,t,n),o=$("axis",s,t,n),a=Zh(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz=(s,t,n)=>{switch(s.op){case"Const":return t[s.name];case"PlaceholderWithDefault":const r=$("default",s,t,n);return[Jt(s.name,t,n)||r];case"Placeholder":return[Jt(s.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=$("x",s,t,n);return[er(u)]}case"IdentityN":return $("x",s,t,n).map(u=>er(u));case"Snapshot":const o=$("x",s,t,n);return[er(o)];case"Shape":return[Ut($("x",s,t,n).shape,"int32")];case"ShapeN":return $("x",s,t,n).map(u=>Ut(u.shape));case"Size":return[me($("x",s,t,n).size,"int32")];case"Rank":return[me($("x",s,t,n).rank,"int32")];case"NoOp":return[me(1)];case"Print":const a=$("x",s,t,n),i=$("data",s,t,n),l=$("message",s,t,n),c=$("summarize",s,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _z{constructor(t,n){this.keyDType=t,this.valueDType=n,this.handle=me(0),this.tensorMap=new Map,At(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return me(this.size(),"int32")}async import(t,n){this.checkKeyAndValueTensor(t,n);const r=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),W(()=>{const o=jn(n),a=r.length,i=o.length;I(a===i,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${i} elements.`);for(let l=0;l<a;l++){const c=r[l],u=o[l];At(u),this.tensorMap.set(c,u)}return this.handle})}async find(t,n){this.checkKeyAndValueTensor(t,n);const r=await t.data();return W(()=>{const o=[];for(let a=0;a<r.length;a++){const i=r[a],l=this.findWithDefault(i,n);o.push(l)}return Cn(o)})}findWithDefault(t,n){const r=this.tensorMap.get(t);return r!=null?r:n}checkKeyAndValueTensor(t,n){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oz=async(s,t,n,r)=>{switch(s.op){case"HashTable":case"HashTableV2":{const o=$("keyDType",s,t,n),a=$("valueDType",s,t,n),i=new _z(o,a);return r.addHashTable(s.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const o=$("tableHandle",s,t,n,r),a=$("keys",s,t,n),i=$("values",s,t,n);return[await r.getHashTableById(o.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const o=$("tableHandle",s,t,n,r),a=$("keys",s,t,n),i=$("defaultValue",s,t,n);return[await r.getHashTableById(o.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=$("tableHandle",s,t,n,r);return[r.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=(s,t,n)=>{switch(s.op){case"ResizeBilinear":{const r=$("images",s,t,n),o=$("size",s,t,n),a=$("alignCorners",s,t,n),i=$("halfPixelCenters",s,t,n);return[qn.resizeBilinear(r,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const r=$("images",s,t,n),o=$("size",s,t,n),a=$("alignCorners",s,t,n),i=$("halfPixelCenters",s,t,n);return[qn.resizeNearestNeighbor(r,[o[0],o[1]],a,i)]}case"CropAndResize":{const r=$("image",s,t,n),o=$("boxes",s,t,n),a=$("boxInd",s,t,n),i=$("cropSize",s,t,n),l=$("method",s,t,n),c=$("extrapolationValue",s,t,n);return[qn.cropAndResize(r,o,a,i,l,c)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pz=(s,t,n)=>{switch(s.op){case"Equal":return[yn($("a",s,t,n),$("b",s,t,n))];case"NotEqual":return[so($("a",s,t,n),$("b",s,t,n))];case"Greater":return[ln($("a",s,t,n),$("b",s,t,n))];case"GreaterEqual":return[gr($("a",s,t,n),$("b",s,t,n))];case"Less":return[_h($("a",s,t,n),$("b",s,t,n))];case"LessEqual":return[yr($("a",s,t,n),$("b",s,t,n))];case"LogicalAnd":return[Hn($("a",s,t,n),$("b",s,t,n))];case"LogicalNot":return[Zl($("a",s,t,n))];case"LogicalOr":return[Ph($("a",s,t,n),$("b",s,t,n))];case"Select":case"SelectV2":return[jt($("condition",s,t,n),$("a",s,t,n),$("b",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mz=(s,t,n)=>{switch(s.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Te($("a",s,t,n),$("b",s,t,n),$("transposeA",s,t,n),$("transposeB",s,t,n))];case"Einsum":return[sw($("equation",s,t,n),...$("tensors",s,t,n))];case"Transpose":return[_e($("x",s,t,n),$("perm",s,t,n))];case"_FusedMatMul":const[r,o]=$("fusedOps",s,t,n),a=r==="biasadd",i=o==="prelu",l=$("numArgs",s,t,n),c=$("leakyreluAlpha",s,t,n);if(a){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=$("args",s,t,n);return[rd({a:$("a",s,t,n),b:$("b",s,t,n),transposeA:$("transposeA",s,t,n),transposeB:$("transposeB",s,t,n),bias:u,activation:o,preluActivationWeights:h,leakyreluAlpha:c})];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz=(s,t,n)=>{switch(s.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[eo($("x",s,t,n),$("mean",s,t,n),$("variance",s,t,n),$("offset",s,t,n),$("scale",s,t,n),$("epsilon",s,t,n))];case"FusedBatchNormV3":return[eo($("x",s,t,n),$("mean",s,t,n),$("variance",s,t,n),$("offset",s,t,n),$("scale",s,t,n),$("epsilon",s,t,n))];case"LRN":return[xm($("x",s,t,n),$("radius",s,t,n),$("bias",s,t,n),$("alpha",s,t,n),$("beta",s,t,n))];case"Softmax":return[rc($("x",s,t,n))];case"LogSoftmax":return[Lh($("x",s,t,n))];case"SparseToDense":return[Om($("sparseIndices",s,t,n),$("outputShape",s,t,n),$("sparseValues",s,t,n),$("defaultValue",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz=(s,t,n)=>{switch(s.op){case"Max":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Gn($("x",s,t,n),i,l)]}case"Mean":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[ct($("x",s,t,n),i,l)]}case"Min":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Ql($("x",s,t,n),i,l)]}case"Sum":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[ue($("x",s,t,n),i,l)]}case"All":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Sh($("x",s,t,n),i,l)]}case"Any":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Gl($("x",s,t,n),i,l)]}case"ArgMax":{const i=$("axis",s,t,n);return[Zr($("x",s,t,n),i)]}case"ArgMin":{const i=$("axis",s,t,n);return[Qf($("x",s,t,n),i)]}case"Prod":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[zh($("x",s,t,n),i,l)]}case"Cumsum":{const i=$("axis",s,t,n),l=$("exclusive",s,t,n),c=$("reverse",s,t,n);return[Rh($("x",s,t,n),i,l,c)]}case"Bincount":const r=$("x",s,t,n),o=$("weights",s,t,n),a=$("size",s,t,n);return[lm(r,o,a)];case"DenseBincount":{const i=$("x",s,t,n),l=$("weights",s,t,n),c=$("size",s,t,n),u=$("binaryOutput",s,t,n);return[tw(i,l,c,u)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz=(s,t,n)=>{switch(s.op){case"ConcatV2":case"Concat":{const r=$("n",s,t,n),o=$("axis",s,t,n);let a=$("tensors",s,t,n);return a=a.slice(0,r),[dt(a,o)]}case"Gather":{const r=$("x",s,t,n),o=$("indices",s,t,n);return[to(r,ne(o,"int32"),0)]}case"GatherV2":{const r=$("axis",s,t,n),o=$("batchDims",s,t,n),a=$("x",s,t,n),i=$("indices",s,t,n);return[to(a,ne(i,"int32"),r,o)]}case"Reverse":{const r=$("dims",s,t,n),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const a=$("x",s,t,n);return[$n(a,o)]}case"ReverseV2":{const r=$("axis",s,t,n),o=$("x",s,t,n);return[$n(o,r)]}case"Slice":{const r=$("begin",s,t,n),o=$("size",s,t,n);return[Oe($("x",s,t,n),r,o)]}case"StridedSlice":{const r=$("begin",s,t,n),o=$("end",s,t,n),a=$("strides",s,t,n),i=$("beginMask",s,t,n),l=$("endMask",s,t,n),c=$("ellipsisMask",s,t,n),u=$("newAxisMask",s,t,n),h=$("shrinkAxisMask",s,t,n),d=$("x",s,t,n);return[Am(d,r,o,a,i,l,c,u,h)]}case"Pack":return W(()=>{const r=$("axis",s,t,n),o=$("tensors",s,t,n),a=o[0].shape,i=ks(o[0]).shape,l=o.map(c=>{const u=De(c.shape,a);if(!u&&!De(ks(c).shape,i))throw new Error("the input tensors shape does not match");return u?c:P(c,a)});return[Cn(l,r)]});case"Unpack":{const r=$("axis",s,t,n),o=$("tensor",s,t,n);return jn(o,r)}case"Tile":{const r=$("reps",s,t,n);return[Dn($("x",s,t,n),r)]}case"Split":case"SplitV":{const r=$("axis",s,t,n),o=$("numOrSizeSplits",s,t,n),a=$("x",s,t,n);return cn(a,o,r)}case"ScatterNd":{const r=$("indices",s,t,n),o=$("values",s,t,n),a=$("shape",s,t,n);return[Iw(r,o,a)]}case"GatherNd":{const r=$("x",s,t,n),o=$("indices",s,t,n);return[Nw(r,o)]}case"SparseToDense":{const r=$("sparseIndices",s,t,n),o=$("outputShape",s,t,n),a=$("sparseValues",s,t,n),i=$("defaultValue",s,t,n);return[Om(r,a,o,a.dtype===i.dtype?i:ne(i,a.dtype))]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz=(s,t,n)=>{switch(s.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=ic.sparseFillEmptyRows($("indices",s,t,n),$("values",s,t,n),$("denseShape",s,t,n),$("defaultValue",s,t,n));return[r,o,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=ic.sparseReshape($("inputIndices",s,t,n),$("inputShape",s,t,n),$("newShape",s,t,n));return[r,o]}case"SparseSegmentMean":return[ic.sparseSegmentMean($("data",s,t,n),$("indices",s,t,n),$("segmentIds",s,t,n))];case"SparseSegmentSum":return[ic.sparseSegmentSum($("data",s,t,n),$("indices",s,t,n),$("segmentIds",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=(s,t,n)=>{switch(s.op){case"FFT":return[oc($("x",s,t,n))];case"IFFT":return[Za($("x",s,t,n))];case"RFFT":return[ac($("x",s,t,n))];case"IRFFT":return[Kh($("x",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gz=(s,t,n)=>{switch(s.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=ld.stringNGrams($("data",s,t,n),$("dataSplits",s,t,n),$("separator",s,t,n),$("nGramWidths",s,t,n),$("leftPad",s,t,n),$("rightPad",s,t,n),$("padWidth",s,t,n),$("preserveShortSequences",s,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=ld.stringSplit($("input",s,t,n),$("delimiter",s,t,n),$("skipEmpty",s,t,n));return[r,o,a]}case"StringToHashBucketFast":return[ld.stringToHashBucketFast($("input",s,t,n),$("numBuckets",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz=(s,t,n)=>{switch(s.op){case"Cast":return[ne($("x",s,t,n),$("dtype",s,t,n))];case"ExpandDims":{const r=$("axis",s,t,n);return[an($("x",s,t,n),r)]}case"Squeeze":{const r=$("axis",s,t,n);return[ks($("x",s,t,n),r)]}case"Reshape":return[P($("x",s,t,n),$("shape",s,t,n))];case"MirrorPad":return[Cm($("x",s,t,n),$("padding",s,t,n),$("mode",s,t,n))];case"PadV2":case"Pad":return[js($("x",s,t,n),$("padding",s,t,n),$("constantValue",s,t,n))];case"SpaceToBatchND":{const r=$("blockShape",s,t,n),o=$("paddings",s,t,n);return[ec($("x",s,t,n),r,o)]}case"BatchToSpaceND":{const r=$("blockShape",s,t,n),o=$("crops",s,t,n);return[ql($("x",s,t,n),r,o)]}case"DepthToSpace":{const r=$("blockSize",s,t,n),o=$("dataFormat",s,t,n).toUpperCase();return[dm($("x",s,t,n),r,o)]}case"BroadcastTo":return[Ba($("x",s,t,n),$("shape",s,t,n))];case"BroadcastArgs":return[K0($("s0",s,t,n),$("s1",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gv(s,t,n,r){const o=((a,i,l)=>{switch(a.category){case"arithmetic":return W(()=>vz(a,i,l));case"basic_math":return W(()=>$z(a,i,l));case"control":return Tz(a,i,l);case"convolution":return W(()=>Ez(a,i,l));case"creation":return W(()=>Az(a,i,l));case"dynamic":return Dz(a,i,l);case"evaluation":return W(()=>Rz(a,i,l));case"image":return W(()=>Lz(a,i,l));case"graph":return W(()=>Fz(a,i,l));case"logical":return W(()=>Pz(a,i,l));case"matrices":return W(()=>Mz(a,i,l));case"normalization":return W(()=>zz(a,i,l));case"reduction":return W(()=>Bz(a,i,l));case"slice_join":return W(()=>Vz(a,i,l));case"sparse":return W(()=>Wz(a,i,l));case"spectral":return W(()=>Uz(a,i,l));case"string":return W(()=>Gz(a,i,l));case"transformation":return W(()=>Hz(a,i,l));case"hash_table":return Oz(a,i,l,r);case"custom":const c=Pv(a.op);if(c&&c.customExecutor)return c.customExecutor(new wz(a,i,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(s,t,n);return zr(o)?o.then(a=>[].concat(a)):[].concat(o)}class Hv{constructor(t={},n={},r={},o={}){this.weightMap=t,this.tensorArrayMap=n,this.tensorListMap=r,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,n){return{id:t,frameName:n,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let n=0;n<this.contexts.length-1;n++){const r=this.contexts.slice(0,this.contexts.length-n);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(t);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(s,t,n,r){const o=new Set,a=[];let i=null,l=null;const c=new Set,u=Object.keys(s).map(p=>kn(p)[0]);let h=[];r!=null&&(h=r.map(p=>kn(p.name)[0]));const d=[...t];for(;d.length>0;){const p=d.pop();if((qv(p)||Yz(p)||Zz(p))&&i==null&&(i=p,l=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(p.name),n[p.name]==null&&u.indexOf(p.name)===-1&&h.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(f=>{c.has(f.name)||(c.add(f.name),d.push(f))})}}return{inputs:s,outputs:t,usedNodes:o,missingInputs:a,dynamicNode:i,syncInputs:l}}function jz(s,t,n){const{usedNodes:r,inputs:o}=n,a=[],i=Object.keys(o).map(h=>kn(h)[0]).map(h=>s.nodes[h]),l=s.initNodes;i.forEach(h=>{r.has(h.name)&&a.push(h)}),s.weights.forEach(h=>{r.has(h.name)&&a.push(h)}),l!=null&&l.forEach(h=>{r.has(h.name)&&a.push(h)});const c=new Set,u=[];for(;a.length>0;){const h=a.pop();c.add(h.name),t[h.name]||u.push(h),h.children.forEach(d=>{!c.has(d.name)&&r.has(d.name)&&d.inputs.every(p=>c.has(p.name))&&a.push(d)})}return u}const qz=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Kz=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Xz=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function qv(s){return qz.indexOf(s.op)>=0}function Yz(s){return Kz.indexOf(s.op)>=0}function Zz(s){return Xz.indexOf(s.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qd{constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new Qd(t.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const n=Object.keys(t).map(r=>t[r].map(o=>o.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}getCompilationKey(t,n){const r=t.map(a=>a.name).sort(),o=n.map(a=>a.name).sort();return r.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,n){const r=jv(t,n,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:a,syncInputs:i}=r;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){const l=n.map(u=>u.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${c}]. Missing the following inputs: [${o}]`)}return jz(this.graph,this.weightMap,r)}execute(t,n){t=this.mapInputs(t);const r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);const o=r.map(d=>this.graph.nodes[kn(d)[0]]),a=n.map(d=>kn(d)[0]);let i=a.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);const l=this.getCompilationKey(o,i);let c=this.compiledMap.get(l);c==null&&(c=this.compile(t,i),this.compiledMap.set(l,c));const u={},h={};return W(()=>{const d=new Hv(this.weightMap,u,h,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(t).forEach(g=>{const[y,b]=kn(g),x=[];x[b]=t[g],p[y]=x});const f=this.getFrozenTensorIds(p),m={};for(let g=0;g<c.length;g++){const y=c[g];if(!p[y.name]){const b=Gv(y,p,d,this._resourceManager);if(zr(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=b,this.checkTensorForDisposal(y.name,y,p,d,f,a,m)}}return this.parent==null&&d.dispose(f),n.map(g=>Jt(g,p,d))})}getFrozenTensorIds(t){const n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(o=>o.id)));return new Set(n)}checkTensorForDisposal(t,n,r,o,a,i,l){n.category==="control"||i.indexOf(t)!==-1||(r[t].forEach(c=>{c!=null&&(l[c.id]=(l[c.id]||0)+n.children.length)}),n.inputs.forEach(c=>{if(c.category!=="control"){const u=_M(c.name,r,o);u!=null&&u.forEach(h=>{if(h&&!h.kept&&!a.has(h.id)){const d=l[h.id];d===1?(h.dispose(),delete l[h.id]):d!=null&&l[h.id]--}})}}))}async executeAsync(t,n){return this._executeAsync(t,n)}async _executeAsync(t,n,r=!1,o={},a={}){r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));const i=new Hv(this.weightMap,o,a,this.functionExecutorMap),l=await this.executeWithControlFlow(t,i,n,r),c=n.map(p=>Jt(p,l,i)),u=c.map(p=>p.id),h=Object.keys(t).map(p=>t[p].id),d=new Set([...u,...h,...this.weightIds]);return Object.keys(l).forEach(p=>{l[p].forEach(m=>{m&&!m.kept&&!m.isDisposed&&!d.has(m.id)&&m.dispose()})}),this.parent==null&&i.dispose(d),c}async executeFunctionAsync(t,n,r){const o=t.reduce((a,i,l)=>(a[this.inputs[l].name]=i,a),{});return this._executeAsync(o,this.outputNodes,!0,n,r)}async executeWithControlFlow(t,n,r,o){const a=Object.keys(t),i=a.map(v=>this.graph.nodes[kn(v)[0]]),l=r.map(v=>kn(v)[0]);let c=l.map(v=>this.graph.nodes[v]);c.length===0&&(c=this._outputs);const{usedNodes:u,missingInputs:h,dynamicNode:d,syncInputs:p}=jv(t,c,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(t).forEach(v=>{const[w,C]=kn(v),N=[];N[C]=t[v],m[w]=N});const g={},y=this.getFrozenTensorIds(m),b={};for(;f.length>0;){const v=this.processStack(i,f,n,m,b,y,l,g,u);await Promise.all(v)}d==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=c.filter(v=>!qv(v)&&!Jt(v.name,m,n)).map(v=>v.name);if(x.length>0){let v="";throw d!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${h}]. ${v}`)}return m}processStack(t,n,r,o,a,i,l,c,u){const h=[];for(;n.length>0;){const d=n.pop();r.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&$("isConstant",d.node,o,r)&&([p]=Qs(d.node.name,r)),o[d.node.name]==null){const f=Gv(d.node,o,r,this._resourceManager);p||([p]=Qs(d.node.name,r));const m=r.currentContext;zr(f)?h.push(f.then(g=>(o[p]=g,r.currentContext=m,this.checkTensorForDisposal(p,d.node,o,r,i,l,c),this.processChildNodes(d.node,n,r,o,a,u),g))):(o[p]=f,this.checkTensorForDisposal(p,d.node,o,r,i,l,c),this.processChildNodes(d.node,n,r,o,a,u))}else this.processChildNodes(d.node,n,r,o,a,u)}return h}processChildNodes(t,n,r,o,a,i){t.children.forEach(l=>{const[c]=Qs(l.name,r);a[c]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(u=>!!Jt(u,o,r))&&(a[c]=!0,n.push({contexts:r.currentContext,node:l})):l.inputNames.every(u=>!!Jt(u,o,r))&&(a[c]=!0,n.push({contexts:r.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{const r=t[n],[o]=kn(n),a=this.graph.nodes[o];if(a.attrParams.shape&&a.attrParams.shape.value){const i=a.attrParams.shape.value,l=i.length===r.shape.length&&r.shape.every((c,u)=>i[u]===-1||i[u]===c);I(l,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&I(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){const n={};for(const r in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null){const o=this._signature.inputs[r];n[o.name]=t[r]}else n[r]=t[r];return n}checkInputs(t){const n=Object.keys(t).filter(r=>{const[o]=kn(r);return this.graph.nodes[o]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[n]!=null?this._signature.outputs[n].name:n,{})}checkOutputs(t){t.forEach(n=>{const[r]=kn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}}class Jz{constructor(t={},n={}){this.hashTableNameToHandle=t,this.hashTableMap=n}addHashTable(t,n){this.hashTableNameToHandle[t]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz="?tfjs-format=file",eB="model.json";class Kv{constructor(t,n={}){this.modelUrl=t,this.loadOptions=n,this.version="n/a",n==null&&(this.loadOptions={}),this.resourceManager=new Jz}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=vh(t,this.loadOptions);else{const n=Rf(t,this.loadOptions);if(n.length===0)n.push(vh(t,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[t]}'`);this.handler=n[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const n=this.artifacts.modelTopology;let r;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?r=this.artifacts.userDefinedMetadata.signature:r=this.artifacts.signature,this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;const o=bh(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Qd(Mv.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const a=Mv.Instance.transformGraph(t.modelInitializer);this.initializer=new Qd(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,n){if(typeof t=="string"){const r=Df(t);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,n){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof ze)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((n,r,o)=>(n[r]=t[o],n),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,n){t=this.normalizeInputs(t),n=this.normalizeOutputs(n);const r=this.executor.execute(t,n);return r.length>1?r:r[0]}async executeAsync(t,n){t=this.normalizeInputs(t),n=this.normalizeOutputs(n);const r=await this.executor.executeAsync(t,n);return r.length>1?r:r[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((n,r)=>(n[r]=[t[r]],n),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function tB(s,t={}){if(s==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&s.load==null&&(s.endsWith("/")||(s=s+"/"),s=`${s}${eB}${Qz}`);const n=new Kv(s,t);return await n.load(),n}/** @license See the LICENSE file. */const Xv="3.10.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function nB(s,t){return ep(s,t)}function ep(s,t,n=new Map,r=new Set){if(s==null)return null;if(typeof Blob=="function"&&s instanceof Blob)return s.slice();if(r.has(s))throw new Error("Circular references are not supported.");if(n.has(s))return n.get(s);const o=t(s);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(ui(s)){const a=Array.isArray(s)?[]:{};r.add(s);for(const i in s){const l=s[i],c=ep(l,t,n,r);a[i]=c}return r.delete(s),s.__proto__&&(a.__proto__=s.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return n.set(s,o.value),o.value}function sB(s,t=Zv){return Yv(s,t)}function Yv(s,t,n=new Set){const r=s[0];if(n.has(r))throw new Error("Circular references are not supported.");const o=t(s);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(ui(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const l=s.map(u=>u[i]),c=Yv(l,t,n);a[i]=c}return n.delete(r),a}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return o.value}function Zv(s){return s===null?null:ui(s[0])?{value:null,recurse:!0}:{value:s,recurse:!1}}async function Jv(s,t){const n=new Map;ep(s,t,n);for(const o of Array.from(n.keys())){const a=n.get(o);if(zr(a)){const i=await a;n.set(o,i)}}return ep(s,t,n)}function ui(s){let t=!1;if(q().get("IS_BROWSER"))t=s instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");t=s instanceof n}return s!=null&&!ArrayBuffer.isView(s)&&(Array.isArray(s)||typeof s=="object"&&!(s instanceof ze)&&!(s instanceof Promise)&&!t)}function rB(s){return s==null||oB(s)||Array.isArray(s)||typeof s=="object"&&s instanceof ze||Pt(s)}function oB(s){return s===null||typeof s!="object"&&typeof s!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function aB(s){return nB(s,iB)}function iB(s){return s instanceof ze?{value:s.clone(),recurse:!1}:ui(s)?{value:null,recurse:!0}:{value:s,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Qv{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,n){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=n}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const n of t)this.push(n)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const n=this.wrap(this.begin+t),r=this.get(n);return this.set(n,this.pop()),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class tp extends Qv{constructor(){super(tp.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=this.capacity*2,n=new Array(t),r=this.length();for(let o=0;o<r;o++)n[o]=this.get(this.wrap(this.begin+o));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}tp.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function e$(s){return new uB(s)}function ob(s){return new hB(s)}function lB(s,t){return new n$(s,t)}function cB(s,t=Nr.FAIL){return new wB(s,t)}class _t{async toArray(){const t=[];let n=await this.next();for(;!n.done;)t.push(n.value),n=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),n=[];let r=await t.next();for(;!r.done;)n.push(r.value),r=await t.next();return n}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let n=await this.next(),r=t(n.value);for(;!n.done&&r;)n=await this.next(),r=t(n.value)}handleErrors(t){return new bB(this,t)}filter(t){return new gB(this,t)}map(t){return new yB(this,t)}mapAsync(t){return new t$(this,t)}serialMapAsync(t){return new t$(this,t).serial()}flatmap(t){return new xB(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(n=>n===!0)}rowMajorBatch(t,n=!0){return new mB(this,t,n)}columnMajorBatch(t,n=!0,r=Zv){return this.rowMajorBatch(t,n).map(a=>sB(a,r))}concatenate(t,n){return new n$(e$([this,t]),n)}take(t){return t<0||t==null?this:new fB(this,t)}skip(t){return t<0||t==null?this:new pB(this,t)}prefetch(t){return new s$(this,t)}shuffle(t,n){return new vB(this,t,n)}serial(){return new dB(this)}}class uB extends _t{constructor(t){super();this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:aB(t),done:!1}}}class hB extends _t{constructor(t){super();this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class dB extends _t{constructor(t){super();this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class pB extends _t{constructor(t,n){super();this.upstream=t,this.maxCount=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ce(t.value)}return this.upstream.next()}}class fB extends _t{constructor(t,n){super();this.upstream=t,this.maxCount=n,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class mB extends _t{constructor(t,n,r=!0){super();this.upstream=t,this.batchSize=n,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(n.value)}return{value:t,done:!1}}}class gB extends _t{constructor(t,n){super();this.upstream=t,this.predicate=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ce(t.value)}}}class yB extends _t{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const n=Bs(t.value),r=this.transform(t.value),o=Bs(r);for(const a of n)gh(a,o)||a.dispose();return{value:r,done:!1}}}class bB extends _t{constructor(t,n){super();this.upstream=t,this.handler=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class t$ extends _t{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const n=Bs(t.value),r=await this.transform(t.value),o=Bs(r);for(const a of n)gh(a,o)||a.dispose();return{value:r,done:!1}}}class ab extends _t{constructor(){super();this.outputQueue=new tp,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class xB extends ab{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const n=Bs(t.value),r=this.transform(t.value),o=Bs(r);this.outputQueue.pushAll(r);for(const a of n)gh(a,o)||a.dispose();return!0}}class n$ extends _t{constructor(t,n){super();this.baseErrorHandler=n,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){const r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(t)):n}}var Nr;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(Nr||(Nr={}));class wB extends _t{constructor(t,n=Nr.FAIL){super();this.iterators=t,this.mismatchMode=n,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let n=0,r=0;function o(i){return i instanceof _t?{value:i.next().then(c=>(n++,c.done&&r++,c.value)),recurse:!1}:{value:null,recurse:!0}}const a=await Jv(this.iterators,o);if(n===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case Nr.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Nr.SHORTEST:return{value:null,done:!0};case Nr.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class s$ extends _t{constructor(t,n){super();this.upstream=t,this.bufferSize=n,this.buffer=new Qv(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class vB extends s${constructor(t,n,r){super(t,n);this.upstream=t,this.windowSize=n,this.upstreamExhausted=!1,this.random=Ka.alea(r||zt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),n=await this.buffer.shuffleExcise(t);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class hi{constructor(){this.size=null}batch(t,n=!0){const r=this;I(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:n?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),In(async()=>(await r.iterator()).columnMajorBatch(t,n,kB),o)}concatenate(t){const n=this;let r;return this.size===1/0||t.size===1/0?r=1/0:this.size!=null&&t.size!=null?r=this.size+t.size:r=null,In(async()=>(await n.iterator()).concatenate(await t.iterator()),r)}filter(t){const n=this;let r;return this.size===1/0?r=1/0:r=null,In(async()=>(await n.iterator()).filter(o=>W(()=>t(o))),r)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const n=this;return In(async()=>(await n.iterator()).map(r=>W(()=>t(r))),this.size)}mapAsync(t){const n=this;return In(async()=>(await n.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const n=this;return In(async()=>(await n.iterator()).prefetch(t),this.size)}repeat(t){const n=this;let r;return this.size!=null&&t>0?r=this.size*t:t===0?r=0:this.size!=null&&(t===void 0||t<0)?r=1/0:r=null,In(async()=>{const o=ob(async()=>({value:await n.iterator(),done:!1}));return lB(o.take(t))},r)}skip(t){const n=this;let r;return this.size!=null&&t>=0&&this.size>=t?r=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?r=0:r=null,In(async()=>(await n.iterator()).skip(t),r)}shuffle(t,n,r=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const o=this,a=Ka.alea(n||zt().toString());return In(async()=>{let i=a.int32();return r&&(i+=a.int32()),(await o.iterator()).shuffle(t,i.toString())},this.size)}take(t){const n=this;let r;return this.size!=null&&this.size>t?r=t:this.size!=null&&this.size<=t?r=this.size:r=null,In(async()=>(await n.iterator()).take(t),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}hi.MAX_BUFFER_SIZE=1e4;function In(s,t=null){return new class extends hi{constructor(){super(...arguments);this.size=t}async iterator(){return s()}}}function $B(s){return In(async()=>e$(s),s.length)}function CB(s){if(!ui(s))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(s))for(let n=0;n<s.length;n++)t=t==null?s[n].size:Math.min(t,s[n].size);else if(s instanceof Object)for(const n in s)t=t==null?s[n].size:Math.min(t,s[n].size);return In(async()=>{const n=await Jv(s,r=>{if(r instanceof hi)return{value:r.iterator(),recurse:!1};if(ui(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return cB(n,Nr.SHORTEST)},t)}function kB(s){if(s===null)return null;const t=s[0];return rB(t)?{value:IB(s),recurse:!1}:{value:null,recurse:!0}}function IB(s){if(s.length===0)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof ze?Cn(s):Wn(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class r$ extends hi{constructor(t){super();this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const np='"',Ec=Symbol("out"),o$=Symbol("field"),sp=Symbol("quote"),ib=Symbol("quoteafterquote"),a$=Symbol("quoteinquote");class i$ extends hi{constructor(t,n){super();this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new r$(t),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(I(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&I(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const n=this.fullColumnNames.reduce((o,a)=>(o[a]=o[a]+1||1,o),{}),r=Object.keys(n).filter(o=>n[o]>1);if(I(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(const o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");const r=n.value;return this.parseRow(r,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(n=>this.makeDataElement(n))}makeDataElement(t){const n=this.parseRow(t),r={},o={};for(let a=0;a<this.fullColumnNames.length;a++){const i=this.fullColumnNames[a],l=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!l)){const c=n[a];let u=null;if(c==="")if(l&&l.default!==void 0)u=l.default;else{if(l&&(l.required||l.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);u=void 0}else{const h=Number(c);if(isNaN(h))l&&l.dtype==="bool"?u=this.getBoolean(c):u=c;else if(!l||!l.dtype)u=h;else switch(l.dtype){case"float32":u=h;break;case"int32":u=Math.floor(h);break;case"bool":u=this.getBoolean(c);break;default:u=h}}l&&l.isLabel?o[i]=u:r[i]=u}}return Object.keys(o).length===0?r:{xs:r,ys:o}}getBoolean(t){return t==="1"||t.toLowerCase()==="true"?1:0}parseRow(t,n=!0){const r=[];let o=0;const a=t.length;let i=Ec;for(let l=0;l<a;l++)switch(i){case Ec:switch(t.charAt(l)){case np:o=l+1,i=sp;break;case this.delimiter:if(o=l+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),i=Ec;break;default:i=o$,o=l;break}break;case o$:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l)),i=Ec,o=l+1;break}break;case sp:switch(t.charAt(l)){case np:i=ib;break}break;case ib:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l-1)),i=Ec,o=l+1;break;case np:i=sp;break;default:i=a$;break}break;case a$:switch(t.charAt(l)){case np:i=sp;break}break}if(i===ib?r.push(t.substring(o,a-1)):r.push(t.substring(o)),n&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class lb extends _t{constructor(t){super();this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(q().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const n=new lb(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n;const r=await this.getAudioData();if(this.includeSpectrogram){const o=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const o=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],n=[];let r=0;return new Promise(o=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(a),o({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((o,a)=>r.set(o,a*n)),r}getTensorFromAudioDataArray(t,n){const r=new Float32Array(j(n));return r.set(t,r.length-t.length),Wn(r,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class cb extends _t{constructor(t,n){super();if(this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ut([0],"int32"),this.webcamConfig.centerCrop){const r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-r)/2,i=(1-o)/2,l=a+r,c=o+i;this.cropBox=oo([i,a,c,l],[1,4])}else this.cropBox=oo([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(q().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}const r=new cb(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&I(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=T0(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return W(()=>{const n=an(ne(t,"float32"),0);let r;r=qn.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const o=r.shape;return P(r,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class l${}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class c$ extends _t{split(t){return new NB(this,t)}}class NB extends c${constructor(t,n){super();this.upstream=t,this.impl=new SB(t,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class SB extends ab{constructor(t,n){super();this.upstream=t,this.separator=n,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const n=t.value.split(this.separator);n[0]=this.carryover+n[0];for(const r of n.slice(0,-1))this.outputQueue.push(r);return this.carryover=n[n.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class TB extends _t{decodeUTF8(){return new EB(this)}}class EB extends c${constructor(t){super();this.upstream=t,this.impl=new AB(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class AB extends ab{constructor(t){super();if(this.upstream=t,q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:n}=require("string_decoder");this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n;if(t.done)return!1;n=t.value;let r;return q().get("IS_BROWSER")?r=this.decoder.decode(n,{stream:!0}):r=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(r),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class u$ extends TB{constructor(t,n={}){super();this.file=t,this.options=n,I(t instanceof Uint8Array||(q().get("IS_BROWSER")?t instanceof File||t instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,r)=>{const o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,o)));else{const a=new FileReader;a.onload=l=>{let c=a.result;if(c instanceof ArrayBuffer&&(c=new Uint8Array(c)),!(c instanceof Uint8Array))return r(new TypeError("FileReader returned unknown type."));n(c)},a.onabort=l=>r(new Error("Aborted")),a.onerror=l=>r(new Error(l.type));const i=this.file.slice(this.offset,o);a.readAsArrayBuffer(i)}this.offset=o}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function DB(s,t={},n){let r,o;typeof s=="string"?r=s:(r=s.url,o=RB(s));const a=await(n||Qx)(r,o);if(a.ok){const i=new Uint8Array(await a.arrayBuffer());return new u$(i,t)}else throw new Error(a.statusText)}const RB=s=>({method:s.method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function h$(s){return typeof s=="string"&&s.substr(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class d$ extends l${constructor(t,n={}){super();this.input=t,this.options=n}async iterator(){if(h$(this.input)&&q().get("IS_NODE")){const t=require("fs");this.input=t.readFileSync(this.input.substr(7))}return new u$(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class p$ extends l${constructor(t,n={}){super();this.url=t,this.fileOptions=n}async iterator(){return h$(this.url)?new d$(this.url,this.fileOptions).iterator():DB(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function FB(s,t={}){return new i$(new p$(s),t)}function _B(s){const t=ob(s);return In(async()=>t)}function OB(s){return In(async()=>{const t=await s();return ob(()=>t.next())})}async function LB(s,t){return cb.create(s,t)}async function PB(s){return lb.create(s)}/** @license See the LICENSE file. */const f$="3.10.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var MB=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",array:$B,Dataset:hi,zip:CB,CSVDataset:i$,TextLineDataset:r$,csv:FB,func:_B,generator:OB,microphone:PB,webcam:LB,FileDataSource:d$,URLDataSource:p$,version_data:f$});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(s,t){Array.isArray(s)||(s=[s]),s.forEach(n=>{n!=null&&I(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zB=Jh;class rp extends nu{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Jp(this,pr())}nextDataId(){return rp.nextDataId++}write(t,n,r){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&rn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:t,dtype:r,refCount:1}),o}makeTensorInfo(t,n,r){let o;if(n==="string"&&r!=null&&r.length>0&&bs(r[0])){const a=r.map(i=>xs(i));o=this.write(a,t,n)}else o=this.write(r,t,n);return{dataId:o,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){const n=this.data.get(t);n.refCount--}}move(t,n,r,o,a){this.data.set(t,{values:n,dtype:o,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){const o=this.readSync(r.real.dataId),a=this.readSync(r.imag.dataId);return Ys(o,a)}return this.data.get(t).values}bufferSync(t){const n=this.readSync(t.dataId);let r=n;if(t.dtype==="string")try{r=n.map(o=>Hr(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ae(t.shape,t.dtype,r)}makeOutput(t,n,r){const o=this.write(t,n,r);return pr().makeTensorFromDataId(o,n,r,this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const n=zt();return t(),{kernelMs:zt()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){he([t],"where");const n=this.readSync(t.dataId);return zB(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}rp.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(s){const t=new Float32Array(s.length);for(let n=0;n<s.length;++n)t[n]=Math.abs(s[n]);return t}const BB=s=>{const{x:t}=s.inputs,n=s.backend;he(t,"abs");let r=new Float32Array(j(t.shape));const o=n.data.get(t.dataId).values;return r=m$(o),n.makeOutput(r,t.shape,t.dtype)},VB={kernelName:Ri,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(s){return(t,n,r,o,a)=>{const i=Ee(t,n),l=i.length,c=ye(i),u=j(i),h=Ct(a,u),d=t.length,p=n.length,f=ye(t),m=ye(n),g=Wa(t,i),y=Wa(n,i);if(g.length+y.length===0)for(let b=0;b<h.length;++b)h[b]=s(r[b%r.length],o[b%o.length]);else for(let b=0;b<h.length;++b){const x=Fo(b,l,c),v=x.slice(-d);g.forEach(k=>v[k]=0);const w=ts(v,d,f),C=x.slice(-p);y.forEach(k=>C[k]=0);const N=ts(C,p,m);h[b]=s(r[w],o[N])}return[h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(s){const{inputs:t,backend:n}=s,{real:r,imag:o}=t,a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,l=n.makeTensorInfo(r.shape,"complex64"),c=n.data.get(l.dataId);return c.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(o.shape,"float32",i)},l}const WB={kernelName:pu,backendName:"cpu",kernelFunc:Nn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function op(s,t,n="float32"){if(n==="complex64"){const o=op(s,t,"float32"),a=op(s,t,"float32");return Nn({inputs:{real:o,imag:a},backend:s})}const r=Mt(j(t),n);return s.makeTensorInfo(t,n,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(s){const{inputs:t,backend:n}=s,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const UB={kernelName:ea,backendName:"cpu",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,a)}const GB={kernelName:Gu,backendName:"cpu",kernelFunc:xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dtype:a}=r;if(a==="complex64"){if(o.dtype==="complex64")return As({inputs:{x:o},backend:n});const i=op(n,o.shape,o.dtype),l=Sr({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),c=Nn({inputs:{real:l,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}if(o.dtype==="complex64"){const i=xo({inputs:{input:o},backend:n}),l=Sr({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),l}if(!sf(o.dtype,a)){const i=As({inputs:{x:o},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){const i=n.data.get(o.dataId).values,l=Int32Array.from(i);return n.makeTensorInfo(o.shape,"int32",l)}if(a==="bool"){const i=n.data.get(o.dataId).values,l=cr([0],o.dtype),[c,u]=wt((h,d)=>h!==d?1:0)(o.shape,[],i,l,"bool");return n.makeTensorInfo(u,"bool",c)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}const HB={kernelName:Vo,backendName:"cpu",kernelFunc:Sr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(s,t,n,r){return n==null?({inputs:o,backend:a})=>{const{a:i,b:l}=o,c=a;he([i,l],s);const u=c.data.get(i.dataId).values,h=c.data.get(l.dataId).values,d=i.dtype==="string"?lo(u):u,p=i.dtype==="string"?lo(h):h,f=r||i.dtype,[m,g]=t(i.shape,l.shape,d,p,f);return c.makeTensorInfo(g,f,m)}:({inputs:o,backend:a})=>{const{a:i,b:l}=o,c=a;if(i.dtype==="complex64"||l.dtype==="complex64"){const u=Sr({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,g=Sr({inputs:{x:l},backend:c,attrs:{dtype:"complex64"}}),y=c.data.get(g.dataId),b=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,v=c.data.get(b.dataId).values,w=c.data.get(x.dataId).values,[C,N,k]=n(i.shape,l.shape,f,m,v,w),S=c.makeTensorInfo(k,"float32",C),E=c.makeTensorInfo(k,"float32",N),A=Nn({inputs:{real:S,imag:E},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(S),c.disposeIntermediateTensorInfo(E),A}else{const u=c.data.get(i.dataId).values,h=c.data.get(l.dataId).values,d=r||i.dtype,[p,f]=t(i.shape,l.shape,u,h,d);return c.makeTensorInfo(f,d,p)}}}function ub(s){return(t,n,r,o,a,i)=>{const l=Ee(t,n),c=j(l),u=l.length,h=ye(l),d=Ct("float32",c),p=Ct("float32",c),f=Wa(t,l),m=Wa(n,l),g=Ys(r,o),y=Ys(a,i),b=t.length,x=ye(t),v=n.length,w=ye(n);if(f.length+m.length===0)for(let C=0;C<d.length;C++){const N=C%g.length,k=C%y.length,S=s(g[N*2],g[N*2+1],y[k*2],y[k*2+1]);d[C]=S.real,p[C]=S.imag}else for(let C=0;C<d.length;C++){const N=Fo(C,u,h),k=N.slice(-b);f.forEach(D=>k[D]=0);const S=ts(k,b,x),E=N.slice(-v);m.forEach(D=>E[D]=0);const A=ts(E,v,w),F=s(g[S*2],g[S*2+1],y[A*2],y[A*2+1]);d[C]=F.real,p[C]=F.imag}return[d,p,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$=wt((s,t)=>s+t),jB=ub((s,t,n,r)=>({real:s+n,imag:t+r})),Ac=Ot(Br,g$,jB),qB={kernelName:Br,backendName:"cpu",kernelFunc:Ac};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(s,t,n,r,o){const a=j(r),i=Mt(o,n);for(let l=0;l<s.length;l++){const c=s[l];if(c<0)throw new Error("Input x must be non-negative!");c>=o||(a>0?i[c]+=t[l]:i[c]+=1)}return i}function y$(s,t,n,r=!1){const o=s.shape[0],a=s.shape[1],i=Ae([o,n],t.dtype);for(let l=0;l<o;l++)for(let c=0;c<a;c++){const u=s.get(l,c);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?i.set(1,l,u):t.size>0?i.set(i.get(l,u)+t.get(l,c),l,u):i.set(i.get(l,u)+1,l,u))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(s){return(t,n,r)=>{const o=Ct(n,t.length);for(let a=0;a<t.length;++a)o[a]=s(t[a],r);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(s,t,n){return({inputs:r,attrs:o,backend:a})=>{const{x:i}=r;if(he(i,s),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const l=a,c=l.data.get(i.dataId).values,u=j(i.shape),h=n||i.dtype,d=Xt(h,u);for(let p=0;p<u;++p)d[p]=t(c[p],o);return l.makeTensorInfo(i.shape,h,d)}}function di(s,t,n){return({inputs:r,attrs:o,backend:a})=>{const{x:i}=r;if(he(i,s),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const l=a,c=l.data.get(i.dataId).values,u=n||i.dtype,h=t(c,u,o);return l.makeTensorInfo(i.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$=Tr(s=>Math.ceil(s)),KB=di(Wo,b$),XB={kernelName:Wo,backendName:"cpu",kernelFunc:KB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(s,t,n,r){const o=Xt(n,j(t));if(r&&n!=="string"){let a=0;s.forEach(i=>{const l=j(i.shape);o.set(i.vals,a),a+=l})}else{let a=0;s.forEach(i=>{const l=n==="string"?lo(i.vals):i.vals;let c=0;for(let u=0;u<i.shape[0];++u){const h=u*t[1]+a;for(let d=0;d<i.shape[1];++d)o[h+d]=l[c++]}a+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$=wt((s,t)=>s===t?1:0),v$=Ot(Ki,w$,null,"bool"),YB={kernelName:Ki,backendName:"cpu",kernelFunc:v$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $$=Tr(s=>Math.exp(s)),C$=di(Xo,$$,"float32"),ZB={kernelName:Xo,backendName:"cpu",kernelFunc:C$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k$=Tr(s=>Math.expm1(s)),JB=di(Yo,k$),QB={kernelName:Yo,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=Tr(s=>Math.floor(s)),eV=di(Zo,I$),tV={kernelName:Zo,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(s,t,n,r,o,a,i,l,c){const u=Ae([r,a],n);for(let h=0;h<r;h++){const d=[];let p=0;for(let f=0;f<o;f++){const m=s[h*o+f];p+=m*i[f],d.push(m)}if(p<0||p>=c/a)throw new Error(`Invalid indices: ${d} does not index into ${l}`);for(let f=0;f<a;f++)u.values[h*a+f]=t.get(...t.indexToLoc(p*a+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(s,t,n){const r=Ae(n,s.dtype);for(let o=0;o<r.size;++o){const i=r.indexToLoc(o).slice(),l=i[0],c=i[2],u=t.locToIndex([l,c]);i[2]=t.values[u];const h=s.locToIndex(i);r.values[o]=s.values[h]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T$=wt((s,t)=>s>t?1:0),nV=Ot(Ji,T$,null,"bool"),sV={kernelName:Ji,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E$=wt((s,t)=>s>=t?1:0),rV=Ot(Qo,E$,null,"bool"),oV={kernelName:Qo,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A$=wt((s,t)=>s<t?1:0),aV=Ot(el,A$,null,"bool"),iV={kernelName:el,backendName:"cpu",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$=wt((s,t)=>s<=t?1:0),lV=Ot(tl,D$,null,"bool"),cV={kernelName:tl,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(s,t,n){const r=(t-s)/(n-1),o=Mt(n,"float32");o[0]=s;for(let a=1;a<o.length;a++)o[a]=o[a-1]+r;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F$=Tr(s=>Math.log(s)),uV=di(ra,F$),hV={kernelName:ra,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(s,t,n,r){const o=Ct(r,j(n));for(let a=0;a<o.length;++a){const i=a*t;let l=s[i];for(let c=0;c<t;++c){const u=s[i+c];(Number.isNaN(u)||u>l)&&(l=u)}o[a]=l}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O$=wt((s,t)=>Math.max(s,t)),dV=Ot(aa,O$),pV={kernelName:aa,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$=wt((s,t)=>Math.min(s,t)),fV=Ot(ia,L$),mV={kernelName:ia,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const db=wt((s,t)=>s*t),gV=ub((s,t,n,r)=>({real:s*n-t*r,imag:s*r+t*n})),ap=Ot(ca,db,gV),yV={kernelName:ca,backendName:"cpu",kernelFunc:ap};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(s,t,n){const r=zs(-1,n);return db([],t,r,s,n)}function bV(s){const{inputs:t,backend:n}=s,{x:r}=t;he(r,"neg");const o=n.data.get(r.dataId).values,[a,i]=P$(o,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}const xV={kernelName:dl,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M$=wt((s,t)=>s!==t?1:0),wV=Ot(pl,M$,null,"bool"),vV={kernelName:pl,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(s,t,n,r,o){const a=t.length,i=j(t),l=ye(t),c=ye(o),u=Ct(n,j(o));for(let h=0;h<i;++h){const d=Fo(h,a,l),p=new Array(d.length);for(let m=0;m<p.length;m++)p[m]=d[r[m]];const f=ts(p,a,c);u[f]=s[h]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(s){const{inputs:t,attrs:n,backend:r}=s,{x:o}=t,{perm:a}=n;he(o,"transpose");const i=o.shape.length,l=new Array(i);for(let d=0;d<l.length;d++)l[d]=o.shape[a[d]];const c=r.data.get(o.dataId).values,u=pb(c,o.shape,o.dtype,a,l);return{dataId:r.write(u,l,o.dtype),shape:l,dtype:o.dtype}}const $V={kernelName:El,backendName:"cpu",kernelFunc:_n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(s,t,n,r){const[o,a]=Rt(s,r),i=mn(t,"int32"),l=Mt(j(o),i),c=j(a);for(let u=0;u<l.length;++u){const h=u*c;let d=1;for(let p=0;p<c;++p)d*=n[h+p];l[u]=d}return{outVals:l,outShape:o,outDtype:i}}function CV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;he(o,"prod");const l=o.shape.length,c=Se(a,o.shape),u=ft(c,l);let h=c,d=o;const p=[];u!=null&&(d=_n({inputs:{x:o},backend:n,attrs:{perm:u}}),p.push(d),h=yt(h.length,l));const f=n.data.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=z$(d.shape,d.dtype,f,h);let b=g;return i&&(b=pt(g,c)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(b,y,m)}const kV={kernelName:Wu,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(s,t,n,r){const o=s===t,a=s<t&&n<0,i=t<s&&n>1;if(o||a||i)return Mt(0,r);const l=Math.abs(Math.ceil((t-s)/n)),c=Mt(l,r);t<s&&n===1&&(n=-1),c[0]=s;for(let u=1;u<c.length;u++)c[u]=c[u-1]+n;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V$=Tr(s=>1/Math.sqrt(s)),IV=di(ma,V$),NV={kernelName:ma,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV=Tr(s=>1/(1+Math.exp(-s))),W$=Ve(wa,s=>1/(1+Math.exp(-s))),TV={kernelName:wa,backendName:"cpu",kernelFunc:W$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(s,t,n,r,o){const a=Gf(r,t,n),i=j(n),l=ye(r);if(a){const d=Hf(t,l);return o==="string"?s.slice(d,d+i):s.subarray(d,d+i)}const c=o==="string"?lo(s):s,u=Ae(r,o,c),h=Ae(n,o);for(let d=0;d<h.size;++d){const p=h.indexToLoc(d),f=p.map((m,g)=>m+t[g]);h.set(u.get(...f),...p)}return o==="string"?Yw(h.values):h.values}function wo(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,size:i}=r;he(o,"slice");const[l,c]=kh(o,a,i);Uf(o,l,c);const u=n.data.get(o.dataId).values,h=U$(u,l,c,o.shape,o.dtype);return n.makeTensorInfo(c,o.dtype,h)}const EV={kernelName:kl,backendName:"cpu",kernelFunc:wo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(s,t,n,r,o,a,i){const l=t[0],c=a[0],u=new Array(c),h=new Array(l),d=t[1];if(c===0){if(l!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${l}`);const y=Xt(n,0),b=Xt(o,0);return[y,[0,d],b,u,h]}let p=!0,f=0;const m=new Array(c).fill(0);for(let y=0;y<l;++y){const b=s[y*d];if(b<0)throw new Error(`indices(${y}, 0) is invalid: ${b} < 0`);if(b>=c)throw new Error(`indices(${y}, 0) is invalid: ${b} >= ${c}`);++m[b],p=p&&b>=f,f=b}let g=!0;for(let y=0;y<c;++y){const b=m[y]===0;u[y]=b,g=g&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(g&&p){const y=s,b=r;for(let x=0;x<l;++x)h[x]=x;return[y,[l,d],b,u,h]}else{const y=m[c-1],b=Xt(n,y*d),x=Xt(o,y),v=new Array(c).fill(0);for(let w=0;w<l;++w){const C=s[w*d],N=v[C],k=(C===0?0:m[C-1])+N;v[C]++;for(let S=0;S<d;++S)b[k*d+S]=s[w*d+S];x[k]=r[w],h[w]=k}for(let w=0;w<c;++w)if(v[w]===0){const N=w===0?0:m[w-1];b[N*d+0]=w;for(let k=1;k<d;++k)b[N*d+k]=0;x[N]=i}return[b,[y,d],x,u,h]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(s,t,n,r,o){const a=j(r),i=t[0],l=o.length,c=[];let u=1,h=-1;for(let y=0;y<l;++y){const b=o[y];if(b===-1){if(h!==-1)throw new Error(`only one output dimension may be -1, not both ${h} and ${y}`);h=y,c.push(1)}else{if(b<0)throw new Error(`size ${y} must be non-negative, not ${b}`);u*=b,c.push(b)}}if(h!==-1){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const y=Math.trunc(a/u);if(u*y!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${c}`);c[h]=y}const d=j(c);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${c}`);const p=r.length,f=[];if(p>0){f[p-1]=1;for(let y=p-2;y>=0;--y)f[y]=f[y+1]*r[y+1]}const m=[];if(l>0){m[l-1]=1;for(let y=l-2;y>=0;--y)m[y]=m[y+1]*c[y+1]}const g=Xt(n,i*l);for(let y=0;y<i;++y){let b=0;for(let x=0;x<p;++x)b+=s[y*p+x]*f[x];for(let x=0;x<l;++x)g[y*l+x]=Math.trunc(b/m[x]),b%=m[x]}return[g,[i,l],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(s,t,n,r,o,a=!1,i=0){const l=r.length;if(l!==o.length)throw new Error("segmentIds and indices should have same size.");const c=[t[0],s.length/t[0]],u=c[1],d=l>0?o[l-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const f=p.reduce((v,w)=>v*w,1),m=Xt(n,f);if(l===0)return d>0&&m.fill(i),[m,p];if(d<=0)throw new Error("segment ids must be >= 0");let g=0,y=1,b=0,x=o[g];for(;;){let v=0;if(y<l){if(v=o[y],x===v){++y;continue}if(x>=v)throw new Error("segment ids are not increasing")}if(x<0||x>=d)throw new Error(`Segment id ${x} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);x>b&&m.fill(i,b*u,x*u);for(let w=g;w<y;++w){const C=r[w];if(C<0||C>=c[0])throw new Error(`Bad: indices[${w}] == ${r[w]} out of range [0, ${c[0]})`);for(let N=0;N<u;N++)m[x*u+N]+=s[C*u+N]}if(a)for(let w=0;w<u;w++)m[x*u+w]/=y-g;if(g=y,++y,b=x+1,x=v,y>l)break}return b<d&&m.fill(i,b*u,d*u),[m,p]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=Tr(s=>Math.sqrt(s)),DV=Ve($a,s=>Math.sqrt(s)),RV={kernelName:$a,backendName:"cpu",kernelFunc:DV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$=wt((s,t)=>{const n=s-t;return n*n}),FV=Ot(Ca,j$),_V={kernelName:Ca,backendName:"cpu",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(s,t,n,r){const o=Ae(s,t.dtype);for(let a=0;a<o.size;a++){const i=o.indexToLoc(a),l=new Array(i.length);for(let c=0;c<l.length;c++)l[c]=i[c]*n[c]+r[c];o.set(t.get(...l),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OV{constructor(t,n,r,o,a,i){this.separator=xs(t),this.nGramWidths=n,this.leftPad=xs(r),this.rightPad=xs(o),this.padWidth=a,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,n){const r=this.getPadWidth(n);return Math.max(0,t+2*r-n+1)}createNGrams(t,n,r,o,a,i){for(let l=0;l<a;++l){const c=this.getPadWidth(i),u=Math.max(0,c-l),h=Math.max(0,c-(a-(l+1))),d=i-(u+h),p=n+(u>0?0:l-c);let f=0;f+=u*this.leftPad.length;for(let x=0;x<d;++x)f+=t[p+x].length;f+=h*this.rightPad.length,f+=(u+h+d-1)*this.separator.length,r[o+l]=new Uint8Array(f);const g=r[o+l];let y=0;const b=x=>x.forEach(v=>g[y++]=v);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(t[p+x]),b(this.separator);if(d>0){b(t[p+d-1]);for(let x=0;x<h;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<h-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,n){const r=t.length,o=n.length;if(o>0){let c=n[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let u=1;u<o;++u){let h=n[u]>=c;if(h=h&&n[u]<=r,!h)throw new Error(`Invalid split value ${n[u]}, must be in [${c}, ${r}]`);c=n[u]}if(c!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${c}`)}const a=o-1,i=Xt("int32",o);if(r===0||o===0){const c=new Array(r);for(let u=0;u<=a;++u)i[u]=0;return[c,i]}i[0]=0;for(let c=1;c<=a;++c){const u=n[c]-n[c-1];let h=0;this.nGramWidths.forEach(d=>{h+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&h===0&&(h=1),i[c]=i[c-1]+h}const l=new Array(i[a]);for(let c=0;c<a;++c){const u=n[c];let h=i[c];if(this.nGramWidths.forEach(d=>{const p=n[c+1]-n[c],f=this.getNumNGrams(p,d);this.createNGrams(t,u,l,h,f,d),h+=f}),this.preserveShort&&h===i[c]){const d=n[c+1]-n[c];if(d===0)continue;const p=d+2*this.padWidth,f=1;this.createNGrams(t,u,l,h,f,p)}}return[l,i]}}function K$(s,t,n,r,o,a,i,l){return new OV(n,r,o,a,i,l).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(s,t,n,r){if(!s.length)return;if(t.length===0){for(let a=0;a<s.length;++a)r.push(s.subarray(a,a+1));return}if(t.length===1){const a=t[0];let i=s.indexOf(a);for(;i!==-1;){const l=s.subarray(0,i);(!n||l.length!==0)&&r.push(l),s=s.subarray(i+1),i=s.indexOf(a)}(!n||s.length!==0)&&r.push(s);return}let o=0;for(let a=0;a<s.length+1;a++)if(a===s.length||t.indexOf(s[a])!==-1){const i=s.subarray(o,a);(!n||i.length!==0)&&r.push(i),o=a+1}}function X$(s,t,n){const r=s.length,o=[];let a=0,i=0;const l=new Array(r);for(let p=0;p<r;++p){const f=o.length;LV(s[p],t,n,o);const m=o.length-f;l[p]=m,a+=m,i=Math.max(i,m)}const c=Xt("int32",a*2),u=new Array(a),h=[r,i];let d=0;for(let p=0;p<r;++p)for(let f=0;f<l[p];++f)c[d*2]=p,c[d*2+1]=f,u[d]=o[d],++d;return[c,u,h]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(s,t){const n=Xt("int32",s.length);for(let r=0;r<s.length;++r)n[r]=Jx(s[r]).modulo(t).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z$=wt((s,t)=>s-t),PV=ub((s,t,n,r)=>({real:s-n,imag:t-r})),mb=Ot(ka,Z$,PV),MV={kernelName:ka,backendName:"cpu",kernelFunc:mb};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(s,t){const n=new Array(s.rank);for(let o=0;o<n.length;o++)n[o]=s.shape[o]*t[o];const r=Ae(n,s.dtype);for(let o=0;o<r.values.length;++o){const a=r.indexToLoc(o),i=new Array(s.rank);for(let c=0;c<i.length;c++)i[c]=a[c]%s.shape[c];const l=s.locToIndex(i);r.values[o]=s.values[l]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dc=(s,t)=>{const n=t.value-s.value;return n===0?s.index-t.index:n};function Q$(s,t,n=0,r=s.length-1){for(;r>n;){if(r-n>600){const l=r-n+1,c=t-n+1,u=Math.log(l),h=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*h*(l-h)/l)*Math.sign(c-l/2),p=Math.max(n,Math.floor(t-c*h/l+d)),f=Math.min(r,Math.floor(t+(l-c)*h/l+d));Q$(s,t,p,f)}const o=s[t];let a=n,i=r;for(Ls(s,n,t),Dc(s[r],o)>0&&Ls(s,n,r);a<i;){for(Ls(s,a,i),a++,i--;Dc(s[a],o)<0;)a=a+1;for(;Dc(s[i],o)>0;)i=i-1}Dc(s[n],o)===0?Ls(s,n,i):(i=i+1,Ls(s,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function eC(s,t,n,r,o){const a=t[t.length-1],[i,l]=[s.length/a,a],c=Ct(n,i*r),u=Ct("int32",i*r);for(let d=0;d<i;d++){const p=d*l,f=s.subarray(p,p+l);let m=new Array(f.length);f.forEach((x,v)=>m[v]={value:x,index:v}),r<m.length&&(Q$(m,r),m=m.slice(0,r)),o&&m.sort(Dc);const g=d*r,y=c.subarray(g,g+r),b=u.subarray(g,g+r);for(let x=0;x<r;x++)y[x]=m[x].value,b[x]=m[x].index}const h=t.slice();return h[h.length-1]=r,[Ae(h,n,c),Ae(h,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(s,t,n,r){const o=Se(t,n)[0],a=[1,n[0],1];for(let m=0;m<o;m++)a[0]*=n[m];a[1]=n[o];for(let m=o+1;m<n.length;m++)a[2]*=n[m];const i={},l=new Int32Array(n[o]),c=new kt(a,r,s),u=[],h=a[0]===1&&a[2]===1;for(let m=0;m<n[o];m++){let g;if(h)g=s[m].toString();else{const y=[];for(let b=0;b<a[0];b++)for(let x=0;x<a[2];x++)y.push(c.get(b,m,x));g=y.join(",")}if(i[g]!==void 0)l[m]=i[g];else{const y=Object.keys(i).length;i[g]=y,l[m]=y,u.push(m)}}const d=a.slice();d[1]=Object.keys(i).length;const p=new kt(d,r);u.forEach((m,g)=>{for(let y=0;y<a[0];y++)for(let b=0;b<a[2];b++)p.set(c.get(y,m,b),y,g,b)});const f=n.slice();return f[o]=d[1],{outputValues:p.values,outputShape:f,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zV=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",simpleAbsImpl:m$,addImpl:g$,bincountImpl:hb,bincountReduceImpl:y$,ceilImpl:b$,concatImpl:x$,equalImpl:w$,expImpl:$$,expm1Impl:k$,floorImpl:I$,gatherNdImpl:N$,gatherV2Impl:S$,greaterImpl:T$,greaterEqualImpl:E$,lessImpl:A$,lessEqualImpl:D$,linSpaceImpl:R$,logImpl:F$,maxImpl:_$,maximumImpl:O$,minimumImpl:L$,multiplyImpl:db,negImpl:P$,notEqualImpl:M$,prodImpl:z$,rangeImpl:B$,rsqrtImpl:V$,sigmoidImpl:SV,sliceImpl:U$,sparseFillEmptyRowsImpl:G$,sparseReshapeImpl:H$,sparseSegmentReductionImpl:fb,sqrtImpl:AV,squaredDifferenceImpl:j$,stridedSliceImpl:q$,stringNGramsImpl:K$,stringSplitImpl:X$,stringToHashBucketFastImpl:Y$,subImpl:Z$,tileImpl:J$,topKImpl:eC,transposeImpl:pb,uniqueImpl:tC});/** @license See the LICENSE file. */const BV="3.10.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yf("cpu",()=>new rp,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nC=Ve(qo,s=>s>=0?s:Math.exp(s)-1),VV={kernelName:qo,backendName:"cpu",kernelFunc:nC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{alpha:a}=r;he([o],"leakyRelu");const i=j(o.shape),l=n.data.get(o.dataId).values,c=Ct("float32",i);for(let u=0;u<l.length;u++)c[u]=l[u]<0?a*l[u]:l[u];return n.makeTensorInfo(o.shape,"float32",c)}const WV={kernelName:Qi,backendName:"cpu",kernelFunc:sC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UV=wt((s,t)=>s<0?t*s:s);function rC(s){const{inputs:t,backend:n}=s,{x:r,alpha:o}=t;he([r,o],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,[l,c]=UV(r.shape,o.shape,a,i,"float32");return n.makeTensorInfo(c,"float32",l)}const GV={kernelName:bl,backendName:"cpu",kernelFunc:rC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oC=Ve(da,s=>Math.max(0,s)),HV={kernelName:da,backendName:"cpu",kernelFunc:oC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aC=Ve(pa,s=>Math.min(Math.max(0,s),6)),jV={kernelName:pa,backendName:"cpu",kernelFunc:aC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(s,t,n,r,o){if(n==="linear")return As({inputs:{x:t},backend:s});if(n==="relu")return oC({inputs:{x:t},backend:s});if(n==="elu")return nC({inputs:{x:t},backend:s});if(n==="relu6")return aC({inputs:{x:t},backend:s});if(n==="prelu")return rC({inputs:{x:t,alpha:r},backend:s});if(n==="leakyrelu")return sC({inputs:{x:t},backend:s,attrs:{alpha:o}});if(n==="sigmoid")return W$({inputs:{x:t},backend:s});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tt(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{shape:a}=r,i=j(o.shape),l=nf(a,i),c=j(l);I(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(o.dataId);const u=n.data.get(o.dataId);if(u.complexTensorInfos!=null){const h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;h.shape=l,d.shape=l}return{dataId:o.dataId,shape:l,dtype:o.dtype}}const qV={kernelName:xl,backendName:"cpu",kernelFunc:tt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a}=t,{transposeA:i,transposeB:l}=r;he([o,a],"matMul");const c=o.shape.length,u=a.shape.length,h=i?o.shape[c-2]:o.shape[c-1],d=l?a.shape[u-1]:a.shape[u-2],p=i?o.shape[c-1]:o.shape[c-2],f=l?a.shape[u-2]:a.shape[u-1],m=o.shape.slice(0,-2),g=a.shape.slice(0,-2),y=j(m),b=j(g),x=y===b||y===1||b===1;I(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const w=(y>b?o.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,f]);I(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${o.shape} and ${a.shape} and transposeA=${i} and transposeB=${l} must match.`);const C=i?[y,h,p]:[y,p,h],N=l?[b,f,d]:[b,d,f],k=tt({inputs:{x:o},backend:n,attrs:{shape:C}}),S=tt({inputs:{x:a},backend:n,attrs:{shape:N}}),E=i?k.shape[1]:k.shape[2],A=i?k.shape[2]:k.shape[1],F=l?S.shape[1]:S.shape[2],D=Math.max(y,b),O=n.data.get(k.dataId).values,B=n.data.get(S.dataId).values,V=ye(k.shape),z=ye(S.shape),[H,U,K]=i?[V[0],1,V[1]]:[V[0],V[1],1],[X,J,Q]=l?[1,z[1],z[0]]:[z[1],1,z[0]],ee=A*F,se=Ae([D,A,F],k.dtype),re=se.values,ae=n.blockSize;for(let le=0;le<D;le++)for(let ge=0;ge<A;ge+=ae)for(let fe=0;fe<F;fe+=ae)for(let ve=0;ve<E;ve+=ae){const $e=Math.min(ge+ae,A),Re=Math.min(fe+ae,F),we=Math.min(ve+ae,E);for(let We=ge;We<$e;We++)for(let Ue=fe;Ue<Re;Ue++){let Ge=0;for(let qe=ve;qe<we;qe++){const ot=Math.min(le,y-1)*H,Qn=Math.min(le,b-1)*Q,vt=O[ot+We*U+qe*K],Pn=B[qe*X+Ue*J+Qn];Ge+=vt*Pn}re[le*ee+(We*F+Ue)]+=Ge}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(w,se.dtype,se.values)}const KV={kernelName:Mi,backendName:"cpu",kernelFunc:iC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a,bias:i,preluActivationWeights:l}=t,{transposeA:c,transposeB:u,activation:h,leakyreluAlpha:d}=r;let p,f,m;const g=[];p=iC({inputs:{a:o,b:a},attrs:{transposeA:c,transposeB:u},backend:n}),i&&(f=Ac({inputs:{a:p,b:i},backend:n}),g.push(p),p=f),h&&(m=gb(n,p,h,l,d),g.push(p),p=m);for(const b of g)n.disposeIntermediateTensorInfo(b);return p}const YV={kernelName:Fl,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV=Ve(_o,s=>Math.acos(s)),JV={kernelName:_o,backendName:"cpu",kernelFunc:ZV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV=Ve(Oo,s=>Math.acosh(s)),eW={kernelName:Oo,backendName:"cpu",kernelFunc:QV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(s){const{inputs:t,backend:n}=s,r=t;he(t,"addN");const o=r.map(l=>n.data.get(l.dataId).values),a=Ae(r[0].shape,r[0].dtype),i=a.values;for(let l=0;l<r.length;l++){const c=o[l];for(let u=0;u<i.length;u++)i[u]+=c[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}const nW={kernelName:Fi,backendName:"cpu",kernelFunc:tW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;he(o,"all");const l=Se(a,o.shape);let c=l;const u=ft(c,o.shape.length);let h=o;u!=null&&(h=_n({inputs:{x:o},backend:n,attrs:{perm:u}}),c=yt(c.length,o.shape.length)),Vt("all",c,h.shape.length);const[d,p]=Rt(h.shape,c),f=j(p),m=Mt(j(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let v=g[x];for(let w=0;w<f;++w){const C=g[x+w];v=v&&C}m[b]=v}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=pt(d,l),x=tt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const rW={kernelName:iu,backendName:"cpu",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;he(o,"any");const l=Se(a,o.shape);let c=l;const u=ft(c,o.shape.length);let h=o;u!=null&&(h=_n({inputs:{x:o},backend:n,attrs:{perm:u}}),c=yt(c.length,o.shape.length)),Vt("any",c,h.shape.length);const[d,p]=Rt(h.shape,c),f=j(p),m=Mt(j(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let v=g[x];for(let w=0;w<f;++w){const C=g[x+w];v=v||C}m[b]=v}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=pt(d,l),x=tt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const aW={kernelName:lu,backendName:"cpu",kernelFunc:oW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;he(o,"argMax");let i=Se(a,o.shape);const l=ft(i,o.shape.length);let c=o;const u=[];l!=null&&(c=_n({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=yt(i.length,c.shape.length)),i=[i[0]],Vt("argMax",i,c.shape.length);const[h,d]=Rt(c.shape,i),p=j(h),f=Mt(p,"int32"),m=j(d),g=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],v=0;for(let w=0;w<m;++w){const C=g[b+w];C>x&&(x=C,v=w)}f[y]=v}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(h,"int32",f)}const lW={kernelName:_i,backendName:"cpu",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;he(o,"argMin");let i=Se(a,o.shape);const l=ft(i,o.shape.length);let c=o;const u=[];l!=null&&(c=_n({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=yt(i.length,c.shape.length)),i=[i[0]],Vt("argMin",i,c.shape.length);const[h,d]=Rt(c.shape,i),p=j(h),f=Mt(p,"int32"),m=j(d),g=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],v=0;for(let w=0;w<m;++w){const C=g[b+w];C<x&&(x=C,v=w)}f[y]=v}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(h,"int32",f)}const uW={kernelName:Oi,backendName:"cpu",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=Ve(Lo,s=>Math.asin(s)),dW={kernelName:Lo,backendName:"cpu",kernelFunc:hW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW=Ve(Po,s=>Math.asinh(s)),fW={kernelName:Po,backendName:"cpu",kernelFunc:pW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=Ve(Mo,s=>Math.atan(s)),gW={kernelName:Mo,backendName:"cpu",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW=wt((s,t)=>Math.atan2(s,t)),bW=Ot(Bo,yW),xW={kernelName:Bo,backendName:"cpu",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW=Ve(zo,s=>Math.atanh(s)),vW={kernelName:zo,backendName:"cpu",kernelFunc:wW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yb(s,t,n,r,o,a){const i=o.strideHeight,l=o.strideWidth,c=o.dilationHeight,u=o.dilationWidth,h=o.effectiveFilterHeight,d=o.effectiveFilterWidth,p=o.padInfo.top,f=o.padInfo.left,m=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Ae(o.outShape,n),y=g.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],v=o.outShape[3];for(let w=0;w<o.batchSize;++w){const C=w*b,N=w*r[0];for(let k=0;k<o.inChannels;++k)for(let S=0;S<o.outHeight;++S){const E=S*i-p,A=Math.max(0,E),F=Math.min(o.inHeight,h+E),D=C+S*x;for(let O=0;O<o.outWidth;++O){const B=O*l-f,V=Math.max(0,B),z=Math.min(o.inWidth,d+B);let H=m,U=0,K=0;for(let J=A;J<F;J+=c){const Q=N+J*r[1];for(let ee=V;ee<z;ee+=u){const se=Q+ee*r[2],re=s[se+k];a==="max"&&re>H?H=re:a==="avg"&&(U+=re,K++)}if(isNaN(H))break}const X=D+O*v+k;y[X]=a==="avg"?U/K:H}}}return g}function lC(s,t,n,r,o=!1,a=!1){const i=Ae(r.outShape,"int32"),l=r.strideHeight,c=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Ae(t,n,s);for(let y=0;y<r.batchSize;++y)for(let b=0;b<r.inChannels;++b)for(let x=0;x<r.outHeight;++x){const v=x*l-f;let w=v;for(;w<0;)w+=u;const C=Math.min(r.inHeight,d+v);for(let N=0;N<r.outWidth;++N){const k=N*c-m;let S=k;for(;S<0;)S+=h;const E=Math.min(r.inWidth,p+k);let A=Number.NEGATIVE_INFINITY,F=-1;for(let D=w;D<C;D+=u){const O=D-v;for(let B=S;B<E;B+=h){const V=B-k,z=g.get(y,D,B,b);z>A&&(A=z,o?F=a?((y*r.inHeight+D)*r.inWidth+B)*r.inChannels+b:(D*r.inWidth+B)*r.inChannels+b:F=O*p+V)}}i.set(F,y,x,N,b)}}return i}function cC(s,t,n,r,o,a){const i=o.strideDepth,l=o.strideHeight,c=o.strideWidth,u=o.dilationDepth,h=o.dilationHeight,d=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,g=o.padInfo.front,y=o.padInfo.top,b=o.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Ae(o.outShape,n),w=v.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[2]*o.outShape[3]*o.outShape[4],k=o.outShape[3]*o.outShape[4],S=o.outShape[4];for(let E=0;E<o.batchSize;++E){const A=E*C,F=E*r[0];for(let D=0;D<o.inChannels;++D)for(let O=0;O<o.outDepth;++O){const B=O*i-g;let V=B;for(;V<0;)V+=u;const z=Math.min(o.inDepth,p+B),H=A+O*N;for(let U=0;U<o.outHeight;++U){const K=U*l-y;let X=K;for(;X<0;)X+=h;const J=Math.min(o.inHeight,f+K),Q=H+U*k;for(let ee=0;ee<o.outWidth;++ee){const se=ee*c-b;let re=se;for(;re<0;)re+=d;const ae=Math.min(o.inWidth,m+se),le=Q+ee*S;let ge=x,fe=0,ve=0;for(let Re=V;Re<z;Re+=u){const we=F+Re*r[1];for(let We=X;We<J;We+=h){const Ue=we+We*r[2];for(let Ge=re;Ge<ae;Ge+=d){const qe=Ue+Ge*r[3],ot=s[qe+D];if(a==="max"&&ot>ge?ge=ot:a==="avg"&&(fe+=ot,ve++),isNaN(ge))break}if(isNaN(ge))break}if(isNaN(ge))break}const $e=le+D;w[$e]=a==="avg"?fe/ve:ge}}}}return v}function $W(s,t){const n=Ae(t.outShape,"int32"),r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let y=0;y<t.inChannels;++y)for(let b=0;b<t.outDepth;++b){const x=b*r-p;let v=x;for(;v<0;)v+=i;const w=Math.min(t.inDepth,u+x);for(let C=0;C<t.outHeight;++C){const N=C*o-f;let k=N;for(;k<0;)k+=l;const S=Math.min(t.inHeight,h+N);for(let E=0;E<t.outWidth;++E){const A=E*a-m;let F=A;for(;F<0;)F+=c;const D=Math.min(t.inWidth,d+A);let O=Number.NEGATIVE_INFINITY,B=-1;for(let V=v;V<w;V+=i){const z=V-x;for(let H=k;H<S;H+=l){const U=H-N;for(let K=F;K<D;K+=c){const X=K-A,J=s.get(g,V,H,K,y);J>=O&&(O=J,B=z*h*d+U*h+X)}}}n.set(B,g,b,C,E,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;he(o,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;I(Bt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Un(o.shape,a,i,u,l,c);let d;if(h.filterWidth===1&&h.filterHeight===1&&De(h.inShape,h.outShape))d=As({inputs:{x:o},backend:n});else{const p=n.data.get(o.dataId).values,f=ye(o.shape),m=yb(p,o.shape,o.dtype,f,h,"avg");d=n.makeTensorInfo(h.outShape,o.dtype,m.values)}return d}const kW={kernelName:Li,backendName:"cpu",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r;he(o,"avgPool3d");const h=Us(o.shape,a,i,1,l,c,u),d=n.data.get(o.dataId).values,p=cC(d,o.shape,o.dtype,ye(o.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}const NW={kernelName:Pi,backendName:"cpu",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r;he([o,a],"avgPool3DGrad");const h=Us(a.shape,i,l,1,c,u),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,C=h.effectiveFilterHeight,N=h.effectiveFilterWidth,k=w-1-h.padInfo.front,S=N-1-h.padInfo.left,E=C-1-h.padInfo.top,A=Ae(a.shape,"float32"),F=1/(m*g*y),D=n.bufferSync(o);for(let O=0;O<h.batchSize;++O)for(let B=0;B<h.inChannels;++B)for(let V=0;V<h.inDepth;++V)for(let z=0;z<h.inHeight;++z)for(let H=0;H<h.inWidth;++H){const U=V-k,K=z-E,X=H-S;let J=0;for(let Q=0;Q<w;Q+=b){const ee=(U+Q)/d;if(!(ee<0||ee>=h.outDepth||Math.floor(ee)!==ee))for(let se=0;se<C;se+=x){const re=(K+se)/p;if(!(re<0||re>=h.outHeight||Math.floor(re)!==re))for(let ae=0;ae<N;ae+=v){const le=(X+ae)/f;if(le<0||le>=h.outWidth||Math.floor(le)!==le)continue;J+=D.get(O,ee,re,le,B)}}}A.set(J*F,O,V,z,H,B)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}const TW={kernelName:uu,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a;he([o,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:u}=r,h=Un(i.shape,l,c,1,u),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,v=x-1-h.padInfo.left,w=b-1-h.padInfo.top,C=Ae(i.shape,"float32"),N=1/(f*m),k=n.data.get(o.dataId).values,S=Ae(o.shape,"float32",k);for(let E=0;E<h.batchSize;++E)for(let A=0;A<h.inChannels;++A)for(let F=0;F<h.inHeight;++F)for(let D=0;D<h.inWidth;++D){const O=F-w,B=D-v;let V=0;for(let z=0;z<b;z+=g){const H=(O+z)/d;if(!(H<0||H>=h.outHeight||Math.floor(H)!==H))for(let U=0;U<x;U+=y){const K=(B+U)/p;if(K<0||K>=h.outWidth||Math.floor(K)!==K)continue;V+=S.get(E,H,K,A)}}C.set(V*N,E,F,D,A)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const AW={kernelName:cu,backendName:"cpu",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,scale:a,offset:i,mean:l,variance:c}=t;I(l.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(a==null||l.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),he([o,l,c,a,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);const h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(c.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,v=d.length;let w=0,C=0,N=0,k=0;for(let S=0;S<h.length;++S)g[S]=m[w++]+(h[S]-d[C++])*f[N++]/Math.sqrt(p[k++]+u),w>=y&&(w=0),C>=v&&(C=0),N>=b&&(N=0),k>=x&&(k=0);return n.makeTensorInfo(o.shape,o.dtype,g)}const RW={kernelName:Yi,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,crops:i}=r;he([o],"batchToSpaceND");const l=a.reduce((b,x)=>b*x),c=cc(o.shape,a,l),u=uc(c.length,a.length),h=hc(o.shape,a,l),d=Um(i,a.length),p=Gm(h,i,a.length),f=tt({inputs:{x:o},backend:n,attrs:{shape:c}}),m=_n({inputs:{x:f},backend:n,attrs:{perm:u}}),g=tt({inputs:{x:m},backend:n,attrs:{shape:h}}),y=wo({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const _W={kernelName:zi,backendName:"cpu",kernelFunc:FW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i}=r,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,u=hb(l,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}const LW={kernelName:hu,backendName:"cpu",kernelFunc:OW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){const{inputs:t,backend:n}=s,{s0:r,s1:o}=t,a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,l=Ee(Array.from(a),Array.from(i));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const MW={kernelName:du,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW=Ve(Uo,(s,t)=>{const n=t;return s>n.clipValueMax?n.clipValueMax:s<n.clipValueMin?n.clipValueMin:s}),BW={kernelName:Uo,backendName:"cpu",kernelFunc:zW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=s=>{const{x:t}=s.inputs,n=s.backend,r=new Float32Array(j(t.shape)),o=n.data.get(t.dataId),a=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values;for(let u=0;u<l.length;u++){const h=l[u],d=c[u];r[u]=Math.hypot(h,d)}return n.makeOutput(r,t.shape,"float32")},WW={kernelName:Bi,backendName:"cpu",kernelFunc:VW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,a)}const UW={kernelName:Ru,backendName:"cpu",kernelFunc:pi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r,a=Se(o,t[0].shape)[0];let i=Is(t.map(g=>g.shape),a);if(j(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(g=>j(g.shape)>0);if(l.length===1)return As({inputs:{x:l[0]},backend:n});const c=l.map(g=>g.shape);if(Bm(c,a),l[0].dtype==="complex64"){const g=l.map(w=>xo({inputs:{input:w},backend:n})),y=l.map(w=>pi({inputs:{input:w},backend:n})),b=fi({inputs:g,backend:n,attrs:{axis:a}}),x=fi({inputs:y,backend:n,attrs:{axis:a}}),v=Nn({inputs:{real:b,imag:x},backend:n});return g.forEach(w=>n.disposeIntermediateTensorInfo(w)),y.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),v}const u=l.map(g=>{const y=j(g.shape.slice(a));return tt({inputs:{x:g},backend:n,attrs:{shape:[-1,y]}})}),h=u.map(g=>({vals:n.data.get(g.dataId).values,shape:g.shape}));i=Is(u.map(g=>g.shape),1);const d=u[0].shape[0]===1,p=x$(h,i,t[0].dtype,d),f=Is(l.map(g=>g.shape),a),m=n.makeTensorInfo(f,t[0].dtype,p);return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const GW={kernelName:Vi,backendName:"cpu",kernelFunc:fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dataFormat:c,dilations:u,dimRoundingMode:h}=r;he([o,a],"conv2d");const d=Gs(c),p=Dt(o.shape,a.shape,i,u,l,h,!1,d),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,x=p.padInfo.top,v=p.dataFormat==="channelsLast",w=new kt(p.outShape,o.dtype),C=ye(o.shape),N=ye(a.shape),k=C[0],S=v?C[1]:C[2],E=v?C[2]:1,A=v?1:C[1],F=w.strides[0],D=v?w.strides[1]:w.strides[2],O=v?w.strides[2]:1,B=v?1:w.strides[1],V=n.data.get(o.dataId).values,z=n.data.get(a.dataId).values,H=w.values;for(let U=0;U<p.batchSize;++U){const K=U*k,X=U*F;for(let J=0;J<p.outHeight;++J){const Q=X+J*D,ee=J*p.strideHeight-x;for(let se=0;se<f;++se){const re=ee+se*g;if(re<0||re>=p.inHeight)continue;const ae=se*N[0],le=K+re*S;for(let ge=0;ge<p.outWidth;++ge){const fe=Q+ge*O,ve=ge*p.strideWidth-b;for(let $e=0;$e<m;++$e){const Re=ve+$e*y;if(Re<0||Re>=p.inWidth)continue;const we=ae+$e*N[1],We=le+Re*E;let Ue=we;for(let Ge=0;Ge<p.inChannels;++Ge){const qe=V[We+Ge*A];for(let ot=0;ot<p.outChannels;++ot)H[fe+ot*B]+=qe*z[Ue+ot];Ue+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,H)}const HW={kernelName:Wi,backendName:"cpu",kernelFunc:uC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,dataFormat:c,dimRoundingMode:u,filterShape:h}=r;he([o,a],"conv2dBackpropFilter");const d=Gs(c),p=Dt(o.shape,h,i,1,l,u,!1,d),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b=p.dataFormat==="channelsLast",x=new kt(p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,C=n.data.get(o.dataId).values,N=n.data.get(a.dataId).values,k=new kt(o.shape,o.dtype,C),S=new kt(a.shape,a.dtype,N);for(let E=0;E<g;++E){const A=Math.max(0,Math.ceil((w-E)/f)),F=Math.min(p.outHeight,(p.inHeight+w-E)/f);for(let D=0;D<y;++D){const O=Math.max(0,Math.ceil((v-D)/m)),B=Math.min(p.outWidth,(p.inWidth+v-D)/m);for(let V=0;V<p.inChannels;++V)for(let z=0;z<p.outChannels;++z){let H=0;for(let U=0;U<p.batchSize;++U)for(let K=A;K<F;++K){const X=E+K*f-w;for(let J=O;J<B;++J){const Q=D+J*m-v;b?H+=k.get(U,X,Q,V)*S.get(U,K,J,z):H+=k.get(U,V,X,Q)*S.get(U,z,K,J)}}x.set(H,E,D,V,z)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const qW={kernelName:fu,backendName:"cpu",kernelFunc:jW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{inputShape:i,strides:l,pad:c,dataFormat:u,dimRoundingMode:h}=r;he([o,a],"conv2dBackpropInput");const d=ye(a.shape),p=ye(o.shape);let f=Gs(u);const m=Dt(i,a.shape,l,1,c,h,!1,f),g=new kt(m.inShape,"float32"),y=g.values,b=n.data.get(o.dataId).values,x=n.data.get(a.dataId).values,[v,w,C]=d,{batchSize:N,filterHeight:k,filterWidth:S,inChannels:E,inHeight:A,inWidth:F,outChannels:D,outHeight:O,outWidth:B,strideHeight:V,strideWidth:z}=m;f=m.dataFormat;const H=k-1-m.padInfo.top,U=S-1-m.padInfo.left,K=f==="channelsLast",X=g.strides[0],J=K?g.strides[1]:g.strides[2],Q=K?g.strides[2]:1,ee=K?1:g.strides[1],se=p[0],re=K?p[1]:p[2],ae=K?p[2]:1,le=K?1:p[1];for(let ge=0;ge<N;++ge)for(let fe=0;fe<E;++fe)for(let ve=0;ve<A;++ve){const $e=ve-H,Re=Math.max(0,Math.ceil($e/V)),we=Math.min(O,(k+$e)/V);for(let We=0;We<F;++We){const Ue=We-U,Ge=Math.max(0,Math.ceil(Ue/z)),qe=Math.min(B,(S+Ue)/z);let ot=0;for(let vt=Re;vt<we;++vt){const Pn=vt*V-$e;for(let nn=Ge;nn<qe;++nn){const ys=nn*z-Ue,Tn=se*ge+re*vt+ae*nn,Ne=v*(k-1-Pn)+w*(S-1-ys)+C*fe;for(let sn=0;sn<D;++sn){const es=b[Tn+le*sn],rr=x[Ne+sn];ot+=es*rr}}}const Qn=X*ge+J*ve+Q*We+ee*fe;y[Qn]=ot}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const XW={kernelName:Ui,backendName:"cpu",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r;he([o,a],"conv3d");const u=fr(o.shape,a.shape,i,c,l),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,x=y.left,v=y.top,w=new kt(u.outShape,o.dtype),C=n.data.get(o.dataId).values,N=n.data.get(a.dataId).values,k=w.values,S=ye(o.shape),E=ye(a.shape);for(let A=0;A<u.batchSize;++A){const F=A*S[0],D=A*w.strides[0];for(let O=0;O<u.outDepth;++O){const B=D+O*w.strides[1],V=O*u.strideDepth-b;for(let z=0;z<h;++z){const H=V+z*f;if(H<0||H>=u.inDepth)continue;const U=z*E[0],K=F+H*S[1];for(let X=0;X<u.outHeight;++X){const J=B+X*w.strides[2],Q=X*u.strideHeight-v;for(let ee=0;ee<d;++ee){const se=Q+ee*m;if(se<0||se>=u.inHeight)continue;const re=U+ee*E[1],ae=K+se*S[2];for(let le=0;le<u.outWidth;++le){const ge=J+le*u.outChannels,fe=le*u.strideWidth-x;for(let ve=0;ve<p;++ve){const $e=fe+ve*g;if($e<0||$e>=u.inWidth)continue;const Re=re+ve*E[2],we=ae+$e*u.inChannels;let We=Re;for(let Ue=0;Ue<u.inChannels;++Ue){const Ge=C[we+Ue];for(let qe=0;qe<u.outChannels;++qe)k[ge+qe]+=Ge*N[We+qe];We+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const ZW={kernelName:Gi,backendName:"cpu",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,filterShape:c}=r;he([o,a],"conv3dBackpropFilterV2");const u=ye(o.shape),h=ye(a.shape),d=fr(o.shape,c,i,1,l),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,y=d.filterHeight,b=d.filterWidth,x=new kt(d.filterShape,"float32"),v=x.values,[w,C,N,k]=x.strides,S=n.data.get(a.dataId).values,[E,A,F,D]=h,O=n.data.get(o.dataId).values,[B,V,z,H]=u,U=d.padInfo.front,K=d.padInfo.left,X=d.padInfo.top;for(let J=0;J<g;++J){const Q=Math.max(0,Math.ceil((U-J)/p)),ee=Math.min(d.outDepth,(d.inDepth+U-J)/p),se=J*w;for(let re=0;re<y;++re){const ae=Math.max(0,Math.ceil((X-re)/f)),le=Math.min(d.outHeight,(d.inHeight+X-re)/f),ge=re*C+se;for(let fe=0;fe<b;++fe){const ve=Math.max(0,Math.ceil((K-fe)/m)),$e=Math.min(d.outWidth,(d.inWidth+K-fe)/m),Re=fe*N+ge;for(let we=0;we<d.inChannels;++we){const We=we*k+Re;for(let Ue=0;Ue<d.outChannels;++Ue){let Ge=0;for(let qe=0;qe<d.batchSize;++qe){const ot=qe*B,Qn=qe*E;for(let vt=Q;vt<ee;++vt){const nn=(J+vt*p-U)*V+ot,ys=vt*A+Qn;for(let Tn=ae;Tn<le;++Tn){const sn=(re+Tn*f-X)*z+nn,es=Tn*F+ys;for(let rr=ve;rr<$e;++rr){const Ap=(fe+rr*m-K)*H+sn,Dp=rr*D+es;Ge+=O[Ap+we]*S[Dp+Ue]}}}}v[We+Ue]=Ge}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const QW={kernelName:mu,backendName:"cpu",kernelFunc:JW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{pad:i,strides:l,inputShape:c}=r;he([o],"conv3dBackpropInputV2");const u=ye(o.shape),h=ye(a.shape),d=fr(c,a.shape,l,1,i),p=new kt(d.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,x=n.data.get(o.dataId).values,[v,w,C,N]=u,k=n.data.get(a.dataId).values,[S,E,A,F]=h,{batchSize:D,filterDepth:O,filterHeight:B,filterWidth:V,inChannels:z,inDepth:H,inHeight:U,inWidth:K,outChannels:X,outDepth:J,outHeight:Q,outWidth:ee,strideDepth:se,strideHeight:re,strideWidth:ae}=d,le=O-1-d.padInfo.front,ge=B-1-d.padInfo.top,fe=V-1-d.padInfo.left;for(let ve=0;ve<D;++ve)for(let $e=0;$e<z;++$e)for(let Re=0;Re<H;++Re){const we=Re-le,We=Math.max(0,Math.ceil(we/se)),Ue=Math.min(J,(O+we)/se);for(let Ge=0;Ge<U;++Ge){const qe=Ge-ge,ot=Math.max(0,Math.ceil(qe/re)),Qn=Math.min(Q,(B+qe)/re);for(let vt=0;vt<K;++vt){const Pn=vt-fe,nn=Math.max(0,Math.ceil(Pn/ae)),ys=Math.min(ee,(V+Pn)/ae);let Tn=0;for(let Ne=We;Ne<Ue;++Ne){const sn=Ne*se-we;for(let es=ot;es<Qn;++es){const rr=es*re-qe;for(let Ti=nn;Ti<ys;++Ti){const Ap=Ti*ae-Pn,Dp=v*ve+w*Ne+C*es+N*Ti,Jk=S*(O-1-sn)+E*(B-1-rr)+A*(V-1-Ap)+F*$e;for(let Gc=0;Gc<X;++Gc){const Qk=x[Dp+Gc],eI=k[Jk+Gc];Tn+=Qk*eI}}}}f[m*ve+g*Re+y*Ge+b*vt+$e]=Tn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const t4={kernelName:gu,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4=Ve(Go,s=>Math.cos(s)),s4={kernelName:Go,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4=Ve(Ho,s=>Math.cosh(s)),o4={kernelName:Ho,backendName:"cpu",kernelFunc:r4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(s){const{inputs:t,backend:n,attrs:r}=s,{image:o,boxes:a,boxInd:i}=t,{cropSize:l,method:c,extrapolationValue:u}=r,[h,d,p,f]=o.shape,m=a.shape[0],[g,y]=l,b=Ae([m,g,y,f],"float32"),x=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,C=ye(o.shape),N=ye(b.shape);for(let k=0;k<m;k++){const S=k*4,E=x[S],A=x[S+1],F=x[S+2],D=x[S+3],O=v[k];if(O>=h)continue;const B=g>1?(F-E)*(d-1)/(g-1):0,V=y>1?(D-A)*(p-1)/(y-1):0;for(let z=0;z<g;z++){const H=g>1?E*(d-1)+z*B:.5*(E+F)*(d-1);if(H<0||H>d-1){for(let U=0;U<y;U++)for(let K=0;K<f;K++){const X=K+U*N[2]+z*N[1]+k*N[0];b.values[X]=u}continue}if(c==="bilinear"){const U=Math.floor(H),K=Math.ceil(H),X=H-U;for(let J=0;J<y;J++){const Q=y>1?A*(p-1)+J*V:.5*(A+D)*(p-1);if(Q<0||Q>p-1){for(let ae=0;ae<f;ae++){const le=ae+J*N[2]+z*N[1]+k*N[0];b.values[le]=u}continue}const ee=Math.floor(Q),se=Math.ceil(Q),re=Q-ee;for(let ae=0;ae<f;ae++){let le=ae+ee*C[2]+U*C[1]+O*C[0];const ge=w[le];le=ae+se*C[2]+U*C[1]+O*C[0];const fe=w[le];le=ae+ee*C[2]+K*C[1]+O*C[0];const ve=w[le];le=ae+se*C[2]+K*C[1]+O*C[0];const $e=w[le],Re=ge+(fe-ge)*re,we=ve+($e-ve)*re;le=ae+J*N[2]+z*N[1]+k*N[0],b.values[le]=Re+(we-Re)*X}}}else for(let U=0;U<y;++U){const K=y>1?A*(p-1)+U*V:.5*(A+D)*(p-1);if(K<0||K>p-1){for(let Q=0;Q<f;Q++){const ee=Q+U*N[2]+z*N[1]+k*N[0];b.values[ee]=u}continue}const X=Math.round(K),J=Math.round(H);for(let Q=0;Q<f;Q++){const ee=Q+X*C[2]+J*C[1]+O*C[0],se=Q+U*N[2]+z*N[1]+k*N[0];b.values[se]=w[ee]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const i4={kernelName:yu,backendName:"cpu",kernelFunc:a4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,exclusive:i,reverse:l}=r;he(o,"cumsum");const c=ft([a],o.shape.length);let u=o;c!=null&&(u=_n({inputs:{x:o},backend:n,attrs:{perm:c}}));const h=yt(1,o.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const d=mn(u.dtype,"int32"),p=Mt(j(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=l?(b,x)=>b+m-x-1:(b,x)=>b+x;for(let b=0;b<f.length;b+=m)for(let x=0;x<m;x++){const v=g(b,x);if(x===0)p[v]=i?0:f[v];else{const w=g(b,x-1);p[v]=i?f[w]+p[w]:f[v]+p[w]}}const y=n.makeTensorInfo(u.shape,d,p);if(c!=null){const b=ja(c),x=_n({inputs:{x:y},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const c4={kernelName:Hi,backendName:"cpu",kernelFunc:l4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i,binaryOutput:l}=r;if(o.shape.length===1){const c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=hb(c,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,h)}else if(o.shape.length===2){const c=n.bufferSync(o),u=n.bufferSync(a),h=y$(c,u,i,l);return n.makeTensorInfo(h.shape,a.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const h4={kernelName:bu,backendName:"cpu",kernelFunc:u4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockSize:a,dataFormat:i}=r;I(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const l=o.shape[0],c=o.shape[1],u=o.shape[2],h=o.shape[3],d=c*a,p=u*a,f=h/(a*a),m=n.data.get(o.dataId).values,g=new Float32Array(l*d*p*f);let y=0;for(let b=0;b<l;++b)for(let x=0;x<d;++x){const v=Math.floor(x/a),w=x%a;for(let C=0;C<p;++C){const N=Math.floor(C/a),k=C%a,S=(w*a+k)*f;for(let E=0;E<f;++E){const F=E+S+h*(N+u*(v+c*b));g[y++]=m[F]}}}return n.makeTensorInfo([l,d,p,f],o.dtype,g)}const p4={kernelName:xu,backendName:"cpu",kernelFunc:d4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c,dimRoundingMode:u}=r;he([o,a],"depthwiseConv2DNative");const h=ye(o.shape),d=ye(a.shape);let p=c;p==null&&(p=[1,1]),I(Bt(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=Dt(o.shape,a.shape,i,p,l,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,C=f.outChannels/f.inChannels,N=new kt(f.outShape,o.dtype),k=n.data.get(o.dataId).values,S=n.data.get(a.dataId).values,E=N.values;for(let A=0;A<f.batchSize;++A){const F=A*h[0],D=A*N.strides[0];for(let O=0;O<f.outHeight;++O){const B=D+O*N.strides[1],V=O*f.strideHeight-w;for(let z=0;z<m;++z){const H=V+z*y;if(H<0||H>=f.inHeight)continue;const U=z*d[0],K=F+H*h[1];for(let X=0;X<f.outWidth;++X){const J=B+X*N.strides[2],Q=X*f.strideWidth-v;for(let ee=0;ee<g;++ee){const se=Q+ee*b;if(se<0||se>=f.inWidth)continue;const re=U+ee*d[1],ae=K+se*f.inChannels;let le=J,ge=re;for(let fe=0;fe<f.inChannels;++fe){const ve=k[ae+fe];for(let $e=0;$e<C;++$e)E[le+$e]+=ve*S[ge+$e];le+=C,ge+=C}}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const f4={kernelName:ji,backendName:"cpu",kernelFunc:hC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,filterShape:h}=r;he([o,a],"depthwiseConv2dNativeBackpropFilter");const d=Dt(o.shape,h,i,l,c,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=new kt(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,v=d.outChannels/d.inChannels,w=n.data.get(o.dataId).values,C=new kt(o.shape,o.dtype,w),N=n.data.get(a.dataId).values,k=new kt(a.shape,a.dtype,N);for(let S=0;S<m;++S){const E=Math.max(0,Math.ceil((x-S)/p)),A=Math.min(d.outHeight,(d.inHeight+x-S)/p);for(let F=0;F<g;++F){const D=Math.max(0,Math.ceil((b-F)/f)),O=Math.min(d.outWidth,(d.inWidth+b-F)/f);for(let B=0;B<d.outChannels;++B){const V=Math.trunc(B/v),z=B%v;let H=0;for(let U=0;U<d.batchSize;++U)for(let K=E;K<A;++K){const X=S+K*p-x;for(let J=D;J<O;++J){const Q=F+J*f-b;H+=C.get(U,X,Q,V)*k.get(U,K,J,B)}}y.set(H,S,F,V,z)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const g4={kernelName:wu,backendName:"cpu",kernelFunc:m4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,inputShape:h}=r;he([o,a],"depthwiseConv2DNativeBackpropInput");const d=ye(o.shape),p=ye(a.shape),f=Dt(h,a.shape,i,l,c,u,!0),m=new kt(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(o.dataId).values,[w,C,N]=d,k=n.data.get(a.dataId).values,[S,E,A]=p,{batchSize:F,filterHeight:D,filterWidth:O,inChannels:B,inHeight:V,inWidth:z,outChannels:H,outHeight:U,outWidth:K,strideHeight:X,strideWidth:J}=f,Q=D-1-f.padInfo.top,ee=O-1-f.padInfo.left,se=H/B;for(let re=0;re<F;++re)for(let ae=0;ae<B;++ae)for(let le=0;le<V;++le){const ge=le-Q,fe=Math.max(0,Math.ceil(ge/X)),ve=Math.min(U,(D+ge)/X);for(let $e=0;$e<z;++$e){const Re=$e-ee,we=Math.max(0,Math.ceil(Re/J)),We=Math.min(K,(O+Re)/J);let Ue=0;for(let Ge=fe;Ge<ve;++Ge){const qe=Ge*X-ge;for(let ot=we;ot<We;++ot){const Qn=ot*J-Re,vt=w*re+C*Ge+N*ot,Pn=S*(D-1-qe)+E*(O-1-Qn)+A*ae;for(let nn=0;nn<se;++nn){const ys=ae*se+nn,Tn=v[vt+ys],Ne=k[Pn+nn];Ue+=Tn*Ne}}}g[y*re+b*le+x*$e+ae]=Ue}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const b4={kernelName:vu,backendName:"cpu",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(s){const{inputs:t,backend:n}=s,{x:r}=t,o=j(r.shape),a=n.data.get(r.dataId).values,i=Ae([o,o],r.dtype),l=i.values;for(let u=0;u<a.length;u++)l[u*o+u]=a[u];const c=[...r.shape,...r.shape];return n.makeTensorInfo(c,i.dtype,i.values)}const w4={kernelName:$u,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={kernelName:qi,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o}=s,{strides:a,pad:i,dilations:l}=n,c=t,u=c.data.get(r.dataId).values,h=r.shape.length,d=c.data.get(o.dataId).values,p=o.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:C,filterHeight:N,filterWidth:k,dilationHeight:S,dilationWidth:E,outShape:A}=Hl(r.shape,o.shape,a,i,"NHWC",l),F=j(A),D=A.length,O=Xt(r.dtype,F);for(let V=0;V<f;++V)for(let z=0;z<b;++z){const H=z*w-v.top;for(let U=0;U<x;++U){const K=U*C-v.left;for(let X=0;X<y;++X){let J=Number.MIN_SAFE_INTEGER;for(let ee=0;ee<N;++ee){const se=H+ee*S;if(se>=0&&se<m)for(let re=0;re<k;++re){const ae=K+re*E;if(ae>=0&&ae<g){const le=ts([V,se,ae,X],h,ye(r.shape)),ge=ts([ee,re,X],p,ye(o.shape)),fe=u[le]+d[ge];fe>J&&(J=fe)}}}const Q=ts([V,z,U,X],D,ye(A));O[Q]=J}}}return{dataId:c.write(cr(O,r.dtype),A,r.dtype),shape:A,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4={kernelName:ku,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o,dy:a}=s,{strides:i,pad:l,dilations:c}=n,u=t,h=En(r.shape,u.data.get(r.dataId).values),d=En(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:C,filterWidth:N,dilationHeight:k,dilationWidth:S,outShape:E}=Hl(r.shape,o.shape,i,l,"NHWC",c);I(a.rank===E.length,()=>`Error in ${ku}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);const A=En(E,u.data.get(a.dataId).values),F=of(o.shape,o.dtype);for(let O=0;O<p;++O)for(let B=0;B<y;++B){const V=B*v-x.top;for(let z=0;z<b;++z){const H=z*w-x.left;for(let U=0;U<g;++U){let K=Number.MIN_SAFE_INTEGER,X=0,J=0;for(let Q=0;Q<C;++Q){const ee=V+Q*k;if(ee>=0&&ee<f)for(let se=0;se<N;++se){const re=H+se*S;if(re>=0&&re<m){const ae=h[O][ee][re][U]+d[Q][se][U];ae>K&&(K=ae,X=Q,J=se)}}}F[X][J][U]+=A[O][B][z][U]}}}return{dataId:u.write(cr(F,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:Cu,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o,dy:a}=s,{strides:i,pad:l,dilations:c}=n,u=t,h=En(r.shape,u.data.get(r.dataId).values),d=En(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:C,filterWidth:N,dilationHeight:k,dilationWidth:S,outShape:E}=Hl(r.shape,o.shape,i,l,"NHWC",c);I(a.rank===E.length,()=>`Error in ${Cu}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);const A=En(E,u.data.get(a.dataId).values),F=of(r.shape,r.dtype);for(let O=0;O<p;++O)for(let B=0;B<y;++B){const V=B*v-x.top;for(let z=0;z<b;++z){const H=z*w-x.left;for(let U=0;U<g;++U){let K=Number.MIN_SAFE_INTEGER,X=V<0?0:V,J=H<0?0:H;for(let Q=0;Q<C;++Q){const ee=V+Q*k;if(ee>=0&&ee<f)for(let se=0;se<N;++se){const re=H+se*S;if(re>=0&&re<m){const ae=h[O][ee][re][U]+d[Q][se][U];ae>K&&(K=ae,X=ee,J=re)}}}F[O][X][J][U]+=A[O][B][z][U]}}}return{dataId:u.write(cr(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;he(o,"sum");let l;o.dtype==="bool"?l=Sr({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):l=As({inputs:{x:o},backend:n});const c=l.shape.length,u=Se(a,l.shape),h=ft(u,c);let d=u,p=l;h!=null&&(p=_n({inputs:{x:l},backend:n,attrs:{perm:h}}),d=yt(d.length,c)),Vt("sum",d,p.shape.length);const[f,m]=Rt(p.shape,d),g=mn(p.dtype,"int32");let y=op(n,f,g);const b=j(m),x=n.data.get(y.dataId).values,v=n.data.get(p.dataId).values;for(let w=0;w<x.length;++w){const C=w*b;let N=0;for(let k=0;k<b;++k)N+=v[C+k];x[w]=N}if(i){const w=pt(y.shape,u),C=y;y=tt({inputs:{x:y},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(C)}return n.disposeIntermediateTensorInfo(l),h!=null&&n.disposeIntermediateTensorInfo(p),y}const k4={kernelName:Il,backendName:"cpu",kernelFunc:Rc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(s){const{inputs:t,backend:n,attrs:r}=s,{equation:o}=r,a=t,{allDims:i,summedDims:l,idDims:c}=Qm(o,a.length);tg(i.length,c,a);const{path:u,steps:h}=ng(l,c),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const y of h[g]){const{permutationIndices:b,expandDims:x}=eg(f,c[y]);let v;sg(b)?v=a[y]:(v=_n({inputs:{x:a[y]},backend:n,attrs:{perm:b}}),m.push(v));const w=v.shape.slice();for(let C=0;C<x.length;++C)w.splice(x[C],0,1);De(v.shape,w)||(v=tt({inputs:{x:v},backend:n,attrs:{shape:w}}),m.push(v)),p===null?p=v:(p=ap({inputs:{a:v,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=Rc({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&n.disposeIntermediateTensorInfo(g);return p}const N4={kernelName:Iu,backendName:"cpu",kernelFunc:I4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(s){const{inputs:t,backend:n}=s,{dy:r,y:o}=t;he([r,o],"eluGrad");const a=new Float32Array(j(o.shape)),i=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values;for(let c=0;c<i.length;++c){const u=i[c];u>=1?a[c]=l[c]:a[c]=l[c]*(u+1)}return n.makeTensorInfo(o.shape,"float32",a)}const T4={kernelName:Nu,backendName:"cpu",kernelFunc:S4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=Hm,A4=jm,D4=qm,R4=Km,F4=Xm,_4=Ym,O4=Ve(Ko,s=>{const t=Math.sign(s),n=Math.abs(s),r=1/(1+E4*n);return t*(1-((((_4*r+F4)*r+R4)*r+D4)*r+A4)*r*Math.exp(-n*n))}),L4={kernelName:Ko,backendName:"cpu",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(s){const{inputs:t,backend:n,attrs:r}=s,{input:o}=t,{dim:a}=r,i=o.shape.length,l=o.shape.slice();let c=a;return a<0&&(I(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+a+1),l.splice(c,0,1),tt({inputs:{x:o},backend:n,attrs:{shape:l}})}const P4={kernelName:Xi,backendName:"cpu",kernelFunc:ip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4=wt((s,t)=>s/t),bb=Ot(jo,M4),xb={kernelName:jo,backendName:"cpu",kernelFunc:bb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(s,t,n){const r=s.shape,o=r[0],a=r[1],i=n.data.get(s.dataId),l=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,u=[o,a],h=j(u),d=Ct("float32",h),p=Ct("float32",h);for(let y=0;y<o;y++){const b=wo({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,a]}}),x=wo({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,a]}}),v=Nn({inputs:{real:b,imag:x},backend:n}),{real:w,imag:C}=z4(v,t,n),N=Ys(w,C);for(let k=0;k<a;k++){const S=Zm(N,k);d[y*a+k]=S.real,p[y*a+k]=S.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v)}const f=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",p),g=Nn({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function z4(s,t,n){const r=j(s.shape),o=n.data.get(s.dataId),a=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(B4(r)){const l=wb(a,i,r,t,n),c=[s.shape[0],s.shape[1]];if(t){const u=n.makeTensorInfo(c,"float32",l.real),h=n.makeTensorInfo(c,"float32",l.imag),d=n.makeTensorInfo([],"float32",zs(r,"float32")),p=As({inputs:{x:d},backend:n}),f=xb.kernelFunc({inputs:{a:u,b:d},backend:n}),m=xb.kernelFunc({inputs:{a:h,b:p},backend:n}),g=n.data.get(f.dataId).values,y=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),{real:g,imag:y}}return l}else{const l=Ys(a,i),c=V4(l,r,t);return Bw(c)}}function B4(s){return(s&s-1)==0}function wb(s,t,n,r,o){if(n===1)return{real:s,imag:t};const a=Ys(s,t),i=n/2,l=Vw(a),c=l.real,u=l.imag,h=[c.length],d=o.makeTensorInfo(h,"float32",c),p=o.makeTensorInfo(h,"float32",u),f=Nn({inputs:{real:d,imag:p},backend:o}),m=Ww(a),g=m.real,y=m.imag,b=[g.length],x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Nn({inputs:{real:x,imag:v},backend:o}),C=wb(c,u,i,r,o),N=C.real,k=C.imag,S=[N.length],E=o.makeTensorInfo(S,"float32",N),A=o.makeTensorInfo(S,"float32",k),F=Nn({inputs:{real:E,imag:A},backend:o}),D=wb(g,y,i,r,o),O=D.real,B=D.imag,V=[O.length],z=o.makeTensorInfo(V,"float32",O),H=o.makeTensorInfo(V,"float32",B),U=Nn({inputs:{real:z,imag:H},backend:o}),K=Gw(n,r),X=[K.real.length],J=o.makeTensorInfo(X,"float32",K.real),Q=o.makeTensorInfo(X,"float32",K.imag),ee=Nn({inputs:{real:J,imag:Q},backend:o}),se=ap({inputs:{a:ee,b:U},backend:o}),re=Ac({inputs:{a:F,b:se},backend:o}),ae=mb({inputs:{a:F,b:se},backend:o}),le=xo({inputs:{input:re},backend:o}),ge=xo({inputs:{input:ae},backend:o}),fe=pi({inputs:{input:re},backend:o}),ve=pi({inputs:{input:ae},backend:o}),$e=fi({inputs:[le,ge],backend:o,attrs:{axis:0}}),Re=fi({inputs:[fe,ve],backend:o,attrs:{axis:0}}),we=o.data.get($e.dataId).values,We=o.data.get(Re.dataId).values;return o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(z),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(re),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Re),{real:we,imag:We}}function V4(s,t,n){const r=new Float32Array(t*2);for(let o=0;o<t;o++){let a=0,i=0;for(let l=0;l<t;l++){const c=Hw(o*l,t,n),u=Zm(s,l);a+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(a/=t,i/=t),Uw(r,a,i,o)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(s){const{inputs:t,backend:n}=s,{input:r}=t,o=j(r.shape),a=r.shape[r.shape.length-1],i=o/a,l=tt({inputs:{x:r},backend:n,attrs:{shape:[i,a]}}),c=dC(l,!1,n),u=tt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),u}const U4={kernelName:Su,backendName:"cpu",kernelFunc:W4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vb(s){const{backend:t,attrs:n}=s,{shape:r,value:o,dtype:a}=n,i=a||Ro(o),l=Xt(i,j(r));return H4(l,o,i),t.makeTensorInfo(r,i,l)}const G4={kernelName:Tu,backendName:"cpu",kernelFunc:vb};function H4(s,t,n){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4={kernelName:Eu,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,o=n,a=Ct(r.dtype,j(r.shape)),[i,l,c,u]=r.shape,h=o.data.get(r.dataId).values;for(let p=0;p<i;p++){const f=p*c*l*u;for(let m=0;m<l;m++){const g=m*(c*u);for(let y=0;y<c;y++){const b=y*u;for(let x=0;x<u;x++){const v=Math.round(c-y-1),w=f+g+b+x;let C=h[w];if(v>=0&&v<c){const N=v*u,k=f+g+N+x;C=h[k]}a[w]=C}}}}return{dataId:o.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4=wt((s,t)=>Math.floor(s/t)),K4=Ot(Jo,q4,null,"int32"),X4={kernelName:Jo,backendName:"cpu",kernelFunc:K4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let g=uC({inputs:{x:o,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(i){const y=g;g=Ac({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(f){const y=g;g=gb(n,g,f,l,m),n.disposeIntermediateTensorInfo(y)}return g}const Z4={kernelName:_l,backendName:"cpu",kernelFunc:Y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let g=hC({inputs:{x:o,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(i){const y=g;g=Ac({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(f){const y=g;g=gb(n,g,f,l,m),n.disposeIntermediateTensorInfo(y)}return g}const Q4={kernelName:Ol,backendName:"cpu",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(s){const{inputs:t,backend:n}=s,{params:r,indices:o}=t,a=j(r.shape),i=o.shape,l=i[i.length-1],[c,u,h,d]=$h(r,o);if(u===0)return n.makeTensorInfo(c,r.dtype,[]);const p=n.data.get(o.dataId).values,f=n.bufferSync(r),m=N$(p,f,r.dtype,u,l,h,d,r.shape,a);return n.makeTensorInfo(c,r.dtype,m.values)}const tU={kernelName:Au,backendName:"cpu",kernelFunc:eU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,indices:a}=t,{axis:i,batchDims:l}=r;he([o,a],"gatherV2");const c=Se(i,o.shape)[0],u=n.data.get(a.dataId).values,h=o.shape[c];for(let w=0;w<u.length;++w){const C=u[w];I(C<=h-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${h-1}]`)}let d=l;l==null&&(d=0);const p=j(a.shape),f=og(o,a,c,d),m=tt({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=tt({inputs:{x:a},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),x=n.bufferSync(m),v=S$(x,b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}const sU={kernelName:Zi,backendName:"cpu",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(s){const{inputs:t,backend:n}=s,{input:r}=t,o=j(r.shape),a=r.shape[r.shape.length-1],i=o/a,l=tt({inputs:{x:r},backend:n,attrs:{shape:[i,a]}}),c=dC(l,!0,n),u=tt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),u}const oU={kernelName:Du,backendName:"cpu",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU=Ve(ta,s=>Number.isFinite(s)?1:0,"bool"),iU={kernelName:ta,backendName:"cpu",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=Ve(na,s=>Math.abs(s)===1/0?1:0,"bool"),cU={kernelName:na,backendName:"cpu",kernelFunc:lU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU=Ve(sa,s=>Number.isNaN(s)?1:0,"bool"),hU={kernelName:sa,backendName:"cpu",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(s){const{backend:t,attrs:n}=s,{start:r,stop:o,num:a}=n,i=R$(r,o,a);return t.makeTensorInfo([i.length],"float32",i)}const pU={kernelName:Fu,backendName:"cpu",kernelFunc:dU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=Ve(oa,s=>Math.log1p(s)),mU={kernelName:oa,backendName:"cpu",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=wt((s,t)=>s&&t),yU=Ot(nl,gU,null,"bool"),bU={kernelName:nl,backendName:"cpu",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=Ve(sl,s=>s?0:1,"bool"),wU={kernelName:sl,backendName:"cpu",kernelFunc:xU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU=wt((s,t)=>s||t),$U=Ot(rl,vU,null,"bool"),CU={kernelName:rl,backendName:"cpu",kernelFunc:$U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{depthRadius:a,bias:i,alpha:l,beta:c}=r;he(o,"LRN");const u=o.shape[3],h=u-1,d=n.data.get(o.dataId).values,p=j(o.shape),f=new Float32Array(p);function m(g){const y=g%u;let b=g-y+Math.max(0,y-a);const x=g-y+Math.min(y+a,h);let v=0;for(;b<=x;b++){const w=d[b];v+=w*w}return v}for(let g=0;g<p;g++){const y=m(g),b=d[g]*Math.pow(i+l*y,-c);f[g]=b}return n.makeTensorInfo(o.shape,o.dtype,f)}const IU={kernelName:ol,backendName:"cpu",kernelFunc:kU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,y:a,dy:i}=t,{depthRadius:l,bias:c,alpha:u,beta:h}=r;he(i,"LRNGrad");const d=j(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(o.dataId).values,g=n.data.get(a.dataId).values,y=new Float32Array(d),b=d;for(let x=0;x<b;x++){const v=x%p,w=x-v+Math.max(0,v-l),C=x-v+Math.min(p,v+l+1);let N=0;for(let k=w;k<C;k++)N+=Math.pow(m[k],2);N=u*N+c;for(let k=w;k<C;k++){let S=-2*u*h*m[k]*g[x]/N;x===k&&(S+=Math.pow(N,-h)),S*=f[x],y[k]+=S}}return n.makeTensorInfo(i.shape,o.dtype,y)}const SU={kernelName:_u,backendName:"cpu",kernelFunc:NU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reductionIndices:a,keepDims:i}=r,l=n;let c=o.shape;const u=c.length,h=Se(a,c);let d=h;const p=ft(d,u);let f=l.data.get(o.dataId).values;if(p!=null){const w=new Array(u);for(let C=0;C<w.length;C++)w[C]=c[p[C]];f=pb(f,c,o.dtype,p,w),d=yt(d.length,u),c=w}he(o,"max"),Vt("max",d,u);const[m,g]=Rt(c,d),y=j(g),b=_$(f,y,m,o.dtype),x=l.write(b,m,o.dtype);let v=m;return i&&(v=pt(m,h)),{dataId:x,shape:v,dtype:o.dtype}}const TU={kernelName:al,backendName:"cpu",kernelFunc:pC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;he(o,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;I(Bt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Un(o.shape,a,i,u,l,c);let d;if(h.filterWidth===1&&h.filterHeight===1&&De(h.inShape,h.outShape))d=As({inputs:{x:o},backend:n});else{const p=n.data.get(o.dataId).values,f=ye(o.shape),m=yb(p,o.shape,o.dtype,f,h,"max");d=n.makeTensorInfo(h.outShape,o.dtype,m.values)}return d}const AU={kernelName:il,backendName:"cpu",kernelFunc:EU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r;he(o,"maxPool3d");const h=Us(o.shape,a,i,1,l,c,u),d=n.data.get(o.dataId).values,p=cC(d,o.shape,o.dtype,ye(o.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}const RU={kernelName:ll,backendName:"cpu",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r;he([o,a],"maxPool3DGrad");const h=Us(a.shape,i,l,1,c,u),d=n.bufferSync(a),p=$W(d,h),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterDepth,w=h.effectiveFilterHeight,C=h.effectiveFilterWidth,N=v-1-h.padInfo.front,k=C-1-h.padInfo.left,S=w-1-h.padInfo.top,E=Ae(a.shape,"float32"),A=n.bufferSync(o);for(let F=0;F<h.batchSize;++F)for(let D=0;D<h.inChannels;++D)for(let O=0;O<h.inDepth;++O)for(let B=0;B<h.inHeight;++B)for(let V=0;V<h.inWidth;++V){const z=O-N,H=B-S,U=V-k;let K=0;for(let X=0;X<v;X+=y){const J=(z+X)/f;if(!(J<0||J>=h.outDepth||Math.floor(J)!==J))for(let Q=0;Q<w;Q+=b){const ee=(H+Q)/m;if(!(ee<0||ee>=h.outHeight||Math.floor(ee)!==ee))for(let se=0;se<C;se+=x){const re=(U+se)/g;if(re<0||re>=h.outWidth||Math.floor(re)!==re)continue;const ae=v*w*C-1-p.get(F,J,ee,re,D),le=X*w*C+Q*C+se,ge=ae===le?1:0;if(ge===0)continue;K+=A.get(F,J,ee,re,D)*ge}}}E.set(K,F,O,B,V,D)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const _U={kernelName:Lu,backendName:"cpu",kernelFunc:FU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a,output:i}=t,l=a;he([a,i],"maxPoolGrad");const{filterSize:c,strides:u,pad:h,dimRoundingMode:d}=r,p=Un(l.shape,c,u,1,h,d),f=n.data.get(l.dataId).values,m=Ae(p.outShape,l.dtype,lC(f,l.shape,l.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,C=w-1-p.padInfo.left,N=v-1-p.padInfo.top,k=Ae(l.shape,"float32"),S=n.data.get(o.dataId).values,E=Ae(o.shape,"float32",S);for(let A=0;A<p.batchSize;++A)for(let F=0;F<p.inChannels;++F)for(let D=0;D<p.inHeight;++D)for(let O=0;O<p.inWidth;++O){const B=D-N,V=O-C;let z=0;for(let H=0;H<v;H+=b){const U=(B+H)/g;if(!(U<0||U>=p.outHeight||Math.floor(U)!==U))for(let K=0;K<w;K+=x){const X=(V+K)/y;if(X<0||X>=p.outWidth||Math.floor(X)!==X)continue;const J=v*w-1-m.get(A,U,X,F),Q=H*w+K,ee=J===Q?1:0;if(ee===0)continue;z+=E.get(A,U,X,F)*ee}}k.set(z,A,D,O,F)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const LU={kernelName:Ou,backendName:"cpu",kernelFunc:OU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(s,t,n,r,o){const a=ye(t),i=yb(s,t,n,a,o,"max"),l=lC(s,t,n,o,!0,r);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU={kernelName:Pu,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{filterSize:o,strides:a,pad:i,includeBatchInIndex:l}=t,c=n;he(r,"MaxPoolWithArgmax");const u=c.data.get(r.dataId).values,h=Un(r.shape,o,a,[1,1],i),[d,p]=PU(u,r.shape,r.dtype,l,h),f=c.write(d,h.outShape,r.dtype),m=c.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=Se(a,o.shape),u=Rt(o.shape,l)[1],h=j(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([h]));d.push(p);const f=Sr({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});d.push(f);const m=bb({inputs:{a:f,b:p},backend:n});d.push(m);const g=Rc({inputs:{x:m},backend:n,attrs:{axis:a,keepDims:i}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}const BU={kernelName:cl,backendName:"cpu",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;he(o,"min");const l=Se(a,o.shape);let c=l;const u=ft(c,o.shape.length);let h=o;u!=null&&(h=_n({inputs:{x:o},backend:n,attrs:{perm:u}}),c=yt(c.length,o.shape.length)),Vt("min",c,h.shape.length);const[d,p]=Rt(h.shape,c),f=j(p),m=Mt(j(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let v=g[x];for(let w=0;w<f;++w){const C=g[x+w];(Number.isNaN(C)||C<v)&&(v=C)}m[b]=v}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=pt(d,l),x=tt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const WU={kernelName:ul,backendName:"cpu",kernelFunc:VU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,mode:i}=r;he(o,"mirrorPad");const l=a.map((v,w)=>v[0]+o.shape[w]+v[1]),c=a.map(v=>v[0]),u=a.map((v,w)=>v[0]+o.shape[w]),h=i==="reflect"?0:1,d=n.data.get(o.dataId).values,p=o.shape.length,f=ye(o.shape),m=j(l),g=l.length,y=ye(l),b=Ct(o.dtype,m);for(let v=0;v<m;v++){let w=Fo(v,g,y);for(let N=0;N<g;N++)w[N]<c[N]?w[N]=c[N]*2-w[N]-h:w[N]>=u[N]&&(w[N]=(u[N]-1)*2-w[N]+h);w=w.map((N,k)=>N-c[k]);const C=ts(w,p,f);b[v]=d[C]}return{dataId:n.write(b,l,o.dtype),shape:l,dtype:o.dtype}}const GU={kernelName:hl,backendName:"cpu",kernelFunc:UU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU=wt((s,t)=>{const n=s%t;return s<0&&t<0||s>=0&&t>=0?n:(n+t)%t}),jU=Ot(la,HU),qU={kernelName:la,backendName:"cpu",kernelFunc:jU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{dim:a}=r,i=o.shape.length;let l=a;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const c=Se([l],o.shape),u=pC({inputs:{x:o},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),h=pt(u.shape,c),d=tt({inputs:{x:u},backend:n,attrs:{shape:h}}),p=mb({inputs:{a:o,b:d},backend:n}),f=C$({inputs:{x:p},backend:n}),m=Rc({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),g=tt({inputs:{x:m},backend:n,attrs:{shape:h}}),y=bb({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const KU={kernelName:Tl,backendName:"cpu",kernelFunc:fC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{numSamples:a,seed:i,normalized:l}=r;he(o,"multinomial");const c=l?o:fC({inputs:{logits:o},backend:n,attrs:{dim:-1}}),u=c.shape[0],h=c.shape[1],d=n.data.get(c.dataId).values,p=[u,a],f=Mt(j(p),"int32");for(let m=0;m<u;++m){const g=m*h,y=new Float32Array(h-1);y[0]=d[g];for(let v=1;v<y.length;++v)y[v]=y[v-1]+d[g+v];const b=Ka.alea(i.toString()),x=m*a;for(let v=0;v<a;++v){const w=b();f[x+v]=y.length;for(let C=0;C<y.length;C++)if(w<y[C]){f[x+v]=C;break}}}return l||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",f)}const YU={kernelName:Mu,backendName:"cpu",kernelFunc:XU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU=od;function JU(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=r;he(o,"NonMaxSuppression");const u=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d}=ZU(u,h,i,l,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const QU={kernelName:zu,backendName:"cpu",kernelFunc:JU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=ad;function tG(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,padToMaxOutputSize:u}=r;he(o,"NonMaxSuppressionPadded");const h=n.data.get(o.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:f}=eG(h,d,i,l,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const nG={kernelName:Bu,backendName:"cpu",kernelFunc:tG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sG=id;function rG(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=r;he(o,"NonMaxSuppressionWithScore");const h=n.data.get(o.dataId).values,d=n.data.get(a.dataId).values,p=i,f=l,m=c,g=u,{selectedIndices:y,selectedScores:b}=sG(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const oG={kernelName:Vu,backendName:"cpu",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o}=t,{depth:a,onValue:i,offValue:l}=r;he(o,"oneHot");const c=j(o.shape),u=new Float32Array(c*a);u.fill(l);const h=n.data.get(o.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<a&&(u[d*a+h[d]]=i);return n.makeTensorInfo([...o.shape,a],"int32",u)}const iG={kernelName:ml,backendName:"cpu",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const o=xo({inputs:{input:r},backend:n}),a=lp({inputs:{x:o},backend:n}),i=pi({inputs:{input:r},backend:n}),l=lp({inputs:{x:i},backend:n}),c=Nn({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return vb({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const lG={kernelName:Rl,backendName:"cpu",kernelFunc:lp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const o=xo({inputs:{input:r},backend:n}),a=mC({inputs:{x:o},backend:n}),i=pi({inputs:{input:r},backend:n}),l=lp({inputs:{x:i},backend:n}),c=Nn({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return vb({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const cG={kernelName:fl,backendName:"cpu",kernelFunc:mC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r;if(t.length===1)return ip({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const a=t[0].shape,i=t[0].dtype;t.forEach(h=>{Lt(a,h.shape,"All tensors passed to stack must have matching shapes"),I(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=t.map(h=>{const d=ip({inputs:{input:h},backend:n,attrs:{dim:o}});return l.push(d),d}),u=fi({inputs:c,backend:n,attrs:{axis:o}});return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const uG={kernelName:gl,backendName:"cpu",kernelFunc:gC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,constantValue:i}=r;he(o,"pad");const l=a.map((x,v)=>x[0]+o.shape[v]+x[1]),c=a.map(x=>x[0]),u=n.data.get(o.dataId).values,h=j(o.shape),d=o.shape.length,p=ye(o.shape),f=j(l),m=l.length,g=ye(l),y=Ct(o.dtype,f);i!==0&&y.fill(i);for(let x=0;x<h;x++){const w=Fo(x,d,p).map((N,k)=>N+c[k]),C=ts(w,m,g);y[C]=u[x]}return{dataId:n.write(y,l,o.dtype),shape:l,dtype:o.dtype}}const yC={kernelName:yl,backendName:"cpu",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG=wt((s,t)=>Math.pow(s,t)),pG=Ot(ua,dG),fG={kernelName:ua,backendName:"cpu",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(s){const{backend:t,attrs:n}=s,{start:r,stop:o,dtype:a,step:i}=n,l=B$(r,o,i,a);return t.makeTensorInfo([l.length],a,l)}const gG={kernelName:Uu,backendName:"cpu",kernelFunc:mG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG=Ve(ha,s=>1/s),bG={kernelName:ha,backendName:"cpu",kernelFunc:yG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r;he(o,"resizeBilinear");const c=ye(o.shape),[u,h]=l,[d,p,f,m]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(j([d,u,h,m])),b=[a&&u>1?p-1:p,a&&h>1?f-1:f],x=[a&&u>1?u-1:u,a&&h>1?h-1:h];let v=0;const w=b[0]/x[0],C=b[1]/x[1];for(let N=0;N<d;N++)for(let k=0;k<u;k++){let S;i?S=w*(k+.5)-.5:S=w*k;const E=Math.max(0,Math.floor(S)),A=S-E,F=Math.min(p-1,Math.ceil(S)),D=N*c[0]+E*c[1],O=N*c[0]+F*c[1];for(let B=0;B<h;B++){let V;i?V=C*(B+.5)-.5:V=C*B;const z=Math.max(0,Math.floor(V)),H=V-z,U=Math.min(f-1,Math.ceil(V)),K=D+z*c[2],X=O+z*c[2],J=D+U*c[2],Q=O+U*c[2];for(let ee=0;ee<m;ee++){const se=g[K+ee],re=g[X+ee],ae=g[J+ee],le=g[Q+ee],ge=se+(ae-se)*H,fe=re+(le-re)*H,ve=ge+(fe-ge)*A;y[v++]=ve}}}return n.makeTensorInfo([d,u,h,m],"float32",y)}const wG={kernelName:vl,backendName:"cpu",kernelFunc:xG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r;he([a,o],"resizeBilinearGrad");const l=ye(o.shape),[c,u,h,d]=o.shape,[,p,f]=a.shape,m=new Float32Array(c*u*h*d),g=[i&&p>1?u-1:u,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(a.dataId).values;let w=0;for(let C=0;C<c;C++){const N=C*l[0];for(let k=0;k<p;k++){const S=k*b,E=Math.floor(S),A=Math.min(Math.ceil(S),u-1),F=N+E*l[1],D=N+A*l[1],O=S-E,B=1-O;for(let V=0;V<f;V++){const z=V*x,H=Math.floor(z),U=Math.min(Math.ceil(z),h-1),K=z-H,X=1-K,J=F+H*l[2],Q=F+U*l[2],ee=D+H*l[2],se=D+U*l[2],re=B*X,ae=B*K,le=O*X,ge=O*K;for(let fe=0;fe<d;fe++){const ve=v[w++];m[J+fe]+=ve*re,m[Q+fe]+=ve*ae,m[ee+fe]+=ve*le,m[se+fe]+=ve*ge}}}}return n.makeTensorInfo([c,h,u,d],"float32",m)}const $G={kernelName:ju,backendName:"cpu",kernelFunc:vG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r;he(o,"resizeNearestNeighbor");const c=ye(o.shape),[u,h]=l,[d,p,f,m]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(d*u*h*m),b=[a&&u>1?p-1:p,a&&h>1?f-1:f],x=[a&&u>1?u-1:u,a&&h>1?h-1:h],v=b[0]/x[0],w=b[1]/x[1];let C=0;for(let N=0;N<d;N++){const k=N*c[0];for(let S=0;S<u;S++){const E=i?v*(S+.5):v*S;let A=Math.min(p-1,a?Math.round(E):Math.floor(E));i&&(A=Math.max(0,A));const F=k+A*c[1];for(let D=0;D<h;D++){const O=i?w*(D+.5):w*D;let B=Math.min(f-1,a?Math.round(O):Math.floor(O));i&&(B=Math.max(0,B));const V=F+B*c[2];for(let z=0;z<m;z++){const H=g[V+z];y[C++]=H}}}}return n.makeTensorInfo([d,u,h,m],o.dtype,y)}const kG={kernelName:wl,backendName:"cpu",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r;he([a,o],"resizeNearestNeighborGrad");const l=ye(o.shape),c=ye(a.shape),[u,h,d,p]=o.shape,[,f,m]=a.shape,g=new Float32Array(u*h*d*p),y=n.data.get(a.dataId).values,b=[i&&f>1?h-1:h,i&&m>1?d-1:d],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],C=1/v,N=1/w,k=Math.ceil(C)*2+2,S=Math.ceil(N)*2+2;for(let E=0;E<u;E++){const A=E*l[0];for(let F=0;F<h;F++){const D=A+F*l[1],O=Math.floor(F*C),B=Math.floor(O-k/2);for(let V=0;V<d;V++){const z=D+V*l[2],H=Math.floor(V*N),U=Math.floor(H-S/2);for(let K=0;K<p;K++){let X=0;for(let J=0;J<k;J++){const Q=J+B;if(Q<0||Q>=f)continue;const ee=A+Q*c[1],se=Q*v,re=Math.min(h-1,i?Math.round(se):Math.floor(se));if(F===re)for(let ae=0;ae<S;ae++){const le=ae+U;if(le<0||le>=m)continue;const ge=ee+le*c[2],fe=le*w,ve=Math.min(d-1,i?Math.round(fe):Math.floor(fe));V===ve&&(X+=y[ge+K])}}g[z+K]=X}}}}return n.makeTensorInfo(o.shape,o.dtype,g)}const NG={kernelName:Hu,backendName:"cpu",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dims:a}=r;he(o,"reverse");const i=o.shape.length,l=Se(a,o.shape);if(i===0)return As({inputs:{x:o},backend:n});const c=new kt(o.shape,o.dtype),u=n.bufferSync(o);for(let h=0;h<c.size;h++){const d=c.indexToLoc(h),p=d.slice();l.forEach(f=>p[f]=o.shape[f]-1-p[f]),c.set(u.get(...p),...d)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}const TG={kernelName:$l,backendName:"cpu",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG={kernelName:lh,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,{radians:o,fillValue:a,center:i}=t,l=n,c=Ct(r.dtype,j(r.shape)),[u,h,d,p]=r.shape,[f,m]=Wm(i,h,d),g=255,y=Math.sin(o),b=Math.cos(o),x=l.data.get(r.dataId).values;for(let w=0;w<u;w++){const C=w*d*h*p;for(let N=0;N<h;N++){const k=N*(d*p);for(let S=0;S<d;S++){const E=S*p;for(let A=0;A<p;A++){const F=[u,N,S,A],D=F[2],O=F[1];let B=(D-f)*b-(O-m)*y,V=(D-f)*y+(O-m)*b;B=Math.round(B+f),V=Math.round(V+m);let z=a;if(typeof a!="number"&&(A===3?z=g:z=a[A]),B>=0&&B<d&&V>=0&&V<h){const U=V*(d*p),K=B*p,X=C+U+K+A;z=x[X]}const H=C+k+E+A;c[H]=z}}}}return{dataId:l.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=Ve(fa,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2==0?t:t+1}),DG={kernelName:fa,backendName:"cpu",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(s,t,n,r,o,a,i,l,c,u){const h=[r/o,o],d=s.values,p=t.values;if(r===0)return Ae(n,t.dtype);const f=Ae(h,t.dtype);f.values.fill(c);for(let m=0;m<a;m++){const g=[];let y=0;for(let b=0;b<i;b++){const x=d[m*i+b];g.push(x),y+=x*l[b]}if(y<0||y>=r/o)throw new Error(`Invalid indices: ${g} does not index into ${n}`);for(let b=0;b<o;b++)u?f.values[y*o+b]+=p[m*o+b]:f.values[y*o+b]=t.rank===0?p[0]:p[m*o+b]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o,updates:a}=t,{shape:i}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Ma(a,o,i),p=!0,f=n.bufferSync(o),m=n.bufferSync(a),g=bC(f,m,i,d,u,c,l,h,0,p);return n.makeTensorInfo(i,g.dtype,g.values)}const FG={kernelName:qu,backendName:"cpu",kernelFunc:RG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(s){const{inputs:t,backend:n}=s,{condition:r,t:o,e:a}=t;he([r,o,a],"select");const i=r.shape.length,l=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=mn(o.dtype,a.dtype),d=Mt(j(o.shape),h);let p=0;const f=i===0||i>1||o.shape.length===1?1:j(o.shape.slice(1));for(let m=0;m<l.length;m++)for(let g=0;g<f;g++)l[m]===1?d[p++]=c[m]:d[p++]=u[m];return n.makeTensorInfo(o.shape,h,d)}const OG={kernelName:Cl,backendName:"cpu",kernelFunc:_G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=gd,PG=yd,MG=Ve(ga,s=>s>=0?PG*s:LG*(Math.exp(s)-1)),zG={kernelName:ga,backendName:"cpu",kernelFunc:MG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG=Ve(xa,s=>s<0?-1:s>0?1:0),VG={kernelName:xa,backendName:"cpu",kernelFunc:BG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG=Ve(ya,s=>Math.sin(s)),UG={kernelName:ya,backendName:"cpu",kernelFunc:WG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=Ve(ba,s=>Math.sinh(s)),HG={kernelName:ba,backendName:"cpu",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=11920928955078125e-23,xC=Math.log(jG)+2,qG=Ve(va,s=>{const t=s>-xC,n=s<xC,r=Math.exp(s);let o;return n?o=r:t?o=s:o=Math.log(1+r),o}),KG={kernelName:va,backendName:"cpu",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,paddings:i}=r;he([o],"spaceToBatchND");const l=j(a),c=[[0,0]];c.push(...i);for(let N=1+a.length;N<o.shape.length;++N)c.push([0,0]);const u=yC.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),h=cc(u.shape,a,l,!1),d=uc(h.length,a.length,!1),p=hc(u.shape,a,l,!1),g=tt({inputs:{x:u},backend:n,attrs:{shape:h}}),x=_n({inputs:{x:g},backend:n,attrs:{perm:d}}),C=tt({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),C}const YG={kernelName:Nl,backendName:"cpu",kernelFunc:XG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s){const{inputs:t,backend:n}=s,{indices:r,values:o,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values[0],[d,p,f,m,g]=G$(l,r.shape,r.dtype,c,o.dtype,u,h);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],o.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const JG={kernelName:Ku,backendName:"cpu",kernelFunc:ZG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(s){const{inputs:t,backend:n}=s,{inputIndices:r,inputShape:o,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(o.dataId).values),l=n.data.get(r.dataId).values,c=Array.from(n.data.get(a.dataId).values),[u,h,d]=H$(l,r.shape,r.dtype,i,c);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const eH={kernelName:Xu,backendName:"cpu",kernelFunc:QG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[u,h]=fb(i,r.shape,r.dtype,l,c,!0);return n.makeTensorInfo(h,r.dtype,u)}const nH={kernelName:Yu,backendName:"cpu",kernelFunc:tH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[u,h]=fb(i,r.shape,r.dtype,l,c);return n.makeTensorInfo(h,r.dtype,u)}const rH={kernelName:Zu,backendName:"cpu",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s){const{inputs:t,backend:n,attrs:r}=s,{sparseIndices:o,sparseValues:a,defaultValue:i}=t,{outputShape:l}=r,{sliceRank:c,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=Ma(a,o,l),f=!1,m=n.bufferSync(o),g=n.bufferSync(a),y=n.data.get(i.dataId).values[0],b=bC(m,g,l,p,h,u,c,d,y,f);return n.makeTensorInfo(l,b.dtype,b.values)}const aH={kernelName:Ju,backendName:"cpu",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{numOrSizeSplits:a,axis:i}=r,l=Se(i,o.shape)[0],c=rg(o,a,l),u=new Array(o.shape.length).fill(0),h=o.shape.slice();return c.map(d=>{const p=[...h];p[l]=d;const f=wo({inputs:{x:o},backend:n,attrs:{begin:u,size:p}});return u[l]+=d,f})}const lH={kernelName:Sl,backendName:"cpu",kernelFunc:iH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH={kernelName:Qu,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:n}=s,r=t;he(n,"square");const o=r.data.get(n.dataId).values,a=new Float32Array(o.length);for(let l=0;l<o.length;++l){const c=o[l];a[l]=c*c}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=Ve(Ta,(s,t)=>{const n=t;return isNaN(s)?NaN:s>0?1:n.alpha}),hH={kernelName:Ta,backendName:"cpu",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,end:i,strides:l,beginMask:c,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r;he(o,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=jf(o.shape,a,i,l,c,u,h,d,p),v=tt({inputs:{x:o},backend:n,attrs:{shape:b}});let w;if(f){const N=wo({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=tt({inputs:{x:N},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(N)}else if(x.some(N=>N===0))w=n.makeTensorInfo(x,o.dtype,[]);else{const N=n.bufferSync(v),k=q$(x,N,g,m);w=n.makeTensorInfo(k.shape,k.dtype,k.values)}const C=tt({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),C}const pH={kernelName:eh,backendName:"cpu",kernelFunc:dH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(s){const{inputs:t,backend:n,attrs:r}=s,{separator:o,nGramWidths:a,leftPad:i,rightPad:l,padWidth:c,preserveShortSequences:u}=r,{data:h,dataSplits:d}=t,p=n.data.get(h.dataId).values,f=n.data.get(d.dataId).values,[m,g]=K$(p,f,o,a,i,l,c,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",g)]}const mH={kernelName:th,backendName:"cpu",kernelFunc:fH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(s){const{inputs:t,backend:n,attrs:r}=s,{skipEmpty:o}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[u,h,d]=X$(l,c,o),p=h.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const yH={kernelName:nh,backendName:"cpu",kernelFunc:gH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s){const{inputs:t,backend:n,attrs:r}=s,{numBuckets:o}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(a.dataId).values,l=Y$(i,o);return n.makeTensorInfo(a.shape,"int32",l)}const xH={kernelName:sh,backendName:"cpu",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=Ve(Ia,s=>Math.tan(s)),vH={kernelName:Ia,backendName:"cpu",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=Ve(Na,s=>Math.tanh(s)),CH={kernelName:Na,backendName:"cpu",kernelFunc:$H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reps:a}=r;he(o,"tile");const i=J$(n.bufferSync(o),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const IH={kernelName:Sa,backendName:"cpu",kernelFunc:kH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{k:a,sorted:i}=r;he(o,"topk");const l=n.data.get(o.dataId).values,[c,u]=eC(l,o.shape,o.dtype,a,i);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const SH={kernelName:rh,backendName:"cpu",kernelFunc:NH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s){const{inputs:t,attrs:n,backend:r}=s,{image:o,transforms:a}=t,{interpolation:i,fillMode:l,fillValue:c,outputShape:u}=n,[h,d,p,f]=o.shape,[m,g]=u!=null?u:[d,p],y=[h,m,g,f],b=ye(o.shape),x=b[0],v=b[1],w=b[2],C=Ct(o.dtype,j(y));C.fill(c);const N=r.data.get(o.dataId).values,k=r.data.get(a.dataId).values;for(let E=0;E<h;++E){const A=a.shape[0]===1?k:k.subarray(E*8,E*8+8);for(let F=0;F<m;++F)for(let D=0;D<g;++D)for(let O=0;O<f;++O){let B;const V=A[6]*D+A[7]*F+1;if(V===0)continue;const z=(A[0]*D+A[1]*F+A[2])/V,H=(A[3]*D+A[4]*F+A[5])/V,U=wC(z,p,l),K=wC(H,d,l);switch(i){case"nearest":B=_H(N,d,p,x,v,w,E,K,U,O,c);break;case"bilinear":B=OH(N,d,p,x,v,w,E,K,U,O,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const X=E*x+F*v+D*w+O;C[X]=B}return r.makeTensorInfo(y,o.dtype,C)}return{dataId:r.write(C,y,o.dtype),shape:o.shape,dtype:o.dtype}}const EH={kernelName:oh,backendName:"cpu",kernelFunc:TH};function wC(s,t,n){switch(n){case"reflect":return AH(s,t);case"wrap":return DH(s,t);case"nearest":return FH(s,t);case"constant":default:return RH(s)}}function AH(s,t){let n=s;if(n<0)if(t<=1)n=0;else{const r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{const r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return ar(0,n,t-1)}function DH(s,t){let n=s;if(n<0)if(t<=1)n=0;else{const r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{const r=t-1;n-=t*Math.trunc(n/r)}return ar(0,n,t-1)}function RH(s,t){return s}function FH(s,t){return ar(0,s,t-1)}function Fc(s,t,n,r,o,a,i,l,c,u,h){const d=i*r+l*o+c*a+u;return 0<=l&&l<t&&0<=c&&c<n?s[d]:h}function _H(s,t,n,r,o,a,i,l,c,u,h){const d=Math.round(l),p=Math.round(c);return Fc(s,t,n,r,o,a,i,d,p,u,h)}function OH(s,t,n,r,o,a,i,l,c,u,h){const d=Math.floor(l),p=Math.floor(c),f=d+1,m=p+1,g=(m-c)*Fc(s,t,n,r,o,a,i,d,p,u,h)+(c-p)*Fc(s,t,n,r,o,a,i,d,m,u,h),y=(m-c)*Fc(s,t,n,r,o,a,i,f,p,u,h)+(c-p)*Fc(s,t,n,r,o,a,i,f,m,u,h);return(f-l)*g+(l-d)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s){const{inputs:t,attrs:n,backend:r}=s,{axis:o}=n,{x:a}=t;he(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:l,outputShape:c,indices:u}=tC(i,o,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,l),r.makeTensorInfo([u.length],"int32",u)]}const PH={kernelName:ah,backendName:"cpu",kernelFunc:LH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(s){const{inputs:t,backend:n,attrs:r}=s,{value:o}=t;let{axis:a}=r;a<0&&(a+=o.shape.length);const i=o.shape.length,l=o.shape[a],c=new Array(i-1);let u=0;for(let f=0;f<i;f++)f!==a&&(c[u++]=o.shape[f]);const h=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const p=new Array(l);for(let f=0;f<p.length;f++){h[a]=f;const m=wo({inputs:{x:o},backend:n,attrs:{begin:h,size:d}});p[f]=tt({inputs:{x:m},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m)}return p}const zH={kernelName:Al,backendName:"cpu",kernelFunc:MH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,segmentIds:a}=t,{numSegments:i}=r;he(o,"unsortedSegmentSum");const l=o.shape.length,c=a.shape.length,u=[],h=[],d=l-c;let p=a;for(let m=0;m<d;++m){const g=ip({inputs:{input:p},backend:n,attrs:{dim:m+1}});p=g,h.push(g)}for(let m=0;m<i;++m){const g=zs(m,"int32"),y=n.makeTensorInfo([],"int32",g),b=v$({inputs:{a:y,b:p},backend:n}),x=Sr({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=ap({inputs:{a:x,b:o},backend:n}),w=Rc({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});u.push(w),h.push(y),h.push(b),h.push(x),h.push(v),h.push(w)}const f=gC({inputs:u,backend:n,attrs:{axis:0}});return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const VH={kernelName:Dl,backendName:"cpu",kernelFunc:BH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH=[YV,VB,JV,eW,qB,nW,rW,aW,lW,uW,dW,fW,gW,xW,vW,kW,NW,TW,AW,KV,RW,_W,LW,MW,HB,XB,BW,WB,WW,GW,qW,XW,HW,QW,t4,ZW,s4,o4,i4,c4,h4,p4,f4,g4,b4,w4,v4,C4,$4,xb,N4,VV,T4,YB,L4,ZB,P4,QB,U4,G4,j4,tV,X4,Z4,Q4,tU,sU,sV,oV,UB,oU,UW,iU,cU,hU,WV,iV,cV,pU,hV,mU,bU,wU,CU,IU,SU,pV,AU,RU,_U,LU,MU,TU,BU,WU,mV,GU,qU,YU,yV,xV,QU,nG,oG,vV,iG,cG,uG,yC,fG,GV,kV,gG,GB,bG,HV,jV,qV,wG,$G,kG,NG,TG,EG,DG,NV,FG,OG,zG,TV,VG,UG,HG,EV,KU,KG,YG,JG,eH,nH,rH,aH,lH,RV,cH,_V,hH,pH,mH,yH,xH,MV,k4,vH,CH,IH,SH,$V,EH,PH,zH,VH,lG];for(const s of WH)hh(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo={},$b={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function UH(s,t){vo[s]=t}function Ds(s){if(!(s in vo)){const n=HH(s);if(n!==null)vo[s]=n;else return console.log("Could not get context for WebGL version",s),null}const t=vo[s];return t.isContextLost()?(delete vo[s],Ds(s)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),vo[s])}function GH(s){if(typeof OffscreenCanvas!="undefined"&&s===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function HH(s){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=GH(s);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete vo[s]},!1),s===1?t.getContext("webgl",$b)||t.getContext("experimental-webgl",$b):t.getContext("webgl2",$b)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _c;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(_c||(_c={}));var On;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(On||(On={}));var Gt;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Gt||(Gt={}));function Oc(s,t){return[t,s]}function jH(s,t){return s*t}function cp(s){const t=j(s),n=Math.ceil(t/4);return su(n)}function mi(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function qH(s,t){const[n,r]=mi(s,t);return n*r*4}function Cb(s,t){const n=s;let r,o,a,i,l,c,u,h,d,p;return q().getNumber("WEBGL_VERSION")===2?(r=n.R32F,o=n.R16F,a=n.RGBA16F,i=n.RGBA32F,l=n.RED,u=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=s.RGBA,o=s.RGBA,a=s.RGBA,i=n.RGBA,l=s.RGBA,u=4,h=4,d=t!=null?t.HALF_FLOAT_OES:null,p=s.FLOAT),c=s.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(s,t){const n=t();return q().getBool("DEBUG")&&KH(s),n}function KH(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+JH(s,t))}const XH=596e-10,YH=65504;function ZH(s){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||XH<Math.abs(s)&&Math.abs(s)<YH)}function JH(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function up(s,t){return tr(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function QH(s,t){const n=tr(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(s,()=>s.shaderSource(n,t)),pe(s,()=>s.compileShader(n)),s.getShaderParameter(n,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function ej(s,t){const n=tr(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(s,()=>s.shaderSource(n,t)),pe(s,()=>s.compileShader(n)),s.getShaderParameter(n,s.COMPILE_STATUS)===!1)throw nj(t,s.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const tj=/ERROR: [0-9]+:([0-9]+):/g;function nj(s,t){const n=tj.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const r=+n[1],o=s.split(`
`),a=o.length.toString().length+2,i=o.map((d,p)=>Mr((p+1).toString(),a)+d);let l=0;for(let d=0;d<i.length;d++)l=Math.max(i[d].length,l);const c=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(c.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Mr(u[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function sj(s){return tr(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function rj(s,t){if(pe(s,()=>s.linkProgram(t)),s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function kb(s,t){if(pe(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function oj(s,t){const n=tr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return pe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),pe(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),n}function aj(s,t){const n=tr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return pe(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,n)),pe(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),n}function ij(s){return tr(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function lj(s,t){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const r=`[${s}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(s>n||t>n){const r=`[${s}x${t}]`,o=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+o+".")}}function cj(s){return tr(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function vC(s,t,n,r,o,a,i){const l=s.getAttribLocation(t,n);return l===-1?!1:(pe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,r)),pe(s,()=>s.vertexAttribPointer(l,o,s.FLOAT,!1,a,i)),pe(s,()=>s.enableVertexAttribArray(l)),!0)}function uj(s,t,n){mj(s,n),pe(s,()=>s.activeTexture(s.TEXTURE0+n)),pe(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function hj(s,t,n){return tr(s,()=>s.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function dj(s,t,n){return s.getUniformLocation(t,n)}function pj(s,t,n,r){pe(s,()=>uj(s,t,r)),pe(s,()=>s.uniform1i(n,r))}function Ib(s,t,n){pe(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,n)),pe(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function $C(s,t){pe(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),pe(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function hp(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+fj(s,t))}function fj(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function tr(s,t,n){const r=pe(s,()=>t());if(r==null)throw new Error(n);return r}function mj(s,t){const n=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+s.TEXTURE0;if(r<s.TEXTURE0||r>n){const o=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${o}.`)}}function gi(s,t=2){return j(s.slice(0,s.length-t))}function yi(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function Nb(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[gi(s),...yi(s)]),t}function gj(s,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,s=s.map((o,a)=>a>=s.length-2?ef(s[a]):s[a]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=Ms(s).newShape);let r=j(s);if(s.length<=1&&r<=n)return[1,r];if(s.length===2&&s[0]<=n&&s[1]<=n)return s;if(s.length===3&&s[0]*s[1]<=n&&s[2]<=n)return[s[0]*s[1],s[2]];if(s.length===3&&s[0]<=n&&s[1]*s[2]<=n)return[s[0],s[1]*s[2]];if(s.length===4&&s[0]*s[1]*s[2]<=n&&s[3]<=n)return[s[0]*s[1]*s[2],s[3]];if(s.length===4&&s[0]<=n&&s[1]*s[2]*s[3]<=n)return[s[0],s[1]*s[2]*s[3]];if(t){const o=gi(s);let a=2,i=2;return s.length&&([a,i]=yi(s)),r=o*(a/2)*(i/2),su(r).map(l=>l*2)}return su(r)}function dp(s){return s%2==0}function pp(s,t){if(s=s.slice(-2),t=t.slice(-2),De(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const n=s.slice(-1)[0],r=t.slice(-1)[0];if(n===r||dp(n)&&dp(r)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&dp(s[0])&&dp(t[0])}let Sb,Tb;function yj(s){if(Sb==null){const t=Ds(s);Sb=t.getParameter(t.MAX_TEXTURE_SIZE)}return Sb}function bj(s){if(Tb==null){const t=Ds(s);Tb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tb)}function xj(s){if(s===0)return 0;let t;const n=Ds(s);return Jn(n,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:Jn(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Jn(s,t){return s.getExtension(t)!=null}function CC(s){try{if(Ds(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function wj(s){if(s===0)return!1;const t=Ds(s);if(s===1){if(!Jn(t,"OES_texture_float"))return!1}else if(!Jn(t,"EXT_color_buffer_float"))return!1;return Eb(t)}function vj(s){if(s===0)return!1;const t=Ds(s);if(s===1){if(!Jn(t,"OES_texture_float")||!Jn(t,"WEBGL_color_buffer_float"))return!1}else{if(Jn(t,"EXT_color_buffer_float"))return Eb(t);const r="EXT_color_buffer_half_float";if(Jn(t,r)){const o=t.getExtension(r);return $j(t,o)}return!1}return Eb(t)}function Eb(s){const t=Cb(s),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const r=1,o=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,r,o,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,a),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const i=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(a),i}function $j(s,t){const n=Cb(s,t),r=s.createTexture();s.bindTexture(s.TEXTURE_2D,r);const o=1,a=1;s.texImage2D(s.TEXTURE_2D,0,n.internalFormatHalfFloat,o,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,i),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,r,0);const l=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(r),s.deleteFramebuffer(i),l}function Cj(s){return s!==2?!1:Ds(s).fenceSync!=null}function Lc(s,t){Array.isArray(s)||(s=[s]),s.forEach(n=>{n!=null&&I(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const be=q();be.registerFlag("HAS_WEBGL",()=>be.getNumber("WEBGL_VERSION")>0);be.registerFlag("WEBGL_VERSION",()=>CC(2)?2:CC(1)?1:0);be.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);be.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>be.get("WEBGL_VERSION")===2);be.registerFlag("WEBGL_CPU_FORWARD",()=>!0);be.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);be.registerFlag("WEBGL_PACK",()=>be.getBool("HAS_WEBGL"));be.registerFlag("WEBGL_PACK_NORMALIZATION",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_CLIP",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_PACK_REDUCE",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_LAZILY_UNPACK",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_CONV_IM2COL",()=>be.getBool("WEBGL_PACK"));be.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>yj(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>bj(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=be.getNumber("WEBGL_VERSION");return s===0?0:xj(s)});be.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>be.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!If());be.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>wj(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>be.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:be.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));be.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>vj(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Cj(be.getNumber("WEBGL_VERSION")));be.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>be.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);be.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});be.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>If()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});be.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);be.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);be.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);be.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(){let s,t,n,r,o,a,i,l,c,u;return q().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",n="out",r="in",o="texture",a="outputColor",i="out vec4 outputColor;",l=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",n="varying",r="varying",o="texture2D",a="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:n,varyingFs:r,texture2D:o,output:a,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:c,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(s,t,n="index"){const r=ye(t);return r.map((o,a)=>{const i=`int ${s[a]} = ${n} / ${o}`,l=a===r.length-1?`int ${s[a+1]} = ${n} - ${s[a]} * ${o}`:`index -= ${s[a]} * ${o}`;return`${i}; ${l};`}).join("")}function fp(s,t,n="index"){const r=ye(t);return r.map((o,a)=>{const i=`int ${s[a]} = ${n} / outShapeStrides[${a}]`,l=a===r.length-1?`int ${s[a+1]} = ${n} - ${s[a]} * outShapeStrides[${a}]`:`index -= ${s[a]} * outShapeStrides[${a}]`;return`${i}; ${l};`}).join("")}function kj(s,t){const n=s.length,r=s.map(a=>`${t}[${a}]`),o=new Array(n-1);o[n-2]=r[n-1];for(let a=n-3;a>=0;--a)o[a]=`(${o[a+1]} * ${r[a+1]})`;return o}function Ij(s,t,n="index"){const r=s.map((a,i)=>i),o=kj(r,t);return o.map((a,i)=>{const l=`int ${s[i]} = ${n} / ${o[i]}`,c=i===o.length-1?`int ${s[i+1]} = ${n} - ${s[i]} * ${o[i]}`:`index -= ${s[i]} * ${o[i]}`;return`${l}; ${c};`}).join("")}function Ab(s){const t=ye(s).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Db(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const kC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:IC}=Zw;function Nj(s,t,n){const r=[];if(s.forEach(f=>{const m=j(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),n.enableShapeUniforms){const{uniformShape:g}=Rb(n.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const o=r.join(`
`),a=s.map(f=>Sj(f,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,l=Qt(),c=Aj(l);let u,h,d=Fj(l);return t.isPacked?(u=Tj(t.logicalShape,i,n.enableShapeUniforms),h=Rj(l)):(u=Ej(t.logicalShape,i,n.enableShapeUniforms),h=Dj(l)),n.packedInputs&&(d+=Pj),[d,c,h,o,u,a,n.userCode].join(`
`)}function bi(s,t=!1){const n=s.shapeInfo.logicalShape;switch(n.length){case 0:return Xj(s,t);case 1:return Zj(s,t);case 2:return Qj(s,t);case 3:return tq(s,t);case 4:return sq(s,t);case 5:return rq(s);case 6:return oq(s);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function NC(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return Kj(s);case 1:return Yj(s,t);case 2:return Jj(s,t);case 3:return eq(s,t);default:return nq(s,t)}}function Sj(s,t,n=!1,r){let o="";n?o+=NC(s,r):o+=bi(s,r);const a=s.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?o+=aq(s,t):o+=iq(s,t)),o}function Tj(s,t,n){switch(s.length){case 0:return SC();case 1:return Mj(s,t,n);case 2:return jj(s,t,n);case 3:return Bj(s,t,n);default:return Wj(s,t,n)}}function Ej(s,t,n){switch(s.length){case 0:return SC();case 1:return zj(s,t,n);case 2:return qj(s,t,n);case 3:return Vj(s,t,n);case 4:return Uj(s,t,n);case 5:return Gj(s,t);case 6:return Hj(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function Aj(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function Dj(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function Rj(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function Fj(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${_j}
    ${Oj}
    ${Lj}
  `}const _j=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Oj=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Lj=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Pj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function SC(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Mj(s,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function zj(s,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Bj(s,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(s[2]/2),a=o*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Vj(s,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${fp(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const r=$o(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function Wj(s,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(s[s.length-1]/2),a=o*Math.ceil(s[s.length-2]/2);let i=a,l="",c="b, r, c";for(let u=2;u<s.length-1;u++)i*=s[s.length-u-1],l=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+l,c=`b${u}, `+c;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${l}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${s.length}(${c});
    }
  `}function Uj(s,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${fp(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const r=$o(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function Gj(s,t){const n=$o(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Hj(s,t){const n=$o(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function jj(s,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(De(s,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const o=Math.ceil(s[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function qj(s,t,n){return De(s,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function Co(s){return`offset${s}`}function Kj(s){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Qt();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function Xj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(s.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[o,a]=s.shapeInfo.texShape;if(o===1&&a===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=Co(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[l,c]=s.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${l}, ${c}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function Yj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=s.shapeInfo.texShape,a=Qt();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Zj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(s.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${xi(s)}
      }
    `;const o=s.shapeInfo.texShape,a=o[0],i=o[1];if(i===1&&a===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const l=Co(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${l});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${l});
      return sampleTexture(${n}, uv);
    }
  `}function Jj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape,i=a[0],l=a[1],c=Qt();if(a!=null&&De(n,a))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${c.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${c.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],h=Math.ceil(n[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `}function Qj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape;if(a!=null&&De(n,a)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const p=a[0],f=a[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:i,keptDims:l}=Ms(n),c=i;if(c.length<n.length){const p=wi(s,c),f=["row","col"];return`
      ${bi(p,t)}
      float ${o}(int row, int col) {
        return ${o}(${vi(f,l)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${xi(s)}
      }
    `;const u=a[0],h=a[1],d=Co(r);return h===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${h}, index);
    return sampleTexture(${r}, uv);
  }
`}function eq(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){const p=n.slice(1),f=[1,2],m=wi(s,p),g=["b","row","col"];return`
        ${NC(m,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${vi(g,f)});
        }
      `}const l=Qt();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;const c=i[0],u=i[1],h=Math.ceil(n[2]/2),d=h*Math.ceil(n[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${h}, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function tq(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:l,keptDims:c}=Ms(n),u=l;if(u.length<n.length){const g=wi(s,u),y=["row","col","depth"];return`
        ${bi(g,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${vi(y,c)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${xi(s)}
      }
    `;const h=s.shapeInfo.texShape,d=h[0],p=h[1],f=s.shapeInfo.flatOffset;if(p===a&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=Co(r);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function nq(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=Qt();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${n}, uv);
    }
  `;const a=s.shapeInfo.logicalShape,i=a.length,l=s.shapeInfo.texShape,c=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],u=c[0],h=c[1],d=Math.ceil(a[i-1]/2);let p=d*Math.ceil(a[i-2]/2),f="int b, int row, int col",m=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let g=2;g<i-1;g++)f=`int b${g}, `+f,p*=a[i-g-1],m=`b${g} * ${p} + `+m;return`
    vec4 ${r}(${f}) {
      int index = ${m};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});
      return ${o.texture2D}(${n}, uv);
    }
  `}function sq(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,l=n[1]*i,{newShape:c,keptDims:u}=Ms(n);if(c.length<n.length){const x=wi(s,c),v=["row","col","depth","depth2"];return`
      ${bi(x,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${vi(v,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${a}, 1)));
        ${xi(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,p=d[0],f=d[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&h==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===a&&h==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=Co(r);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${f}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function rq(s){const t=s.shapeInfo.logicalShape,n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],a=t[3]*o,i=t[2]*a,l=t[1]*i,{newShape:c,keptDims:u}=Ms(t);if(c.length<t.length){const g=wi(s,c),y=["row","col","depth","depth2","depth3"];return`
      ${bi(g)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${vi(y,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${a}, ${o})) +
          depth3;
        ${xi(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Co(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${a} +
          depth2 * ${o} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function oq(s){const t=s.shapeInfo.logicalShape,n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:a}=Ms(t);if(o.length<t.length){const y=wi(s,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${bi(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${vi(b,a)});
      }
    `}const i=t[5],l=t[4]*i,c=t[3]*l,u=t[2]*c,h=t[1]*u;if(s.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${u}, ${c}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${xi(s)}
      }
    `;const d=s.shapeInfo.flatOffset,p=s.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;const g=Co(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${u} + depth * ${c} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function xi(s){const t=s.name,n=j(s.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function aq(s,t){const n=s.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",a=s.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=IC(s.shapeInfo.logicalShape,t.logicalShape),c=Ye(i),u=i-a;let h;const d=["x","y","z","w","u","v"];a===0?h="":i<2&&l.length>=1?h="coords = 0;":h=l.map(x=>`coords.${d[x+u]} = 0;`).join(`
`);let p="";i<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((x,v)=>`coords.${d[v+u]}`).join(", ");let f="return outputValue;";const g=j(s.shapeInfo.logicalShape)===1,b=j(t.logicalShape)===1;if(a===1&&!g&&!b)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!b)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(l.length){const x=a-2,v=a-1;l.indexOf(x)>-1&&l.indexOf(v)>-1?f="return vec4(outputValue.x);":l.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${c} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${r}(${p});
      ${f}
    }
  `}function iq(s,t){const n=s.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",a=t.texShape,i=s.shapeInfo.texShape,l=s.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!s.shapeInfo.isUniform&&l===c&&s.shapeInfo.flatOffset==null&&De(i,a))return`
      float ${o}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=Ye(c),h=IC(s.shapeInfo.logicalShape,t.logicalShape),d=c-l;let p;const f=["x","y","z","w","u","v"];l===0?p="":c<2&&h.length>=1?p="coords = 0;":p=h.map(g=>`coords.${f[g+d]} = 0;`).join(`
`);let m="";return c<2&&l>0?m="coords":m=s.shapeInfo.logicalShape.map((g,y)=>`coords.${f[y+d]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${r}(${m});
    }
  `}function Ye(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function Rb(s,t,n){const{newShape:r,keptDims:o}=Ms(t),a=t.length,i=s&&a===3&&t[0]===1,l=i?t.slice(1):r,c=!s&&a>1&&!De(t,n)&&r.length<a||i;return{useSqueezeShape:c,uniformShape:c?l:t,keptDims:o}}function wi(s,t){const n=JSON.parse(JSON.stringify(s));return n.shapeInfo.logicalShape=t,n}function vi(s,t){return t.map(n=>s[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(s,t,n,r){const o=n.map((v,w)=>{const C={logicalShape:v.shape,texShape:v.isUniform?null:v.texData.texShape,isUniform:v.isUniform,isPacked:v.isUniform?!1:v.texData.isPacked,flatOffset:null};return v.texData!=null&&v.texData.slice!=null&&v.texData.slice.flatOffset>0&&(C.flatOffset=v.texData.slice.flatOffset),{name:t.variableNames[w],shapeInfo:C}}),a=o.map(v=>v.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Nj(o,i,t),c=s.createProgram(l);let u=null;const h=s.getUniformLocation(c,"NAN",!1);q().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(c,"INFINITY",!1));const d=!1,p={},f={},m={};for(let v=0;v<t.variableNames.length;v++){const w=t.variableNames[v];p[w]=s.getUniformLocation(c,w,d),p[`offset${w}`]=s.getUniformLocation(c,`offset${w}`,d),t.enableShapeUniforms&&(f[`${w}Shape`]=s.getUniformLocation(c,`${w}Shape`,d),m[`${w}TexShape`]=s.getUniformLocation(c,`${w}TexShape`,d))}let g,y,b;t.enableShapeUniforms&&(g=s.getUniformLocation(c,"outShape",d),b=s.getUniformLocation(c,"outShapeStrides",d),y=s.getUniformLocation(c,"outTexShape",d));const x=[];return t.customUniforms&&t.customUniforms.forEach((v,w)=>{x[w]=s.getUniformLocation(c,v.name,d)}),{program:t,source:l,webGLProgram:c,uniformLocations:p,customUniformLocations:x,inShapeInfos:a,outShapeInfo:i,infLoc:u,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}function TC(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((n,r)=>{const o=n.logicalShape,a=t[r],i=a.shape;if(!De(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(n.isUniform&&a.isUniform)return;const l=n.texShape,c=a.isUniform?null:a.texData.texShape;if(!De(l,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${c} must match`)})}function cq(s,t,n,r,o){t.program.enableShapeUniforms||(TC(t.inShapeInfos,n),TC([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?s.setOutputPackedMatrixTexture(a,i[0],i[1]):s.setOutputMatrixTexture(a,i[0],i[1]),s.setProgram(t.webGLProgram),q().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),n.forEach((c,u)=>{const h=t.program.variableNames[u],d=t.uniformLocations[h],p=t.uniformLocations[`offset${h}`],f=t.inShapesLocations[`${h}Shape`],m=t.inTexShapesLocations[`${h}TexShape`];if(f){const{uniformShape:g}=Rb(t.program.packedInputs,c.shape,c.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(m&&s.gl.uniform2i(m,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(j(c.shape)<2)s.gl.uniform1f(d,c.uniformValues[0]);else{let g=c.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(d,g)}return}c.texData.slice!=null&&p!=null&&s.gl.uniform1i(p,c.texData.slice.flatOffset),s.setInputMatrixTexture(c.texData.texture,d,u)}});const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:s.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:s.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:s.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:s.gl.uniform4iv(l,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){const c=ye(r.shape);switch(r.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(c));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(c));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(c));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((c,u)=>{const h=t.customUniformLocations[u],d=o[u];if(c.type==="float")s.gl.uniform1fv(h,d);else if(c.type==="vec2")s.gl.uniform2fv(h,d);else if(c.type==="vec3")s.gl.uniform3fv(h,d);else if(c.type==="vec4")s.gl.uniform4fv(h,d);else if(c.type==="int")s.gl.uniform1iv(h,d);else if(c.type==="ivec2")s.gl.uniform2iv(h,d);else if(c.type==="ivec3")s.gl.uniform3iv(h,d);else if(c.type==="ivec4")s.gl.uniform4iv(h,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),s.executeProgram()}function uq(s,t,n){let r="";t.concat(n).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!i.isUniform){const c=i.texData.texShape,{useSqueezeShape:u,uniformShape:h,keptDims:d}=Rb(s.packedInputs,i.shape,c);let p="",f="",m="";if(h.length===1&&s.packedInputs){const C=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${C[0]>1}_${C[1]>1}`}else if(h.length===2&&!s.packedInputs)f=`${h[0]>1}_${h[1]>1}`;else if(h.length>2&&!s.packedInputs){const C=ye(h);m=`${C[0]===c[1]}_${C[C.length-1]===c[1]}`}const g=i.shape.length,y=h.length===2&&De(i.shape,c),b=j(i.shape)===1,x=Wa(i.shape,n.shape),v=!s.packedInputs&&g===n.shape.length&&De(c,n.texData.texShape),w=s.packedInputs||h.length>2?"":`${c[0]>1}_${c[1]>1}`;r+=`${g}_${v}_${u?d:""}_${h.length}_${b}_${x}_${y}_${p}_${f}_${m}_${w}_${l}`}else{const c=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${c}_${l}`}});const o=s.userCode;let a=s.constructor.name;return a+="_"+r+"_"+o+`${q().getNumber("WEBGL_VERSION")}`,a}function Ln(s){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hq{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Qt();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?fp(["r","c","d"],t):$o(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dq{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Qt();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?fp(["r","c","d"],t):$o(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pq{constructor(t){this.variableNames=["A"],this.outTexUsage=On.DOWNLOAD;const n=Qt();this.outputShape=t,this.userCode=`
      ${kC}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fq{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=On.DOWNLOAD;const n=Qt();this.outputShape=t,this.userCode=`
      ${kC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mq{constructor(t,n=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Qt();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?Db():Ab(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gq{constructor(t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Qt();this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let o="",a="result";n&&(a="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const c=i*2+l;o+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Db():Ab(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${r.output} = ${a};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(s){const t=Qt(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return QH(s,n)}function bq(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return oj(s,t)}function xq(s){const t=new Uint16Array([0,1,2,2,1,3]);return aj(s,t)}function Pc(s,t,n,r,o,a){lj(t,n);const i=ij(s),l=s.TEXTURE_2D;return pe(s,()=>s.bindTexture(l,i)),pe(s,()=>s.texParameteri(l,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),pe(s,()=>s.texParameteri(l,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),pe(s,()=>s.texParameteri(l,s.TEXTURE_MIN_FILTER,s.NEAREST)),pe(s,()=>s.texParameteri(l,s.TEXTURE_MAG_FILTER,s.NEAREST)),pe(s,()=>s.texImage2D(l,0,r,t,n,0,o,a,null)),pe(s,()=>s.bindTexture(s.TEXTURE_2D,null)),i}function EC(s){return s.internalFormatFloat}function wq(s,t,n,r){const[o,a]=Oc(t,n);return Pc(s,o,a,EC(r),r.textureFormatFloat,s.FLOAT)}function AC(s){return s.internalFormatHalfFloat}function vq(s,t,n,r){const[o,a]=Oc(t,n);return Pc(s,o,a,AC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function DC(s){return s.downloadTextureFormat}function $q(s,t,n,r){const[o,a]=Oc(t,n);return Pc(s,o,a,DC(r),s.RGBA,s.UNSIGNED_BYTE)}function RC(s){return s.internalFormatPackedFloat}function Cq(s,t,n,r){const[o,a]=mi(t,n);return Pc(s,o,a,RC(r),s.RGBA,s.FLOAT)}function FC(s){return s.internalFormatPackedHalfFloat}function kq(s,t,n,r){const[o,a]=mi(t,n);return Pc(s,o,a,FC(r),s.RGBA,r.textureTypeHalfFloat)}function Iq(s,t,n){const r=0,o=3*4,a=3*4+2*4;return pe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),vC(s,t,"clipSpacePos",n,3,a,r)&&vC(s,t,"uv",n,2,a,o)}function Nq(s,t,n,r,o,a){pe(s,()=>s.bindTexture(s.TEXTURE_2D,t));let i,l,c;o instanceof Uint8Array?(i=new Uint8Array(n*r*4),l=s.UNSIGNED_BYTE,c=s.RGBA):(i=new Float32Array(n*r*4),l=s.FLOAT,c=a.internalFormatPackedFloat),i.set(o),pe(s,()=>s.texImage2D(s.TEXTURE_2D,0,c,n,r,0,s.RGBA,l,i)),pe(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function Sq(s,t,n){pe(s,()=>s.bindTexture(s.TEXTURE_2D,t)),n.data instanceof Uint8Array?pe(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,n.width,n.height,0,s.RGBA,s.UNSIGNED_BYTE,n.data)):pe(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,n)),pe(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function Tq(s,t,n,r){const o=s.createBuffer();pe(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,o));const l=4*4*t*n;return pe(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,l,s.STREAM_READ)),pe(s,()=>s.readPixels(0,0,n,t,s.RGBA,s.FLOAT,0)),pe(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),o}function Eq(s,t,n){const r=s,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}function Aq(s,t,n,r){const[o,a]=Oc(t,n),i=4,l=new Uint8Array(jH(t*n,i));return pe(s,()=>s.readPixels(0,0,o,a,r.downloadTextureFormat,s.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function Dq(s,t,n,r,o,a,i,l){const c=s,u=new Float32Array(qH(a,i));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function Rq(s,t,n){const r=new Float32Array(t*n*4);return pe(s,()=>s.readPixels(0,0,n,t,s.RGBA,s.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fq{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const n=q().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,UH(n,t)):this.gl=Ds(n);let r="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(q().getNumber("WEBGL_VERSION")===1){const a="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=up(this.gl,a),Jn(this.gl,i))this.textureHalfFloatExtension=up(this.gl,i);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Jn(this.gl,o))this.colorBufferHalfFloatExtension=up(this.gl,o);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Jn(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=bq(this.gl),this.indexBuffer=xq(this.gl),this.framebuffer=cj(this.gl),this.textureConfig=Cb(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;pe(t,()=>t.finish()),pe(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),pe(t,()=>t.deleteFramebuffer(this.framebuffer)),pe(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),pe(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,n){return this.throwIfDisposed(),wq(this.gl,t,n,this.textureConfig)}createFloat16MatrixTexture(t,n){return this.throwIfDisposed(),vq(this.gl,t,n,this.textureConfig)}createUnsignedBytesMatrixTexture(t,n){return this.throwIfDisposed(),$q(this.gl,t,n,this.textureConfig)}uploadPixelDataToTexture(t,n){this.throwIfDisposed(),Sq(this.gl,t,n)}uploadDenseMatrixToTexture(t,n,r,o){this.throwIfDisposed(),Nq(this.gl,t,n,r,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,n){return this.throwIfDisposed(),kq(this.gl,t,n,this.textureConfig)}createPackedMatrixTexture(t,n){return this.throwIfDisposed(),Cq(this.gl,t,n,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&($C(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,n,r){return this.downloadMatrixDriver(t,()=>Aq(this.gl,n,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,n,r,o,a,i){return Dq(this.gl,t,n,r,o,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,n){return Eq(this.gl,t,n)}createBufferFromTexture(t,n,r){this.bindTextureToFrameBuffer(t);const o=Tq(this.gl,n,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let n,r;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const o=t,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{const i=o.clientWaitSync(a,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},n=a}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(n,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:n,isFencePassed:r}}downloadMatrixFromPackedTexture(t,n,r){return this.downloadMatrixDriver(t,()=>Rq(this.gl,n,r))}createProgram(t){this.throwIfDisposed();const n=this.gl,r=ej(n,t);this.vertexShader==null&&(this.vertexShader=yq(n));const o=sj(n);return pe(n,()=>n.attachShader(o,this.vertexShader)),pe(n,()=>n.attachShader(o,r)),rj(n,o),this.debug&&kb(n,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=Iq(n,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&pe(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&kb(this.gl,this.program),pe(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,n,r=!0){return this.throwIfDisposed(),r?hj(this.gl,t,n):dj(this.gl,t,n)}getAttributeLocation(t,n){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(t,n))}getUniformLocationNoThrow(t,n){return this.throwIfDisposed(),this.gl.getUniformLocation(t,n)}setInputMatrixTexture(t,n,r){this.throwIfDisposed(),this.throwIfNoProgram(),pj(this.gl,t,n,r)}setOutputMatrixTexture(t,n,r){this.setOutputMatrixTextureDriver(t,r,n)}setOutputPackedMatrixTexture(t,n,r){this.throwIfDisposed();const[o,a]=mi(n,r);this.setOutputMatrixTextureDriver(t,o,a)}setOutputMatrixWriteRegion(t,n,r,o){this.setOutputMatrixWriteRegionDriver(r,t,o,n)}setOutputPackedMatrixWriteRegion(t,n,r,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&kb(this.gl,this.program),hp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),pe(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=up(this.gl,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,o=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(o.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),n=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,n),n}endQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,r=this.getQueryTimerExtensionWebGL2();n.endQuery(r.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await tf(()=>this.disposed||this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,n){if(n===0)return null;if(n===2){const r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,n){if(n===0)return!0;if(n===2){const r=this.gl,o=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),o=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(n=>{this.addItemToPoll(()=>t.isFencePassed(),()=>n())})}pollItems(){const t=_q(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=t;++n){const{resolveFn:r}=this.itemsToPoll[n];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,n){this.itemsToPoll.push({isDoneFn:t,resolveFn:n}),!(this.itemsToPoll.length>1)&&tf(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ib(this.gl,t,this.framebuffer),this.debug&&hp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ib(this.gl,this.outputTexture,this.framebuffer),this.debug&&hp(this.gl)):$C(this.gl,this.framebuffer)}downloadMatrixDriver(t,n){this.bindTextureToFrameBuffer(t);const r=n();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,n,r){this.throwIfDisposed();const o=this.gl;Ib(o,t,this.framebuffer),this.debug&&hp(o),this.outputTexture=t,pe(o,()=>o.viewport(0,0,n,r)),pe(o,()=>o.scissor(0,0,n,r))}setOutputMatrixWriteRegionDriver(t,n,r,o){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(t,n,r,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function _q(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Oq,bincountImpl:_C,bincountReduceImpl:Lq,ceilImpl:Pq,concatImpl:Mq,equalImpl:zq,expImpl:Bq,expm1Impl:Vq,floorImpl:Wq,gatherNdImpl:Uq,gatherV2Impl:Gq,greaterImpl:Hq,greaterEqualImpl:jq,lessImpl:qq,lessEqualImpl:Kq,linSpaceImpl:Xq,logImpl:Yq,maxImpl:Zq,maximumImpl:Jq,minimumImpl:Qq,multiplyImpl:eK,negImpl:tK,notEqualImpl:nK,prodImpl:sK,rangeImpl:rK,rsqrtImpl:oK,sigmoidImpl:aK,simpleAbsImpl:OC,sliceImpl:iK,sparseFillEmptyRowsImpl:lK,sparseReshapeImpl:cK,sparseSegmentReductionImpl:LC,sqrtImpl:uK,stridedSliceImpl:hK,stringNGramsImpl:dK,stringSplitImpl:pK,stringToHashBucketFastImpl:fK,subImpl:mK,tileImpl:gK,topKImpl:yK,transposeImpl:Fb,uniqueImpl:bK}=zV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(s,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${s}.${n}`)}function en(s,t){return t===1?[s]:PC(s,t)}function xK(s,t){if(s===1)return"rc";let n="";for(let r=0;r<s;r++)n+=t[r],r<s-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wK{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const n=t.length;if(n===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const r=en("rc",n),o=Ye(n),a=$K(n,t,r),i=CK(n,t[t.length-1],t[t.length-2],r),l=kK(t,r);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${l}));
          }
        }
      `}}}function vK(s,t){const n=[];for(let r=0;r<=1;r++)for(let o=0;o<=1;o++){let a=`${r===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<s;i++)a=`${t[t.length-1-i]},`+a;n.push(a)}return n}function $K(s,t,n){if(s===1)return`rc > ${t[0]}`;let r="";for(let o=s-2;o<s;o++)r+=`${n[o]} >= ${t[o]}`,o<s-1&&(r+="||");return r}function CK(s,t,n,r){if(s===1)return"";const o=r.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function kK(s,t){const n=s.length,r=vK(n,t);return n===1?`getA(rc),
            rc + 1 >= ${s[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${r[0]}),
          cEdge ? 0. : getA(${r[1]}),
          rEdge ? 0. : getA(${r[2]}),
          rEdge || cEdge ? 0. : getA(${r[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MC{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);let r="";for(let o=0;o<4;o++){let a="thisRC = rc;";o%2==1&&(a+="thisRC.z += 1;"),o>1&&(a+="thisRC.y += 1;"),r+=`
        ${a}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${IK(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Db():Ab(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${r}

        setOutput(result);
      }
    `}}function IK(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?Ij(["r","c","d"],"inputShape"):$o(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NK{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,n,r){const o=BC(n,r),a=VC(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=zC(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const c=this.freeTextures[a].shift();return this.usedTextures[a].push(c),c}let l;return o===Gt.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===Gt.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===Gt.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===Gt.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===Gt.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,n,r,o){if(this.freeTextures==null)return;const a=BC(r,o),i=VC(n,a,o);i in this.freeTextures||(this.freeTextures[i]=[]);const l=zC(n,a,this.gpgpu.gl,this.gpgpu.textureConfig,o),c=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const u=this.usedTextures[i],h=u.indexOf(t);if(h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(h,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n)});for(const t in this.usedTextures)this.usedTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function SK(s,t){const n=s;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function zC(s,t,n,r,o){const a=TK(t,r);let i;if(o){const[c,u]=mi(s[0],s[1]);i=c*u}else{const[c,u]=Oc(s[0],s[1]);i=c*u}const l=SK(n,a);return i*l}function TK(s,t){switch(s){case Gt.PACKED_2X2_FLOAT32:return RC(t);case Gt.PACKED_2X2_FLOAT16:return FC(t);case Gt.UNPACKED_FLOAT32:return EC(t);case Gt.UNPACKED_FLOAT16:return AC(t);case Gt.PACKED_4X1_UNSIGNED_BYTE:return DC(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function EK(s){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?Gt.PACKED_2X2_FLOAT32:Gt.UNPACKED_FLOAT32:s?Gt.PACKED_2X2_FLOAT16:Gt.UNPACKED_FLOAT16}function BC(s,t){if(s===On.UPLOAD)return Gt.PACKED_2X2_FLOAT32;if(s===On.RENDER||s==null)return EK(t);if(s===On.DOWNLOAD||s===On.PIXELS)return Gt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function VC(s,t,n){return`${s[0]}_${s[1]}_${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Er{constructor(t,n){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ms="if (isnan(x)) return x;",AK="return x;",WC="return abs(x);",DK="return (x >= 0.0) ? x : (exp(x) - 1.0);",RK=ms+`
  return (x < 0.0) ? 0.0 : x;
`,FK=ms+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,mp="return x;",_K="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK="return x;",LK=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,PK=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,MK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zK="return 1.0 / (1.0 + exp(-1.0 * x));";class $i{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BK{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const n=t.length,r=en("rc",n),o=Ye(n),a=xK(n,r),i=r.slice(-2),l=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=Jh,WK=1e-7,UK=1e-4,gp={};function GK(s){return s in gp||(gp[s]={}),gp[s]}const HK=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),jK=600;function qK(){return q().global.screen==null?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*jK/1024/1024}class yp extends nu{constructor(t){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){const n=Ds(q().getNumber("WEBGL_VERSION"));this.binaryCache=GK(q().getNumber("WEBGL_VERSION")),this.gpgpu=new Fq(n),this.canvas=n.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new NK(this.gpgpu),this.numMBBeforeWarning=qK(),this.texData=new Jp(this,pr())}nextDataId(){return yp.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,n,r){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:n,dtype:r,values:t,usage:On.UPLOAD,refCount:1}),o}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){const n=this.texData.get(t);n.refCount--}}move(t,n,r,o,a){if(q().getBool("DEBUG")&&this.checkNumericalProblems(n),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:o,values:n,usage:On.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const n=this.texData.get(t),{values:r,dtype:o,complexTensorInfos:a,slice:i,shape:l,isPacked:c}=n;if(i!=null){let p;c?p=new $i(l,mp):p=new Er(l,mp);const f=this.runWebGLProgram(p,[{dataId:t,shape:l,dtype:o}],o),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return r;const u=this.activeTimers!=null;let h;u&&(h=zt());let d;if(o==="complex64"){const p=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);d=Ys(p,f)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=zt()-h),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const m=this.pendingRead.get(t);return new Promise(g=>m.push(g))}const n=this.texData.get(t),{values:r,shape:o,slice:a,dtype:i,complexTensorInfos:l,isPacked:c}=n;if(a!=null){let m;c?m=new $i(o,mp):m=new Er(o,mp);const g=this.runWebGLProgram(m,[{dataId:t,shape:o,dtype:i}],i),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(r!=null)return this.convertAndCacheOnCPU(t);if(!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,h;if(i!=="complex64"&&q().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(t);const m=this.texData.get(h.dataId);u=this.gpgpu.createBufferFromTexture(m.texture,...cp(o))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const m=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),g=m[0],y=m[1];d=Ys(g,y)}else if(u==null)d=this.getValuesFromTexture(t);else{const m=j(o);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,m)}if(h!=null&&this.disposeIntermediateTensorInfo(h),u!=null){const m=this.gpgpu.gl;pe(m,()=>m.deleteBuffer(u))}const p=this.convertAndCacheOnCPU(t,d),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(m=>m(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&pr().removeDataId(t,this),this.pendingDeletes--),p}bufferSync(t){const n=this.readSync(t.dataId);let r=n;if(t.dtype==="string")try{r=n.map(o=>Hr(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ae(t.shape,t.dtype,r)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){const r=t[n];if(!ZH(r))throw q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:n,dtype:r,isPacked:o}=this.texData.get(t),a=j(n);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(t),f=this.texData.get(p.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...cp(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(p),m}const i=q().getBool("WEBGL_PACK")&&o===!0,l=i?Nb(n):n,c=i?new fq(l):new pq(l),u=this.runWebGLProgram(c,[{shape:l,dtype:r,dataId:t}],"float32"),h=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture,h.texShape[0],h.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const n=this.activeTimers,r=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=r,o=!0):this.activeTimers.push(r),this.activeTimers=r,t();const a=Ps(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),i=Ps(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=n,o&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(a);l.kernelMs=Tx(c),l.getExtraProfileInfo=()=>c.map((u,h)=>({name:i[h],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:zt(),endMs:null}}endTimer(t){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=zt(),t)}async getQueryTime(t){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:r}=this.texData.get(t);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:n,dtype:r,texShape:o,usage:a,isPacked:i,slice:l}=this.texData.get(t),c=l&&l.origDataId||t,u=this.dataRefCount.get(c);u>1?this.dataRefCount.set(c,u-1):(this.dataRefCount.delete(c),n!=null&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(n,o,a,i)));const h=this.texData.get(t);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=HK){return q().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>this.texData.get(r.dataId).texture==null&&j(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){rn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=t.dataSync();return VK(t.shape,n)}packedUnaryOp(t,n,r){const o=new $i(t.shape,n),a=this.compileAndRun(o,[t],r);return pr().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const o=OC(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,o)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,WC,t.dtype);const n=new Er(t.shape,WC),r=this.compileAndRun(n,[t]);return pr().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}makeTensorInfo(t,n,r){let o;if(n==="string"&&r!=null&&r.length>0&&bs(r[0])){const a=r.map(i=>xs(i));o=this.write(a,t,n)}else o=this.write(r,t,n);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:n}}makeOutput(t,n,r){const{dataId:o}=this.makeTensorInfo(t,n,r);return pr().makeTensorFromDataId(o,t,n,this)}unpackTensor(t){const n=new BK(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){const n=new wK(t.shape),r=!0;return this.runWebGLProgram(n,[t],t.dtype,null,r)}packedReshape(t,n){const r=[gi(t.shape),...yi(t.shape)],o={dtype:t.dtype,shape:r,dataId:t.dataId},a=[gi(n),...yi(n)],i=new MC(a,r),l=!0,c=[r],u=this.runWebGLProgram(i,[o],t.dtype,c,l);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(t){const n=this.texData.get(t),{isPacked:r,shape:o,dtype:a}=n,i=Nb(o);let l;const c=cp(i);r?l=new dq(i):l=new hq(i);const u=!0,h=[c],d=this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:t}],a,h,u);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(t,n,r,o,a=!1){const i=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(i.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===_c.DENSE){const y=cp(t.outputShape);l.texShape=y.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),j(i.shape)===0)return l.values=Ct(i.dtype,0),i;const c=[],u=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&j(y.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}else if(!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!pp(b.shape,y.shape)){const x=y,v=y.shape;y.shape=b.shape,y=this.packedReshape(y,v),c.push(y),b=this.texData.get(y.dataId),x.shape=v}return this.uploadToGPU(y.dataId),{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:l,isUniform:!1},d=uq(t,u,h),p=this.getAndSaveBinary(d,()=>lq(this.gpgpu,t,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),cq(this.gpgpu,p,u,h,o),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=q().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=zt();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&a===!1){const y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(t,n,r,o,a=!1){return r=r||n[0].dtype,this.runWebGLProgram(t,n,r,o,a)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=q().getBool("DEBUG");q().set("DEBUG",!1);const n=this.abs(me(1e-8)).dataSync()[0];if(q().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?WK:UK}uploadToGPU(t){const n=this.texData.get(t),{shape:r,dtype:o,values:a,texture:i,usage:l,isPacked:c}=n;if(i!=null)return;const u=this.activeTimers!=null;let h;u&&(h=zt());let d=n.texShape;if(d==null&&(d=gj(r,c),n.texShape=d),a!=null){const p=Nb(r);let f,m=d[1],g=d[0];const y=a instanceof Uint8Array||a instanceof Uint8ClampedArray;c?([m,g]=mi(d[0],d[1]),f=new gq(p,y)):f=new mq(p,y);const b=this.makeTensorInfo([g,m],o);y?this.texData.get(b.dataId).usage=On.PIXELS:this.texData.get(b.dataId).usage=On.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,g,a);const x=[[g,m]],v=!0,w=this.runWebGLProgram(f,[b],o,x,v),C=this.texData.get(w.dataId);n.texture=C.texture,n.texShape=C.texShape,n.isPacked=C.isPacked,n.usage=C.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(w.dataId),n.values=null,u&&(this.uploadWaitMs+=zt()-h)}else{const p=this.acquireTexture(d,l,o,c);n.texture=p}}convertAndCacheOnCPU(t,n){const r=this.texData.get(t),{dtype:o}=r;return this.releaseGPUData(t),n!=null&&(r.values=KK(n,o)),r.values}acquireTexture(t,n,r,o){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,o)}computeBytes(t,n){return t[0]*t[1]*ru(n)}}yp.nextDataId=0;function KK(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const n=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let r=0;r<n.length;++r)n[r]=Math.round(s[r]);return n}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */const XK="3.10.0";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Nf()&&Yf("webgl",()=>new yp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ci{constructor(t,n,r){this.variableNames=["A","B"],this.outputShape=Ee(n,r),this.enableShapeUniforms=Ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bp=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class Mc{constructor(t,n,r,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ee(n,r);const a=this.outputShape.length;this.enableShapeUniforms=Ln(a);let i="";if(o)if(a===0||j(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Ye(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=en("coords",a);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(s){const{inputs:t,backend:n}=s,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YK={kernelName:ea,backendName:"webgl",kernelFunc:Sn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(s){const{inputs:t,backend:n}=s,{real:r,imag:o}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),l=Sn({inputs:{x:r},backend:n}),c=Sn({inputs:{x:o},backend:n});return i.complexTensorInfos={real:l,imag:c},a}const ZK={kernelName:pu,backendName:"webgl",kernelFunc:Ar};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GC="return (a < 0.) ? b * a : a;",HC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function JK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",zs(a,"float32")),l=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mc(HC,o.shape,i.shape):new Ci(GC,o.shape,i.shape),c=n.runWebGLProgram(l,[o,i],"float32");return n.disposeIntermediateTensorInfo(i),c}const QK={kernelName:Qi,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC="return (a < 0.) ? b * a : a;",qC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function e6(s){const{inputs:t,backend:n}=s,{x:r,alpha:o}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mc(qC,r.shape,o.shape):new Ci(jC,r.shape,o.shape);return n.runWebGLProgram(a,[r,o],"float32")}const t6={kernelName:bl,backendName:"webgl",kernelFunc:e6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC="if (isnan(x)) return x;",n6=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,s6=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Me({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:o,backend:a})=>{const{x:i}=o,l=a,c=r||i.dtype;if(l.shouldExecuteOnCPU([i])&&n!=null){const d=l.texData.get(i.dataId),p=n(d.values,c);return l.makeTensorInfo(i.shape,c,p)}const u=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let h;return u?h=new $i(i.shape,t):h=new Er(i.shape,s),l.runWebGLProgram(h,[i],c)}}function Ht({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:a}){return({inputs:i,backend:l})=>{const{a:c,b:u}=i,h=l;if(r&&c.dtype==="complex64"){const m=h.texData.get(c.dataId),g=h.texData.get(u.dataId),[y,b]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{const[w,C]=v,N={dataId:w.dataId,dtype:w.dtype,shape:c.shape},k={dataId:C.dataId,dtype:C.dtype,shape:u.shape},S=new Ci(s,c.shape,u.shape);return h.runWebGLProgram(S,[N,k],mn(w.dtype,C.dtype))}),x=Ar({inputs:{real:y,imag:b},backend:h});return h.disposeIntermediateTensorInfo(y),h.disposeIntermediateTensorInfo(b),x}const d=a||mn(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||h.shouldExecuteOnCPU([c,u]))&&o!=null){const m=h.texData.get(c.dataId).values,g=h.texData.get(u.dataId).values,y=c.dtype==="string"?lo(m):m,b=c.dtype==="string"?lo(g):g,[x,v]=o(c.shape,u.shape,y,b,d),w=h.makeTensorInfo(v,d),C=h.texData.get(w.dataId);return C.values=x,w}const p=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return p?f=new Mc(t,c.shape,u.shape,n):f=new Ci(s,c.shape,u.shape),h.runWebGLProgram(f,[c,u],d)}}function xp(s,t=!1){if(s==="linear")return t?OK:AK;if(s==="relu")return t?PK:RK;if(s==="elu")return t?LK:DK;if(s==="relu6")return t?MK:FK;if(s==="prelu")return t?qC:jC;if(s==="leakyrelu")return t?HC:GC;if(s==="sigmoid")return t?zK:_K;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XC{constructor(t,n,r,o=!1,a=!1,i=!1,l=null,c=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Ln(this.outputShape.length);const h=o?t[1]:t[2],d=Math.ceil(h/2),p=o?"i * 2, rc.y":"rc.y, i * 2",f=a?"rc.z, i * 2":"i * 2, rc.z",m=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";l&&(c?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:y=`vec4 activation(vec4 x) {
          ${l}
        }`,b="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",w="rc.x";t[0]<n[0]?v=`int(min(float(rc.x), ${t[0]-1}.))`:n[0]<t[0]&&(w=`int(min(float(rc.x), ${n[0]-1}.))`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${v};
          int batchB = ${w};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ZC{constructor(t,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ee(n,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC="return a * b;";function _b(s){const{inputs:t,backend:n}=s,{a:r,b:o}=t,a=mn(r.dtype,o.dtype);if(r.dtype==="complex64"){const l=n.texData.get(r.dataId),c=n.texData.get(o.dataId),u=new ZC(YC.REAL,r.shape,o.shape),h=new ZC(YC.IMAG,r.shape,o.shape),d=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:o.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:o.shape}],p=n.runWebGLProgram(u,d,"float32"),f=n.runWebGLProgram(h,d,"float32"),m=Ar({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}if(n.shouldExecuteOnCPU([r,o])){const l=n.texData.get(r.dataId),c=n.texData.get(o.dataId),[u,h]=eK(r.shape,o.shape,l.values,c.values,a),d=n.makeTensorInfo(h,a),p=n.texData.get(d.dataId);return p.values=u,d}let i;return q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Mc(JC,r.shape,o.shape):i=new Ci(JC,r.shape,o.shape),n.runWebGLProgram(i,[r,o],a)}const r6={kernelName:ca,backendName:"webgl",kernelFunc:_b};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(s,t,n){const r=[gi(s.shape),...yi(s.shape)],o={dtype:s.dtype,shape:r,dataId:s.dataId},a=[gi(t),...yi(t)],i=new MC(a,r),l=!0,c=[r],u=n.runWebGLProgram(i,[o],s.dtype,c,l);return{dataId:u.dataId,shape:t,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{shape:a}=r,i=n,l=j(o.shape),c=nf(a,l),u=j(c);I(l===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${o.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const h=i.texData.get(o.dataId);return h.isPacked&&!pp(o.shape,c)&&!(h.texture!==null&&pp(h.shape,c))?o6(o,c,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype})}const a6={kernelName:xl,backendName:"webgl",kernelFunc:ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QC{constructor(t,n){this.variableNames=["x"];const{windowSize:r,batchSize:o,inSize:a,outSize:i}=t;this.outputShape=[o,i];const l=Math.floor(r/4)*4,c=r%4;let u="sumValue += dot(values, ones);";if(n!=null){const d=1/n;u=`sumValue += dot(values * ${$t(d)?d.toPrecision(2):d}, ones);`}let h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i6{constructor(t,n){this.variableNames=["x"];const{windowSize:r,batchSize:o,inSize:a,outSize:i}=t;this.outputShape=[o,i];let l="0.0",c="";n==="prod"?l="1.0":n==="min"?(l="1.0 / 1e-20",c="min"):n==="max"&&(l="-1.0 / 1e-20",c="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const h=Math.floor(r/4)*4,d=r%4;let p=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";n==="all"?(l="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(l="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";a%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const n=t.length?t[t.length-1].outSize:s[1],r=md(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function ko(s,t,n,r){const o=l6(s.shape);let a=s;for(let i=0;i<o.length;i++){const{inSize:l,windowSize:c,outSize:u}=o[i];let h,d;n==="mean"?h=i===0?new QC({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u},l):new QC({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u}):h=new i6({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u},n),d=a,a=r.runWebGLProgram(h,[a],t),d.dataId!==s.dataId&&r.disposeIntermediateTensorInfo(d)}return a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c6{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[n[i]];this.outputShape=r,this.rank=r.length;const o=Ye(this.rank),a=u6(n);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}function u6(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let o=0;o<s.length;o++)r[s[o]]=n[o];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h6{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(t.length);for(let h=0;h<r.length;h++)r[h]=t[n[h]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=Ye(this.rank),a=PC("rc",this.rank),i=new Array(this.rank);for(let h=0;h<n.length;h++)i[n[h]]=a[h];const l=`vec2(${i.slice(-2).join()})`,c=`++${a[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${c}) {
        result[1] = ${u};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${c}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wp(s,t,n){const r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new h6(s.shape,t):new c6(s.shape,t);return n.runWebGLProgram(r,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(s,t,n,r){const o=t,a=s.shape.length,i=Se(o,s.shape);let l=i;const c=ft(l,a),u=c!=null;let h=s;u&&(h=wp(s,c,r),l=yt(l.length,a)),Vt("sum",l,a);const[d,p]=Rt(h.shape,l);let f=d;n&&(f=pt(d,i));const m=j(p),y=j(s.shape)/m,b=ie({inputs:{x:h},attrs:{shape:[y,m]},backend:r}),x=mh(s.dtype),v=ko(b,x,"sum",r),w=ie({inputs:{x:v},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),u&&r.disposeIntermediateTensorInfo(h),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;return d6(o,a,i,n)}const p6={kernelName:Il,backendName:"webgl",kernelFunc:vp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{perm:a}=r,i=n,l=o.shape.length,c=new Array(l);for(let h=0;h<c.length;h++)c[h]=o.shape[a[h]];let u;if(i.shouldExecuteOnCPU([o])){const d=i.texData.get(o.dataId).values,p=Fb(d,o.shape,o.dtype,a,c);u=i.makeTensorInfo(c,o.dtype);const f=i.texData.get(u.dataId);f.values=p}else u=wp(o,a,i);return u}const f6={kernelName:El,backendName:"webgl",kernelFunc:tn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ek=1e3;function $p({a:s,b:t,transposeA:n,transposeB:r,backend:o,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:c=null}){const u=s.shape.length,h=t.shape.length,d=n?s.shape[u-2]:s.shape[u-1],p=r?t.shape[h-1]:t.shape[h-2],f=n?s.shape[u-1]:s.shape[u-2],m=r?t.shape[h-2]:t.shape[h-1],g=s.shape.slice(0,-2),y=t.shape.slice(0,-2),b=j(g),x=j(y),v=b===x||b===1||x===1;I(u>=2&&h>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const C=(b>x?s.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);I(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const N=n?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=ie({inputs:{x:s},backend:o,attrs:{shape:N}}),E=ie({inputs:{x:t},backend:o,attrs:{shape:k}}),A=[S,E],F=Math.max(b,x),D=n?S.shape[1]:S.shape[2],O=a!=null,B=i!=null,V=c==="leakyrelu",z=c!=null?xp(c,!0):null,H=O||B||V||z!=null;let U;if((f===1||m===1)&&D>ek&&H===!1){let X=S,J=E;n&&(X=tn({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),A.push(X)),r&&(J=tn({inputs:{x:E},backend:o,attrs:{perm:[0,2,1]}}),A.push(J));const Q=m!==1,ee=m===1;let se=X;Q&&(se=ie({inputs:{x:X},backend:o,attrs:{shape:[F,D,1]}}),A.push(se));const re=m===1?2:1;let ae=J;ee&&(ae=ie({inputs:{x:J},backend:o,attrs:{shape:[F,1,D]}}),A.push(ae));const le=_b({inputs:{a:se,b:ae},backend:o});U=vp({inputs:{x:le},backend:o,attrs:{axis:re,keepDims:!0}}),A.push(le)}else{const X=mn(s.dtype,t.dtype),J=new XC(N,k,[F,f,m],n,r,O,z,B,V),Q=[S,E];if(a!=null&&Q.push(a),B&&Q.push(i),V){const ee=o.makeTensorInfo([],"float32",zs(l,"float32"));Q.push(ee),A.push(ee)}U=o.runWebGLProgram(J,Q,X)}const K=ie({inputs:{x:U},backend:o,attrs:{shape:C}});A.push(U);for(const X of A)o.disposeIntermediateTensorInfo(X);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a,bias:i,preluActivationWeights:l}=t,{transposeA:c,transposeB:u,activation:h,leakyreluAlpha:d}=r;return $p({a:o,b:a,transposeA:c,transposeB:u,backend:n,bias:i,preluActivationWeights:l,leakyreluAlpha:d,activation:h})}const g6={kernelName:Fl,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk="return abs(x);";function y6(s){const{inputs:t,backend:n}=s,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const a=n.texData.get(r.dataId),i=OC(a.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let o;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new $i(r.shape,tk):o=new Er(r.shape,tk),n.runWebGLProgram(o,[r],r.dtype)}const b6={kernelName:Ri,backendName:"webgl",kernelFunc:y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6=ms+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,w6=Me({opSnippet:x6}),v6={kernelName:_o,backendName:"webgl",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6=ms+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,C6=Me({opSnippet:$6}),k6={kernelName:Oo,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk="return a + b;",I6=Ht({opSnippet:nk,packedOpSnippet:nk,supportsComplex:!0,cpuKernelImpl:Oq}),N6={kernelName:Br,backendName:"webgl",kernelFunc:I6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S6{constructor(t,n){this.outputShape=[],this.outputShape=t,this.variableNames=n.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});const o=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T6{constructor(t,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=n.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});const o=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cp(s){const{inputs:t,backend:n}=s,r=t;if(r.length===1)return Sn({inputs:{x:r[0]},backend:n});if(r.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(r.length/2),u=Cp({inputs:r.slice(0,c),backend:n}),h=Cp({inputs:r.slice(c),backend:n});return Cp({inputs:[u,h],backend:n})}const o=r.map(c=>c.dtype).reduce((c,u)=>mn(c,u)),a=r.map(c=>c.shape),l=q().getBool("WEBGL_PACK")?new T6(r[0].shape,a):new S6(r[0].shape,a);return n.runWebGLProgram(l,r,o)}const E6={kernelName:Fi,backendName:"webgl",kernelFunc:Cp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=Se(a,o.shape);let u=c;const h=ft(u,l);let d=o;h!=null&&(d=tn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=yt(u.length,l)),Vt("all",u,l);const[p,f]=Rt(d.shape,u),m=j(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=ko(g,g.dtype,"all",n);let b;if(i){const x=pt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const D6={kernelName:iu,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=Se(a,o.shape);let u=c;const h=ft(u,l);let d=o;h!=null&&(d=tn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=yt(u.length,l)),Vt("any",u,l);const[p,f]=Rt(d.shape,u),m=j(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=ko(g,g.dtype,"any",n);let b;if(i){const x=pt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const F6={kernelName:lu,backendName:"webgl",kernelFunc:R6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _6{constructor(t,n,r){this.variableNames=["A"];const{windowSize:o,batchSize:a,outSize:i}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const l=n==="max"?">":"<",c=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O6{constructor(t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],i=Math.ceil(a/n);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const l=this.outputShape,c=l.length,u=Ye(c),h=en("coords",c);let d,p;if(i===1){p=c+1;const S=Ye(p);d=`
        ${S} sourceLocR = ${S}(${h.join()}, 0);
        ++${h[c-1]};
        ${S} sourceLocG = ${S}(${h.join()}, 0);
        ++${h[c-2]};
        ${S} sourceLocA = ${S}(${h.join()}, 0);
        --${h[c-1]};
        ${S} sourceLocB = ${S}(${h.join()}, 0);
        --${h[c-2]};`}else p=c,d=`
        ${u} sourceLocR = coords;
        ++${h[c-1]};
        ${u} sourceLocG = coords;
        ++${h[c-2]};
        ${u} sourceLocA = coords;
        --${h[c-1]};
        ${u} sourceLocB = coords;
        --${h[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,p),m="."+f[p-1],g=f.map(S=>"int "+S),y=en("sourceLocR",p-1).concat("inIdx.r"),b=en("sourceLocG",p-1).concat("inIdx.g"),x=en("sourceLocB",p-1).concat("inIdx.b"),v=en("sourceLocA",p-1).concat("inIdx.a"),w=r==="max"?"greaterThan":"lessThan",C=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()})));`,N=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,k=o?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[c-1]} < ${l[c-1]-1};
        bool hasNextRow = ${h[c-2]} < ${l[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${N};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${N};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(s,t,n,r=null){let o=t.shape[0],a=t.shape[1];r!=null&&(o=r.shape[0],a=r.shape[1]);const i=md(a),l={windowSize:i,inSize:a,batchSize:o,outSize:Math.ceil(a/i)},c=new _6(l,n,r==null),u=[t];r!=null&&u.push(r);const h=s.runWebGLProgram(c,u,"int32");if(h.shape[1]===1)return h;const d=sk(s,t,n,h);return s.disposeIntermediateTensorInfo(h),d}function rk(s,t,n,r=null){const o=r!=null?r.shape:t.shape,a=o[o.length-1],i=md(a),l=new O6(o,i,n,r==null),c=r==null?[t]:[t,r],u=s.runWebGLProgram(l,c,"int32");if(u.shape.length===t.shape.length){const h=rk(s,t,n,u);return s.disposeIntermediateTensorInfo(u),h}return u}function ok(s,t,n,r){const o=[n];if(Vt("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],i=s.texData.get(t.dataId),l=i!==null&&i.isPacked;let c=t;l&&(c=s.unpackTensor(t),a.push(c));const[u,h]=Rt(c.shape,o),d=j(h),p=ie({inputs:{x:c},backend:s,attrs:{shape:[-1,d]}});a.push(p);const f=sk(s,p,r);a.push(f);const m=ie({inputs:{x:f},backend:s,attrs:{shape:u}});return a.forEach(g=>s.disposeIntermediateTensorInfo(g)),m}return rk(s,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;let i=Se(a,o.shape);const l=ft(i,o.shape.length);let c=o;const u=[];l!=null&&(c=tn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=yt(i.length,c.shape.length)),Vt("argMax",[i[0]],c.shape.length);const h=ok(n,c,i[0],"max");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}const P6={kernelName:_i,backendName:"webgl",kernelFunc:L6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;let i=Se(a,o.shape);const l=ft(i,o.shape.length);let c=o;const u=[];l!=null&&(c=tn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=yt(i.length,c.shape.length)),Vt("argMin",[i[0]],c.shape.length);const h=ok(n,c,i[0],"min");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}const z6={kernelName:Oi,backendName:"webgl",kernelFunc:M6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=ms+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,V6=Me({opSnippet:B6}),W6={kernelName:Lo,backendName:"webgl",kernelFunc:V6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6=ms+"return log(x + sqrt(x * x + 1.0));",G6=Me({opSnippet:U6}),H6={kernelName:Po,backendName:"webgl",kernelFunc:G6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6=ms+`
  return atan(x);
`,q6=Me({opSnippet:j6}),K6={kernelName:Mo,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6=n6+`
  return atan(a, b);
`,Y6=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+s6+`
  return result;
`,Z6=Ht({opSnippet:X6,packedOpSnippet:Y6}),J6={kernelName:Bo,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6=ms+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,eX=Me({opSnippet:Q6}),tX={kernelName:zo,backendName:"webgl",kernelFunc:eX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zc{constructor(t,n,r,o=!1,a=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=t.padInfo.top,m=t.padInfo.left;this.outputShape=t.outShape;const g=n==="avg",y=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(g||(x="-1.0 / 1e-20"),r){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${c});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?a?y:b:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let w=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(w="avgValue / count");const C=Math.floor(i/4)*4,N=i%4,k=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${C};
          if (${N===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${N===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${N===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${w});
      }
    `}}class Ob{constructor(t,n,r,o=!1,a=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,c=t.strideHeight,u=t.strideWidth,h=t.dilationDepth,d=t.dilationHeight,p=t.dilationWidth,f=t.effectiveFilterDepth,m=t.effectiveFilterHeight,g=t.effectiveFilterWidth,y=t.padInfo.front,b=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const v=n==="avg";let w="0.0";if(v||(w="-1.0 / 1e-20"),r){const A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${c}, ${u});
        const ivec3 pads = ivec3(${y}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let N=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(N="avgValue / count");const k=Math.floor(i/4)*4,S=i%4,E=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${c}, ${u});
      const ivec3 pads = ivec3(${y}, ${b}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${k};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${N});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;Lc(o,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;I(Bt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Un(o.shape,a,i,u,l,c);if(h.filterWidth===1&&h.filterHeight===1&&De(h.inShape,h.outShape))return Sn({inputs:{x:o},backend:n});const d=new zc(h,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}const sX={kernelName:Li,backendName:"webgl",kernelFunc:nX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r,h=[1,1,1],d=Us(o.shape,a,i,h,l,c,u),p=new Ob(d,"avg",!1);return n.runWebGLProgram(p,[o],"float32")}const oX={kernelName:Pi,backendName:"webgl",kernelFunc:rX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aX{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=c-1-t.padInfo.top,d=u-1-t.padInfo.left,p=1/(n*r);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class iX{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterDepth,r=t.filterHeight,o=t.filterWidth,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=d-1-t.padInfo.front,g=p-1-t.padInfo.top,y=f-1-t.padInfo.left,b=1/(n*r*o);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a,{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,d=[1,1,1],p=Us(i.shape,l,c,d,u,h),f=new iX(p);return n.runWebGLProgram(f,[o],i.dtype)}const cX={kernelName:uu,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a;Lc([o,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:u}=r,h=Un(i.shape,l,c,1,u),d=new aX(h);return n.runWebGLProgram(d,[o],i.dtype)}const hX={kernelName:cu,backendName:"webgl",kernelFunc:uX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a}=t,{transposeA:i,transposeB:l}=r;return $p({a:o,b:a,transposeA:i,transposeB:l,backend:n})}const pX={kernelName:Mi,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fX{constructor(t,n,r,o,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ee(t,n),Ee(t,r);let l="0.0";o!=null&&(Ee(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="1.0";a!=null&&(Ee(t,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mX{constructor(t,n,r,o,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ee(t,n),Ee(t,r);let l="vec4(0.0)";o!=null&&(Ee(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="vec4(1.0)";a!=null&&(Ee(t,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX=({inputs:s,backend:t,attrs:n})=>{const{x:r,mean:o,variance:a,offset:i,scale:l}=s;I(o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(l==null||o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=[r,o,a];let h=null;i!=null&&(h=i.shape,u.push(i));let d=null;l!=null&&(d=l.shape,u.push(l));const p=q().getBool("WEBGL_PACK_NORMALIZATION")?new mX(r.shape,o.shape,a.shape,h,d,c):new fX(r.shape,o.shape,a.shape,h,d,c);return t.runWebGLProgram(p,u,u[0].dtype)},yX={kernelName:Yi,backendName:"webgl",kernelFunc:gX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bX{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const n=Ye(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=xX(this.rank);let o;const a=t.map((i,l)=>`sourceLoc.${Lb[l]} = start[${l}] + coords.${Lb[l]};`);o=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${r}));
      }
    `}}const Lb=["x","y","z","w","u","v"];function xX(s){if(s===1)return"sourceLoc";if(s<=6)return Lb.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wX{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Ye(this.rank),r=en("coords",this.rank),o=en("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${a})`,l=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${t.map((h,d)=>`start[${d}]`).join()});`:t.map((h,d)=>`${o[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${l}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(s,t,n,r){const o=r.texData.get(s.dataId),a=r.makeTensorInfo(n,s.dtype),i=r.texData.get(a.dataId);Object.assign(i,o),i.refCount=1,i.shape=n,i.dtype=s.dtype;let l=Hf(t,ye(s.shape));o.slice&&(l+=o.slice.flatOffset),i.slice={flatOffset:l,origDataId:o.slice&&o.slice.origDataId||s.dataId};const c=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,c+1),a}function ki(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,size:i}=r,[l,c]=kh(o,a,i);if(Uf(o,l,c),j(c)===0)return n.makeTensorInfo(c,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||o.dtype==="string"){const d=n.texData.get(o.dataId),p=iK(d.values,l,c,o.shape,o.dtype);return n.makeTensorInfo(c,o.dtype,p)}const{isPacked:u}=n.texData.get(o.dataId),h=Gf(o.shape,l,c);if(u||!h){const d=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wX(c):new bX(c),p=[l];return n.runWebGLProgram(d,[o],o.dtype,p)}return n.uploadToGPU(o.dataId),vX(o,l,c,n)}const $X={kernelName:kl,backendName:"webgl",kernelFunc:ki};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,crops:i}=r;I(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce((x,v)=>x*v),c=cc(o.shape,a,l),u=uc(c.length,a.length),h=hc(o.shape,a,l),d=Um(i,a.length),p=Gm(h,i,a.length),f=[],m=ie({inputs:{x:o},backend:n,attrs:{shape:c}}),g=tn({inputs:{x:m},backend:n,attrs:{perm:u}}),y=ie({inputs:{x:g},backend:n,attrs:{shape:h}}),b=ki({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),b},kX={kernelName:zi,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i}=r,l=n.readSync(o.dataId),c=n.readSync(a.dataId),u=_C(l,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}const NX={kernelName:hu,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SX(s){const{inputs:t,backend:n}=s,{s0:r,s1:o}=t,a=n.readSync(r.dataId),i=n.readSync(o.dataId),l=Ee(Array.from(a),Array.from(i));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const TX={kernelName:du,backendName:"webgl",kernelFunc:SX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX="return float(a != b);",ak=Ht({opSnippet:EX,cpuKernelImpl:nK,dtype:"bool"}),AX={kernelName:pl,backendName:"webgl",kernelFunc:ak};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.texData.get(r.dataId);return Sn({inputs:{x:o.complexTensorInfos.real},backend:n})}const DX={kernelName:Gu,backendName:"webgl",kernelFunc:Bc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RX="return float(int(x));";function FX(s,t){const n=new Er(s.shape,RX),r=t.runWebGLProgram(n,[s],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pb(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dtype:a}=r;if(a==="complex64"){if(o.dtype==="complex64")return Sn({inputs:{x:o},backend:n});const i=bt(o.shape),l=Pb({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),c=Ar({inputs:{real:l,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(l),c}if(o.dtype==="complex64"){const i=Bc({inputs:{input:o},backend:n}),l=Pb({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),l}if(!sf(o.dtype,a)){const i=Sn({inputs:{x:o},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return FX(o,n);if(a==="bool"){const i=n.makeTensorInfo([],"bool",Ct("bool",1)),c=ak({inputs:{a:o,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),c}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}const _X={kernelName:Vo,backendName:"webgl",kernelFunc:Pb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ik="return ceil(x);",OX=Me({opSnippet:ik,packedOpSnippet:ik,cpuKernelImpl:Pq}),LX={kernelName:Wo,backendName:"webgl",kernelFunc:OX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PX{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{clipValueMin:a,clipValueMax:i}=r;let l;q().getBool("WEBGL_PACK_CLIP")?l=new MX(o.shape):l=new PX(o.shape);const c=[[a],[i]];return n.runWebGLProgram(l,[o],o.dtype,c)}const BX={kernelName:Uo,backendName:"webgl",kernelFunc:zX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function WX(s){const{inputs:t,backend:n}=s,{x:r}=t,o=n.texData.get(r.dataId),a=new VX(r.shape),i=[lk(r,o.complexTensorInfos.real),lk(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}const UX={kernelName:Bi,backendName:"webgl",kernelFunc:WX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GX{constructor(t){this.outputShape=[],this.outputShape=Is(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const n=new Array(t.length-1);n[0]=t[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+t[i][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const l=n[i-1];r.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const o=n.length,a=n[n.length-1];r.push(`else setOutput(getT${o}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(t,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Is(t,n);const r=this.outputShape,o=r.length,a=Ye(o),i=en("coords",o),l=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((g,y)=>`T${y}`);const c=new Array(t.length-1);c[0]=t[0][n];for(let g=1;g<c.length;g++)c[g]=c[g-1]+t[g][n];const u=l[n],h=l.slice(-2),d=l.join();let p=`if (${u} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${h.join()}));
        }`;for(let g=1;g<c.length;g++){const y=c[g-1];p+=`
        if (${u} < ${c[g]}  && ${u} >= ${c[g-1]}) {
          return getChannel(
            getT${g}(${kp(l,u,y)}),
            vec2(${kp(h,u,y)}));
        }`}const f=c.length,m=c[c.length-1];p+=`
        return getChannel(
          getT${f}(${kp(l,u,m)}),
          vec2(${kp(h,u,m)}));`,this.userCode=`
      float getValue(${l.map(g=>"int "+g)}) {
        ${p}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${r[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${r[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${r[o-2]} &&
            ${i[o-1]} < ${r[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function kp(s,t,n){const r=s.indexOf(t);return s.map((a,i)=>i===r?`${a} - ${n}`:a).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ip(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.texData.get(r.dataId);return Sn({inputs:{x:o.complexTensorInfos.imag},backend:n})}const jX={kernelName:Ru,backendName:"webgl",kernelFunc:Ip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(s,t,n){const r=s[0].dtype;if(r==="complex64"){const h=s.map(g=>Bc({inputs:{input:g},backend:n})),d=s.map(g=>Ip({inputs:{input:g},backend:n})),p=Ii(h,t,n),f=Ii(d,t,n),m=Ar({inputs:{real:p,imag:f},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}let o=n.shouldExecuteOnCPU(s);if(r==="string"&&(o=!0),o){const h=s.map(b=>{const x=j(b.shape.slice(t));return ie({inputs:{x:b},backend:n,attrs:{shape:[-1,x]}})}),d=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),p=Is(h.map(b=>b.shape),1),f=h[0].shape[0]===1,m=Mq(d,p,r,f),g=Is(s.map(b=>b.shape),t),y=n.makeTensorInfo(g,r,m);return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}if(s.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const h=Math.floor(s.length/2),d=Ii(s.slice(0,h),t,n),p=Ii(s.slice(h),t,n),f=Ii([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new HX(s.map(d=>d.shape),t);return n.runWebGLProgram(h,s,r)}const{tensors2D:a,outShape:i}=qX(s,t,n),l=new GX(a.map(h=>h.shape)),c=n.runWebGLProgram(l,a,r);a.forEach(h=>n.disposeIntermediateTensorInfo(h));const u=ie({inputs:{x:c},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(c),u}function qX(s,t,n){const r=Is(s.map(a=>a.shape),t);return{tensors2D:s.map(a=>ie({inputs:{x:a},attrs:{shape:[-1,j(a.shape.slice(t))]},backend:n})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r,a=Se(o,t[0].shape)[0],i=Is(t.map(u=>u.shape),a);if(j(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(u=>j(u.shape)>0);if(l.length===1)return Sn({inputs:{x:l[0]},backend:n});const c=l.map(u=>u.shape);return Bm(c,a),Ii(l,a,n)}const KX={kernelName:Vi,backendName:"webgl",kernelFunc:ck};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uk{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,c=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,y=t.dataFormat==="channelsLast",b=y?1:2,x=y?2:3,v=y?3:1;let w="",C="";r&&(o?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:w=`
          float activation(float x) {
            ${r}
          }
        `,C="result = activation(result);");const N=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${N}
        ${C}
        setOutput(result);
      }
    `}}class XX{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const n=t.padInfo.front,r=t.padInfo.top,o=t.padInfo.left,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterDepth,p=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${i}, ${l});
      const ivec3 pads = ivec3(${n}, ${r}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YX{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Ln(this.outputShape.length);const{dataFormat:r}=n,o=Qt(),a=r==="channelsLast",i=a?0:1,l=a?1:2,c=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let u="";for(let h=0;h<=1;h++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.y + ${d};
          pos = rc.x + ${h};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${h*2+d}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${h*2+d}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk({x:s,filter:t,convInfo:n,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const c=s.shape,u=r.texData.get(s.dataId),h=n.inChannels,d=c[0]*c[1]*c[2],p=n.outChannels,f=n.dataFormat==="channelsLast",m=!1,g=!1;let y;const b=[];if(!((d===1||p===1)&&h>ek)&&u.isPacked&&f&&u.texture!=null&&c[2]%2!=0&&De(u.shape.slice(-3),c.slice(-3))){const w=c[0]*c[1]*(c[2]+1),C={dataId:s.dataId,shape:[1,w,n.inChannels],dtype:s.dtype},N=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,I(pp(u.shape,C.shape),()=>`packed reshape ${u.shape} to ${C.shape} isn't free`);const k=ie({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(k);const S=$p({a:C,b:k,backend:r,transposeA:m,transposeB:g,bias:o,activation:l,preluActivationWeights:a,leakyreluAlpha:i}),E=r.texData.get(S.dataId);I(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=N,E.shape=n.outShape,y=Sn({inputs:{x:S},backend:r}),y.shape=n.outShape,b.push(S)}else{const w=f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],C=ie({inputs:{x:s},backend:r,attrs:{shape:[1,w,n.inChannels]}}),N=ie({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),k=$p({a:C,b:N,transposeA:m,transposeB:g,backend:r,bias:o,activation:l,preluActivationWeights:a,leakyreluAlpha:i});y=ie({inputs:{x:k},backend:r,attrs:{shape:n.outShape}}),b.push(C),b.push(N),b.push(k)}for(const w of b)r.disposeIntermediateTensorInfo(w);return y}function dk({x:s,filter:t,convInfo:n,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:c,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m=f==="channelsLast",g=c*u*h,y=p*d,b=[g,y],x=!0,v=!1,w=[],C=ie({inputs:{x:s},backend:r,attrs:{shape:s.shape.slice(1)}}),N=ie({inputs:{x:t},backend:r,attrs:{shape:[1,g,j(t.shape)/g]}});w.push(C),w.push(N);const k=new YX(b,n),S=[C.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(k,[C],"float32",S),A=ie({inputs:{x:E},backend:r,attrs:{shape:[1,b[0],b[1]]}});w.push(E),w.push(A);const F=o!=null,D=a!=null,O=l==="leakyrelu",B=l?xp(l,!0):null,V=new XC(A.shape,N.shape,[1,y,n.outChannels],x,v,F,B,D,O),z=[A,N];if(o&&z.push(o),D&&z.push(a),O){const X=r.makeTensorInfo([],"float32",zs(i,"float32"));z.push(X),w.push(X)}const H=r.runWebGLProgram(V,z,"float32"),U=m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],K=ie({inputs:{x:H},backend:r,attrs:{shape:U}});w.push(H);for(const X of w)r.disposeIntermediateTensorInfo(X);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dataFormat:c,dilations:u,dimRoundingMode:h}=r,d=Gs(c),p=Dt(o.shape,a.shape,i,u,l,h,!1,d);let f;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))f=hk({x:o,filter:a,convInfo:p,backend:n});else if(q().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=dk({x:o,filter:a,convInfo:p,backend:n});else{const g=new uk(p);f=n.runWebGLProgram(g,[o,a],"float32")}const m=ie({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}const JX={kernelName:Wi,backendName:"webgl",kernelFunc:ZX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,a=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class e5{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dataFormat==="channelsLast",l=n-1-t.padInfo.top,c=r-1-t.padInfo.left,u=i?1:2,h=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class t5{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${a};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class n5{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterDepth,r=t.filterHeight,o=t.filterWidth,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=n-1-t.padInfo.front,u=r-1-t.padInfo.top,h=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${u}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,dataFormat:c,dimRoundingMode:u,filterShape:h}=r,d=Gs(c),p=Dt(o.shape,h,i,1,l,u,!1,d),f=new QX(p);return n.runWebGLProgram(f,[o,a],"float32")}const r5={kernelName:fu,backendName:"webgl",kernelFunc:s5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o5(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{inputShape:i,strides:l,pad:c,dataFormat:u,dimRoundingMode:h}=r,d=Gs(u),p=Dt(i,a.shape,l,1,c,h,!1,d),f=new e5(p);return n.runWebGLProgram(f,[o,a],"float32")}const a5={kernelName:Ui,backendName:"webgl",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r,u=fr(o.shape,a.shape,i,c,l),h=new XX(u);return n.runWebGLProgram(h,[o,a],"float32")}const l5={kernelName:Gi,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,filterShape:c}=r,u=fr(o.shape,c,i,1,l),h=new t5(u);return n.runWebGLProgram(h,[o,a],"float32")}const u5={kernelName:mu,backendName:"webgl",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{pad:i,strides:l,inputShape:c}=r,u=fr(c,a.shape,l,1,i),h=new n5(u);return n.runWebGLProgram(h,[o,a],"float32")}const d5={kernelName:gu,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5=KC+`
  return cos(x);
`,f5=Me({opSnippet:p5}),m5={kernelName:Go,backendName:"webgl",kernelFunc:f5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,y5=Me({opSnippet:g5}),b5={kernelName:Ho,backendName:"webgl",kernelFunc:y5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x5{constructor(t,n,r,o,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,c,u]=t,[h]=n,[d,p]=r;this.outputShape=[h,d,p,u];const f=o==="bilinear"?1:0,[m,g]=[`${l-1}.0`,`${c-1}.0`],[y,b,x]=d>1?[`${(l-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[v,w,C]=p>1?[`${(c-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=s=>{const{inputs:t,backend:n,attrs:r}=s,{image:o,boxes:a,boxInd:i}=t,{cropSize:l,method:c,extrapolationValue:u}=r,h=new x5(o.shape,a.shape,l,c,u);return n.runWebGLProgram(h,[o,a,i],"float32")},v5={kernelName:yu,backendName:"webgl",kernelFunc:w5};class pk{constructor(t,n,r){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=t;const o=t.length,a=n?"0.0":`getX(${fk(o,"coords")})`,i=t[t.length-1];let l="",c="";n?(l=r?`end != ${i-1}`:"end != 0",c=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${i}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ye(o)} coords = getOutputCoords();
        int end = ${mk(o,"coords")};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${mk(o,"coords")} = idx;
          val += getX(${fk(o,"coords")});
        }
        setOutput(val);
      }
    `}}function fk(s,t){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${s} is not yet supported`)}function mk(s,t){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,exclusive:i,reverse:l}=r,c=o.shape.length,u=ft([a],c);let h=o;u!=null&&(h=tn({inputs:{x:o},backend:n,attrs:{perm:u}}));const d=yt(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${a}`);const p=h.shape[d];let f=Sn({inputs:{x:h},backend:n});for(let m=0;m<=Math.ceil(Math.log2(p))-1;m++){const g=new pk(h.shape,!1,l),y=[[m]],b=f;f=n.runWebGLProgram(g,[f],f.dtype,y),n.disposeIntermediateTensorInfo(b)}if(i){const m=new pk(h.shape,i,l),g=f;f=n.runWebGLProgram(m,[f],f.dtype),n.disposeIntermediateTensorInfo(g)}if(u!=null){const m=ja(u),g=tn({inputs:{x:f},backend:n,attrs:{perm:m}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),g}return f}const C5={kernelName:Hi,backendName:"webgl",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i,binaryOutput:l}=r;if(o.shape.length===1){const c=n.readSync(o.dataId),u=n.readSync(a.dataId),h=_C(c,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,h)}else if(o.shape.length===2){const c=n.bufferSync(o),u=n.bufferSync(a),h=Lq(c,u,i,l);return n.makeTensorInfo(h.shape,a.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const I5={kernelName:bu,backendName:"webgl",kernelFunc:k5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N5{constructor(t,n,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=n,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockSize:a,dataFormat:i}=r,l=o.shape[0],c=i==="NHWC"?o.shape[1]:o.shape[2],u=i==="NHWC"?o.shape[2]:o.shape[3],h=i==="NHWC"?o.shape[3]:o.shape[1],d=c*a,p=u*a,f=h/(a*a),m=i==="NHWC"?[l,d,p,f]:[l,f,d,p],g=new N5(m,a,i);return n.runWebGLProgram(g,[o],o.dtype)}const T5={kernelName:xu,backendName:"webgl",kernelFunc:S5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gk{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,c=t.outChannels/t.inChannels;let u="",h="";r&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:u=`
          float activation(float x) {
            ${r}
          }
        `,h="result = activation(result);");const d=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yk{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ln(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,c=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=d;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)f+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;f+=`
    for (int r = 0; r < ${h}; r++) {
      `;for(let b=0;b<d;b++)f+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(p+1)/2;b++){const x=b*2;if(f+=`
          xC = xCCorner + ${x*u};
          `,c===1){if(x<d&&(l%2==1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?f+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const v=l%2==0?ef(u):u;u%2==0&&l%2==1||u%2!=0&&l%2!=1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1&&(f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                      xTexelC${x} = getX(batch, xR, xCOffset, d1);
                      xTexelC${x}Ready = 1;
                    }
                    `),f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                  `):v===1?f+=`
                    xC${x+1} = xTexelC${x};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(l%2==1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(f+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(f+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let m="",g="";r&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,g="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c,dimRoundingMode:u}=r;let h=c;h==null&&(h=[1,1]),I(Bt(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=Dt(o.shape,a.shape,i,h,l,u,!0);let p;q().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new yk(d):p=new gk(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[o,a],"float32",f)}const A5={kernelName:ji,backendName:"webgl",kernelFunc:E5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D5{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,a=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class R5{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=n-1-t.padInfo.top,l=r-1-t.padInfo.left,c=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,filterShape:h}=r,d=Dt(o.shape,h,i,l,c,u,!0),p=new D5(d);return n.runWebGLProgram(p,[o,a],"float32")}const _5={kernelName:wu,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,inputShape:h}=r,d=Dt(h,a.shape,i,l,c,u,!0),p=new R5(d);return n.runWebGLProgram(p,[o,a],"float32")}const L5={kernelName:vu,backendName:"webgl",kernelFunc:O5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P5{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(s){const{inputs:t,backend:n}=s,{x:r}=t,o=[...r.shape,...r.shape],a=j(r.shape),i=ie({inputs:{x:r},backend:n,attrs:{shape:[a]}}),l=new P5(a),c=n.runWebGLProgram(l,[i],i.dtype),u=ie({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}const z5={kernelName:$u,backendName:"webgl",kernelFunc:M5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B5{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:n,inWidth:r,padInfo:o,strideHeight:a,strideWidth:i,filterHeight:l,filterWidth:c,dilationHeight:u,dilationWidth:h}=t,{top:d,left:p}=o;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${i});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r,u=Hl(o.shape,a.shape,i,l,"NHWC",c);let h;const d=new B5(u);h=n.runWebGLProgram(d,[o,a],"float32");const p=ie({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),p}const W5={kernelName:qi,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(s){const{inputs:t,backend:n,attrs:r}=s,{equation:o}=r,a=t,{allDims:i,summedDims:l,idDims:c}=Qm(o,a.length);tg(i.length,c,a);const{path:u,steps:h}=ng(l,c),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const y of h[g]){const{permutationIndices:b,expandDims:x}=eg(f,c[y]);let v;sg(b)?v=a[y]:(v=tn({inputs:{x:a[y]},backend:n,attrs:{perm:b}}),m.push(v));const w=v.shape.slice();for(let C=0;C<x.length;++C)w.splice(x[C],0,1);De(v.shape,w)||(v=ie({inputs:{x:v},backend:n,attrs:{shape:w}}),m.push(v)),p===null?p=v:(p=_b({inputs:{a:v,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=vp({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&n.disposeIntermediateTensorInfo(g);return p}const G5={kernelName:Iu,backendName:"webgl",kernelFunc:U5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5="return (x >= 0.0) ? x : (exp(x) - 1.0);",j5=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,q5=Me({opSnippet:H5,packedOpSnippet:j5}),K5={kernelName:qo,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5="return (b >= 1.0) ? a : a * (b + 1.0);",Y5=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Z5=s=>{const{inputs:t,backend:n}=s,{dy:r,y:o}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Mc(Y5,r.shape,o.shape):new Ci(X5,r.shape,o.shape);return n.runWebGLProgram(a,[r,o],r.dtype)},J5={kernelName:Nu,backendName:"webgl",kernelFunc:Z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=`
  return vec4(equal(a, b));
`,e8="return float(a == b);",t8=Ht({opSnippet:e8,packedOpSnippet:Q5,dtype:"bool",cpuKernelImpl:zq}),n8={kernelName:Ki,backendName:"webgl",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Hm};
  float a1 = ${jm};
  float a2 = ${qm};
  float a3 = ${Km};
  float a4 = ${Xm};
  float a5 = ${Ym};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,r8=Me({opSnippet:s8}),o8={kernelName:Ko,backendName:"webgl",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk="return exp(x);",xk=Me({opSnippet:bk,packedOpSnippet:bk,cpuKernelImpl:Bq,dtype:"float32"}),a8={kernelName:Xo,backendName:"webgl",kernelFunc:xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mb(s){const{inputs:t,attrs:n,backend:r}=s,{dim:o}=n,{input:a}=t,i=a.shape.length,l=a.shape.slice();let c=o;return o<0&&(I(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+o+1),l.splice(c,0,1),ie({inputs:{x:a},backend:r,attrs:{shape:l}})}const i8={kernelName:Xi,backendName:"webgl",kernelFunc:Mb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk="return exp(x) - 1.0;",l8=Me({opSnippet:wk,packedOpSnippet:wk,cpuKernelImpl:Vq}),c8={kernelName:Yo,backendName:"webgl",kernelFunc:l8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vk{constructor(t,n,r){this.variableNames=["real","imag"];const o=n[1];this.outputShape=n;const a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${o}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(s,t,n){const r=n.texData.get(s.dataId),o=j(s.shape),a=s.shape[s.shape.length-1],i=o/a,l=ie({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),c=l.shape,u=new vk("real",c,t),h=new vk("imag",c,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(u,d,"float32"),f=n.runWebGLProgram(h,d,"float32"),m=Ar({inputs:{real:p,imag:f},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f);const g=ie({inputs:{x:m},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(s){const{inputs:t,backend:n}=s,{input:r}=t;return $k(r,!1,n)}const h8={kernelName:Su,backendName:"webgl",kernelFunc:u8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d8{constructor(t,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(s){const{backend:t,attrs:n}=s,{shape:r,value:o}=n;let{dtype:a}=n;if(a=a||Ro(o),a==="string"){const i=Xt(a,j(r));return i.fill(o),t.makeTensorInfo(r,a,i)}else{const i=new d8(r,o),l=[[o]];return t.runWebGLProgram(i,[],a,l)}}const p8={kernelName:Tu,backendName:"webgl",kernelFunc:Vc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f8{constructor(t){this.variableNames=["Image"],this.outputShape=[];const n=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8={kernelName:Eu,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:n}=s,r=t,o=new f8(n.shape);return r.runWebGLProgram(o,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck="return floor(x);",g8=Me({opSnippet:Ck,packedOpSnippet:Ck,cpuKernelImpl:Wq}),y8={kernelName:Zo,backendName:"webgl",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,x8=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,w8=Ht({opSnippet:b8,packedOpSnippet:x8,dtype:"int32"}),v8={kernelName:Jo,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $8{constructor(t){this.variableNames=["A"];const n=Qt(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${r}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C8{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Qt(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${r}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8={kernelName:ih,backendName:"webgl",kernelFunc:I8};let Ni;function I8(s){const{inputs:t,backend:n,attrs:r}=s;let{pixels:o}=t;const{numChannels:a}=r,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,l=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[c,u]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],h=[u,c],d=[u,c,a];(l||i)&&(Ni==null&&(Ni=document.createElement("canvas").getContext("2d")),Ni.canvas.width=c,Ni.canvas.height=u,Ni.drawImage(o,0,0,c,u),o=Ni.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=On.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),o);const f=q().getBool("WEBGL_PACK")?new C8(d):new $8(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=Gs(h),y=Dt(o.shape,a.shape,c,d,u,p,!1,g);let b;const x=[];if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=hk({x:o,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(q().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)b=dk({x:o,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const w=i!=null,C=l!=null,N=f==="leakyrelu",k=f?xp(f,!1):null,S=new uk(y,w,k,C,N),E=[o,a];if(i&&E.push(i),l&&E.push(l),N){const A=n.makeTensorInfo([],"float32",zs(m,"float32"));E.push(A),x.push(A)}b=n.runWebGLProgram(S,E,"float32")}const v=ie({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach(w=>n.disposeIntermediateTensorInfo(w)),v}const S8={kernelName:_l,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=[];let g=h;g==null&&(g=[1,1]),I(Bt(c,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`);const y=Dt(o.shape,a.shape,c,g,u,d,!0),b=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=p?xp(p,b):null,v=[o,a],w=i!=null,C=l!=null,N=p==="leakyrelu";if(w&&v.push(i),C&&v.push(l),N){const A=n.makeTensorInfo([],"float32",zs(f,"float32"));v.push(A),m.push(A)}let k;b?k=new yk(y,w,x,C,N):k=new gk(y,w,x,C,N);const S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],E=n.runWebGLProgram(k,v,"float32",S);return m.forEach(A=>n.disposeIntermediateTensorInfo(A)),E}const E8={kernelName:Ol,backendName:"webgl",kernelFunc:T8};class A8{constructor(t,n,r){this.sliceDim=t,this.strides=n,this.variableNames=["x","indices"],this.outputShape=r;const o=Ye(n.length),a=Ye(r.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(s){const{inputs:t,backend:n}=s,{params:r,indices:o}=t,a=o.shape,i=a[a.length-1],l=j(r.shape),[c,u,h,d]=$h(r,o),p=ie({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),f=ie({inputs:{x:r},backend:n,attrs:{shape:[j(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=n.readSync(o.dataId),x=n.bufferSync(r),v=Uq(b,x,r.dtype,u,i,h,d,r.shape,l);return n.makeTensorInfo(c,r.dtype,v.values)}const m=new A8(i,d,[u,h]),g=n.runWebGLProgram(m,[f,p],f.dtype),y=ie({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}const R8={kernelName:Au,backendName:"webgl",kernelFunc:D8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F8{constructor(t,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const r=Ye(this.rank),o=_8(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function _8(s,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let o=0;o<s.length;o++)o===2?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[o]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,indices:a}=t,{axis:i,batchDims:l}=r,c=Se(i,o.shape)[0],u=n.readSync(a.dataId),h=o.shape[c];for(let w=0;w<u.length;++w){const C=u[w];I(C<=h-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${h-1}]`)}const d=og(o,a,c,l),p=j(a.shape),f=[],m=ie({inputs:{x:o},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),g=ie({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});f.push(m),f.push(g);const y=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([o,a])||o.dtype==="string"){const w=n.bufferSync(g),C=n.bufferSync(m),N=Gq(C,w,y);return f.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(d.outputShape,N.dtype,N.values)}const b=new F8(m.shape,y),x=n.runWebGLProgram(b,[m,g],m.dtype);f.push(x);const v=ie({inputs:{x},backend:n,attrs:{shape:d.outputShape}});return f.forEach(w=>n.disposeIntermediateTensorInfo(w)),v}const O8={kernelName:Zi,backendName:"webgl",kernelFunc:kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8="return float(a > b);",P8=`
  return vec4(greaterThan(a, b));
`,M8=Ht({opSnippet:L8,packedOpSnippet:P8,cpuKernelImpl:Hq,dtype:"bool"}),z8={kernelName:Ji,backendName:"webgl",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8="return float(a >= b);",V8=`
  return vec4(greaterThanEqual(a, b));
`,W8=Ht({opSnippet:B8,packedOpSnippet:V8,dtype:"bool",cpuKernelImpl:jq}),U8={kernelName:Qo,backendName:"webgl",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(s){const{inputs:t,backend:n}=s,{input:r}=t;return $k(r,!0,n)}const H8={kernelName:Du,backendName:"webgl",kernelFunc:G8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8="return float(!isnan(x) && !isinf(x));",q8=Me({opSnippet:j8,dtype:"bool"}),K8={kernelName:ta,backendName:"webgl",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8="return float(isinf(x));",Y8=Me({opSnippet:X8,dtype:"bool"}),Z8={kernelName:na,backendName:"webgl",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J8="return float(isnan(x));",Q8=Me({opSnippet:J8,dtype:"bool"}),eY={kernelName:sa,backendName:"webgl",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY="return float(a < b);",nY=`
  return vec4(lessThan(a, b));
`,sY=Ht({opSnippet:tY,packedOpSnippet:nY,cpuKernelImpl:qq,dtype:"bool"}),rY={kernelName:el,backendName:"webgl",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY="return float(a <= b);",aY=`
  return vec4(lessThanEqual(a, b));
`,iY=Ht({opSnippet:oY,packedOpSnippet:aY,cpuKernelImpl:Kq,dtype:"bool"}),lY={kernelName:tl,backendName:"webgl",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(s){const{backend:t,attrs:n}=s,{start:r,stop:o,num:a}=n,i=Xq(r,o,a);return t.makeTensorInfo([i.length],"float32",i)}const uY={kernelName:Fu,backendName:"webgl",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=`if (x < 0.0) return NAN;
  return log(x);`,dY=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,pY=Me({opSnippet:hY,packedOpSnippet:dY,cpuKernelImpl:Yq}),fY={kernelName:ra,backendName:"webgl",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY="return log(1.0 + x);",gY=Me({opSnippet:mY}),yY={kernelName:oa,backendName:"webgl",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY="return float(a >= 1.0 && b >= 1.0);",xY=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,wY=Ht({opSnippet:bY,packedOpSnippet:xY,dtype:"bool"}),vY={kernelName:nl,backendName:"webgl",kernelFunc:wY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y="return float(!(x >= 1.0));",CY=Me({opSnippet:$Y}),kY={kernelName:sl,backendName:"webgl",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY="return float(a >= 1.0 || b >= 1.0);",NY=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,SY=Ht({opSnippet:IY,packedOpSnippet:NY,dtype:"bool"}),TY={kernelName:rl,backendName:"webgl",kernelFunc:SY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EY{constructor(t,n,r,o,a){this.variableNames=["x"],this.outputShape=[];const i=n,l=t[3]-1;this.outputShape=t;let c;const u=`float(${r}) + float(${o}) * sum`;a===.5?c=`inversesqrt(${u})`:a===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AY{constructor(t,n,r,o,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,l=t[3]-1;this.outputShape=t;let c;const u=`float(${r}) + float(${o}) * sum`;a===.5?c=`inversesqrt(${u})`:a===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{depthRadius:a,bias:i,alpha:l,beta:c}=r,u=q().getBool("WEBGL_PACK_NORMALIZATION")?new AY(o.shape,a,i,l,c):new EY(o.shape,a,i,l,c);return n.runWebGLProgram(u,[o],o.dtype)},RY={kernelName:ol,backendName:"webgl",kernelFunc:DY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FY{constructor(t,n,r,o,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=n,this.bias=r,this.alpha=o,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Y=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o,y:a,dy:i}=t,{depthRadius:l,bias:c,alpha:u,beta:h}=r,d=new FY(o.shape,l,c,u,h);return n.runWebGLProgram(d,[o,a,i],o.dtype)},OY={kernelName:_u,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LY(s,t,n,r){const o=j(t),i=j(s.shape)/o,l=ie({inputs:{x:s},attrs:{shape:[i,o]},backend:r}),c=ko(l,s.dtype,"max",r),u=ie({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reductionIndices:a,keepDims:i}=r,l=o.shape.length,c=Se(a,o.shape);let u=c;const h=ft(u,l),d=h!=null,p=n.shouldExecuteOnCPU([o]);let f=o;if(d){if(p){const v=n.texData.get(f.dataId).values,w=new Array(l);for(let k=0;k<w.length;k++)w[k]=o.shape[h[k]];const C=Fb(v,o.shape,o.dtype,h,w);f=n.makeTensorInfo(w,o.dtype);const N=n.texData.get(f.dataId);N.values=C}else f=wp(o,h,n);u=yt(u.length,l)}Vt("max",u,l);const[m,g]=Rt(f.shape,u);let y=m;i&&(y=pt(m,c));let b;if(p){const v=n.texData.get(f.dataId).values,w=Zq(v,j(g),y,o.dtype);b=n.makeTensorInfo(y,o.dtype);const C=n.texData.get(b.dataId);C.values=w}else b=LY(f,g,y,n);return d&&n.disposeIntermediateTensorInfo(f),b}const PY={kernelName:al,backendName:"webgl",kernelFunc:Ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY=UC+`
  return max(a, b);
`,zY=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+bp+`
  return result;
`,BY=Ht({opSnippet:MY,packedOpSnippet:zY,cpuKernelImpl:Jq}),VY={kernelName:aa,backendName:"webgl",kernelFunc:BY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;Lc(o,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;I(Bt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Un(o.shape,a,i,u,l,c);if(h.filterWidth===1&&h.filterHeight===1&&De(h.inShape,h.outShape))return Sn({inputs:{x:o},backend:n});const d=new zc(h,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}const UY={kernelName:il,backendName:"webgl",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=r,h=[1,1,1],d=Us(o.shape,a,i,h,l,u,c),p=new Ob(d,"max",!1);return n.runWebGLProgram(p,[o],o.dtype)}const HY={kernelName:ll,backendName:"webgl",kernelFunc:GY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=a-1-t.padInfo.top,c=i-1-t.padInfo.left,u=a*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class qY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=c-1-t.padInfo.front,p=u-1-t.padInfo.top,f=h-1-t.padInfo.left,m=c*u*h-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a,{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,d=[1,1,1],p=Us(i.shape,l,c,d,u,h),f=new Ob(p,"max",!0),m=n.runWebGLProgram(f,[i],i.dtype),g=new qY(p),y=n.runWebGLProgram(g,[o,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}const XY={kernelName:Lu,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a,output:i}=t,l=a;Lc([a,i],"maxPoolGrad");const{filterSize:c,strides:u,pad:h,dimRoundingMode:d}=r,p=Un(l.shape,c,u,1,h,d),f=!0,m=new zc(p,"max",f),g=n.runWebGLProgram(m,[l],l.dtype),y=new jY(p),b=n.runWebGLProgram(y,[o,g],l.dtype);return n.disposeIntermediateTensorInfo(g),b}const ZY={kernelName:Ou,backendName:"webgl",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(s,t,n,r){let o=new zc(n,"max",!1);const a=r.runWebGLProgram(o,[s],"float32");o=new zc(n,"max",!0,!0,t);const i=r.runWebGLProgram(o,[s],"float32");return[a,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QY={kernelName:Pu,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{filterSize:o,strides:a,pad:i,includeBatchInIndex:l}=t,c=n;I(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];I(Bt(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const h=Un(r.shape,o,a,u,i),[d,p]=JY(r,l,h,c);return[d,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(s,t,n,r){const o=j(t),i=j(s.shape)/o,l=ie({inputs:{x:s},attrs:{shape:[i,o]},backend:r}),c=ko(l,"float32","mean",r),u=ie({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7={kernelName:cl,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{keepDims:o,axis:a}=t,i=n,l=r.shape.length,c=Se(a,r.shape);let u=c;const h=ft(u,l),d=h!=null,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const w=i.texData.get(m.dataId).values,C=new Array(l);for(let S=0;S<C.length;S++)C[S]=r.shape[h[S]];const N=Fb(w,r.shape,r.dtype,h,C);m=i.makeTensorInfo(C,r.dtype);const k=i.texData.get(m.dataId);k.values=N}else m=wp(r,h,i);f.push(m),u=yt(u.length,l)}Vt("sum",u,l);const[g,y]=Rt(m.shape,u);let b=g;o&&(b=pt(g,c));const x=e7(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n7(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=Se(a,o.shape);let u=c;const h=ft(u,l);let d=o;h!=null&&(d=tn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=yt(u.length,o.shape.length)),Vt("min",u,l);const[p,f]=Rt(d.shape,u),m=j(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=ko(g,g.dtype,"min",n);let b;if(i){const x=pt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const s7={kernelName:ul,backendName:"webgl",kernelFunc:n7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7=UC+`
  return min(a, b);
`,o7=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+bp+`
  return result;
`,a7=Ht({opSnippet:r7,packedOpSnippet:o7,cpuKernelImpl:Qq}),i7={kernelName:ia,backendName:"webgl",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l7{constructor(t,n,r){this.variableNames=["x"],this.outputShape=n.map((h,d)=>h[0]+t[d]+h[1]);const o=t.length,a=Ye(o),i=n.map(h=>h[0]).join(","),l=n.map((h,d)=>h[0]+t[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=r==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c7{constructor(t,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((m,g)=>m[0]+t[g]+m[1]);const o=t.length,a=Ye(o),i=n.map(m=>m[0]).join(","),l=n.map((m,g)=>m[0]+t[g]).join(","),c=en("rc",o),u=en("source",o),h=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,p=r==="reflect"?0:1;let f="";if(o===1){const m=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;f=`
        ${a} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${h}) {
          ${m}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const m=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;f=`
        ${a} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${h}) {
          ${m}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${c[o-2]} += 1;
        if(${c[o-2]} < ${this.outputShape[o-2]}) {
          ${m}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${c[o-1]} += 1;
          if(${h}) {
            ${m}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7=({inputs:s,backend:t,attrs:n})=>{const{x:r}=s,{paddings:o,mode:a}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new c7(r.shape,o,a):new l7(r.shape,o,a);return t.runWebGLProgram(i,[r],r.dtype)},h7={kernelName:hl,backendName:"webgl",kernelFunc:u7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7=`if (b == 0.0) return NAN;
  return mod(a, b);`,p7=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+bp+`
  return result;
`,f7=Ht({opSnippet:d7,packedOpSnippet:p7}),m7={kernelName:la,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g7{constructor(t,n,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y7=`
if (a == b) {
  return 1.0;
};
return a / b;`,b7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Nk=Ht({opSnippet:y7,packedOpSnippet:b7,checkOutOfBounds:!0}),x7={kernelName:jo,backendName:"webgl",kernelFunc:Nk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk="return a - b;",Tk=Ht({opSnippet:Sk,packedOpSnippet:Sk,supportsComplex:!0,cpuKernelImpl:mK}),w7={kernelName:ka,backendName:"webgl",kernelFunc:Tk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{dim:a}=r,i=Se([a],o.shape),l=Ik({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=pt(l.shape,i),u=ie({inputs:{x:l},backend:n,attrs:{shape:c}}),h=Tk({inputs:{a:o,b:u},backend:n}),d=xk({inputs:{x:h},backend:n}),p=vp({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),f=ie({inputs:{x:p},backend:n,attrs:{shape:c}}),m=Nk({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const v7={kernelName:Tl,backendName:"webgl",kernelFunc:Ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{numSamples:a,seed:i,normalized:l}=r,c=l?o:Ek({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),u=c.shape[0],h=c.shape[1],d=new g7(u,h,a),p=[[i]],f=n.runWebGLProgram(d,[c],"int32",p);return l||n.disposeIntermediateTensorInfo(c),f}const C7={kernelName:Mu,backendName:"webgl",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak="return -x;";function k7(s){const{inputs:t,backend:n}=s,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const a=n.texData.get(r.dataId),[i,l]=tK(a.values,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,i)}let o;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new $i(r.shape,Ak):o=new Er(r.shape,Ak),n.runWebGLProgram(o,[r],r.dtype)}const I7={kernelName:dl,backendName:"webgl",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7=od;function S7(s){rn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=r,u=n.readSync(o.dataId),h=n.readSync(a.dataId),{selectedIndices:d}=N7(u,h,i,l,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const T7={kernelName:zu,backendName:"webgl",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=ad;function A7(s){rn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,padToMaxOutputSize:u}=r,h=n.readSync(o.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=E7(h,d,i,l,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const D7={kernelName:Bu,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7=id;function F7(s){rn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=r,h=n.readSync(o.dataId),d=n.readSync(a.dataId),p=i,f=l,m=c,g=u,{selectedIndices:y,selectedScores:b}=R7(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const _7={kernelName:Vu,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O7{constructor(t,n,r,o){this.variableNames=["indices"],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7=s=>{const{inputs:t,backend:n,attrs:r}=s,{indices:o}=t,{depth:a,onValue:i,offValue:l}=r,c=j(o.shape),u=new O7(c,a,i,l),h=ie({inputs:{x:o},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(u,[h],o.dtype);n.disposeIntermediateTensorInfo(h);const p=[...o.shape,a],f=ie({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},P7={kernelName:ml,backendName:"webgl",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Np(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="complex64"){const o=Bc({inputs:{input:r},backend:n}),a=Np({inputs:{x:o},backend:n}),i=Ip({inputs:{input:r},backend:n}),l=Np({inputs:{x:i},backend:n}),c=Ar({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return Vc({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const M7={kernelName:Rl,backendName:"webgl",kernelFunc:Np};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const o=Bc({inputs:{input:r},backend:n}),a=Dk({inputs:{x:o},backend:n}),i=Ip({inputs:{input:r},backend:n}),l=Np({inputs:{x:i},backend:n}),c=Ar({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return Vc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const z7={kernelName:fl,backendName:"webgl",kernelFunc:Dk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r;if(t.length===1)return Mb({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const a=t[0].shape,i=t[0].dtype;t.forEach(h=>{Lt(a,h.shape,"All tensors passed to stack must have matching shapes"),I(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=t.map(h=>{const d=Mb({inputs:{input:h},backend:n,attrs:{dim:o}});return l.push(d),d}),u=ck({inputs:c,backend:n,attrs:{axis:o}});return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const V7={kernelName:gl,backendName:"webgl",kernelFunc:B7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W7{constructor(t,n,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,h)=>u[0]+t[h]+u[1]);const o=t.length,a=Ye(o),i=n.map(u=>u[0]).join(","),l=n.map((u,h)=>u[0]+t[h]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U7{constructor(t,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((g,y)=>g[0]+t[y]+g[1]);const o=t.length,a=Ye(o),i=n.map(g=>g[0]).join(","),l=n.map((g,y)=>g[0]+t[y]).join(","),c=en("rc",o),u=en("source",o),h=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${c[o-1]} += 1;
       if(${h}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${c[o-2]} += 1;
       if(${c[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${c[o-1]} += 1;
         if(${h}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,y=o===1?2:4;g<y;g++)m+=`
        ${p[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${d});
        }
      `;m+=o===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rk=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,constantValue:i}=r;if(j(o.shape)===0){const u=a.map((h,d)=>h[0]+o.shape[d]+h[1]);return Vc({backend:n,attrs:{shape:u,value:i,dtype:o.dtype}})}const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new U7(o.shape,a,i):new W7(o.shape,a,i),c=[[i]];return n.runWebGLProgram(l,[o],o.dtype,c)},G7={kernelName:yl,backendName:"webgl",kernelFunc:Rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,j7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+bp+`
  return result;
`,q7=Ht({opSnippet:H7,packedOpSnippet:j7}),K7={kernelName:ua,backendName:"webgl",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=[],u=Se(a,o.shape);let h=u;const d=ft(h,l);let p=o;d!=null&&(p=tn({inputs:{x:o},backend:n,attrs:{perm:d}}),h=yt(h.length,l),c.push(p)),Vt("prod",h,l);let f;if(n.shouldExecuteOnCPU([p])){const m=n.texData.get(p.dataId).values,{outVals:g,outShape:y,outDtype:b}=sK(p.shape,p.dtype,m,h);f=n.makeTensorInfo(y,b,g)}else{const[m,g]=Rt(p.shape,h),y=j(g),b=ie({inputs:{x:p},backend:n,attrs:{shape:[-1,y]}}),x=mh(o.dtype),v=ko(b,x,"prod",n);f=ie({inputs:{x:v},backend:n,attrs:{shape:m}}),c.push(b),c.push(v)}if(i){c.push(f);const m=pt(f.shape,u);f=ie({inputs:{x:f},backend:n,attrs:{shape:m}})}return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const Y7={kernelName:Wu,backendName:"webgl",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk=s=>{const{backend:t,attrs:n}=s,{start:r,stop:o,step:a,dtype:i}=n,l=rK(r,o,a,i);return t.makeTensorInfo([l.length],i,l)},Z7={kernelName:Uu,backendName:"webgl",kernelFunc:Fk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J7="return 1.0 / x;",Q7=Me({opSnippet:J7}),eZ={kernelName:ha,backendName:"webgl",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ=ms+`
  return (x < 0.0) ? 0.0 : x;
`,nZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sZ=Me({opSnippet:tZ,packedOpSnippet:nZ}),rZ={kernelName:da,backendName:"webgl",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ=ms+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,aZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iZ=Me({opSnippet:oZ,packedOpSnippet:aZ}),lZ={kernelName:pa,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cZ{constructor(t,n,r,o,a){this.variableNames=["A"],this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r];let p;a?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uZ{constructor(t,n,r,o,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r];let p;a?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hZ(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r,[c,u]=l,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uZ(o.shape,c,u,a,i):new cZ(o.shape,c,u,a,i);return n.runWebGLProgram(h,[o],"float32")}const dZ={kernelName:vl,backendName:"webgl",kernelFunc:hZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pZ{constructor(t,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,a]=n,[,i,l]=t,c=[r&&i>1?o-1:o,r&&l>1?a-1:a],u=[r&&i>1?i-1:i,r&&l>1?l-1:l],h=c[0]/u[0],d=c[1]/u[1],p=1/h,f=1/d,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r,l=new pZ(a.shape,o.shape,i);return n.runWebGLProgram(l,[a],a.dtype)}const mZ={kernelName:ju,backendName:"webgl",kernelFunc:fZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZ{constructor(t,n,r,o,a){this.variableNames=["A"],this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r],p=o?"0.5":"0.0";let f;a?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(t,n,r,o,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r],p=o?"0.5":"0.0";let f;a?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r,[c,u]=l,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yZ(o.shape,c,u,a,i):new gZ(o.shape,c,u,a,i);return n.runWebGLProgram(h,[o],o.dtype)}const xZ={kernelName:wl,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wZ{constructor(t,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,a]=n,[,i,l]=t,c=[r&&i>1?o-1:o,r&&l>1?a-1:a],u=[r&&i>1?i-1:i,r&&l>1?l-1:l],h=c[0]/u[0],d=c[1]/u[1],p=1/h,f=1/d,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r,l=new wZ(a.shape,o.shape,i);return n.runWebGLProgram(l,[a],a.dtype)}const $Z={kernelName:Hu,backendName:"webgl",kernelFunc:vZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(t,n){this.variableNames=["x"];const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const o=l=>n.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,a=t.map((l,c)=>o(c)).join(","),i=Ye(r);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kZ{constructor(t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const o=en("rc",r),a=`${o[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${o[r-2]} + 1 < ${this.outputShape[r-2]}`,l=Ye(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(o.slice())};
          if(${a}){
            result.g = ${u(o.slice())};
          }
          if(${i}) {
            result.b = ${h(o.slice())};
            if(${a}) {
              result.a = ${d(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(m){return p(m)}function u(m){return m[r-1]="("+m[r-1]+" + 1)",p(m)}function h(m){return m[r-2]="("+m[r-2]+" + 1)",p(m)}function d(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",p(m)}function p(m){const g=t.map((x,v)=>f(v,m)),y=g.join(","),b=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function f(m,g){return n.indexOf(m)!==-1&&t[m]!==1?`${t[m]} - ${g[m]} - 1`:`${g[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IZ(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dims:a}=r,i=o.shape.length,l=Se(a,o.shape);if(i===0)return Sn({inputs:{x:o},backend:n});const c=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kZ(o.shape,l):new CZ(o.shape,l);return n.runWebGLProgram(c,[o],o.dtype)}const NZ={kernelName:$l,backendName:"webgl",kernelFunc:IZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SZ{constructor(t,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=t[1],o=t[2];this.outputShape=t;let a="";typeof n=="number"?a=`float outputValue = ${n.toFixed(2)};`:a=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ={kernelName:lh,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,{radians:o,fillValue:a,center:i}=t,l=n,c=new SZ(r.shape,a),[u,h]=Wm(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(c,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,AZ=Me({opSnippet:EZ}),DZ={kernelName:fa,backendName:"webgl",kernelFunc:AZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZ="return inversesqrt(x);",FZ=Me({opSnippet:RZ,cpuKernelImpl:oK}),_Z={kernelName:ma,backendName:"webgl",kernelFunc:FZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _k{constructor(t,n,r,o,a,i,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=Ye(a.length),u=Ye(i.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`,m=n>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o,updates:a}=t,{shape:i}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Ma(a,o,i),p=[d/u,u];if(d===0)return n.makeTensorInfo(i,o.dtype);const f=ie({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=ie({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new _k(c,l,f.shape.length,m.shape.length,h,p),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=ie({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}const LZ={kernelName:qu,backendName:"webgl",kernelFunc:OZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(t,n,r){this.variableNames=["c","a","b"],this.outputShape=n;let o,a;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)a="resRC",o="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],u=[];for(let h=0;h<n.length;h++)u.push(`${l[h]}`),h<t&&c.push(`${l[h]}`);o=c.join(),a=u.join()}const i=Ye(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MZ(s){const{inputs:t,backend:n}=s,{condition:r,t:o,e:a}=t,i=new PZ(r.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[r,o,a],mn(o.dtype,a.dtype))}const zZ={kernelName:Cl,backendName:"webgl",kernelFunc:MZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${gd};
  float scale = ${yd};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,VZ=Me({opSnippet:BZ}),WZ={kernelName:ga,backendName:"webgl",kernelFunc:VZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok="return 1.0 / (1.0 + exp(-1.0 * x));",UZ=Me({opSnippet:Ok,packedOpSnippet:Ok,cpuKernelImpl:aK}),GZ={kernelName:wa,backendName:"webgl",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HZ=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,jZ=Me({opSnippet:HZ}),qZ={kernelName:xa,backendName:"webgl",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KZ=KC+`
  return sin(x);
`,XZ=Me({opSnippet:KZ}),YZ={kernelName:ya,backendName:"webgl",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,JZ=Me({opSnippet:ZZ}),QZ={kernelName:ba,backendName:"webgl",kernelFunc:JZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,t9=Me({opSnippet:e9}),n9={kernelName:va,backendName:"webgl",kernelFunc:t9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,paddings:i}=r;I(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce((b,x)=>b*x),c=[[0,0]];c.push(...i);for(let b=1+a.length;b<o.shape.length;++b)c.push([0,0]);const u=[],h=Rk({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),d=cc(h.shape,a,l,!1),p=uc(d.length,a.length,!1),f=hc(h.shape,a,l,!1),m=ie({inputs:{x:h},backend:n,attrs:{shape:d}}),g=tn({inputs:{x:m},backend:n,attrs:{perm:p}}),y=ie({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(h),u.push(m),u.push(g),u.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},r9={kernelName:Nl,backendName:"webgl",kernelFunc:s9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(s){const{inputs:t,backend:n}=s,{indices:r,values:o,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=n.readSync(r.dataId),c=n.readSync(o.dataId),u=n.readSync(a.dataId),h=n.readSync(i.dataId)[0],[d,p,f,m,g]=lK(l,r.shape,r.dtype,c,o.dtype,u,h);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],o.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const a9={kernelName:Ku,backendName:"webgl",kernelFunc:o9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(s){const{inputs:t,backend:n}=s,{inputIndices:r,inputShape:o,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(o.dataId)),l=n.readSync(r.dataId),c=Array.from(n.readSync(a.dataId)),[u,h,d]=cK(l,r.shape,r.dtype,i,c);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const l9={kernelName:Xu,backendName:"webgl",kernelFunc:i9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);const i=n.readSync(r.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId),[u,h]=LC(i,r.shape,r.dtype,l,c,!0);return n.makeTensorInfo(h,r.dtype,u)}const u9={kernelName:Yu,backendName:"webgl",kernelFunc:c9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);const i=n.readSync(r.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId),[u,h]=LC(i,r.shape,r.dtype,l,c);return n.makeTensorInfo(h,r.dtype,u)}const d9={kernelName:Zu,backendName:"webgl",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(s){const{inputs:t,backend:n,attrs:r}=s,{sparseIndices:o,sparseValues:a,defaultValue:i}=t,{outputShape:l}=r,{sliceRank:c,numUpdates:u,strides:h,outputSize:d}=Ma(a,o,l),p=!1,f=new _k(u,c,o.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,o,i],a.dtype),g=ie({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(m),g}const f9={kernelName:Ju,backendName:"webgl",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{numOrSizeSplits:a,axis:i}=r,l=Se(i,o.shape)[0],c=rg(o,a,l),u=o.shape.length,h=new Array(u).fill(0),d=o.shape.slice();return c.map(p=>{const f=[...d];f[l]=p;const m=ki({inputs:{x:o},backend:n,attrs:{begin:h,size:f}});return h[l]+=p,m})}const g9={kernelName:Sl,backendName:"webgl",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lk="return sqrt(x);",y9=Me({opSnippet:Lk,packedOpSnippet:Lk,cpuKernelImpl:uK}),b9={kernelName:$a,backendName:"webgl",kernelFunc:y9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9="return x * x;",w9=Me({opSnippet:x9}),v9={kernelName:Qu,backendName:"webgl",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk="return (a - b) * (a - b);",$9=Ht({opSnippet:Pk,packedOpSnippet:Pk}),C9={kernelName:Ca,backendName:"webgl",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9({inputs:s,attrs:t,backend:n}){const{x:r}=s,o=ms+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Er(r.shape,o);return n.runWebGLProgram(a,[r],r.dtype)}const I9={kernelName:Ta,backendName:"webgl",kernelFunc:k9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N9{constructor(t,n,r){this.variableNames=["x"],this.outputShape=r;const o=r.length,a=Ye(r.length),i=Ye(r.length);let l="";if(o===1)l="coords * strides + begin";else{let c=0;l=r.map((u,h)=>(c++,r.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${c-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${t});
      ${a} strides = ${a}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,end:i,strides:l,beginMask:c,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=jf(o.shape,a,i,l,c,u,h,d,p),v=ie({inputs:{x:o},backend:n,attrs:{shape:b}});let w;if(f){const N=ki({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=ie({inputs:{x:N},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(N)}else if(x.some(N=>N===0))w=n.makeTensorInfo(x,o.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const S=n.texData.get(v.dataId).values,E=Ae(v.shape,v.dtype,S),A=hK(x,E,g,m);w=n.makeTensorInfo(x,v.dtype,A.values)}else{const k=new N9(m,g,x);w=n.runWebGLProgram(k,[v],v.dtype)}const C=ie({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),C}const T9={kernelName:eh,backendName:"webgl",kernelFunc:S9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(s){const{inputs:t,backend:n,attrs:r}=s,{separator:o,nGramWidths:a,leftPad:i,rightPad:l,padWidth:c,preserveShortSequences:u}=r,{data:h,dataSplits:d}=t,p=n.readSync(h.dataId),f=n.readSync(d.dataId),[m,g]=dK(p,f,o,a,i,l,c,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",g)]}const A9={kernelName:th,backendName:"webgl",kernelFunc:E9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(s){const{inputs:t,backend:n,attrs:r}=s,{skipEmpty:o}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[u,h,d]=pK(l,c,o),p=h.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const R9={kernelName:nh,backendName:"webgl",kernelFunc:D9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(s){const{inputs:t,backend:n,attrs:r}=s,{numBuckets:o}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),l=fK(i,o);return n.makeTensorInfo(a.shape,"int32",l)}const _9={kernelName:sh,backendName:"webgl",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9="return tan(x);",L9=Me({opSnippet:O9}),P9={kernelName:Ia,backendName:"webgl",kernelFunc:L9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M9=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,z9=Me({opSnippet:M9}),B9={kernelName:Na,backendName:"webgl",kernelFunc:z9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V9{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[i]*n[i];this.outputShape=r,this.rank=r.length;const o=Ye(this.rank),a=W9(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function W9(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let o=0;o<s.length;o++)r.push(`imod(${n[o]}, ${s[o]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reps:a}=r;if(o.dtype==="string"||o.shape.length>5){const c=n.readSync(o.dataId),u=o.dtype==="string"?c.map(p=>Hr(p)):c,h=Ae(o.shape,o.dtype,u),d=gK(h,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new V9(o.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const U9={kernelName:Sa,backendName:"webgl",kernelFunc:Mk};class G9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class H9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function zk(s){let t=1;for(;t<s;)t*=2;return t}function j9(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{k:a,sorted:i}=r,l=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([o])||h<l||a>c){const A=n.readSync(o.dataId),[F,D]=yK(A,u,o.dtype,a,i);return[n.makeTensorInfo(F.shape,F.dtype,F.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,o.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(h===1)return[o,Vc({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(o.dataId),p=d!==null&&d.isPacked,f=p?n.unpackTensor(o):o,g=j(u)/h,y=ie({inputs:{x:f},attrs:{shape:[g,h]},backend:n});p&&Io(n,f);const b=zk(a),x=zk(h);let v=null;const w=()=>v===null?[y,y]:[y,v],C=(A,F,D)=>{const O=w(),B=new G9(D),z=[[h],[v===null?1:0],[Number.NEGATIVE_INFINITY],[A],[F]],H=v;v=n.runWebGLProgram(B,O,"int32",z),Io(n,H)};for(let A=1;A<b;A*=2){const F=A*2;for(let D=A;D>=1;D/=2)C(F,D,[g,x])}for(let A=x;A>b;A/=2){const F=w(),D=new H9([g,A/2]),B=[[h],[v===null?1:0],[b]],V=v;v=n.runWebGLProgram(D,F,"int32",B),Io(n,V);const z=b/2,H=z*2;for(let U=z;U>=1;U/=2)C(H,U,v.shape)}let N=v;v=ki({inputs:{x:v},backend:n,attrs:{begin:0,size:[g,a]}}),Io(n,N);let k=kk({inputs:{x:y,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Io(n,y);const S=u.slice(0,-1);S.push(a),N=v,v=ie({inputs:{x:v},attrs:{shape:S},backend:n}),Io(n,N);const E=k;return k=ie({inputs:{x:k},attrs:{shape:S},backend:n}),Io(n,E),[k,v]}const q9={kernelName:rh,backendName:"webgl",kernelFunc:j9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K9{constructor(t,n,r,o,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=r==="nearest"?1:2;let c;switch(o){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(s){const{inputs:t,backend:n,attrs:r}=s,{image:o,transforms:a}=t,{interpolation:i,fillMode:l,fillValue:c,outputShape:u}=r,[h,d,p,f]=o.shape,[m,g]=u!=null?u:[d,p],y=[h,m,g,f],b=new K9(d,p,i,l,c,y);return n.runWebGLProgram(b,[o,a],"float32")}const Y9={kernelName:oh,backendName:"webgl",kernelFunc:X9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9(s){const{inputs:t,attrs:n,backend:r}=s,{axis:o}=n,{x:a}=t;Lc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:l,outputShape:c,indices:u}=bK(i,o,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,l),r.makeTensorInfo([u.length],"int32",u)]}const J9={kernelName:ah,backendName:"webgl",kernelFunc:Z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(s){const{inputs:t,backend:n,attrs:r}=s,{value:o}=t;let{axis:a}=r;a<0&&(a+=o.shape.length);const i=o,l=i.shape.length,c=o.shape[a],u=new Array(l-1);let h=0;for(let g=0;g<l;g++)g!==a&&(u[h++]=i.shape[g]);const d=[],p=new Array(l).fill(0),f=i.shape.slice();f[a]=1;const m=new Array(c);for(let g=0;g<m.length;g++){p[a]=g;const y=ki({inputs:{x:i},backend:n,attrs:{begin:p,size:f}}),b=ie({inputs:{x:y},backend:n,attrs:{shape:u}});m[g]=b,d.push(y)}return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const eJ={kernelName:Al,backendName:"webgl",kernelFunc:Q9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tJ{constructor(t,n){this.variableNames=["x","segmentIds"];const r=t.windowSize,o=t.batchSize,a=t.inSize,i=t.numSegments,l=i*Math.ceil(a/r);this.outputShape=[o,l];const c="0.0",u="sumValue",h=Math.floor(r/4)*4,d=r%4,p=`
        sumValue += dot(values, segFilter);
    `;let f="";a%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let m="";a%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,segmentIds:a}=t,{numSegments:i}=r,l=o.shape.length,c=[];let u=0;const h=ft([u],l);let d=o;h!=null&&(d=tn({inputs:{x:o},backend:n,attrs:{perm:h}}),c.push(d),u=yt(1,l)[0]);const p=Xw(d.shape,u,i),f=j([d.shape[u]]),m=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});c.push(m);const g=mh(o.dtype),y=(w,C,N,k,S)=>{const E=w.shape[0],A=w.shape[1],F=Kw(A,S),D={windowSize:F,inSize:A,batchSize:E,numSegments:S},O=new tJ(D,C),B=n.compileAndRun(O,[w,N],k);if(c.push(B),B.shape[1]===S)return B;const V=Fk({backend:n,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),z=Mk({inputs:{x:V},backend:n,attrs:{reps:[A/F]}});return c.push(V),c.push(z),y(B,C,z,k,S)},b=y(m,"unsortedSegmentSum",a,g,i),x=ie({inputs:{x:b},backend:n,attrs:{shape:p}});let v=x;if(h!=null){c.push(x);const w=ja(h);v=tn({inputs:{x:v},backend:n,attrs:{perm:w}})}return c.forEach(w=>n.disposeIntermediateTensorInfo(w)),v}const sJ={kernelName:Dl,backendName:"webgl",kernelFunc:nJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=[RY,OY,g6,b6,v6,k6,N6,E6,D6,F6,P6,z6,W6,H6,J6,K6,tX,oX,sX,cX,hX,pX,yX,kX,NX,TX,_X,LX,BX,UX,ZK,KX,r5,a5,JX,u5,d5,l5,m5,b5,v5,C5,I5,T5,_5,L5,A5,z5,W5,G5,K5,J5,n8,o8,a8,i8,c8,h8,p8,m8,y8,v8,k8,S8,E8,R8,O8,z8,U8,YK,H8,jX,K8,Z8,eY,QK,rY,lY,uY,yY,fY,vY,kY,TY,PY,HY,UY,XY,ZY,QY,VY,t7,s7,i7,h7,m7,C7,r6,I7,T7,D7,_7,AX,P7,z7,V7,G7,K7,t6,Y7,Z7,DX,x7,eZ,lZ,rZ,a6,dZ,mZ,xZ,$Z,NZ,TZ,DZ,_Z,LZ,zZ,WZ,GZ,qZ,YZ,QZ,$X,v7,n9,r9,a9,l9,u9,d9,f9,g9,b9,v9,C9,I9,T9,A9,R9,_9,w7,p6,P9,B9,U9,q9,Y9,f6,J9,eJ,sJ,M7];for(const s of rJ)hh(s);/** @license See the LICENSE file. */const oJ="3.10.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ={"tfjs-core":W0,"tfjs-backend-cpu":BV,"tfjs-backend-webgl":XK,"tfjs-data":f$,"tfjs-layers":Wd,"tfjs-converter":Xv,tfjs:oJ};var iJ=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",data:MB,version:aJ,AdadeltaOptimizer:cd,AdagradOptimizer:ud,AdamOptimizer:hd,AdamaxOptimizer:dd,MomentumOptimizer:pd,Optimizer:Xs,RMSPropOptimizer:fd,SGDOptimizer:lc,Tensor:ze,TensorBuffer:kt,Variable:Vl,get Rank(){return bf},sumOutType:mh,upcastType:mn,get Reduction(){return Zt},customGrad:$s,grad:BE,grads:VE,valueAndGrad:WE,valueAndGrads:UE,variableGrads:iw,Environment:Ox,env:q,get ENV(){return lf},nextFrame:zw,KernelBackend:nu,DataStorage:Jp,abs:gt,acos:Zf,acosh:Jf,add:Z,addN:G0,all:Sh,any:Gl,argMax:Zr,argMin:Qf,asin:em,asinh:tm,atan:nm,atan2:sm,atanh:rm,avgPool:jl,avgPool3d:im,basicLSTMCell:O2,batchToSpaceND:ql,batchNorm:eo,batchNorm2d:H0,batchNorm3d:j0,batchNorm4d:q0,bincount:lm,broadcastArgs:K0,broadcastTo:Ba,buffer:Ae,cast:ne,ceil:cm,clipByValue:on,clone:Ws,complex:ur,concat:dt,concat1d:X0,concat2d:Y0,concat3d:Z0,concat4d:J0,conv1d:Eh,conv2d:Hs,conv2dTranspose:Ah,conv3d:hm,conv3dTranspose:ew,cos:Kl,cosh:Dh,cumsum:Rh,denseBincount:tw,depthToSpace:dm,depthwiseConv2d:Va,diag:hE,dilation2d:pm,div:de,divNoNan:fm,dot:nw,einsum:sw,elu:Ua,equal:yn,erf:mm,exp:bn,expandDims:an,expm1:gm,eye:ym,fill:Ga,floor:Ha,floorDiv:Nh,gather:to,greater:ln,greaterEqual:gr,imag:Fh,isFinite:rw,isInf:ow,isNaN:bm,leakyRelu:Xl,less:_h,lessEqual:yr,linspace:aw,localResponseNormalization:xm,log:xn,log1p:Yl,logSigmoid:lw,logSoftmax:Lh,logSumExp:vm,logicalAnd:Hn,logicalNot:Zl,logicalOr:Ph,logicalXor:uw,matMul:Te,max:Gn,maxPool:Jl,maxPool3d:$m,maxPoolWithArgmax:hw,maximum:Cs,mean:ct,meshgrid:iA,min:Ql,minimum:qa,mirrorPad:Cm,mod:km,moments:Mh,mul:L,multiRNNCell:mA,multinomial:dw,neg:nt,notEqual:so,oneHot:La,ones:wn,onesLike:vn,outerProduct:wA,pad:js,pad1d:CA,pad2d:IA,pad3d:SA,pad4d:EA,pool:pw,pow:qs,prelu:tc,print:x0,prod:zh,rand:MA,randomGamma:KA,randomNormal:vw,randomUniform:Xa,range:Ya,real:nc,reciprocal:Nm,relu:os,relu6:Bh,reshape:P,reverse:$n,reverse1d:sD,reverse2d:oD,reverse3d:iD,reverse4d:cD,round:Vh,rsqrt:Wh,scalar:me,selu:Uh,separableConv2d:Sm,setdiff1dAsync:$w,sigmoid:rs,sign:Tm,sin:Gh,sinh:Hh,slice:Oe,slice1d:jh,slice2d:Em,slice3d:qh,slice4d:sc,softmax:rc,softplus:no,spaceToBatchND:ec,fft:oc,ifft:Za,irfft:Kh,rfft:ac,split:cn,sqrt:Wt,square:je,squaredDifference:Xh,squeeze:ks,stack:Cn,step:Ja,stridedSlice:Am,sub:ce,sum:ue,tan:Dm,tanh:Qr,tensor:Wn,tensor1d:Ut,tensor2d:oo,tensor3d:N0,tensor4d:OD,tensor5d:LD,tensor6d:PD,tile:Dn,topk:Rm,truncatedNormal:Yh,unique:Zh,unsortedSegmentSum:Fm,unstack:jn,variable:Cw,where:jt,whereAsync:_m,zeros:bt,zerosLike:Le,op:_,OP_SCOPE_SUFFIX:l0,booleanMaskAsync:HD,transpose:_e,norm:Qh,movingAverage:KD,scatterND:Iw,sparseToDense:Om,gatherND:Nw,dropout:Sw,enclosingPowerOfTwo:Tw,cosineWindow:Lm,inTopKAsync:nR,image:qn,linalg:Mw,losses:LF,spectral:_F,fused:cR,signal:OF,sparse:ic,string:ld,train:io,enableProdMode:jT,enableDebugMode:qT,disableDeprecationWarnings:KT,deprecationWarn:XT,disposeVariables:YT,engine:pr,memory:Ih,profile:ZT,tidy:W,dispose:Ce,keep:At,time:JT,setBackend:QT,ready:e2,getBackend:t2,removeBackend:n2,findBackend:s2,findBackendFactory:r2,registerBackend:Yf,backend:U0,setPlatform:o2,getKernel:ch,getGradient:hf,getKernelsForBackend:uh,registerKernel:hh,registerGradient:zx,unregisterKernel:sS,unregisterGradient:rS,copyRegisteredKernels:oS,Abs:Ri,Acos:_o,Acosh:Oo,Add:Br,AddN:Fi,All:iu,Any:lu,ArgMax:_i,ArgMin:Oi,Asin:Lo,Asinh:Po,Atan:Mo,Atanh:zo,Atan2:Bo,AvgPool:Li,AvgPoolGrad:cu,AvgPool3D:Pi,AvgPool3DGrad:uu,BatchMatMul:Mi,BatchToSpaceND:zi,Bincount:hu,BroadcastTo:Px,BroadcastArgs:du,Cast:Vo,Ceil:Wo,ClipByValue:Uo,Complex:pu,ComplexAbs:Bi,Concat:Vi,Conv2D:Wi,Conv2DBackpropFilter:fu,Conv2DBackpropInput:Ui,Conv3D:Gi,Conv3DBackpropFilterV2:mu,Conv3DBackpropInputV2:gu,Cos:Go,Cosh:Ho,Cumsum:Hi,CropAndResize:yu,DenseBincount:bu,DepthToSpace:xu,DepthwiseConv2dNative:ji,DepthwiseConv2dNativeBackpropFilter:wu,DepthwiseConv2dNativeBackpropInput:vu,Diag:$u,Dilation2D:qi,Dilation2DBackpropInput:Cu,Dilation2DBackpropFilter:ku,RealDiv:jo,Einsum:Iu,Elu:qo,EluGrad:Nu,Erf:Ko,Equal:Ki,Exp:Xo,ExpandDims:Xi,Expm1:Yo,FFT:Su,Fill:Tu,FlipLeftRight:Eu,Floor:Zo,FloorDiv:Jo,FusedBatchNorm:Yi,GatherV2:Zi,GatherNd:Au,Greater:Ji,GreaterEqual:Qo,Identity:ea,IFFT:Du,Imag:Ru,IsFinite:ta,IsInf:na,IsNan:sa,LeakyRelu:Qi,Less:el,LessEqual:tl,LinSpace:Fu,Log:ra,Log1p:oa,LogicalAnd:nl,LogicalNot:sl,LogicalOr:rl,LogSoftmax:Mx,LRN:ol,LRNGrad:_u,Max:al,Maximum:aa,MaxPool:il,MaxPoolGrad:Ou,MaxPool3D:ll,MaxPool3DGrad:Lu,MaxPoolWithArgmax:Pu,Mean:cl,Min:ul,Minimum:ia,MirrorPad:hl,Mod:la,Multinomial:Mu,Multiply:ca,Neg:dl,NotEqual:pl,NonMaxSuppressionV3:zu,NonMaxSuppressionV4:Bu,NonMaxSuppressionV5:Vu,OnesLike:fl,OneHot:ml,Pack:gl,PadV2:yl,Pool:nS,Pow:ua,Prelu:bl,Prod:Wu,Range:Uu,Real:Gu,Reciprocal:ha,Relu:da,Reshape:xl,ResizeNearestNeighbor:wl,ResizeNearestNeighborGrad:Hu,ResizeBilinear:vl,ResizeBilinearGrad:ju,Relu6:pa,Reverse:$l,Round:fa,Rsqrt:ma,ScatterNd:qu,Select:Cl,Selu:ga,Slice:kl,Sin:ya,Sinh:ba,Sign:xa,Sigmoid:wa,Softplus:va,Sqrt:$a,Sum:Il,SpaceToBatchND:Nl,SplitV:Sl,Softmax:Tl,SparseFillEmptyRows:Ku,SparseReshape:Xu,SparseSegmentMean:Yu,SparseSegmentSum:Zu,SparseToDense:Ju,SquaredDifference:Ca,Square:Qu,StridedSlice:eh,StringNGrams:th,StringSplit:nh,StringToHashBucketFast:sh,Sub:ka,Tan:Ia,Tanh:Na,Tile:Sa,TopK:rh,Transform:oh,Transpose:El,Unique:ah,Unpack:Al,UnsortedSegmentSum:Dl,ZerosLike:Rl,Step:Ta,FromPixels:ih,RotateWithOffset:lh,_FusedMatMul:Fl,FusedConv2D:_l,FusedDepthwiseConv2D:Ol,version_core:W0,browser:_T,io:vT,math:ST,serialization:PT,test_util:HT,util:pS,backend_util:Zw,tensor_util:IS,slice_util:z0,gather_util:OT,scatter_util:LT,device_util:AS,kernel_impls:VF,CallbackList:T1,CustomCallback:A1,History:E1,Callback:Fv,callbacks:DM,EarlyStopping:Ov,InputSpec:xt,SymbolicTensor:cs,LayersModel:Js,input:Q1,loadLayersModel:P3,model:O3,registerCallbackConstructor:M3,sequential:L3,RNN:ps,Sequential:yo,LayerVariable:C1,version_layers:Wd,constraints:YO,initializers:RL,layers:lM,metrics:kM,models:IM,regularizers:EM,GraphModel:Kv,loadGraphModel:tB,deregisterOp:FM,registerOp:RM,version_converter:Xv}),Wc=jb(iJ),No={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty(No,"__esModule",{value:!0});No.cropTensor=No.capture=void 0;var So=Wc;function lJ(s,t){return So.tidy(function(){var n=So.browser.fromPixels(s),r=Bk(n,t),o=r.expandDims(0);return o.toFloat().div(So.scalar(127)).sub(So.scalar(1))})}No.capture=lJ;function Bk(s,t,n){var r=Math.min(s.shape[0],s.shape[1]),o=s.shape[0]/2,a=o-r/2,i=s.shape[1]/2,l=i-r/2;if(t&&!n){var c=s.slice([a,l,0],[r,r,3]);c=c.reshape([r*r,1,3]);var u=[.2989,.587,.114];return c=So.mul(c,u),c=c.reshape([r,r,3]),c=So.sum(c,-1),c=So.expandDims(c,-1),c}return s.slice([a,l,0],[r,r,3])}No.cropTensor=Bk;var gs={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty(gs,"__esModule",{value:!0});gs.cropTo=gs.resizeMinTo=gs.resizeMaxTo=gs.resize=void 0;var Sp=function(){return document.createElement("canvas")};function zb(s,t,n){n===void 0&&(n=Sp()),n.width=s.width*t,n.height=s.height*t;var r=n.getContext("2d");return r.drawImage(s,0,0,n.width,n.height),n}gs.resize=zb;function cJ(s,t,n){n===void 0&&(n=Sp());var r=Math.max(s.width,s.height);return zb(s,t/r,n)}gs.resizeMaxTo=cJ;function uJ(s,t,n){n===void 0&&(n=Sp());var r=Math.min(s.width,s.height);return zb(s,t/r,n)}gs.resizeMinTo=uJ;function hJ(s,t,n,r){n===void 0&&(n=!1),r===void 0&&(r=Sp());var o=s.width,a=s.height;s instanceof HTMLVideoElement&&(o=s.videoWidth,a=s.videoHeight);var i=Math.min(o,a),l=t/i,c=Math.ceil(o*l),u=Math.ceil(a*l),h=c-t,d=u-t;r.width=r.height=t;var p=r.getContext("2d");return p.drawImage(s,~~(h/2)*-1,~~(d/2)*-1,c,u),n&&(p.scale(-1,1),p.drawImage(r,t*-1,0)),r}gs.cropTo=hJ;var Uc={};/** @license See the LICENSE file. */Object.defineProperty(Uc,"__esModule",{value:!0});Uc.version=void 0;var dJ="0.8.4-alpha2";Uc.version=dJ;(function(s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=Ke&&Ke.__awaiter||function(k,S,E,A){function F(D){return D instanceof E?D:new E(function(O){O(D)})}return new(E||(E=Promise))(function(D,O){function B(H){try{z(A.next(H))}catch(U){O(U)}}function V(H){try{z(A.throw(H))}catch(U){O(U)}}function z(H){H.done?D(H.value):F(H.value).then(B,V)}z((A=A.apply(k,S||[])).next())})},n=Ke&&Ke.__generator||function(k,S){var E={label:0,sent:function(){if(D[0]&1)throw D[1];return D[1]},trys:[],ops:[]},A,F,D,O;return O={next:B(0),throw:B(1),return:B(2)},typeof Symbol=="function"&&(O[Symbol.iterator]=function(){return this}),O;function B(z){return function(H){return V([z,H])}}function V(z){if(A)throw new TypeError("Generator is already executing.");for(;E;)try{if(A=1,F&&(D=z[0]&2?F.return:z[0]?F.throw||((D=F.return)&&D.call(F),0):F.next)&&!(D=D.call(F,z[1])).done)return D;switch(F=0,D&&(z=[z[0]&2,D.value]),z[0]){case 0:case 1:D=z;break;case 4:return E.label++,{value:z[1],done:!1};case 5:E.label++,F=z[1],z=[0];continue;case 7:z=E.ops.pop(),E.trys.pop();continue;default:if(D=E.trys,!(D=D.length>0&&D[D.length-1])&&(z[0]===6||z[0]===2)){E=0;continue}if(z[0]===3&&(!D||z[1]>D[0]&&z[1]<D[3])){E.label=z[1];break}if(z[0]===6&&E.label<D[1]){E.label=D[1],D=z;break}if(D&&E.label<D[2]){E.label=D[2],E.ops.push(z);break}D[2]&&E.ops.pop(),E.trys.pop();continue}z=S.call(k,E)}catch(H){z=[6,H],F=0}finally{A=D=0}if(z[0]&5)throw z[1];return{value:z[0]?z[1]:void 0,done:!0}}};Object.defineProperty(s,"__esModule",{value:!0}),s.loadFromFiles=s.load=s.loadTruncatedMobileNet=s.CustomMobileNet=s.getTopKClasses=s.IMAGE_SIZE=void 0;var r=Wc,o=Wc,a=No,i=gs,l=Uc,c=1,u="conv_pw_13_relu",h="out_relu",d=.25,p=.35;s.IMAGE_SIZE=224;var f=function(k){return k.packageVersion=k.packageVersion||l.version,k.packageName=k.packageName||"@teachablemachine/image",k.timeStamp=k.timeStamp||new Date().toISOString(),k.userMetadata=k.userMetadata||{},k.modelName=k.modelName||"untitled",k.labels=k.labels||[],k.imageSize=k.imageSize||s.IMAGE_SIZE,k},m=function(k){return!!k&&Array.isArray(k.labels)},g=function(k,S){if(k===1){if(S!==.25&&S!==.5&&S!==.75&&S!==1)return console.warn("Invalid alpha. Options are: 0.25, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",d.toFixed(2)),d}else if(S!==.35&&S!==.5&&S!==.75&&S!==1)return console.warn("Invalid alpha. Options are: 0.35, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",p.toFixed(2)),p;return S},y=function(k){if(k=k||{},k.checkpointUrl&&k.trainingLayer)return(k.alpha||k.version)&&console.warn("Checkpoint URL passed to modelOptions, alpha options are ignored"),[k.checkpointUrl,k.trainingLayer];if(k.version=k.version||c,k.version===1){k.alpha=k.alpha||d,k.alpha=g(k.version,k.alpha),console.log("Loading mobilenet "+k.version+" and alpha "+k.alpha);var S=k.alpha.toFixed(2);return S==="1.00"&&(S="1.0"),["https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_"+S+"_"+s.IMAGE_SIZE+"/model.json",u]}else{if(k.version===2)return k.alpha=k.alpha||p,k.alpha=g(k.version,k.alpha),console.log("Loading mobilenet "+k.version+" and alpha "+k.alpha),["https://storage.googleapis.com/teachable-machine-models/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_"+k.alpha.toFixed(2)+"_"+s.IMAGE_SIZE+"_no_top/model.json",h];throw new Error("MobileNet V"+k.version+" doesn't exist")}},b=function(k){return t(void 0,void 0,void 0,function(){var S,E;return n(this,function(A){switch(A.label){case 0:return typeof k!="string"?[3,3]:[4,fetch(k)];case 1:return E=A.sent(),[4,E.json()];case 2:return S=A.sent(),[3,4];case 3:if(m(k))S=k;else throw new Error("Invalid Metadata provided");A.label=4;case 4:return[2,f(S)]}})})};function x(k,S,E){return E===void 0&&(E=3),t(this,void 0,void 0,function(){var A;return n(this,function(F){switch(F.label){case 0:return[4,S.data()];case 1:return A=F.sent(),[2,r.tidy(function(){E=Math.min(E,A.length);for(var D=[],O=0;O<A.length;O++)D.push({value:A[O],index:O});D.sort(function(H,U){return U.value-H.value});for(var B=new Float32Array(E),V=new Int32Array(E),O=0;O<E;O++)B[O]=D[O].value,V[O]=D[O].index;for(var z=[],O=0;O<V.length;O++)z.push({className:k[V[O]],probability:B[O]});return z})]}})})}s.getTopKClasses=x;var v=function(){function k(S,E){this.model=S,this._metadata=f(E)}return Object.defineProperty(k,"EXPECTED_IMAGE_SIZE",{get:function(){return s.IMAGE_SIZE},enumerable:!1,configurable:!0}),k.prototype.getMetadata=function(){return this._metadata},k.prototype.getTotalClasses=function(){var S=this.model.output,E=S.shape[1];return E},k.prototype.getClassLabels=function(){return this._metadata.labels},k.prototype.predictTopK=function(S,E,A){return E===void 0&&(E=10),A===void 0&&(A=!1),t(this,void 0,void 0,function(){var F,D,O,B=this;return n(this,function(V){switch(V.label){case 0:return F=i.cropTo(S,this._metadata.imageSize,A),D=r.tidy(function(){var z=a.capture(F,B._metadata.grayscale);return B.model.predict(z)}),[4,x(this._metadata.labels,D,E)];case 1:return O=V.sent(),o.dispose(D),[2,O]}})})},k.prototype.predict=function(S,E){return E===void 0&&(E=!1),t(this,void 0,void 0,function(){var A,F,D,O,B,V=this;return n(this,function(z){switch(z.label){case 0:return A=i.cropTo(S,this._metadata.imageSize,E),F=r.tidy(function(){var H=a.capture(A,V._metadata.grayscale);return V.model.predict(H)}),[4,F.data()];case 1:for(D=z.sent(),O=[],B=0;B<D.length;B++)O.push({className:this._metadata.labels[B],probability:D[B]});return o.dispose(F),[2,O]}})})},k.prototype.dispose=function(){this.truncatedModel.dispose()},k}();s.CustomMobileNet=v;function w(k){return t(this,void 0,void 0,function(){var S,E,A,F,D,O,B,D,O,B;return n(this,function(V){switch(V.label){case 0:return S=y(k),E=S[0],A=S[1],[4,r.loadLayersModel(E)];case 1:return F=V.sent(),k&&k.version===1?(D=F.getLayer(A),O=r.model({inputs:F.inputs,outputs:D.output}),B=r.sequential(),B.add(O),B.add(r.layers.flatten()),[2,B]):(D=F.getLayer(A),O=r.model({inputs:F.inputs,outputs:D.output}),B=r.sequential(),B.add(O),B.add(r.layers.globalAveragePooling2d({})),[2,B])}})})}s.loadTruncatedMobileNet=w;function C(k,S){return t(this,void 0,void 0,function(){var E,A,F;return n(this,function(D){switch(D.label){case 0:return[4,r.loadLayersModel(k)];case 1:return E=D.sent(),S?[4,b(S)]:[3,3];case 2:return F=D.sent(),[3,4];case 3:F=null,D.label=4;case 4:return A=F,[2,new v(E,A)]}})})}s.load=C;function N(k,S,E){return t(this,void 0,void 0,function(){var A,F,D,O;return n(this,function(B){switch(B.label){case 0:return[4,r.loadLayersModel(r.io.browserFiles([k,S]))];case 1:return A=B.sent(),[4,new Response(E).json()];case 2:return F=B.sent(),E?[4,b(F)]:[3,4];case 3:return O=B.sent(),[3,5];case 4:O=null,B.label=5;case 5:return D=O,[2,new v(A,D)]}})})}s.loadFromFiles=N})(Zp);var Si={},Vk={exports:{}};(function(s){(function(t,n,r){function o(c){var u=this,h=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(c),u.s0<0&&(u.s0+=1),u.s1-=h(c),u.s1<0&&(u.s1+=1),u.s2-=h(c),u.s2<0&&(u.s2+=1),h=null}function a(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var h=new o(c),d=u&&u.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&a(d,h),p.state=function(){return a(h,{})}),p}function l(){var c=4022871197,u=function(h){h=h.toString();for(var d=0;d<h.length;d++){c+=h.charCodeAt(d);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(Ke,s,!1)})(Vk);var Wk={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(Ke,s,!1)})(Wk);var Uk={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,h==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(Ke,s,!1)})(Uk);var Gk={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.x,d=c.i,p,f;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,c.i=d+1&7,f};function u(h,d){var p,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,p=0;p<d.length;++p)f[p&7]=f[p&7]<<15^d.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8&&(f[7]=-1),h.x=f,h.i=0,p=256;p>0;--p)h.next()}u(c,l)}function a(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.x&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(Ke,s,!1)})(Gk);var Hk={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.w,d=c.X,p=c.i,f,m;return c.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,c.i=p,m+(h^h>>>16)|0};function u(h,d){var p,f,m,g,y,b=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=b[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],p=b[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,b[m]=f^p;h.w=y,h.X=b,h.i=m}u(c,l)}function a(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.X&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(Ke,s,!1)})(Hk);var jk={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.b,p=c.c,f=c.d,m=c.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,c.b=d=d<<20^d>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)c.b^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(Ke,s,!1)})(jk);var qk={exports:{}};(function(s){(function(t,n){var r=(0,eval)("this"),o=256,a=6,i=52,l="random",c=n.pow(o,a),u=n.pow(2,i),h=u*2,d=o-1,p;function f(w,C,N){var k=[];C=C==!0?{entropy:!0}:C||{};var S=b(y(C.entropy?[w,v(t)]:w==null?x():w,3),k),E=new m(k),A=function(){for(var F=E.g(a),D=c,O=0;F<u;)F=(F+O)*o,D*=o,O=E.g(1);for(;F>=h;)F/=2,D/=2,O>>>=1;return(F+O)/D};return A.int32=function(){return E.g(4)|0},A.quick=function(){return E.g(4)/4294967296},A.double=A,b(v(E.S),t),(C.pass||N||function(F,D,O,B){return B&&(B.S&&g(B,E),F.state=function(){return g(E,{})}),O?(n[l]=F,D):F})(A,S,"global"in C?C.global:this==n,C.state)}n["seed"+l]=f;function m(w){var C,N=w.length,k=this,S=0,E=k.i=k.j=0,A=k.S=[];for(N||(w=[N++]);S<o;)A[S]=S++;for(S=0;S<o;S++)A[S]=A[E=d&E+w[S%N]+(C=A[S])],A[E]=C;(k.g=function(F){for(var D,O=0,B=k.i,V=k.j,z=k.S;F--;)D=z[B=d&B+1],O=O*o+z[d&(z[B]=z[V=d&V+D])+(z[V]=D)];return k.i=B,k.j=V,O})(o)}function g(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function y(w,C){var N=[],k=typeof w,S;if(C&&k=="object")for(S in w)try{N.push(y(w[S],C-1))}catch{}return N.length?N:k=="string"?w:w+"\0"}function b(w,C){for(var N=w+"",k,S=0;S<N.length;)C[d&S]=d&(k^=C[d&S]*19)+N.charCodeAt(S++);return v(C)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(o):(w=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(w)),v(w)}catch{var C=r.navigator,N=C&&C.plugins;return[+new Date,r,N,r.screen,v(t)]}}function v(w){return String.fromCharCode.apply(0,w)}if(b(n.random(),t),s.exports){s.exports=f;try{p=require("crypto")}catch{}}})([],Math)})(qk);var pJ=Vk.exports,fJ=Wk.exports,mJ=Uk.exports,gJ=Gk.exports,yJ=Hk.exports,bJ=jk.exports,To=qk.exports;To.alea=pJ;To.xor128=fJ;To.xorwow=mJ;To.xorshift7=gJ;To.xor4096=yJ;To.tychei=bJ;var xJ=To;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var wJ=Ke&&Ke.__extends||function(){var s=function(t,n){return s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,o){r.__proto__=o}||function(r,o){for(var a in o)o.hasOwnProperty(a)&&(r[a]=o[a])},s(t,n)};return function(t,n){s(t,n);function r(){this.constructor=t}t.prototype=n===null?Object.create(n):(r.prototype=n.prototype,new r)}}(),nr=Ke&&Ke.__awaiter||function(s,t,n,r){function o(a){return a instanceof n?a:new n(function(i){i(a)})}return new(n||(n=Promise))(function(a,i){function l(h){try{u(r.next(h))}catch(d){i(d)}}function c(h){try{u(r.throw(h))}catch(d){i(d)}}function u(h){h.done?a(h.value):o(h.value).then(l,c)}u((r=r.apply(s,t||[])).next())})},sr=Ke&&Ke.__generator||function(s,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,o,a,i;return i={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function l(u){return function(h){return c([u,h])}}function c(u){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,o&&(a=u[0]&2?o.return:u[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,u[1])).done)return a;switch(o=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,o=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(s,n)}catch(h){u=[6,h],o=0}finally{r=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(Si,"__esModule",{value:!0});Si.createTeachable=Si.TeachableMobileNet=void 0;var qt=Wc,vJ=Wc,$J=No,Kk=Zp,CJ=xJ,kJ=.15,IJ=function(s){return typeof s.dataId=="object"&&typeof s.shape=="object"};function NJ(s,t){var n=new Array(t).fill(0);return n[s]=1,n}function Bb(s,t){for(var n,r=s.length,o=s.slice(),a=r-1;a>0;a-=1){var i=void 0;t?i=Math.floor(t()*(a+1)):i=Math.floor(Math.random()*(a+1)),n=[o[i],o[a]],o[a]=n[0],o[i]=n[1]}return o}var Xk=function(s){wJ(t,s);function t(n,r){var o=s.call(this,qt.sequential(),r)||this;return o.totalSamples=0,o.examples=[],o.truncatedModel=n,o}return Object.defineProperty(t.prototype,"asSequentialModel",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),t.prototype.addExample=function(n,r){return nr(this,void 0,void 0,function(){var o,a,i;return sr(this,function(l){return o=IJ(r)?r:$J.capture(r,this._metadata.grayscale),a=this.truncatedModel.predict(o),i=a.dataSync(),o.dispose(),a.dispose(),this.examples[n].push(i),this.totalSamples++,[2]})})},t.prototype.predict=function(n,r){return r===void 0&&(r=!1),nr(this,void 0,void 0,function(){return sr(this,function(o){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,s.prototype.predict.call(this,n,r)]})})},t.prototype.predictTopK=function(n,r,o){return r===void 0&&(r=10),o===void 0&&(o=!1),nr(this,void 0,void 0,function(){return sr(this,function(a){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,s.prototype.predictTopK.call(this,n,r,o)]})})},t.prototype.prepare=function(){for(var n in this.examples)if(n.length===0)throw new Error("Add some examples before training");var r=this.convertToTfDataset();this.trainDataset=r.trainDataset,this.validationDataset=r.validationDataset},t.prototype.convertToTfDataset=function(){for(var n=0;n<this.examples.length;n++)this.examples[n]=Bb(this.examples[n],this.seed);for(var r=[],o=[],a=function(d){var p=NJ(d,i.numClasses),f=i.examples[d].length,m=Math.ceil(kJ*f),g=f-m,y=i.examples[d].slice(0,g).map(function(x){return{data:x,label:p}}),b=i.examples[d].slice(g).map(function(x){return{data:x,label:p}});r=r.concat(y),o=o.concat(b)},i=this,n=0;n<this.examples.length;n++)a(n);r=Bb(r,this.seed),o=Bb(o,this.seed);var l=qt.data.array(r.map(function(d){return d.data})),c=qt.data.array(o.map(function(d){return d.data})),u=qt.data.array(r.map(function(d){return d.label})),h=qt.data.array(o.map(function(d){return d.label}));return{trainDataset:qt.data.zip({xs:l,ys:u}),validationDataset:qt.data.zip({xs:c,ys:h})}},t.prototype.save=function(n,r){return nr(this,void 0,void 0,function(){return sr(this,function(o){return[2,this.model.save(n,r)]})})},t.prototype.train=function(n,r){return r===void 0&&(r={}),nr(this,void 0,void 0,function(){var o,a,i,l,c,u,h,d,p,f=this;return sr(this,function(m){switch(m.label){case 0:if(o=r.onTrainEnd||function(){},r.onTrainEnd=function(g){f.__stopTrainingResolve&&(f.__stopTrainingResolve(),f.__stopTrainingResolve=null),o(g)},this.isPrepared||this.prepare(),a=this.getLabels().length,vJ.util.assert(a===this.numClasses,function(){return"Can not train, has "+a+" labels and "+f.numClasses+" classes"}),i=this.truncatedModel.outputs[0].shape.slice(1),l=qt.util.sizeFromShape(i),this.seed?c=qt.initializers.varianceScaling({seed:3.14}):c=qt.initializers.varianceScaling({}),this.trainingModel=qt.sequential({layers:[qt.layers.dense({inputShape:[l],units:n.denseUnits,activation:"relu",kernelInitializer:c,useBias:!0}),qt.layers.dense({kernelInitializer:c,useBias:!1,activation:"softmax",units:this.numClasses})]}),u=qt.train.adam(n.learningRate),this.trainingModel.compile({optimizer:u,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(n.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return h=this.trainDataset.batch(n.batchSize),d=this.validationDataset.batch(n.batchSize),[4,this.trainingModel.fitDataset(h,{epochs:n.epochs,validationData:d,callbacks:r})];case 1:return m.sent(),p=qt.sequential(),p.add(this.truncatedModel),p.add(this.trainingModel),this.model=p,u.dispose(),[2,this.model]}})})},t.prototype.prepareDataset=function(){for(var n=0;n<this.numClasses;n++)this.examples[n]=[]},t.prototype.setLabel=function(n,r){this._metadata.labels[n]=r},t.prototype.setLabels=function(n){this._metadata.labels=n,this.prepareDataset()},t.prototype.getLabel=function(n){return this._metadata.labels[n]},t.prototype.getLabels=function(){return this._metadata.labels},t.prototype.setName=function(n){this._metadata.modelName=n},t.prototype.getName=function(){return this._metadata.modelName},t.prototype.stopTraining=function(){var n=this,r=new Promise(function(o,a){n.trainingModel.stopTraining=!0,n.__stopTrainingResolve=o});return r},t.prototype.dispose=function(){this.trainingModel.dispose(),s.prototype.dispose.call(this)},t.prototype.calculateAccuracyPerClass=function(){return nr(this,void 0,void 0,function(){var n,r,o,a,i,l,c,u,h,d,p,f,m,g,y,b,x,v,p,w=this;return sr(this,function(C){switch(C.label){case 0:return n=this.validationDataset.mapAsync(function(N){return nr(w,void 0,void 0,function(){return sr(this,function(k){return[2,N.xs]})})}),r=this.validationDataset.mapAsync(function(N){return nr(w,void 0,void 0,function(){return sr(this,function(k){return[2,N.ys]})})}),o=Math.min(r.size,32),a=Math.ceil(r.size/o),i=n.batch(o),l=r.batch(o),[4,i.iterator()];case 1:return c=C.sent(),[4,l.iterator()];case 2:u=C.sent(),h=[],d=[],p=0,C.label=3;case 3:return p<a?[4,c.next()]:[3,7];case 4:return f=C.sent(),m=this.trainingModel.predict(f.value),g=m.argMax(1),h.push(g),[4,u.next()];case 5:y=C.sent(),b=y.value.argMax(1),d.push(b),f.value.dispose(),m.dispose(),y.value.dispose(),C.label=6;case 6:return p++,[3,3];case 7:if(x=qt.concat(d),v=qt.concat(h),a!==1)for(p=0;p<h.length;p++)h[p].dispose(),d[p].dispose();return[2,{reference:x,predictions:v}]}})})},t.prototype.setSeed=function(n){this.seed=CJ(n)},t}(Kk.CustomMobileNet);Si.TeachableMobileNet=Xk;function SJ(s,t){return nr(this,void 0,void 0,function(){var n;return sr(this,function(r){switch(r.label){case 0:return[4,Kk.loadTruncatedMobileNet(t)];case 1:return n=r.sent(),[2,new Xk(n,s)]}})})}Si.createTeachable=SJ;var Tp={};function Ep(s){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Ep=function(n){return typeof n}:Ep=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ep(s)}function Vb(s,t,n){var r=n.value;if(typeof r!="function")throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(Ep(r)));var o=!1;return{configurable:!0,get:function(){if(o||this===s.prototype||this.hasOwnProperty(t)||typeof r!="function")return r;var i=r.bind(this);return o=!0,Object.defineProperty(this,t,{configurable:!0,get:function(){return i},set:function(c){r=c,delete this[t]}}),o=!1,i},set:function(i){r=i}}}function Yk(s){var t;return typeof Reflect!="undefined"&&typeof Reflect.ownKeys=="function"?t=Reflect.ownKeys(s.prototype):(t=Object.getOwnPropertyNames(s.prototype),typeof Object.getOwnPropertySymbols=="function"&&(t=t.concat(Object.getOwnPropertySymbols(s.prototype)))),t.forEach(function(n){if(n!=="constructor"){var r=Object.getOwnPropertyDescriptor(s.prototype,n);typeof r.value=="function"&&Object.defineProperty(s.prototype,n,Vb(s,n,r))}}),s}function TJ(){return arguments.length===1?Yk.apply(void 0,arguments):Vb.apply(void 0,arguments)}var EJ=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",boundMethod:Vb,boundClass:Yk,default:TJ}),AJ=jb(EJ);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Dr=Ke&&Ke.__decorate||function(s,t,n,r){var o=arguments.length,a=o<3?t:r===null?r=Object.getOwnPropertyDescriptor(t,n):r,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(s,t,n,r);else for(var l=s.length-1;l>=0;l--)(i=s[l])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},DJ=Ke&&Ke.__awaiter||function(s,t,n,r){function o(a){return a instanceof n?a:new n(function(i){i(a)})}return new(n||(n=Promise))(function(a,i){function l(h){try{u(r.next(h))}catch(d){i(d)}}function c(h){try{u(r.throw(h))}catch(d){i(d)}}function u(h){h.done?a(h.value):o(h.value).then(l,c)}u((r=r.apply(s,t||[])).next())})},RJ=Ke&&Ke.__generator||function(s,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,o,a,i;return i={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function l(u){return function(h){return c([u,h])}}function c(u){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,o&&(a=u[0]&2?o.return:u[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,u[1])).done)return a;switch(o=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,o=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(s,n)}catch(h){u=[6,h],o=0}finally{r=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(Tp,"__esModule",{value:!0});Tp.Webcam=void 0;var Rr=AJ,FJ=gs,Wb={facingMode:"user",frameRate:24},_J=function(s){return s.facingMode=s.facingMode||Wb.facingMode,s.frameRate=s.frameRate||Wb.frameRate,s.aspectRatio=s.aspectRatio||Wb.aspectRatio,s},OJ=function(){function s(t,n,r){t===void 0&&(t=400),n===void 0&&(n=400),r===void 0&&(r=!1),this.width=t,this.height=n,this.flip=r}return s.prototype.getWebcam=function(t){if(t===void 0&&(t={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");t.width=640;var n=_J(t),r=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:n}).then(function(o){return r.srcObject=o,r.addEventListener("loadedmetadata",function(a){var i=r.videoWidth,l=r.videoHeight;r.width=i,r.height=l}),r},function(){return Promise.reject("Could not open your camera. You may have denied access.")})},s.prototype.setup=function(t){return t===void 0&&(t={}),DJ(this,void 0,void 0,function(){var n;return RJ(this,function(r){switch(r.label){case 0:return this.webcam?[3,2]:(n=this,[4,this.getWebcam(t)]);case 1:n.webcam=r.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),r.label=2;case 2:return[2]}})})},s.prototype.play=function(){var t=this.webcam.play();return t},s.prototype.pause=function(){this.webcam.pause()},s.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},s.prototype.update=function(){this.renderCameraToCanvas()},s.prototype.stopStreamedVideo=function(t){var n=t.srcObject,r=n.getTracks();r.forEach(function(o){o.stop()}),t.srcObject=null},s.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var t=this.canvas.getContext("2d");if(this.webcam.videoWidth!==0){var n=FJ.cropTo(this.webcam,this.width,this.flip);t.drawImage(n,0,0)}}},Dr([Rr.default],s.prototype,"getWebcam",null),Dr([Rr.default],s.prototype,"setup",null),Dr([Rr.default],s.prototype,"play",null),Dr([Rr.default],s.prototype,"pause",null),Dr([Rr.default],s.prototype,"stop",null),Dr([Rr.default],s.prototype,"update",null),Dr([Rr.default],s.prototype,"stopStreamedVideo",null),Dr([Rr.default],s.prototype,"renderCameraToCanvas",null),s}();Tp.Webcam=OJ;(function(s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty(s,"__esModule",{value:!0});var t=Zp;Object.defineProperty(s,"IMAGE_SIZE",{enumerable:!0,get:function(){return t.IMAGE_SIZE}}),Object.defineProperty(s,"CustomMobileNet",{enumerable:!0,get:function(){return t.CustomMobileNet}}),Object.defineProperty(s,"load",{enumerable:!0,get:function(){return t.load}}),Object.defineProperty(s,"loadFromFiles",{enumerable:!0,get:function(){return t.loadFromFiles}}),Object.defineProperty(s,"loadTruncatedMobileNet",{enumerable:!0,get:function(){return t.loadTruncatedMobileNet}});var n=Si;Object.defineProperty(s,"TeachableMobileNet",{enumerable:!0,get:function(){return n.TeachableMobileNet}}),Object.defineProperty(s,"createTeachable",{enumerable:!0,get:function(){return n.createTeachable}});var r=Tp;Object.defineProperty(s,"Webcam",{enumerable:!0,get:function(){return r.Webcam}});var o=Uc;Object.defineProperty(s,"version",{enumerable:!0,get:function(){return o.version}})})(Sx);function LJ(s="",t={},n={}){return fetch("https://only-dog-be.azurewebsites.net"+s,{method:"POST",headers:t,body:n})}const Zk="https://teachablemachine.withgoogle.com/models/wNpy2osdc/",PJ=Zk+"model.json",MJ=Zk+"metadata.json";var HJ=te.exports.memo(function({component:t,endpoint:n}){const[r,o]=te.exports.useState(),[a,i]=te.exports.useState(),[l,c]=te.exports.useState(""),[u,h]=te.exports.useState(!1),{stateAccessToken:d}=te.exports.useContext(cI),{setShowModalLogin:p}=te.exports.useContext(uI),f=b=>{i(b.target.files[0])},m=()=>o(!1),g=()=>d?o(!0):p(!0),y=()=>{if(h(!0),a)if(a.size/1024/1024<=.5){const b=new FileReader;let x=null;b.readAsDataURL(a),b.onloadend=function(){const v=new Image;v.onload=async function(){if(x=await(await Sx.load(PJ,MJ)).predict(v),x[0].probability>x[1].probability){const C=new FormData;C.append(n==="/posts/add_image_post"?"imagePost":"avatar",a),LJ(n+"/"+hI(d),{Authorization:"Bearer "+d},C).then(N=>N.json()).then(N=>{c("https://only-dog-be.azurewebsites.net"+N.pathImage),h(!1)}).catch(N=>console.log(N))}else h(!1),alert("Not doggggggggg")},v.src=b.result}}else h(!1),alert("This image too large, change other image: "+Math.round(e.target.files[0].size/1024/1024*100)/100+"MB");else h(!1)};return Fs(jc,{children:[xe("div",{onClick:g,children:t}),Fs(tu,{show:r,onHide:m,children:[xe(tu.Header,{closeButton:!0,children:xe(tu.Title,{children:"Image"})}),Fs(tu.Body,{children:[xe("small",{children:"Max size: 0.5MB"}),Fs("div",{className:"d-flex justify-content-between mb-1",children:[xe(Up,{encType:"multipart/form-data",children:xe(Up.Group,{controlId:"formFile",children:xe(Up.Control,{type:"file",onChange:f,accept:"image/png, image/jpg, image/jpeg, image/bmp",name:"imagePost"})})}),u?Fs(nx,{disabled:!0,children:[xe(iI,{}),"Loading..."]}):xe(nx,{onClick:y,children:"Upload"})]}),xe("img",{src:l||lI,alt:"image",className:"mb-2",width:"100%",height:"400",style:{userSelect:"none",objectFit:"cover"}})]})]})]})});export{_N as A,kN as B,WI as C,Or as E,tx as F,Cx as M,EI as T,kI as a,Rp as b,or as c,Lr as d,Di as e,Jc as f,Pp as g,UI as h,TN as i,EN as j,tu as k,Up as l,nx as m,HJ as n,_r as s,II as t,ex as u};
