var VN=Object.defineProperty,WN=Object.defineProperties;var UN=Object.getOwnPropertyDescriptors;var Vc=Object.getOwnPropertySymbols;var Ab=Object.prototype.hasOwnProperty,Db=Object.prototype.propertyIsEnumerable;var Rb=(s,t,n)=>t in s?VN(s,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[t]=n,Ee=(s,t)=>{for(var n in t||(t={}))Ab.call(t,n)&&Rb(s,n,t[n]);if(Vc)for(var n of Vc(t))Db.call(t,n)&&Rb(s,n,t[n]);return s},ze=(s,t)=>WN(s,UN(t));var Ke=(s,t)=>{var n={};for(var r in s)Ab.call(s,r)&&t.indexOf(r)<0&&(n[r]=s[r]);if(s!=null&&Vc)for(var r of Vc(s))t.indexOf(r)<0&&Db.call(s,r)&&(n[r]=s[r]);return n};import{r as se,R as ee,c as Ue,g as Fb}from"./vendor.a3abce89.js";import{A as ko}from"./index.cf333884.js";import{G as ki}from"./iconBase.13e4c446.js";import{_ as GN,t as HN,j as we,T as _b,a as Ob,c as st,s as Lb,E as jN,b as Pb,d as xp,e as zb,u as qN,f as Io,g as pt,h as wp,C as KN,i as Mb,F as vp,P as So,A as XN,M as YN,B as ZN,k as JN,l as QN,m as Ln}from"./Modal.a07a7908.js";import{p as Bb}from"./grey.61f403c9.js";function ek(s,t){return t.forEach(function(n){Object.keys(n).forEach(function(r){if(r!=="default"&&!(r in s)){var o=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(s,r,o.get?o:{enumerable:!0,get:function(){return n[r]}})}})}),Object.freeze(s)}var tk="/assets/logo.ada3b726.svg";function nk(){const{setPage:s}=se.exports.useContext(ko);return ee.createElement("img",{role:"button",src:tk,alt:"Logo OnlyDog",width:200,onClick:()=>{s("dashboard")},style:{userSelect:"none"},className:"my-2"})}function $p(){return $p=Object.assign||function(s){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(s[r]=n[r])}return s},$p.apply(this,arguments)}function Vb(s){return"default"+s.charAt(0).toUpperCase()+s.substr(1)}function sk(s){var t=rk(s,"string");return typeof t=="symbol"?t:String(t)}function rk(s,t){if(typeof s!="object"||s===null)return s;var n=s[Symbol.toPrimitive];if(n!==void 0){var r=n.call(s,t||"default");if(typeof r!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(t==="string"?String:Number)(s)}function ok(s,t,n){var r=se.exports.useRef(s!==void 0),o=se.exports.useState(t),a=o[0],i=o[1],l=s!==void 0,c=r.current;return r.current=l,!l&&c&&a!==t&&i(t),[l?s:a,se.exports.useCallback(function(u){for(var h=arguments.length,d=new Array(h>1?h-1:0),p=1;p<h;p++)d[p-1]=arguments[p];n&&n.apply(void 0,[u].concat(d)),i(u)},[n])]}function Wb(s,t){return Object.keys(t).reduce(function(n,r){var o,a=n,i=a[Vb(r)],l=a[r],c=GN(a,[Vb(r),r].map(sk)),u=t[r],h=ok(l,i,s[u]),d=h[0],p=h[1];return $p({},c,(o={},o[r]=d,o[u]=p,o))},s)}function Ii(...s){return s.filter(t=>t!=null).reduce((t,n)=>{if(typeof n!="function")throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return t===null?n:function(...o){t.apply(this,o),n.apply(this,o)}},null)}const ak={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function Ub(s,t){const n=`offset${s[0].toUpperCase()}${s.slice(1)}`,r=t[n],o=ak[s];return r+parseInt(Lb(t,o[0]),10)+parseInt(Lb(t,o[1]),10)}const ik={[jN]:"collapse",[Pb]:"collapsing",[xp]:"collapsing",[zb]:"collapse show"},lk={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,getDimensionValue:Ub},Gb=ee.forwardRef((d,h)=>{var p=d,{onEnter:s,onEntering:t,onEntered:n,onExit:r,onExiting:o,className:a,children:i,dimension:l="height",getDimensionValue:c=Ub}=p,u=Ke(p,["onEnter","onEntering","onEntered","onExit","onExiting","className","children","dimension","getDimensionValue"]);const f=typeof l=="function"?l():l,m=se.exports.useMemo(()=>Ii(w=>{w.style[f]="0"},s),[f,s]),g=se.exports.useMemo(()=>Ii(w=>{const v=`scroll${f[0].toUpperCase()}${f.slice(1)}`;w.style[f]=`${w[v]}px`},t),[f,t]),y=se.exports.useMemo(()=>Ii(w=>{w.style[f]=null},n),[f,n]),b=se.exports.useMemo(()=>Ii(w=>{w.style[f]=`${c(f,w)}px`,HN(w)},r),[r,c,f]),x=se.exports.useMemo(()=>Ii(w=>{w.style[f]=null},o),[f,o]);return we.exports.jsx(_b,ze(Ee({ref:h,addEndListener:Ob},u),{"aria-expanded":u.role?u.in:null,onEnter:m,onEntering:g,onEntered:y,onExit:b,onExiting:x,childRef:i.ref,children:(w,v)=>ee.cloneElement(i,ze(Ee({},v),{className:st(a,i.props.className,ik[w],f==="width"&&"collapse-horizontal")}))}))});Gb.defaultProps=lk;var ck=Gb;const uk=["as","disabled"];function hk(s,t){if(s==null)return{};var n={},r=Object.keys(s),o,a;for(a=0;a<r.length;a++)o=r[a],!(t.indexOf(o)>=0)&&(n[o]=s[o]);return n}function dk(s){return!s||s.trim()==="#"}function Cp({tagName:s,disabled:t,href:n,target:r,rel:o,onClick:a,tabIndex:i=0,type:l}){s||(n!=null||r!=null||o!=null?s="a":s="button");const c={tagName:s};if(s==="button")return[{type:l||"button",disabled:t},c];const u=d=>{if((t||s==="a"&&dk(n))&&d.preventDefault(),t){d.stopPropagation();return}a==null||a(d)};return[{role:"button",disabled:void 0,tabIndex:t?void 0:i,href:s==="a"&&t?void 0:n,target:s==="a"?r:void 0,"aria-disabled":t||void 0,rel:s==="a"?o:void 0,onClick:u,onKeyDown:d=>{d.key===" "&&(d.preventDefault(),u(d))}},c]}const pk=se.exports.forwardRef((s,t)=>{let{as:n,disabled:r}=s,o=hk(s,uk);const[a,{tagName:i}]=Cp(Object.assign({tagName:n,disabled:r},o));return we.exports.jsx(i,Object.assign({},o,a,{ref:t}))});pk.displayName="Button";const fk=["onKeyDown"];function mk(s,t){if(s==null)return{};var n={},r=Object.keys(s),o,a;for(a=0;a<r.length;a++)o=r[a],!(t.indexOf(o)>=0)&&(n[o]=s[o]);return n}function gk(s){return!s||s.trim()==="#"}const Hb=se.exports.forwardRef((s,t)=>{let{onKeyDown:n}=s,r=mk(s,fk);const[o]=Cp(Object.assign({tagName:"a"},r)),a=qN(i=>{o.onKeyDown(i),n==null||n(i)});return gk(r.href)&&!r.role||r.role==="button"?we.exports.jsx("a",Object.assign({ref:t},r,o,{onKeyDown:a})):we.exports.jsx("a",Object.assign({ref:t},r,{onKeyDown:n}))});Hb.displayName="Anchor";var yk=Hb;const jb=Mb("h4");jb.displayName="DivStyledAsH4";const bk=Io("alert-heading",{Component:jb}),xk=Io("alert-link",{Component:yk}),wk={variant:"primary",show:!0,transition:vp,closeLabel:"Close alert"},Np=se.exports.forwardRef((s,t)=>{const b=Wb(s,{show:"onClose"}),{bsPrefix:n,show:r,closeLabel:o,closeVariant:a,className:i,children:l,variant:c,onClose:u,dismissible:h,transition:d}=b,p=Ke(b,["bsPrefix","show","closeLabel","closeVariant","className","children","variant","onClose","dismissible","transition"]),f=pt(n,"alert"),m=wp(x=>{u&&u(!1,x)}),g=d===!0?vp:d,y=we.exports.jsxs("div",ze(Ee({role:"alert"},g?void 0:p),{ref:t,className:st(i,f,c&&`${f}-${c}`,h&&`${f}-dismissible`),children:[h&&we.exports.jsx(KN,{onClick:m,"aria-label":o,variant:a}),l]}));return g?we.exports.jsx(g,ze(Ee({unmountOnExit:!0},p),{ref:void 0,in:r,children:y})):r?y:null});Np.displayName="Alert";Np.defaultProps=wk;var kp=Object.assign(Np,{Link:xk,Heading:bk});const vk={variant:"primary",active:!1,disabled:!1},Ip=se.exports.forwardRef((c,l)=>{var u=c,{as:s,bsPrefix:t,variant:n,size:r,active:o,className:a}=u,i=Ke(u,["as","bsPrefix","variant","size","active","className"]);const h=pt(t,"btn"),[d,{tagName:p}]=Cp(Ee({tagName:s},i)),f=p;return we.exports.jsx(f,ze(Ee(Ee({},i),d),{ref:l,className:st(a,h,o&&"active",n&&`${h}-${n}`,r&&`${h}-${r}`,i.href&&i.disabled&&"disabled")}))});Ip.displayName="Button";Ip.defaultProps=vk;var rr=Ip;const $k=["xxl","xl","lg","md","sm","xs"];function Ck(o){var a=o,{as:s,bsPrefix:t,className:n}=a,r=Ke(a,["as","bsPrefix","className"]);t=pt(t,"col");const i=[],l=[];return $k.forEach(c=>{const u=r[c];delete r[c];let h,d,p;typeof u=="object"&&u!=null?{span:h,offset:d,order:p}=u:h=u;const f=c!=="xs"?`-${c}`:"";h&&i.push(h===!0?`${t}${f}`:`${t}${f}-${h}`),p!=null&&l.push(`order${f}-${p}`),d!=null&&l.push(`offset${f}-${d}`)}),[ze(Ee({},r),{className:st(n,...i,...l)}),{as:s,bsPrefix:t,spans:i}]}const qb=se.exports.forwardRef((s,t)=>{const[l,...c]=Ck(s),u=l,{className:n}=u,r=Ke(u,["className"]),[{as:o="div",bsPrefix:a,spans:i}]=c;return we.exports.jsx(o,ze(Ee({},r),{ref:t,className:st(n,!i.length&&a)}))});qb.displayName="Col";var Nk=qb;const kk=se.exports.createContext(null);var Ik=kk;const Kb=se.exports.createContext(null);Kb.displayName="NavbarContext";var Si=Kb;const Sk={type:So.string,tooltip:So.bool,as:So.elementType},Sp=se.exports.forwardRef((i,a)=>{var l=i,{as:s="div",className:t,type:n="valid",tooltip:r=!1}=l,o=Ke(l,["as","className","type","tooltip"]);return we.exports.jsx(s,ze(Ee({},o),{ref:a,className:st(t,`${n}-${r?"tooltip":"feedback"}`)}))});Sp.displayName="Feedback";Sp.propTypes=Sk;var Xb=Sp;const Tk=se.exports.createContext({});var Rs=Tk;const Yb=se.exports.forwardRef((u,c)=>{var h=u,{id:s,bsPrefix:t,className:n,type:r="checkbox",isValid:o=!1,isInvalid:a=!1,as:i="input"}=h,l=Ke(h,["id","bsPrefix","className","type","isValid","isInvalid","as"]);const{controlId:d}=se.exports.useContext(Rs);return t=pt(t,"form-check-input"),we.exports.jsx(i,ze(Ee({},l),{ref:c,type:r,id:s||d,className:st(n,t,o&&"is-valid",a&&"is-invalid")}))});Yb.displayName="FormCheckInput";var Zb=Yb;const Jb=se.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,htmlFor:n}=i,r=Ke(i,["bsPrefix","className","htmlFor"]);const{controlId:l}=se.exports.useContext(Rs);return s=pt(s,"form-check-label"),we.exports.jsx("label",ze(Ee({},r),{ref:o,htmlFor:n||l,className:st(t,s)}))});Jb.displayName="FormCheckLabel";var Qb=Jb;const ex=se.exports.forwardRef((w,x)=>{var v=w,{id:s,bsPrefix:t,bsSwitchPrefix:n,inline:r=!1,disabled:o=!1,isValid:a=!1,isInvalid:i=!1,feedbackTooltip:l=!1,feedback:c,feedbackType:u,className:h,style:d,title:p="",type:f="checkbox",label:m,children:g,as:y="input"}=v,b=Ke(v,["id","bsPrefix","bsSwitchPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","feedbackType","className","style","title","type","label","children","as"]);t=pt(t,"form-check"),n=pt(n,"form-switch");const{controlId:C}=se.exports.useContext(Rs),I=se.exports.useMemo(()=>({controlId:s||C}),[C,s]),N=m!=null&&m!==!1&&!g,S=we.exports.jsx(Zb,ze(Ee({},b),{type:f==="switch"?"checkbox":f,ref:x,isValid:a,isInvalid:i,disabled:o,as:y}));return we.exports.jsx(Rs.Provider,{value:I,children:we.exports.jsx("div",{style:d,className:st(h,m&&t,r&&`${t}-inline`,f==="switch"&&n),children:g||we.exports.jsxs(we.exports.Fragment,{children:[S,N&&we.exports.jsx(Qb,{title:p,children:m}),c&&we.exports.jsx(Xb,{type:u,tooltip:l,children:c})]})})})});ex.displayName="FormCheck";var Wc=Object.assign(ex,{Input:Zb,Label:Qb});const tx=se.exports.forwardRef((f,p)=>{var m=f,{bsPrefix:s,type:t,size:n,htmlSize:r,id:o,className:a,isValid:i=!1,isInvalid:l=!1,plaintext:c,readOnly:u,as:h="input"}=m,d=Ke(m,["bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as"]);const{controlId:g}=se.exports.useContext(Rs);s=pt(s,"form-control");let y;return c?y={[`${s}-plaintext`]:!0}:y={[s]:!0,[`${s}-${n}`]:n},we.exports.jsx(h,ze(Ee({},d),{type:t,size:r,ref:p,readOnly:u,id:o||g,className:st(a,y,i&&"is-valid",l&&"is-invalid",t==="color"&&`${s}-color`)}))});tx.displayName="FormControl";var Ek=Object.assign(tx,{Feedback:Xb}),Ak=Io("form-floating");const nx=se.exports.forwardRef((o,r)=>{var a=o,{controlId:s,as:t="div"}=a,n=Ke(a,["controlId","as"]);const i=se.exports.useMemo(()=>({controlId:s}),[s]);return we.exports.jsx(Rs.Provider,{value:i,children:we.exports.jsx(t,ze(Ee({},n),{ref:r}))})});nx.displayName="FormGroup";var sx=nx;const Dk={column:!1,visuallyHidden:!1},Tp=se.exports.forwardRef((c,l)=>{var u=c,{as:s="label",bsPrefix:t,column:n,visuallyHidden:r,className:o,htmlFor:a}=u,i=Ke(u,["as","bsPrefix","column","visuallyHidden","className","htmlFor"]);const{controlId:h}=se.exports.useContext(Rs);t=pt(t,"form-label");let d="col-form-label";typeof n=="string"&&(d=`${d} ${d}-${n}`);const p=st(o,t,r&&"visually-hidden",n&&d);return a=a||h,n?we.exports.jsx(Nk,Ee({ref:l,as:"label",className:p,htmlFor:a},i)):we.exports.jsx(s,Ee({ref:l,className:p,htmlFor:a},i))});Tp.displayName="FormLabel";Tp.defaultProps=Dk;var Rk=Tp;const rx=se.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,id:n}=i,r=Ke(i,["bsPrefix","className","id"]);const{controlId:l}=se.exports.useContext(Rs);return s=pt(s,"form-range"),we.exports.jsx("input",ze(Ee({},r),{type:"range",ref:o,className:st(t,s),id:n||l}))});rx.displayName="FormRange";var Fk=rx;const ox=se.exports.forwardRef((u,c)=>{var h=u,{bsPrefix:s,size:t,htmlSize:n,className:r,isValid:o=!1,isInvalid:a=!1,id:i}=h,l=Ke(h,["bsPrefix","size","htmlSize","className","isValid","isInvalid","id"]);const{controlId:d}=se.exports.useContext(Rs);return s=pt(s,"form-select"),we.exports.jsx("select",ze(Ee({},l),{size:n,ref:c,className:st(r,s,t&&`${s}-${t}`,o&&"is-valid",a&&"is-invalid"),id:i||d}))});ox.displayName="FormSelect";var _k=ox;const ax=se.exports.forwardRef((i,a)=>{var l=i,{bsPrefix:s,className:t,as:n="small",muted:r}=l,o=Ke(l,["bsPrefix","className","as","muted"]);return s=pt(s,"form-text"),we.exports.jsx(n,ze(Ee({},o),{ref:a,className:st(t,s,r&&"text-muted")}))});ax.displayName="FormText";var Ok=ax;const ix=se.exports.forwardRef((s,t)=>we.exports.jsx(Wc,ze(Ee({},s),{ref:t,type:"switch"})));ix.displayName="Switch";var Lk=Object.assign(ix,{Input:Wc.Input,Label:Wc.Label});const lx=se.exports.forwardRef((l,i)=>{var c=l,{bsPrefix:s,className:t,children:n,controlId:r,label:o}=c,a=Ke(c,["bsPrefix","className","children","controlId","label"]);return s=pt(s,"form-floating"),we.exports.jsxs(sx,ze(Ee({ref:i,className:st(t,s),controlId:r},a),{children:[n,we.exports.jsx("label",{htmlFor:r,children:o})]}))});lx.displayName="FloatingLabel";var Pk=lx;const zk={_ref:So.any,validated:So.bool,as:So.elementType},Ep=se.exports.forwardRef((a,o)=>{var i=a,{className:s,validated:t,as:n="form"}=i,r=Ke(i,["className","validated","as"]);return we.exports.jsx(n,ze(Ee({},r),{ref:o,className:st(s,t&&"was-validated")}))});Ep.displayName="Form";Ep.propTypes=zk;var Xe=Object.assign(Ep,{Group:sx,Control:Ek,Floating:Ak,Check:Wc,Switch:Lk,Label:Rk,Text:Ok,Range:Fk,Select:_k,FloatingLabel:Pk});const Mk={fluid:!1},Ap=se.exports.forwardRef((i,a)=>{var l=i,{bsPrefix:s,fluid:t,as:n="div",className:r}=l,o=Ke(l,["bsPrefix","fluid","as","className"]);const c=pt(s,"container"),u=typeof t=="string"?`-${t}`:"-fluid";return we.exports.jsx(n,ze(Ee({ref:a},o),{className:st(r,t?`${c}${u}`:c)}))});Ap.displayName="Container";Ap.defaultProps=Mk;var Bk=Ap;const cx=se.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,as:n}=i,r=Ke(i,["bsPrefix","className","as"]);s=pt(s,"navbar-brand");const l=n||(r.href?"a":"span");return we.exports.jsx(l,ze(Ee({},r),{ref:o,className:st(t,s)}))});cx.displayName="NavbarBrand";var Vk=cx;const ux=se.exports.forwardRef((o,r)=>{var a=o,{children:s,bsPrefix:t}=a,n=Ke(a,["children","bsPrefix"]);t=pt(t,"navbar-collapse");const i=se.exports.useContext(Si);return we.exports.jsx(ck,ze(Ee({in:!!(i&&i.expanded)},n),{children:we.exports.jsx("div",{ref:r,className:t,children:s})}))});ux.displayName="NavbarCollapse";var Wk=ux;const Uk={label:"Toggle navigation"},Dp=se.exports.forwardRef((c,l)=>{var u=c,{bsPrefix:s,className:t,children:n,label:r,as:o="button",onClick:a}=u,i=Ke(u,["bsPrefix","className","children","label","as","onClick"]);s=pt(s,"navbar-toggler");const{onToggle:h,expanded:d}=se.exports.useContext(Si)||{},p=wp(f=>{a&&a(f),h&&h()});return o==="button"&&(i.type="button"),we.exports.jsx(o,ze(Ee({},i),{ref:l,onClick:p,"aria-label":r,className:st(t,s,!d&&"collapsed"),children:n||we.exports.jsx("span",{className:`${s}-icon`})}))});Dp.displayName="NavbarToggle";Dp.defaultProps=Uk;var Gk=Dp,Hk=Io("offcanvas-body");const jk={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1},qk={[xp]:"show",[zb]:"show"},Rp=se.exports.forwardRef((a,o)=>{var i=a,{bsPrefix:s,className:t,children:n}=i,r=Ke(i,["bsPrefix","className","children"]);return s=pt(s,"offcanvas"),we.exports.jsx(_b,ze(Ee({ref:o,addEndListener:Ob},r),{childRef:n.ref,children:(l,c)=>se.exports.cloneElement(n,ze(Ee({},c),{className:st(t,n.props.className,(l===xp||l===Pb)&&`${s}-toggling`,qk[l])}))}))});Rp.defaultProps=jk;Rp.displayName="OffcanvasToggling";var Kk=Rp;const Xk={closeLabel:"Close",closeButton:!1},Fp=se.exports.forwardRef((o,r)=>{var a=o,{bsPrefix:s,className:t}=a,n=Ke(a,["bsPrefix","className"]);return s=pt(s,"offcanvas-header"),we.exports.jsx(XN,ze(Ee({ref:r},n),{className:st(t,s)}))});Fp.displayName="OffcanvasHeader";Fp.defaultProps=Xk;var Yk=Fp;const Zk=Mb("h5");var Jk=Io("offcanvas-title",{Component:Zk});const Qk={show:!1,backdrop:!0,keyboard:!0,scroll:!1,autoFocus:!0,enforceFocus:!0,restoreFocus:!0,placement:"start"};function eI(s){return we.exports.jsx(Kk,Ee({},s))}function tI(s){return we.exports.jsx(vp,Ee({},s))}const _p=se.exports.forwardRef((_,A)=>{var D=_,{bsPrefix:s,className:t,children:n,"aria-labelledby":r,placement:o,show:a,backdrop:i,keyboard:l,scroll:c,onEscapeKeyDown:u,onShow:h,onHide:d,container:p,autoFocus:f,enforceFocus:m,restoreFocus:g,restoreFocusOptions:y,onEntered:b,onExit:x,onExiting:w,onEnter:v,onEntering:C,onExited:I,backdropClassName:N,manager:S}=D,E=Ke(D,["bsPrefix","className","children","aria-labelledby","placement","show","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager"]);const O=se.exports.useRef();s=pt(s,"offcanvas");const{onToggle:B}=se.exports.useContext(Si)||{},W=wp(()=>{B==null||B(),d==null||d()}),M=se.exports.useMemo(()=>({onHide:W}),[W]);function j(){return S||(c?(O.current||(O.current=new JN({handleContainerOverflow:!1})),O.current):QN())}const U=(Q,...te)=>{Q&&(Q.style.visibility="visible"),v==null||v(Q,...te)},K=(Q,...te)=>{Q&&(Q.style.visibility=""),I==null||I(...te)},Z=se.exports.useCallback(Q=>we.exports.jsx("div",ze(Ee({},Q),{className:st(`${s}-backdrop`,N)})),[N,s]),J=Q=>we.exports.jsx("div",ze(Ee(Ee({role:"dialog"},Q),E),{className:st(t,s,`${s}-${o}`),"aria-labelledby":r,children:n}));return we.exports.jsx(YN.Provider,{value:M,children:we.exports.jsx(ZN,{show:a,ref:A,backdrop:i,container:p,keyboard:l,autoFocus:f,enforceFocus:m&&!c,restoreFocus:g,restoreFocusOptions:y,onEscapeKeyDown:u,onShow:h,onHide:W,onEnter:U,onEntering:C,onEntered:b,onExit:x,onExiting:w,onExited:K,manager:j(),transition:eI,backdropTransition:tI,renderBackdrop:Z,renderDialog:J})})});_p.displayName="Offcanvas";_p.defaultProps=Qk;var nI=Object.assign(_p,{Body:Hk,Header:Yk,Title:Jk});const hx=se.exports.forwardRef((s,t)=>{const n=se.exports.useContext(Si);return we.exports.jsx(nI,Ee({ref:t,show:!!(n!=null&&n.expanded)},s))});hx.displayName="NavbarOffcanvas";var sI=hx;const rI=Io("navbar-text",{Component:"span"}),oI={expand:!0,variant:"light",collapseOnSelect:!1},Op=se.exports.forwardRef((s,t)=>{const w=Wb(s,{expanded:"onToggle"}),{bsPrefix:n,expand:r,variant:o,bg:a,fixed:i,sticky:l,className:c,as:u="nav",expanded:h,onToggle:d,onSelect:p,collapseOnSelect:f}=w,m=Ke(w,["bsPrefix","expand","variant","bg","fixed","sticky","className","as","expanded","onToggle","onSelect","collapseOnSelect"]),g=pt(n,"navbar"),y=se.exports.useCallback((...v)=>{p==null||p(...v),f&&h&&(d==null||d(!1))},[p,f,h,d]);m.role===void 0&&u!=="nav"&&(m.role="navigation");let b=`${g}-expand`;typeof r=="string"&&(b=`${b}-${r}`);const x=se.exports.useMemo(()=>({onToggle:()=>d==null?void 0:d(!h),bsPrefix:g,expanded:!!h}),[g,h,d]);return we.exports.jsx(Si.Provider,{value:x,children:we.exports.jsx(Ik.Provider,{value:y,children:we.exports.jsx(u,ze(Ee({ref:t},m),{className:st(c,g,r&&b,o&&`${g}-${o}`,a&&`bg-${a}`,l&&`sticky-${l}`,i&&`fixed-${i}`)}))})})});Op.defaultProps=oI;Op.displayName="Navbar";var Lp=Object.assign(Op,{Brand:Vk,Collapse:Wk,Offcanvas:sI,Text:rI,Toggle:Gk});const dx=se.exports.forwardRef((c,l)=>{var u=c,{bsPrefix:s,variant:t,animation:n,size:r,as:o="div",className:a}=u,i=Ke(u,["bsPrefix","variant","animation","size","as","className"]);s=pt(s,"spinner");const h=`${s}-${n}`;return we.exports.jsx(o,ze(Ee({ref:l},i),{className:st(a,h,r&&`${h}-${r}`,t&&`text-${t}`)}))});dx.displayName="Spinner";var Pp=dx;function aI(s){return ki({tag:"svg",attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"circle",attr:{cx:"11",cy:"11",r:"8"}},{tag:"line",attr:{x1:"21",y1:"21",x2:"16.65",y2:"16.65"}}]})(s)}function iI(s){return ki({tag:"svg",attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"}},{tag:"circle",attr:{cx:"8.5",cy:"7",r:"4"}},{tag:"line",attr:{x1:"20",y1:"8",x2:"20",y2:"14"}},{tag:"line",attr:{x1:"23",y1:"11",x2:"17",y2:"11"}}]})(s)}function lI({find:s,setFind:t}){const{setPage:n}=se.exports.useContext(ko),r=o=>{n("find")};return ee.createElement("div",{className:"d-flex justify-content-center my-3",style:{width:"100%"}},ee.createElement("div",{className:"d-flex"},ee.createElement("input",{className:"form-control me-2 p-1 border-dark",placeholder:"Find user",onKeyDown:o=>{o.key==="Enter"&&r()},onChange:o=>t(o.target.value),value:s}),ee.createElement("div",{role:"button",className:"border border-dark rounded pt-1 pb-2 px-3 text-dark",onClick:()=>r()},ee.createElement(aI,{size:20}))))}function cI(s){return ki({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"g",attr:{},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0z"}},{tag:"path",attr:{d:"M21 15v3h3v2h-3v3h-2v-3h-3v-2h3v-3h2zm.008-12c.548 0 .992.445.992.993V13h-2V5H4v13.999L14 9l3 3v2.829l-3-3L6.827 19H14v2H2.992A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016zM8 7a2 2 0 1 1 0 4 2 2 0 0 1 0-4z"}}]}]})(s)}function uI(s){return ki({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"g",attr:{},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0z"}},{tag:"path",attr:{d:"M4 15h2v5h12V4H6v5H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6zm6-4V8l5 4-5 4v-3H2v-2h8z"}}]}]})(s)}function hI(s){return ki({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"g",attr:{},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0z"}},{tag:"path",attr:{d:"M5 22a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v3h-2V4H6v16h12v-2h2v3a1 1 0 0 1-1 1H5zm13-6v-3h-7v-2h7V8l5 4-5 4z"}}]}]})(s)}function dI(){const[s,t]=se.exports.useState(""),[n,r]=se.exports.useState(""),[o,a]=se.exports.useState(null),[i,l]=se.exports.useState(!1),{showModalLogin:c,setShowModalLogin:u,setShowModalRegister:h,setStateAccessToken:d}=se.exports.useContext(ko),p=()=>u(!1),f=()=>u(!0),m=y=>{y.preventDefault(),l(!0),fetch("http://localhost:5500/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:s,password:n})}).then(b=>b.json()).then(b=>{b.success?a(null):a(b.message),localStorage.setItem("accessToken",JSON.stringify(b.accessToken)),l(!1),u(!1),d(b.accessToken)}).catch(b=>{a(b.toString()),l(!1)})},g=()=>{u(!1),h(!0)};return ee.createElement(ee.Fragment,null,ee.createElement(uI,{role:"button",size:"30",onClick:f,className:"me-3"}),ee.createElement(Ln,{show:c,onHide:p,"aria-labelledby":"contained-modal-title-vcenter",centered:!0},ee.createElement(Ln.Header,{closeButton:!0},ee.createElement(Ln.Title,null,"Login")),ee.createElement(Ln.Body,null,ee.createElement(Xe,{onSubmit:m},ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"Email address"),ee.createElement(Xe.Control,{type:"email",placeholder:"Enter email",onChange:({target:y})=>t(y.value),value:s,required:!0,maxLength:"20"}),ee.createElement(Xe.Text,{className:"text-muted"},"Max length email is 20")),ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"Password"),ee.createElement(Xe.Control,{type:"password",placeholder:"Password",onChange:({target:y})=>r(y.value),value:n,maxLength:"20",pattern:"(?=.*\\d)(?=.*[a-zA-Z]).{6,}"}),ee.createElement(Xe.Text,{className:"text-muted"},"Must contain at least one number, one letter or more characters and at least 6")),o&&ee.createElement(kp,{variant:"danger"},o),ee.createElement("div",{className:"d-flex justify-content-between"},i?ee.createElement(rr,{variant:"primary",disabled:!0},ee.createElement(Pp,{as:"span",animation:"grow",size:"sm",role:"status","aria-hidden":"true"}),"Loading..."):ee.createElement(rr,{variant:"primary",type:"submit"},"Login"),ee.createElement(rr,{variant:"primary",className:"float-end",onClick:g},"Register"))))))}function pI(){const[s,t]=se.exports.useState(""),[n,r]=se.exports.useState(""),[o,a]=se.exports.useState(""),[i,l]=se.exports.useState(""),[c,u]=se.exports.useState(""),[h,d]=se.exports.useState(!1),{showModalRegister:p,setShowModalRegister:f,setShowModalLogin:m,setStateAccessToken:g}=se.exports.useContext(ko),y=()=>f(!1),b=()=>f(!0),x=v=>{v.preventDefault(),d(!0),fetch("http://localhost:5500/api/auth/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:s,email:n,password:o})}).then(C=>C.json()).then(C=>{C.success?u(null):u(C.message),localStorage.setItem("accessToken",JSON.stringify(C.accessToken)),d(!1),m(!1),g(C.accessToken)}).catch(C=>{u(C.toString()),d(!1)})},w=()=>{f(!1),m(!0)};return ee.createElement("div",null,ee.createElement(iI,{role:"button",size:"30",onClick:b}),ee.createElement(Ln,{show:p,onHide:y,"aria-labelledby":"contained-modal-title-vcenter",centered:!0},ee.createElement(Ln.Header,{closeButton:!0},ee.createElement(Ln.Title,null,"Register")),ee.createElement(Ln.Body,null,ee.createElement(Xe,{onSubmit:x},ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"User Name"),ee.createElement(Xe.Control,{type:"text",placeholder:"Phuong Ly",onChange:({target:v})=>t(v.value),value:s,required:!0,maxLength:"20",autoComplete:"one-time-code"}),ee.createElement(Xe.Text,{className:"text-muted"},"Max length name is 20")),ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"Email address"),ee.createElement(Xe.Control,{type:"email",placeholder:"DanChoiVipPro69@gmail.com",onChange:({target:v})=>r(v.value),value:n,required:!0,maxLength:"20",autoComplete:"one-time-code"}),ee.createElement(Xe.Text,{className:"text-muted"},"Max length email is 20")),ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"Password"),ee.createElement(Xe.Control,{type:"password",placeholder:"Password",onChange:({target:v})=>a(v.value),value:o,maxLength:"20",autoComplete:"one-time-code",pattern:"(?=.*\\d)(?=.*[a-zA-Z]).{6,}"}),ee.createElement(Xe.Text,{className:"text-muted"},"Must contain at least one number, one letter or more characters and at least 6")),ee.createElement(Xe.Group,{className:"mb-3"},ee.createElement(Xe.Label,null,"Confirm Password"),ee.createElement(Xe.Control,{type:"password",placeholder:"Confirm Password",onChange:({target:v})=>l(v.value),value:i,maxLength:"20",pattern:o,autoComplete:"one-time-code"})),c&&ee.createElement(kp,{variant:"danger"},c),ee.createElement("div",{className:"d-flex justify-content-between"},h?ee.createElement(rr,{variant:"primary",disabled:!0},ee.createElement(Pp,{as:"span",animation:"grow",size:"sm",role:"status","aria-hidden":"true"}),"Loading..."):ee.createElement(rr,{variant:"primary",type:"submit"},"Register"),ee.createElement(rr,{variant:"primary",className:"float-end",onClick:w},"Login"))))))}var px={},zp={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI=1e-7,mI=1e-4;class Mp{constructor(t,n){this.backend=t,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,n){this.dataIdsCount++,this.data.set(t,n)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Uc{refCount(t){return Pn("refCount")}incRef(t){return Pn("incRef")}timerAvailable(){return!0}time(t){return Pn("time")}read(t){return Pn("read")}readSync(t){return Pn("readSync")}numDataIds(){return Pn("numDataIds")}disposeData(t,n){return Pn("disposeData")}write(t,n,r){return Pn("write")}move(t,n,r,o,a){return Pn("move")}memory(){return Pn("memory")}floatPrecision(){return Pn("floatPrecision")}epsilon(){return this.floatPrecision()===32?fI:mI}dispose(){return Pn("dispose")}}function Pn(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(s){let t=s.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Fs(s,t,n)}function gI(s,t){if(s.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${s.length}Second array length was ${t.length}`);let n=s.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Fs(s,n,r),Fs(t,n,r)}function or(s,t,n){return Math.max(s,Math.min(t,n))}function Vp(s){return s%2==0?s:s+1}function Fs(s,t,n){const r=s[t];s[t]=s[n],s[n]=r}function fx(s){let t=0;for(let n=0;n<s.length;n++)t+=s[n];return t}function yI(s,t){const n=Math.random();return t*n+(1-n)*s}function bI(s,t){let n=0;for(let r=0;r<s.length;r++){const o=Number(s[r])-Number(t[r]);n+=o*o}return n}function k(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function zt(s,t,n=""){k(Ae(s,t),()=>n+` Shapes ${s} and ${t} must match`)}function Fr(s){k(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function _s(s,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(s)||Mt(s)&&!n)for(let r=0;r<s.length;++r)_s(s[r],t,n);else t.push(s);return t}function H(s){if(s.length===0)return 1;let t=s[0];for(let n=1;n<s.length;n++)t*=s[n];return t}function xI(s){return s.length===0}function Ae(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let n=0;n<s.length;n++)if(s[n]!==t[n])return!1;return!0}function Ct(s){return s%1==0}function wI(s){if(Math.tanh!=null)return Math.tanh(s);if(s===1/0)return 1;if(s===-1/0)return-1;{const t=Math.exp(2*s);return(t-1)/(t+1)}}function Gc(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function vI(s){const t=new Uint32Array(s);for(let n=0;n<s;++n)t[n]=n;return Bp(t),t}function _r(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function Wp(s,t=r=>0,n){return new Promise((r,o)=>{let a=0;const i=()=>{if(s()){r();return}a++;const l=t(a);if(n!=null&&a>=n){o();return}setTimeout(i,l)};i()})}function Up(s,t){let n=1,r=-1;for(let a=0;a<s.length;++a)if(s[a]>=0)n*=s[a];else if(s[a]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(s[a]<0)throw Error(`Shapes can not be < 0. Found ${s[a]} at dim ${a}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(n===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=s.slice();return o[r]=t/n,o}function ke(s,t){const n=t.length;return s=s==null?t.map((r,o)=>o):[].concat(s),k(s.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${s}`),k(s.every(r=>Ct(r)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(r=>r<0?n+r:r)}function Os(s,t){const n=[],r=[],o=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||o?null:ke(t,s).sort();let i=0;for(let l=0;l<s.length;++l){if(a!=null){if(a[i]===l&&s[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${s[l]}' is not 1`);(a[i]==null||a[i]>l)&&s[l]===1&&(n.push(s[l]),r.push(l)),a[i]<=l&&i++}s[l]!==1&&(n.push(s[l]),r.push(l))}return{newShape:n,keptDims:r}}function Nt(s,t){let n=null;if(s==null||s==="float32")n=new Float32Array(t);else if(s==="int32")n=new Int32Array(t);else if(s==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return n}function Yt(s,t){let n=null;if(s==null||s==="float32")n=new Float32Array(t);else if(s==="int32")n=new Int32Array(t);else if(s==="bool")n=new Uint8Array(t);else if(s==="string")n=new Array(t);else throw new Error(`Unknown data type ${s}`);return n}function mx(s,t){for(let n=0;n<s.length;n++){const r=s[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function gx(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function Gp(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Mt(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array}function Hc(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function yx(s){if(s==null)return 0;let t=0;return s.forEach(n=>t+=n.length),t}function gs(s){return typeof s=="string"||s instanceof String}function bx(s){return typeof s=="boolean"}function jc(s){return typeof s=="number"}function To(s){return Array.isArray(s)?To(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array?"int32":jc(s)?"float32":gs(s)?"string":bx(s)?"bool":"float32"}function ar(s){return!!(s&&s.constructor&&s.call&&s.apply)}function qc(s,t){for(let n=t;n<s;++n)if(s%n==0)return n;return s}function ge(s){const t=s.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=s[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*s[r+1];return n}function xx(s,t,n,r=!1){const o=new Array;if(t.length===1){const a=t[0]*(r?2:1);for(let i=0;i<a;i++)o[i]=n[s+i]}else{const a=t[0],i=t.slice(1),l=i.reduce((c,u)=>c*u)*(r?2:1);for(let c=0;c<a;c++)o[c]=xx(s+c*l,i,n,r)}return o}function Tn(s,t,n=!1){if(s.length===0)return t[0];const r=s.reduce((o,a)=>o*a)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return xx(0,s,t,n)}function Hp(s,t){const n=Bt(s,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Bt(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function jp(s,t){const n=s.reduce((r,o)=>r*o,1);if(t==null||t==="float32")return Tn(s,new Float32Array(n));if(t==="int32")return Tn(s,new Int32Array(n));if(t==="bool")return Tn(s,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function qp(s){s.forEach(t=>{k(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function Qn(s,t,n){if(t===0)return 0;if(t===1)return s[0];let r=s[s.length-1];for(let o=0;o<s.length-1;++o)r+=n[o]*s[o];return r}function Eo(s,t,n){if(t===0)return[];if(t===1)return[s];const r=new Array(t);for(let o=0;o<r.length-1;++o)r[o]=Math.floor(s/n[o]),s-=r[o]*n[o];return r[r.length-1]=s,r}function Or(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(...s){q().getBool("IS_TEST")||q().getBool("PROD")||console.warn(...s)}function $I(...s){q().getBool("IS_TEST")||q().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wx="tfjsflags";class vx{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=CI,this.populateURLFlags()}setPlatform(t,n){this.platform!=null&&sn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${n}.`),this.platformName=t,this.platform=n}registerFlag(t,n,r){if(this.flagRegistry[t]={evaluationFn:n,setHook:r},this.urlFlags[t]!=null){const o=this.urlFlags[t];sn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const n=this.evaluateFlag(t);if(Or(n))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=n,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,n){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=n,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(n)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const t=this.getQueryParams(this.global.location.search);wx in t&&t[wx].split(",").forEach(r=>{const[o,a]=r.split(":");this.urlFlags[o]=kI(o,a)})}}function CI(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(NI(t,r[0],r[1]),r.join("="))),t}function NI(s,t,n){s[decodeURIComponent(t)]=decodeURIComponent(n||"")}function kI(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function q(){return Kp}let Kp=null;function II(s){Kp=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xp;function $x(){if(Xp==null){let s;if(typeof window!="undefined")s=window;else if(typeof global!="undefined")s=global;else if(typeof process!="undefined")s=process;else if(typeof self!="undefined")s=self;else throw new Error("Could not find a global object");Xp=s}return Xp}function SI(){const s=$x();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function Yp(s,t){const n=SI();if(n.has(s))return n.get(s);{const r=t();return n.set(s,r),n.get(s)}}const Ti="Abs",Ao="Acos",Do="Acosh",Lr="Add",Ei="AddN",Kc="All",Xc="Any",Ai="ArgMax",Di="ArgMin",Ro="Asin",Fo="Asinh",_o="Atan",Oo="Atanh",Lo="Atan2",Ri="AvgPool",Yc="AvgPoolGrad",Fi="AvgPool3D",Zc="AvgPool3DGrad",_i="BatchMatMul",Oi="BatchToSpaceND",Jc="Bincount",Cx="BroadcastTo",Zp="BroadcastArgs",Po="Cast",zo="Ceil",Mo="ClipByValue",Qc="Complex",Li="ComplexAbs",Pi="Concat",zi="Conv2D",eu="Conv2DBackpropFilter",Mi="Conv2DBackpropInput",Bi="Conv3D",tu="Conv3DBackpropFilterV2",nu="Conv3DBackpropInputV2",Bo="Cos",Vo="Cosh",Vi="Cumsum",su="CropAndResize",ru="DenseBincount",ou="DepthToSpace",Wi="DepthwiseConv2dNative",au="DepthwiseConv2dNativeBackpropFilter",iu="DepthwiseConv2dNativeBackpropInput",lu="Diag",Ui="Dilation2D",cu="Dilation2DBackpropInput",uu="Dilation2DBackpropFilter",Wo="RealDiv",hu="Einsum",Uo="Elu",du="EluGrad",Go="Erf",Gi="Equal",Ho="Exp",Hi="ExpandDims",jo="Expm1",pu="FFT",fu="Fill",mu="FlipLeftRight",qo="Floor",Ko="FloorDiv",ji="FusedBatchNorm",qi="GatherV2",gu="GatherNd",Ki="Greater",Xo="GreaterEqual",Yo="Identity",yu="IFFT",bu="Imag",Zo="IsFinite",Jo="IsInf",Qo="IsNan",Xi="LeakyRelu",Yi="Less",Zi="LessEqual",xu="LinSpace",ea="Log",ta="Log1p",Ji="LogicalAnd",Qi="LogicalNot",el="LogicalOr",Nx="LogSoftmax",tl="LRN",wu="LRNGrad",nl="Max",na="Maximum",sl="MaxPool",vu="MaxPoolGrad",rl="MaxPool3D",$u="MaxPool3DGrad",Cu="MaxPoolWithArgmax",ol="Mean",al="Min",sa="Minimum",il="MirrorPad",ra="Mod",Nu="Multinomial",oa="Multiply",ll="Neg",cl="NotEqual",ku="NonMaxSuppressionV3",Iu="NonMaxSuppressionV4",Su="NonMaxSuppressionV5",ul="OnesLike",hl="OneHot",dl="Pack",pl="PadV2",TI="Pool",aa="Pow",fl="Prelu",Tu="Prod",Eu="Range",Au="Real",ia="Reciprocal",la="Relu",ml="Reshape",gl="ResizeNearestNeighbor",Du="ResizeNearestNeighborGrad",yl="ResizeBilinear",Ru="ResizeBilinearGrad",ca="Relu6",bl="Reverse",ua="Round",ha="Rsqrt",Fu="ScatterNd",xl="Select",da="Selu",wl="Slice",pa="Sin",fa="Sinh",ma="Sign",ga="Sigmoid",ya="Softplus",ba="Sqrt",vl="Sum",$l="SpaceToBatchND",Cl="SplitV",Nl="Softmax",_u="SparseFillEmptyRows",Ou="SparseReshape",Lu="SparseSegmentMean",Pu="SparseSegmentSum",zu="SparseToDense",xa="SquaredDifference",Mu="Square",Bu="StridedSlice",Vu="StringNGrams",Wu="StringSplit",Uu="StringToHashBucketFast",wa="Sub",va="Tan",$a="Tanh",Ca="Tile",Gu="TopK",Hu="Transform",kl="Transpose",ju="Unique",Il="Unpack",Sl="UnsortedSegmentSum",Tl="ZerosLike",Na="Step",qu="FromPixels",Ku="RotateWithOffset",El="_FusedMatMul",Al="FusedConv2D",Dl="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Yp("kernelRegistry",()=>new Map),Rl=Yp("gradRegistry",()=>new Map);function Xu(s,t){const n=Qp(s,t);return ka.get(n)}function Jp(s){return Rl.get(s)}function Yu(s){const t=ka.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[a,i]=o,[l]=a.split("_");l===s&&n.push(i)}return n}function Zu(s){const{kernelName:t,backendName:n}=s,r=Qp(t,n);ka.has(r)&&sn(`The kernel '${t}' for backend '${n}' is already registered`),ka.set(r,s)}function kx(s){const{kernelName:t}=s;Rl.has(t)&&q().getBool("DEBUG")&&sn(`Overriding the gradient for '${t}'`),Rl.set(t,s)}function EI(s,t){const n=Qp(s,t);if(!ka.has(n))throw new Error(`The kernel '${s}' for backend '${t}' is not registered`);ka.delete(n)}function AI(s){if(!Rl.has(s))throw new Error(`The gradient '${s}' for backend is not registered`);Rl.delete(s)}function DI(s,t){Yu(s).forEach(r=>{const o=Object.assign({},r,{backendName:t});Zu(o)})}function Qp(s,t){return`${t}_${s}`}var ef=Qe,zn=null;try{zn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(s,t,n){this.low=s|0,this.high=t|0,this.unsigned=!!n}Qe.prototype.__isLong__;Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function dn(s){return(s&&s.__isLong__)===!0}Qe.isLong=dn;var Ix={},Sx={};function Pr(s,t){var n,r,o;return t?(s>>>=0,(o=0<=s&&s<256)&&(r=Sx[s],r)?r:(n=et(s,(s|0)<0?-1:0,!0),o&&(Sx[s]=n),n)):(s|=0,(o=-128<=s&&s<128)&&(r=Ix[s],r)?r:(n=et(s,s<0?-1:0,!1),o&&(Ix[s]=n),n))}Qe.fromInt=Pr;function Mn(s,t){if(isNaN(s))return t?zr:Bn;if(t){if(s<0)return zr;if(s>=Ex)return _x}else{if(s<=-Ax)return pn;if(s+1>=Ax)return Fx}return s<0?Mn(-s,t).neg():et(s%Ia|0,s/Ia|0,t)}Qe.fromNumber=Mn;function et(s,t,n){return new Qe(s,t,n)}Qe.fromBits=et;var Ju=Math.pow;function tf(s,t,n){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return Bn;if(typeof t=="number"?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=s.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return tf(s.substring(1),t,n).neg();for(var o=Mn(Ju(n,8)),a=Bn,i=0;i<s.length;i+=8){var l=Math.min(8,s.length-i),c=parseInt(s.substring(i,i+l),n);if(l<8){var u=Mn(Ju(n,l));a=a.mul(u).add(Mn(c))}else a=a.mul(o),a=a.add(Mn(c))}return a.unsigned=t,a}Qe.fromString=tf;function es(s,t){return typeof s=="number"?Mn(s,t):typeof s=="string"?tf(s,t):et(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}Qe.fromValue=es;var Tx=1<<16,RI=1<<24,Ia=Tx*Tx,Ex=Ia*Ia,Ax=Ex/2,Dx=Pr(RI),Bn=Pr(0);Qe.ZERO=Bn;var zr=Pr(0,!0);Qe.UZERO=zr;var Sa=Pr(1);Qe.ONE=Sa;var Rx=Pr(1,!0);Qe.UONE=Rx;var nf=Pr(-1);Qe.NEG_ONE=nf;var Fx=et(4294967295|0,2147483647|0,!1);Qe.MAX_VALUE=Fx;var _x=et(4294967295|0,4294967295|0,!0);Qe.MAX_UNSIGNED_VALUE=_x;var pn=et(0,2147483648|0,!1);Qe.MIN_VALUE=pn;var re=Qe.prototype;re.toInt=function(){return this.unsigned?this.low>>>0:this.low};re.toNumber=function(){return this.unsigned?(this.high>>>0)*Ia+(this.low>>>0):this.high*Ia+(this.low>>>0)};re.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(pn)){var n=Mn(t),r=this.div(n),o=r.mul(n).sub(this);return r.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var a=Mn(Ju(t,6),this.unsigned),i=this,l="";;){var c=i.div(a),u=i.sub(c.mul(a)).toInt()>>>0,h=u.toString(t);if(i=c,i.isZero())return h+l;for(;h.length<6;)h="0"+h;l=""+h+l}};re.getHighBits=function(){return this.high};re.getHighBitsUnsigned=function(){return this.high>>>0};re.getLowBits=function(){return this.low};re.getLowBitsUnsigned=function(){return this.low>>>0};re.getNumBitsAbs=function(){if(this.isNegative())return this.eq(pn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,n=31;n>0&&(t&1<<n)==0;n--);return this.high!=0?n+33:n+1};re.isZero=function(){return this.high===0&&this.low===0};re.eqz=re.isZero;re.isNegative=function(){return!this.unsigned&&this.high<0};re.isPositive=function(){return this.unsigned||this.high>=0};re.isOdd=function(){return(this.low&1)==1};re.isEven=function(){return(this.low&1)==0};re.equals=function(t){return dn(t)||(t=es(t)),this.unsigned!==t.unsigned&&this.high>>>31==1&&t.high>>>31==1?!1:this.high===t.high&&this.low===t.low};re.eq=re.equals;re.notEquals=function(t){return!this.eq(t)};re.neq=re.notEquals;re.ne=re.notEquals;re.lessThan=function(t){return this.comp(t)<0};re.lt=re.lessThan;re.lessThanOrEqual=function(t){return this.comp(t)<=0};re.lte=re.lessThanOrEqual;re.le=re.lessThanOrEqual;re.greaterThan=function(t){return this.comp(t)>0};re.gt=re.greaterThan;re.greaterThanOrEqual=function(t){return this.comp(t)>=0};re.gte=re.greaterThanOrEqual;re.ge=re.greaterThanOrEqual;re.compare=function(t){if(dn(t)||(t=es(t)),this.eq(t))return 0;var n=this.isNegative(),r=t.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};re.comp=re.compare;re.negate=function(){return!this.unsigned&&this.eq(pn)?pn:this.not().add(Sa)};re.neg=re.negate;re.add=function(t){dn(t)||(t=es(t));var n=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,i=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,p=0,f=0;return f+=a+u,p+=f>>>16,f&=65535,p+=o+c,d+=p>>>16,p&=65535,d+=r+l,h+=d>>>16,d&=65535,h+=n+i,h&=65535,et(p<<16|f,h<<16|d,this.unsigned)};re.subtract=function(t){return dn(t)||(t=es(t)),this.add(t.neg())};re.sub=re.subtract;re.multiply=function(t){if(this.isZero())return Bn;if(dn(t)||(t=es(t)),zn){var n=zn.mul(this.low,this.high,t.low,t.high);return et(n,zn.get_high(),this.unsigned)}if(t.isZero())return Bn;if(this.eq(pn))return t.isOdd()?pn:Bn;if(t.eq(pn))return this.isOdd()?pn:Bn;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(Dx)&&t.lt(Dx))return Mn(this.toNumber()*t.toNumber(),this.unsigned);var r=this.high>>>16,o=this.high&65535,a=this.low>>>16,i=this.low&65535,l=t.high>>>16,c=t.high&65535,u=t.low>>>16,h=t.low&65535,d=0,p=0,f=0,m=0;return m+=i*h,f+=m>>>16,m&=65535,f+=a*h,p+=f>>>16,f&=65535,f+=i*u,p+=f>>>16,f&=65535,p+=o*h,d+=p>>>16,p&=65535,p+=a*u,d+=p>>>16,p&=65535,p+=i*c,d+=p>>>16,p&=65535,d+=r*h+o*u+a*c+i*l,d&=65535,et(f<<16|m,d<<16|p,this.unsigned)};re.mul=re.multiply;re.divide=function(t){if(dn(t)||(t=es(t)),t.isZero())throw Error("division by zero");if(zn){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var n=(this.unsigned?zn.div_u:zn.div_s)(this.low,this.high,t.low,t.high);return et(n,zn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?zr:Bn;var r,o,a;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return zr;if(t.gt(this.shru(1)))return Rx;a=zr}else{if(this.eq(pn)){if(t.eq(Sa)||t.eq(nf))return pn;if(t.eq(pn))return Sa;var i=this.shr(1);return r=i.div(t).shl(1),r.eq(Bn)?t.isNegative()?Sa:nf:(o=this.sub(t.mul(r)),a=r.add(o.div(t)),a)}else if(t.eq(pn))return this.unsigned?zr:Bn;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();a=Bn}for(o=this;o.gte(t);){r=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var l=Math.ceil(Math.log(r)/Math.LN2),c=l<=48?1:Ju(2,l-48),u=Mn(r),h=u.mul(t);h.isNegative()||h.gt(o);)r-=c,u=Mn(r,this.unsigned),h=u.mul(t);u.isZero()&&(u=Sa),a=a.add(u),o=o.sub(h)}return a};re.div=re.divide;re.modulo=function(t){if(dn(t)||(t=es(t)),zn){var n=(this.unsigned?zn.rem_u:zn.rem_s)(this.low,this.high,t.low,t.high);return et(n,zn.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};re.mod=re.modulo;re.rem=re.modulo;re.not=function(){return et(~this.low,~this.high,this.unsigned)};re.and=function(t){return dn(t)||(t=es(t)),et(this.low&t.low,this.high&t.high,this.unsigned)};re.or=function(t){return dn(t)||(t=es(t)),et(this.low|t.low,this.high|t.high,this.unsigned)};re.xor=function(t){return dn(t)||(t=es(t)),et(this.low^t.low,this.high^t.high,this.unsigned)};re.shiftLeft=function(t){return dn(t)&&(t=t.toInt()),(t&=63)==0?this:t<32?et(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):et(0,this.low<<t-32,this.unsigned)};re.shl=re.shiftLeft;re.shiftRight=function(t){return dn(t)&&(t=t.toInt()),(t&=63)==0?this:t<32?et(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):et(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};re.shr=re.shiftRight;re.shiftRightUnsigned=function(t){if(dn(t)&&(t=t.toInt()),t&=63,t===0)return this;var n=this.high;if(t<32){var r=this.low;return et(r>>>t|n<<32-t,n>>>t,this.unsigned)}else return t===32?et(n,0,this.unsigned):et(n>>>t-32,0,this.unsigned)};re.shru=re.shiftRightUnsigned;re.shr_u=re.shiftRightUnsigned;re.toSigned=function(){return this.unsigned?et(this.low,this.high,!1):this};re.toUnsigned=function(){return this.unsigned?this:et(this.low,this.high,!0)};re.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};re.toBytesLE=function(){var t=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};re.toBytesBE=function(){var t=this.high,n=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Qe.fromBytes=function(t,n,r){return r?Qe.fromBytesLE(t,n):Qe.fromBytesBE(t,n)};Qe.fromBytesLE=function(t,n){return new Qe(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,n)};Qe.fromBytesBE=function(t,n){return new Qe(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],n)};var FI=Object.freeze(ek({__proto__:null,[Symbol.toStringTag]:"Module",default:ef},[ef]));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=ef||FI;function Fl(s){return Mr.fromString(s,!0,16)}const Ox=Fl("c3a5c85c97cb3127"),Br=Fl("b492b66fbe98f273"),Zt=Fl("9ae16a3b2f90404f");function sf(s){return s.xor(s.shru(47))}function Lx(s,t,n){const r=s.slice(t,t+n);return Mr.fromBytes(Array.from(r),!0,!0)}function Ye(s,t){return Lx(s,t,8)}function Px(s,t){return Lx(s,t,4)}function At(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function ir(s,t,n=Fl("9ddfea08eb382d69")){let r=s.xor(t).mul(n);r=r.xor(r.shru(47));let o=t.xor(r).mul(n);return o=o.xor(o.shru(47)),o=o.mul(n),o}function _I(s,t,n,r,o,a){o=o.add(s),a=At(a.add(o).add(r),21);const i=o;return o=o.add(t),o=o.add(n),a=a.add(At(o,44)),[o.add(r),a.add(i)]}function Qu(s,t,n,r){return _I(Ye(s,t),Ye(s,t+8),Ye(s,t+16),Ye(s,t+24),n,r)}function OI(s,t=s.length){if(t>=8){const n=Zt.add(t*2),r=Ye(s,0).add(Zt),o=Ye(s,t-8),a=At(o,37).mul(n).add(r),i=At(r,25).add(o).mul(n);return ir(a,i,n)}if(t>=4){const n=Zt.add(t*2),r=Px(s,0);return ir(r.shl(3).add(t),Px(s,t-4),n)}if(t>0){const n=s[0],r=s[t>>1],o=s[t-1],a=n+(r<<8),i=t+(o<<2);return sf(Zt.mul(a).xor(Ox.mul(i))).mul(Zt)}return Zt}function LI(s,t=s.length){const n=Zt.add(t*2),r=Ye(s,0).mul(Br),o=Ye(s,8),a=Ye(s,t-8).mul(n),i=Ye(s,t-16).mul(Zt);return ir(At(r.add(o),43).add(At(a,30)).add(i),r.add(At(o.add(Zt),18)).add(a),n)}function PI(s,t=s.length){const n=Zt.add(t*2),r=Ye(s,0).mul(Zt),o=Ye(s,8),a=Ye(s,t-8).mul(n),i=Ye(s,t-16).mul(Zt),l=At(r.add(o),43).add(At(a,30)).add(i),c=ir(l,r.add(At(o.add(Zt),18)).add(a),n),u=Ye(s,16).mul(n),h=Ye(s,24),d=l.add(Ye(s,t-32)).mul(n),p=c.add(Ye(s,t-24)).mul(n);return ir(At(u.add(h),43).add(At(d,30)).add(p),u.add(At(h.add(r),18)).add(d),n)}function zx(s,t=s.length){const n=Mr.fromNumber(81,!0);if(t<=32)return t<=16?OI(s,t):LI(s,t);if(t<=64)return PI(s,t);let r=n,o=n.mul(Br).add(113),a=sf(o.mul(Zt).add(113)).mul(Zt),i=[Mr.UZERO,Mr.UZERO],l=[Mr.UZERO,Mr.UZERO];r=r.mul(Zt).add(Ye(s,0));let c=0;const u=(t-1>>6)*64,h=u+(t-1&63)-63;do r=At(r.add(o).add(i[0]).add(Ye(s,c+8)),37).mul(Br),o=At(o.add(i[1]).add(Ye(s,c+48)),42).mul(Br),r=r.xor(l[1]),o=o.add(i[0]).add(Ye(s,c+40)),a=At(a.add(l[0]),33).mul(Br),i=Qu(s,c,i[1].mul(Br),r.add(l[0])),l=Qu(s,c+32,a.add(l[1]),o.add(Ye(s,c+16))),[a,r]=[r,a],c+=64;while(c!==u);const d=Br.add(a.and(255).shl(1));return c=h,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),r=At(r.add(o).add(i[0]).add(Ye(s,c+8)),37).mul(d),o=At(o.add(i[1]).add(Ye(s,c+48)),42).mul(d),r=r.xor(l[1].mul(9)),o=o.add(i[0].mul(9).add(Ye(s,c+40))),a=At(a.add(l[0]),33).mul(d),i=Qu(s,c,i[1].mul(d),r.add(l[0])),l=Qu(s,c+32,a.add(l[1]),o.add(Ye(s,c+16))),[a,r]=[r,a],ir(ir(i[0],l[0],d).add(sf(o).mul(Ox)).add(a),ir(i[1],l[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(s,t){return t==="string"?ys(s):lr([s],t)}function zI(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function lr(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=_s(s)),q().getBool("DEBUG")&&mx(s,t),zI(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const n=new Uint8Array(s.length);for(let r=0;r<n.length;++r)Math.round(s[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function Vt(){return q().platform.now()}function Mx(s,t){return q().platform.fetch(s,t)}function ys(s,t="utf-8"){return t=t||"utf-8",q().platform.encode(s,t)}function Vr(s,t="utf-8"){return t=t||"utf-8",q().platform.decode(s,t)}var MI=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",createScalarValue:Ls,toTypedArray:lr,now:Vt,fetch:Mx,encodeString:ys,decodeString:Vr,shuffle:Bp,shuffleCombo:gI,clamp:or,nearestLargerEven:Vp,swap:Fs,sum:fx,randUniform:yI,distSquared:bI,assert:k,assertShapesMatch:zt,assertNonNull:Fr,flatten:_s,sizeFromShape:H,isScalarShape:xI,arraysEqual:Ae,isInt:Ct,tanh:wI,sizeToSquarishShape:Gc,createShuffledIndices:vI,rightPad:_r,repeatedTry:Wp,inferFromImplicitShape:Up,parseAxisParam:ke,squeezeShape:Os,getTypedArrayFromDType:Nt,getArrayFromDType:Yt,checkConversionForErrors:mx,isValidDtype:gx,hasEncodingLoss:Gp,isTypedArray:Mt,bytesPerElement:Hc,bytesFromStringArray:yx,isString:gs,isBoolean:bx,isNumber:jc,inferDtype:To,isFunction:ar,nearestDivisor:qc,computeStrides:ge,toNestedArray:Tn,makeOnesTypedArray:Hp,makeZerosTypedArray:Bt,makeZerosNestedTypedArray:jp,assertNonNegativeIntegerDimensions:qp,locToIndex:Qn,indexToLoc:Eo,isPromise:Or,hexToLong:Fl,fingerPrint64:zx});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BI{constructor(t,n){this.backendTimer=t,this.logger=n,n==null&&(this.logger=new WI)}profileKernel(t,n,r){let o;const a=()=>{o=r()};let i;const l=Vt();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const u of o)u.dataSync();i=Promise.resolve({kernelMs:Vt()-l})}if(q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){const h=o[u];h.data().then(d=>{VI(d,h.dtype,t)})}return{kernelName:t,outputs:o,inputs:n,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:n,outputs:r,timeMs:o,inputs:a,extraInfo:i}=t;r.forEach(l=>{Promise.all([l.data(),o,i]).then(c=>{this.logger.logKernelProfile(n,l,c[0],c[1],a,c[2])})})}}function VI(s,t,n){if(t!=="float32")return!1;for(let r=0;r<s.length;r++){const o=s[r];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${n}'`),!0}return!1}class WI{logKernelProfile(t,n,r,o,a,i){const l=typeof o=="number"?_r(`${o}ms`,9):o.error,c=_r(t,25),u=n.rank,h=n.size,d=_r(n.shape.toString(),14);let p="";for(const f in a){const m=a[f];if(m!=null){const g=m.shape||n.shape,y=g.length;p+=`${f}: ${y}D ${y>0?g:""} `}}console.log(`%c${c}	%c${l}	%c${u}D ${d}	%c${h}	%c${p}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(s,t,n){const r={},o={};for(let c=0;c<t.length;c++)r[t[c].id]=!0;for(let c=0;c<s.length;c++){const u=s[c],h=u.inputs;for(const d in h){const p=h[d];let f=!1;for(let m=0;m<t.length;m++)if(r[p.id]){u.outputs.forEach(g=>r[g.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}const a={};a[n.id]=!0;const i={};for(let c=s.length-1;c>=0;c--){const u=s[c],h=u.inputs;for(let d=0;d<u.outputs.length;d++)if(a[u.outputs[d].id]){for(const p in h)a[h[p].id]=!0,i[u.id]=!0;break}}const l=[];for(let c=0;c<s.length;c++){const u=s[c];if(o[u.id]&&i[u.id]){const h={};for(const p in u.inputs){const f=u.inputs[p];r[f.id]&&(h[p]=f)}const d=Object.assign({},u);d.inputs=h,d.outputs=u.outputs,l.push(d)}}return l}function GI(s,t,n,r){for(let o=t.length-1;o>=0;o--){const a=t[o],i=[];if(a.outputs.forEach(c=>{const u=s[c.id];u!=null?i.push(u):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const l=a.gradient(i);for(const c in a.inputs){if(!(c in l))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(l)}.`);const u=n(()=>l[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);const h=a.inputs[c];if(!Ae(u.shape,h.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${h.shape}'`);if(s[h.id]==null)s[h.id]=u;else{const d=s[h.id];s[h.id]=r(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx=20,_l=3,rf=7;function HI(s,t,n,r){const o=ge(t),a=jI(s,t,n,o),i=t.length,l=eh(s,t,n,o,a),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${i}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(l.map(u=>"    "+u).join(`
`)),c.join(`
`)}function jI(s,t,n,r){const o=H(t),a=r[r.length-1],i=new Array(a).fill(0),l=t.length,c=n==="complex64"?Ll(s):s;if(l>1)for(let u=0;u<o/a;u++){const h=u*a;for(let d=0;d<a;d++)i[d]=Math.max(i[d],Ol(c[h+d],0,n).length)}return i}function Ol(s,t,n){let r;return Array.isArray(s)?r=`${parseFloat(s[0].toFixed(rf))} + ${parseFloat(s[1].toFixed(rf))}j`:gs(s)?r=`'${s}'`:n==="bool"?r=Vx(s):r=parseFloat(s.toFixed(rf)).toString(),_r(r,t)}function Vx(s){return s===0?"false":"true"}function eh(s,t,n,r,o,a=!0){const i=n==="complex64"?2:1,l=t[0],c=t.length;if(c===0){if(n==="complex64"){const g=Ll(s);return[Ol(g[0],0,n)]}return n==="bool"?[Vx(s[0])]:[s[0].toString()]}if(c===1){if(l>Bx){const y=_l*i;let b=Array.from(s.slice(0,y)),x=Array.from(s.slice((l-_l)*i,l*i));return n==="complex64"&&(b=Ll(b),x=Ll(x)),["["+b.map((w,v)=>Ol(w,o[v],n)).join(", ")+", ..., "+x.map((w,v)=>Ol(w,o[l-_l+v],n)).join(", ")+"]"]}const g=n==="complex64"?Ll(s):Array.from(s);return["["+g.map((y,b)=>Ol(y,o[b],n)).join(", ")+"]"]}const u=t.slice(1),h=r.slice(1),d=r[0]*i,p=[];if(l>Bx){for(let g=0;g<_l;g++){const y=g*d,b=y+d;p.push(...eh(s.slice(y,b),u,n,h,o,!1))}p.push("...");for(let g=l-_l;g<l;g++){const y=g*d,b=y+d;p.push(...eh(s.slice(y,b),u,n,h,o,g===l-1))}}else for(let g=0;g<l;g++){const y=g*d,b=y+d;p.push(...eh(s.slice(y,b),u,n,h,o,g===l-1))}const f=c===2?",":"";p[0]="["+p[0]+f;for(let g=1;g<p.length-1;g++)p[g]=" "+p[g]+f;let m=`,
`;for(let g=2;g<c;g++)m+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":m),p}function Ll(s){const t=[];for(let n=0;n<s.length;n+=2)t.push([s[n],s[n+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kt{constructor(t,n,r){if(this.dtype=n,this.shape=t.slice(),this.size=H(t),r!=null){const o=r.length;k(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Yt(n,this.size),this.strides=ge(t)}set(t,...n){n.length===0&&(n=[0]),k(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const r=this.locToIndex(n);this.values[r]=t}get(...t){t.length===0&&(t=[0]);let n=0;for(const o of t){if(o<0||o>=this.shape[n]){const a=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(a)}n++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return n}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const n=new Array(this.shape.length);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(t/this.strides[r]),t-=n[r]*this.strides[r];return n[n.length-1]=t,n}get rank(){return this.shape.length}toTensor(){return bs().makeTensor(this.values,this.shape,this.dtype)}}let bs=null,Ta=null;function qI(s){bs=s}function KI(s){Ta=s}class Pe{constructor(t,n,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=n||"float32",this.size=H(t),this.strides=ge(t),this.dataId=r,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ta.buffer(this.shape,this.dtype,t)}bufferSync(){return Ta.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Tn(this.shape,t,this.dtype==="complex64")}arraySync(){return Tn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=bs().read(this.dataId);if(this.dtype==="string"){const n=await t;try{return n.map(r=>Vr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=bs().readSync(this.dataId);if(this.dtype==="string")try{return t.map(n=>Vr(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await bs().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(bs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ta.print(this,t)}clone(){return this.throwIfDisposed(),Ta.clone(this)}toString(t=!1){const n=this.dataSync();return HI(n,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ta.cast(this,t)}variable(t=!0,n,r){return this.throwIfDisposed(),bs().makeVariable(this,t,n,r)}}Object.defineProperty(Pe,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function G(){return Yp("Tensor",()=>Pe)}G();class Pl extends Pe{constructor(t,n,r,o){super(t.shape,t.dtype,t.dataId,o);this.trainable=n,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Ae(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);bs().disposeTensor(this),this.dataId=t.dataId,bs().incRef(this,null)}dispose(){bs().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Pl,Symbol.hasInstance,{value:s=>s instanceof Pe&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var of;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(of||(of={}));var af;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(af||(af={}));var lf;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(lf||(lf={}));var cf;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(cf||(cf={}));var uf;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(uf||(uf={}));const XI={float32:cf,int32:af,bool:lf,complex64:uf};function fn(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return XI[s][t]}function th(s){return fn(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(s,t){if(s.dtype===t.dtype)return[s,t];const n=fn(s.dtype,t.dtype);return[s.cast(n),t.cast(n)]}function Wx(s,t){k(s.dtype===t.dtype,()=>`The dtypes of the first(${s.dtype}) and second(${t.dtype}) input must match`)}function nh(s,t){return t.some(n=>n.id===s.id)}function Ps(s){const t=[],n=new Set;return Ux(s,t,n),t}function Ux(s,t,n){if(s==null)return;if(s instanceof Pe){t.push(s);return}if(!YI(s))return;const r=s;for(const o in r){const a=r[o];n.has(a)||(n.add(a),Ux(a,t,n))}}function YI(s){return Array.isArray(s)||typeof s=="object"}var ZI=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",makeTypesMatch:lt,assertTypesMatch:Wx,isTensorInList:nh,getTensorsInContainer:Ps});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hf(s){return s.kernelName!=null}class Gx{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ea{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Gx}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const r=t[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,r=1){return t in this.registryFactory?(sn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:r},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:n,asyncInit:r}=this.initializeBackend(t);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new BI(this.backendInstance),!0}setupRegisteredKernels(){Yu(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Yu(t).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[t])})}initializeBackend(t){const n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const r=n.factory();if(r&&!(r instanceof Uc)&&typeof r.then=="function"){const o=++this.pendingBackendInitId,a=r.then(i=>o<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,sn(`Initialization of backend ${t} failed`),sn(i.stack||i.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(r){return sn(`Initialization of backend ${t} failed`),sn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const r=t[n],{success:o,asyncInit:a}=this.initializeBackend(r);if(a||o)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){const r=this.state.tensorInfo.get(n),o=r.backend,a=this.readSync(n),i=o.refCount(n);o.disposeData(n,!0),r.backend=t,t.move(n,a,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let r=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}let o;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(o),()=>(o=n(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,n,r){t();try{const o=r();return n(),o}catch(o){throw n(),o}}nextTensorId(){return Ea.nextTensorId++}nextVariableId(){return Ea.nextVariableId++}clone(t){const n=R.runKernel(Yo,{x:t}),r={x:t},o=i=>({x:()=>{const l="float32",c={x:i},u={dtype:l};return R.runKernel(Po,c,u)}}),a=[];return this.addTapeNode(this.state.activeScope.name,r,[n],o,a,{}),n}runKernel(t,n,r){if(this.backendName==null&&this.backend,!(Xu(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,r){const o=this.backend.numDataIds();let a=0;r.forEach(c=>{a+=c.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=o-n-a-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let n,r=[];const o=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let c;const u=hf(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(hf(t)){const{kernelName:m,inputs:g,attrs:y}=t;this.backendName==null&&this.backend;const b=Xu(m,this.backendName);k(b!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),l=()=>{const x=this.backend.numDataIds();c=b.kernelFunc({inputs:g,attrs:y,backend:this.backend});const w=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,x,w);const v=w.map(C=>{if(C.rank!=null)return C;const{dataId:I,shape:N,dtype:S}=C;return this.makeTensorFromDataId(I,N,S)});if(o){const C=this.getTensorsForGradient(m,g,v);r=this.saveTensorsForBackwardMode(C)}return v}}else{const{forwardFunc:m}=t,g=y=>{!o||(r=y.map(b=>this.keep(this.clone(b))))};l=()=>{const y=this.backend.numDataIds();c=this.tidy(()=>m(this.backend,g));const b=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,b),b}}const{inputs:h,attrs:d}=t,p=hf(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=l():(f=this.profiler.profileKernel(u,h,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),n=f.outputs)}),o&&this.addTapeNode(u,h,n,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(m=>h[m]!=null?h[m].shape:null),outputShapes:n.map(m=>m.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(t,n,r){const o=Jp(t);if(o!=null){const a=o.inputsToSave||[],i=o.outputsToSave||[];let l;o.saveAllInputs?(k(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(n).map(u=>n[u])):l=a.map(u=>n[u]);const c=r.filter((u,h)=>i[h]);return l.concat(c)}return[]}makeTensor(t,n,r,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",o=o||this.backend;let a=t;r==="string"&&gs(t[0])&&(a=t.map(c=>ys(c)));const i=o.write(a,n,r),l=new Pe(n,r,i,this.nextTensorId());if(this.trackTensor(l,o),r==="string"){const c=this.state.tensorInfo.get(i),u=yx(a);this.state.numBytes+=u-c.bytes,c.bytes=u}return l}makeTensorFromDataId(t,n,r,o){r=r||"float32";const a=new Pe(n,r,t,this.nextTensorId());return this.trackTensor(a,o),a}makeVariable(t,n=!0,r,o){r=r||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));const a=new Pl(t,n,r,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let r=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(r=t.size*Hc(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Pl||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const r=t.size*Hc(t.dtype);this.state.numBytes-=r}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,r,o,a,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:r,saved:a},c=Jp(t);c!=null&&(o=c.gradFunc),o!=null&&(l.gradient=u=>(u=u.map((h,d)=>{if(h==null){const p=r[d],f=Bt(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),o(u.length>1?u:u[0],a,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){const n=Ps(t),r=new Set(n.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const i=this.state.activeScope.track[a];!i.kept&&!r.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(a=>{!a.kept&&a.scopeId===o.id&&this.track(a)})}gradients(t,n,r,o=!1){if(k(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));k(a instanceof Pe,()=>"The result y returned by f() must be a tensor.");const i=UI(this.state.activeTape,n,a);if(!o&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[a.id]=r==null?JI(a.shape):r,GI(l,i,u=>this.tidy(u),QI);const c=n.map(u=>l[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const h of u.saved)h.dispose()}),this.state.activeTape=null),{value:a,grads:c}})}customGrad(t){return k(ar(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{k(n.every(l=>l instanceof Pe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const o={};n.forEach((l,c)=>{o[c]=l});const a=(l,c)=>(r=t(...n,c),k(r.value instanceof Pe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(ar(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(l,c)=>{const u=r.gradFunc(l,c),h=Array.isArray(u)?u:[u];k(h.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(h.every(p=>p instanceof Pe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((p,f)=>{d[f]=()=>p}),d};return this.runKernelFunc({forwardFunc:a,backwardsFunc:i,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const n=Vt(),r=await this.backend.time(t);return r.wallMs=Vt()-n,r}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Gx;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ea.nextTensorId=0;Ea.nextVariableId=0;function JI(s){const t=Hp(H(s),"float32");return R.makeTensor(t,s,"float32")}function Hx(){const s=$x();if(s._tfengine==null){const t=new vx(s);s._tfengine=new Ea(t)}return II(s._tfengine.ENV),qI(()=>s._tfengine),s._tfengine}const R=Hx();function QI(s,t){const n={a:s,b:t};return R.runKernel(Lr,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(){return typeof navigator!="undefined"&&navigator!=null}function df(s){if(s||eS()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window!="undefined"?window.opera:"");if(!t){const n=s;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function pf(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var tS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",isMobile:df,isBrowser:pf});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ts=q();ts.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ts.registerFlag("IS_BROWSER",()=>pf());ts.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");ts.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ts.registerFlag("PROD",()=>!1);ts.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ts.getBool("DEBUG"));ts.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ts.registerFlag("IS_TEST",()=>!1);ts.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);ts.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(s,t){let n=s;if(Mt(s))return t==="string"?[]:[s.length];if(!Array.isArray(s))return[];const r=[];for(;Array.isArray(n)||Mt(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(s)&&q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&jx(s,r,[]),r}function jx(s,t,n){if(n=n||[],!Array.isArray(s)&&!Mt(s)){k(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}k(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${s.length} elements`),k(s.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const r=t.slice(1);for(let o=0;o<s.length;++o)jx(s[o],r,n.concat(o))}function qx(s,t,n,r){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${s} tensor, but got ${t} tensor`)}}function T(s,t,n,r="numeric"){if(s instanceof Pe)return qx(r,s.dtype,t,n),s;let o=To(s);if(o!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),qx(r,o,t,n),s==null||!Mt(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const c=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${c}'`)}const a=xs(s,o);!Mt(s)&&!Array.isArray(s)&&(s=[s]);const l=o!=="string"?lr(s,o):_s(s,[],!0);return R.makeTensor(l,a,o)}function zl(s,t,n,r="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((a,i)=>T(a,`${t}[${i}]`,n,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kx="__op";function F(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=s[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+Kx;const o=(...a)=>{R.startScope(n);try{const i=r(...a);return Or(i)&&console.error("Cannot return a Promise inside of tidy."),R.endScope(i),i}catch(i){throw R.endScope(null),i}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(s,t){const n=T(s,"real","complex"),r=T(t,"imag","complex");zt(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const o={real:n,imag:r};return R.runKernel(Qc,o)}const cr=F({complex_:nS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ur(s,t,n,r){if(r==null&&(r=To(s)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Mt(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){qp(t);const o=H(t),a=H(n);k(o===a,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${a}`);for(let i=0;i<n.length;++i){const l=n[i],c=i===n.length-1?l!==H(t.slice(i)):!0;k(n[i]===t[i]||!c,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Mt(s)&&!Array.isArray(s)&&(s=[s]),t=t||n,s=r!=="string"?lr(s,r):_s(s,[],!0),R.makeTensor(s,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(s,t,n){const r=xs(s,n);return ur(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ff={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sh=4;async function mf(s,t){const n=[],r=[],o=Array.isArray(s)?s.map(i=>i.name):Object.keys(s);for(let i=0;i<o.length;++i){const l=o[i],c=Array.isArray(s)?s[i].tensor:s[l];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${c.dtype}`);const u={name:l,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const h=new Promise(async d=>{const p=await c.bytes(),f=p.reduce((y,b)=>y+b.length,0)+sh*p.length,m=new Uint8Array(f);let g=0;for(let y=0;y<p.length;y++){const b=p[y],x=new Uint8Array(new Uint32Array([b.length]).buffer);m.set(x,g),g+=sh,m.set(b,g),g+=b.length}d(m)});r.push(h)}else r.push(c.data());t!=null&&(u.group=t),n.push(u)}const a=await Promise.all(r);return{data:sS(a),specs:n}}function rh(s,t){const n={};let r,o=0;for(const a of t){const i=a.name,l=a.dtype,c=a.shape,u=H(c);let h;if("quantization"in a){const d=a.quantization;if(d.dtype==="uint8"||d.dtype==="uint16"){if(!("min"in d&&"scale"in d))throw new Error(`Weight ${a.name} with quantization ${d.dtype} doesn't have corresponding metadata min and scale.`)}else if(d.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${a.name} is quantized with ${d.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${d.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const p=ff[d.dtype],f=s.slice(o,o+u*p),m=d.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(l==="float32")if(d.dtype==="uint8"||d.dtype==="uint16"){h=new Float32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];h[g]=y*d.scale+d.min}}else if(d.dtype==="float16")r===void 0&&(r=cS()),h=r(m);else throw new Error(`Unsupported quantization type ${d.dtype} for weight type float32.`);else if(l==="int32"){if(d.dtype!=="uint8"&&d.dtype!=="uint16")throw new Error(`Unsupported quantization type ${d.dtype} for weight type int32.`);h=new Int32Array(m.length);for(let g=0;g<m.length;g++){const y=m[g];h[g]=Math.round(y*d.scale+d.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=u*p}else if(l==="string"){const d=H(a.shape);h=[];for(let p=0;p<d;p++){const f=new Uint32Array(s.slice(o,o+sh))[0];o+=sh;const m=new Uint8Array(s.slice(o,o+f));h.push(m),o+=f}}else{const d=ff[l],p=s.slice(o,o+u*d);if(l==="float32")h=new Float32Array(p);else if(l==="int32")h=new Int32Array(p);else if(l==="bool")h=new Uint8Array(p);else if(l==="complex64"){h=new Float32Array(p);const f=new Float32Array(h.length/2),m=new Float32Array(h.length/2);for(let b=0;b<f.length;b++)f[b]=h[b*2],m[b]=h[b*2+1];const g=Vn(f,c,"float32"),y=Vn(m,c,"float32");n[i]=cr(g,y),g.dispose(),y.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);o+=u*d}l!=="complex64"&&(n[i]=Vn(h,c,l))}return n}function sS(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const n=[];s.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const r=new Uint8Array(t);let o=0;return n.forEach(a=>{r.set(new Uint8Array(a.buffer),o),o+=a.byteLength}),r.buffer}const gf=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Xx(s){return gf?Buffer.byteLength(s):new Blob([s]).size}function rS(s){if(gf)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let n="";for(let r=0,o=t.length;r<o;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function oS(s){if(gf){const r=Buffer.from(s,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const t=atob(s),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function oh(s){if(s.length===1)return s[0];let t=0;s.forEach(o=>{t+=o.byteLength});const n=new Uint8Array(t);let r=0;return s.forEach(o=>{n.set(new Uint8Array(o),r),r+=o.byteLength}),n.buffer}function Yx(s){const t="/";for(s=s.trim();s.endsWith(t);)s=s.slice(0,s.length-1);const n=s.split(t);return n[n.length-1]}function Zx(s,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),n}async function yf(s,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){const[r,o]=await t(s.weightsManifest);n.weightSpecs=r,n.weightData=o}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),n}function Ml(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:Xx(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:Xx(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function aS(){const s=n=>{let r=n<<13,o=0;for(;(r&8388608)==0;)o-=8388608,r<<=1;return r&=~8388608,o+=947912704,r|o},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=s(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function iS(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let t=1;t<31;t++)s[t]=t<<23;for(let t=33;t<63;t++)s[t]=2147483648+(t-32<<23);return s}function lS(){const s=new Uint32Array(64);for(let t=0;t<64;t++)s[t]=1024;return s[0]=s[32]=0,s}function cS(){const s=aS(),t=iS(),n=lS();return r=>{const o=new ArrayBuffer(4*r.length),a=new Uint32Array(o);for(let i=0;i<r.length;i++){const l=r[i],c=s[n[l>>10]+(l&1023)]+t[l>>10];a[i]=c}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ct{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ct.instance==null&&(ct.instance=new ct),ct.instance}static registerSaveRouter(t){ct.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ct.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ct.getHandlers(t,"save")}static getLoadHandlers(t,n){return ct.getHandlers(t,"load",n)}static getHandlers(t,n,r){const o=[];return(n==="load"?ct.getInstance().loadRouters:ct.getInstance().saveRouters).forEach(i=>{const l=i(t,r);l!==null&&o.push(l)}),o}}const uS=s=>ct.registerSaveRouter(s),hS=s=>ct.registerLoadRouter(s),bf=s=>ct.getSaveHandlers(s),xf=(s,t)=>ct.getLoadHandlers(s,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wf="tensorflowjs",vf=1,Wr="models_store",hr="model_info_store";function Jx(){if(!q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window=="undefined"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function $f(s){const t=s.result;t.createObjectStore(Wr,{keyPath:"modelPath"}),t.createObjectStore(hr,{keyPath:"modelPath"})}class Ur{constructor(t){if(this.indexedDB=Jx(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((r,o)=>{const a=this.indexedDB.open(wf,vf);a.onupgradeneeded=()=>$f(a),a.onsuccess=()=>{const i=a.result;if(n==null){const l=i.transaction(Wr,"readonly"),u=l.objectStore(Wr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(u.result.modelArtifacts)},u.onerror=h=>(i.close(),o(u.error)),l.oncomplete=()=>i.close()}else{const l=Ml(n),c=i.transaction(hr,"readwrite");let u=c.objectStore(hr);const h=u.put({modelPath:this.modelPath,modelArtifactsInfo:l});let d;h.onsuccess=()=>{d=i.transaction(Wr,"readwrite");const f=d.objectStore(Wr).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:l});f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=m=>{u=c.objectStore(hr);const g=u.delete(this.modelPath);g.onsuccess=()=>(i.close(),o(f.error)),g.onerror=y=>(i.close(),o(f.error))}},h.onerror=p=>(i.close(),o(h.error)),c.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},a.onerror=i=>o(a.error)})}}Ur.URL_SCHEME="indexeddb://";const Qx=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Ur.URL_SCHEME)?dS(s.slice(Ur.URL_SCHEME.length)):null;ct.registerSaveRouter(Qx);ct.registerLoadRouter(Qx);function dS(s){return new Ur(s)}function pS(s){return s.startsWith(Ur.URL_SCHEME)?s.slice(Ur.URL_SCHEME.length):s}class fS{constructor(){this.indexedDB=Jx()}async listModels(){return new Promise((t,n)=>{const r=this.indexedDB.open(wf,vf);r.onupgradeneeded=()=>$f(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(hr,"readonly"),l=a.objectStore(hr).getAll();l.onsuccess=()=>{const c={};for(const u of l.result)c[u.modelPath]=u.modelArtifactsInfo;t(c)},l.onerror=c=>(o.close(),n(l.error)),a.oncomplete=()=>o.close()},r.onerror=o=>n(r.error)})}async removeModel(t){return t=pS(t),new Promise((n,r)=>{const o=this.indexedDB.open(wf,vf);o.onupgradeneeded=()=>$f(o),o.onsuccess=()=>{const a=o.result,i=a.transaction(hr,"readwrite"),l=i.objectStore(hr),c=l.get(t);let u;c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{u=a.transaction(Wr,"readwrite");const f=u.objectStore(Wr).delete(t);f.onsuccess=()=>n(c.result.modelArtifactsInfo),f.onerror=m=>r(c.error)};h.onsuccess=d,h.onerror=p=>(d(),a.close(),r(c.error))}},c.onerror=h=>(a.close(),r(c.error)),i.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}},o.onerror=a=>r(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs="/",Aa="tensorflowjs_models",e0="info",mS="model_topology",gS="weight_specs",yS="weight_data",bS="model_metadata";function t0(s){return{info:[Aa,s,e0].join(zs),topology:[Aa,s,mS].join(zs),weightSpecs:[Aa,s,gS].join(zs),weightData:[Aa,s,yS].join(zs),modelMetadata:[Aa,s,bS].join(zs)}}function n0(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function xS(s){const t=s.split(zs);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(zs)}function wS(s){return s.startsWith(Gr.URL_SCHEME)?s.slice(Gr.URL_SCHEME.length):s}class Gr{constructor(t){if(!q().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=t0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),o=Ml(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,rS(t.weightData));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:o}}catch{throw n0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=o;const a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){const l=JSON.parse(a);n.format=l.format,n.generatedBy=l.generatedBy,n.convertedBy=l.convertedBy,l.signature!=null&&(n.signature=l.signature),l.userDefinedMetadata!=null&&(n.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(n.modelInitializer=l.modelInitializer),l.trainingConfig!=null&&(n.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=oS(i),n}}Gr.URL_SCHEME="localstorage://";const s0=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Gr.URL_SCHEME)?vS(s.slice(Gr.URL_SCHEME.length)):null;ct.registerSaveRouter(s0);ct.registerLoadRouter(s0);function vS(s){return new Gr(s)}class $S{constructor(){k(q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},n=Aa+zs,r=zs+e0;for(let o=0;o<this.LS.length;++o){const a=this.LS.key(o);if(a.startsWith(n)&&a.endsWith(r)){const i=xS(a);t[i]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){t=wS(t);const n=t0(t);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return n0(n),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da="://";class mn{constructor(){this.managers={}}static getInstance(){return mn.instance==null&&(mn.instance=new mn),mn.instance}static registerManager(t,n){k(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Da)&&(t=t.slice(0,t.indexOf(Da))),k(t.length>0,()=>"scheme must not be an empty string.");const r=mn.getInstance();k(r.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=n}static getManager(t){const n=this.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ah(s){if(s.indexOf(Da)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${mn.getSchemes().join(",")}`);return{scheme:s.split(Da)[0],path:s.split(Da)[1]}}async function r0(s,t,n=!1){k(s!==t,()=>`Old path and new path are the same: '${s}'`);const r=ct.getLoadHandlers(s);k(r.length>0,()=>`Copying failed because no load handler is found for source URL ${s}.`),k(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${s}.`);const o=r[0],a=ct.getSaveHandlers(t);k(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),k(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],l=ah(s).scheme,c=ah(s).path,u=l===ah(s).scheme,h=await o.load();n&&u&&await mn.getManager(l).removeModel(c);const d=await i.save(h);return n&&!u&&await mn.getManager(l).removeModel(c),d.modelArtifactsInfo}async function CS(){const s=mn.getSchemes(),t={};for(const n of s){const r=await mn.getManager(n).listModels();for(const o in r){const a=n+Da+o;t[a]=r[o]}}return t}async function NS(s){const t=ah(s);return mn.getManager(t.scheme).removeModel(t.path)}async function kS(s,t){return r0(s,t,!1)}async function IS(s,t){return r0(s,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SS{fetch(t,n){return fetch(t,n)}now(){return performance.now()}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,n){return new TextDecoder(n).decode(t)}}if(q().get("IS_BROWSER")){q().setPlatform("browser",new SS);try{mn.registerManager(Gr.URL_SCHEME,new $S)}catch{}try{mn.registerManager(Ur.URL_SCHEME,new fS)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS={importFetch:()=>require("node-fetch")};let Cf;class ES{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return q().global.fetch!=null?q().global.fetch(t,n):(Cf==null&&(Cf=TS.importFetch()),Cf(t,n))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(t)}decode(t,n){return t.length===0?"":new this.util.TextDecoder(n).decode(t)}}q().get("IS_NODE")&&q().setPlatform("node",new ES);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(s,t="float32",n){return t=t||"float32",qp(s),new kt(s,t,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(s,t){const n=T(s,"x","cast");if(!gx(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:n},o={dtype:t};return R.runKernel(Po,r,o)}const ne=F({cast_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(s){const n={x:T(s,"x","clone","string_or_numeric")};return R.runKernel(Yo,n)}const Ms=F({clone_:DS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hx();const RS={buffer:Se,cast:ne,clone:Ms,print:o0};KI(RS);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS="model",_S=".json",OS=".weights.bin";function a0(s){return new Promise(t=>setTimeout(t)).then(s)}class Hr{constructor(t){if(!q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Hr.URL_SCHEME)&&(t=t.slice(Hr.URL_SCHEME.length)),(t==null||t.length===0)&&(t=FS),this.modelJsonFileName=t+_S,this.weightDataFileName=t+OS}async save(t){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=Zx(t,r),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await a0(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=n,await a0(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ml(t)}}}}Hr.URL_SCHEME="downloads://";class LS{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,n)=>{const r=new FileReader;r.onload=o=>{const a=JSON.parse(o.target.result),i=a.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const c=yf(a,u=>this.loadWeights(u));t(c)},r.onerror=o=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(t){const n=[],r=[];for(const i of t)n.push(...i.weights),r.push(...i.paths);const o=this.checkManifestAndWeightFiles(t),a=r.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(a).then(i=>[n,oh(i)])}loadWeightsFile(t,n){return new Promise((r,o)=>{const a=new FileReader;a.onload=i=>{const l=i.target.result;r(l)},a.onerror=i=>o(`Failed to weights data from file of path '${t}'.`),a.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(t){const n=[],r=this.weightsFiles.map(a=>Yx(a.name)),o={};for(const a of t)a.paths.forEach(i=>{const l=Yx(i);if(n.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(n.push(l),r.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);o[i]=this.weightsFiles[r.indexOf(l)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}}const PS=s=>q().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Hr.URL_SCHEME)?zS(s.slice(Hr.URL_SCHEME.length)):null;ct.registerSaveRouter(PS);function zS(s="model"){return new Hr(s)}function MS(s){return new LS(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0(s,t,n,r){i(s),n=n==null?0:n,r=r==null?1:r,l(n,r);let o=0;const a=c=>(c.then(u=>{const h=n+ ++o/s.length*(r-n);return t(h),u}),c);function i(c){k(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function l(c,u){k(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),k(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),k(u>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${u}`)}return Promise.all(s.map(a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function l0(s,t){t==null&&(t={});const n=t.fetchFunc==null?q().platform.fetch:t.fetchFunc,r=s.map(d=>n(d,t.requestInit,{isBinary:!0})),o=0,a=.5,l=(t.onProgress==null?await Promise.all(r):await i0(r,t.onProgress,o,a)).map(d=>d.arrayBuffer()),c=.5,u=1;return t.onProgress==null?await Promise.all(l):await i0(l,t.onProgress,c,u)}async function c0(s,t="",n,r){return u0(i=>l0(i,{requestInit:r}))(s,t,n)}function u0(s){return async(t,n="",r)=>{const o=t.map(()=>!1),a={},i=r!=null?r.map(()=>!1):[],l=[];if(t.forEach((f,m)=>{let g=0;f.weights.forEach(y=>{const b="quantization"in y?y.quantization.dtype:y.dtype,x=ff[b]*H(y.shape),w=()=>{o[m]=!0,a[m]==null&&(a[m]=[]),a[m].push({manifestEntry:y,groupOffset:g,sizeBytes:x})};r!=null?r.forEach((v,C)=>{v===y.name&&(w(),i[C]=!0)}):w(),l.push(y.name),g+=x})}),!i.every(f=>f)){const f=r.filter((m,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const c=o.reduce((f,m,g)=>(m&&f.push(g),f),[]),u=[];c.forEach(f=>{t[f].paths.forEach(m=>{const g=n+(n.endsWith("/")?"":"/")+m;u.push(g)})});const h=await s(u),d={};let p=0;return c.forEach(f=>{const m=t[f].paths.length;let g=0;for(let v=0;v<m;v++)g+=h[p+v].byteLength;const y=new ArrayBuffer(g),b=new Uint8Array(y);let x=0;for(let v=0;v<m;v++){const C=new Uint8Array(h[p+v]);b.set(C,x),x+=C.byteLength}a[f].forEach(v=>{const C=y.slice(v.groupOffset,v.groupOffset+v.sizeBytes),I=rh(C,[v.manifestEntry]);for(const N in I)d[N]=I[N]}),p+=m}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS="application/octet-stream",VS="application/json";class Nf{constructor(t,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(k(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=q().platform.fetch,k(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&k(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=Zx(t,r);n.body.append("model.json",new Blob([JSON.stringify(o)],{type:VS}),"model.json"),t.weightData!=null&&n.body.append("model.weights.bin",new Blob([t.weightData],{type:BS}),"model.weights.bin");const a=await this.fetch(this.path,n);if(a.ok)return{modelArtifactsInfo:Ml(t),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=n.modelTopology,o=n.weightsManifest;if(r==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return yf(n,a=>this.loadWeights(a))}async loadWeights(t){const n=Array.isArray(this.path)?this.path[1]:this.path,[r,o]=WS(n),a=this.weightPathPrefix||r,i=[];for(const h of t)i.push(...h.weights);const l=[],c=[];for(const h of t)for(const d of h.paths)this.weightUrlConverter!=null?c.push(this.weightUrlConverter(d)):l.push(a+d+o);this.weightUrlConverter&&l.push(...await Promise.all(c));const u=await l0(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,oh(u)]}}Nf.URL_SCHEME_REGEX=/^https?:\/\//;function WS(s){const t=s.lastIndexOf("/"),n=s.lastIndexOf("?"),r=s.substring(0,t),o=n>t?s.substring(n):"";return[r+"/",o]}function kf(s){return s.match(Nf.URL_SCHEME_REGEX)!=null}const h0=(s,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(s)?n=s.every(r=>kf(r)):n=kf(s),n)return If(s,t)}return null};ct.registerSaveRouter(h0);ct.registerLoadRouter(h0);function If(s,t){return new Nf(s,t)}function ih(s,t){return If(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sf{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class US{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function GS(s,t,n,r){return arguments.length===1?s.modelTopology!=null||s.weightSpecs!=null?new Sf(s):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sf({modelTopology:s})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sf({modelTopology:s,weightSpecs:t,weightData:n,trainingConfig:r}))}function HS(s){return new US(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",browserFiles:MS,browserHTTPRequest:ih,concatenateArrayBuffers:oh,decodeWeights:rh,encodeWeights:mf,fromMemory:GS,getLoadHandlers:xf,getModelArtifactsForJSON:yf,getModelArtifactsInfoForJSON:Ml,getSaveHandlers:bf,http:If,isHTTPScheme:kf,loadWeights:c0,registerLoadRouter:hS,registerSaveRouter:uS,weightsLoaderFactory:u0,withSaveHandler:HS,copyModel:kS,listModels:CS,moveModel:IS,removeModel:NS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(s,t,n=!1,r=!1){let o=T(s,"a","matMul"),a=T(t,"b","matMul");[o,a]=lt(o,a);const i={a:o,b:a},l={transposeA:n,transposeB:r};return R.runKernel(_i,i,l)}const Ie=F({matMul_:qS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(s,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:T(s,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:r};return R.runKernel(hl,a,i)}const Ra=F({oneHot_:KS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(s,t){const n=T(s,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),k(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{k(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const r={x:n},o={perm:t};return R.runKernel(kl,r,o)}const Re=F({transpose_:XS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(s,t,n){const r=T(s,"labels","confusionMatrix"),o=T(t,"predictions","confusionMatrix");k(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),k(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),k(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),k(r.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),k(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const a=Ra(ne(r,"int32"),n),i=Ra(ne(o,"int32"),n),l=Re(a),c=Ie(l,i);return ne(c,"int32")}const ZS=F({confusionMatrix_:YS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var JS=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",confusionMatrix:ZS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0(s,t,n){if(Fr(s),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=xs(s,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ur(s,t,r,n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fa;function p0(s,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,a=!1,i=!1,l=!1;if(s.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&s instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement)a=!0;else if(s.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${s.constructor.name}`);if(o){const m=2;if(o&&s.readyState<m)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(Xu(qu,R.backendName)!=null){const m={pixels:s},g={numChannels:t};return R.runKernel(qu,m,g)}const[u,h]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height];let d;i?d=s.getContext("2d").getImageData(0,0,u,h).data:r||n?d=s.data:(a||o||l)&&(Fa==null&&(Fa=document.createElement("canvas").getContext("2d")),Fa.canvas.width=u,Fa.canvas.height=h,Fa.drawImage(s,0,0,u,h),d=Fa.getImageData(0,0,u,h).data);let p;if(t===4)p=new Int32Array(d);else{const m=u*h;p=new Int32Array(m*t);for(let g=0;g<m;g++)for(let y=0;y<t;++y)p[g*t+y]=d[g*4+y]}return d0(p,[h,u,t],"int32")}function QS(s){return s!=null&&s.data instanceof Uint8Array}function eT(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function tT(s){return s!=null&&s.width!==0&&s.height!==0}function nT(s){return eT()&&!(s instanceof ImageBitmap)&&tT(s)&&!QS(s)}async function sT(s,t=3){let n=null;if(q().getBool("WRAP_TO_IMAGEBITMAP")&&nT(s)){let r;try{r=await createImageBitmap(s,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===s.width&&r.height===s.height?n=r:n=s}else n=s;return p0(n,t)}async function rT(s,t){let n=T(s,"img","toPixels");if(!(s instanceof Pe)){const u=n;n=ne(u,"int32"),u.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,o]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),l=n.dtype==="float32"?255:1,c=new Uint8ClampedArray(o*r*4);for(let u=0;u<r*o;++u){const h=[0,0,0,255];for(let p=0;p<a;p++){const f=i[u*a+p];if(n.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(n.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);a===1?(h[0]=f*l,h[1]=f*l,h[2]=f*l):h[p]=f*l}const d=u*4;c[d+0]=Math.round(h[0]),c[d+1]=Math.round(h[1]),c[d+2]=Math.round(h[2]),c[d+3]=Math.round(h[3])}if(t!=null){t.width=o,t.height=r;const u=t.getContext("2d"),h=new ImageData(c,o,r);u.putImageData(h,0,0)}return n!==s&&n.dispose(),c}const f0=F({fromPixels_:p0});var oT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",fromPixelsAsync:sT,toPixels:rT,fromPixels:f0});function lh(s,t){const n=s.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(H(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const o=t.shape,a=o[o.length-1];let i=1;for(let d=0;d<o.length-1;++d)i*=o[d];const l=s.shape,c=o.slice();c.pop();let u=1;for(let d=a;d<n;++d)u*=l[d],c.push(l[d]);const h=[...ge(s.shape).map(d=>d/u),1].slice(0,a);return[c,i,u,h]}var aT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",prepareAndValidate:lh});function Tf(s,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(a+` update.rank < ${o}. `);if(s.length<r+(n.rank-o))throw new Error(a+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+s.length-r)throw new Error(a+` update.rank != ${o+s.length-r}`);for(let i=0;i<o;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-o;++i)if(n.shape[i+o]!==s[i+r])throw new Error(a+` updates.shape[${i+o}] (${n.shape[i+o]}) != shape[${i+o}] (${s[i+o]})`)}function Ef(s,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}Tf(n,t,s)}function _a(s,t,n){const r=t.shape.length,o=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let d=o;d<a;++d)i*=n[d];const l=o<1?1:o,c=H(t.shape)/l,u=[...ge(n.slice(0,o)),1],h=H(n);return{sliceRank:o,numUpdates:c,sliceSize:i,strides:u,outputSize:h}}var iT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",validateUpdateShape:Tf,validateInput:Ef,calculateShapes:_a});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Af(s,t,n){const r=s.shape.length;k(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),k(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let o=0;o<r;++o)k(t[o]+n[o]<=s.shape[o],()=>`Error in slice${r}D: begin[${o}] + size[${o}] (${t[o]+n[o]}) would overflow input.shape[${o}] (${s.shape[o]})`)}function ch(s){const t=[];let n=0;for(;s>0;)s&1&&t.push(n),s/=2,n++;return t}function m0(s,t,n){const r=[];for(let o=0;o<s.length;o++)r[o]=Math.ceil((t[o]-s[o])/n[o]);return r}function g0(s,t,n,r){const o=[...s];for(let a=o.length;a<r.length;a++)o.push(1);for(let a=0;a<n;a++)a===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function y0(s,t,n){return n<=s?n:n-(t-1)}function b0(s,t){const n=[];for(let r=0;r<s;r++)n.push(t+r);return n}function x0(s,t,n,r,o,a,i,l,c){const u=s.length;let h=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){const f=t[0],m=n+1;h=w0(i,f,m,r,s),d=v0(l,f,m,o,s),p=g0(a,f,m,s)}else for(let f=0;f<u;f++)h[f]=C0(i,r,a,s,f,c),d[f]=N0(l,o,a,s,f,c),p[f]=$0(a,f,c);return{begin:h,end:d,strides:p}}function w0(s,t,n,r,o){const a=[...o],i=b0(n,t);for(let l=0;l<a.length;l++)if(i.indexOf(l)>-1)a[l]=0;else{const c=y0(t,n,l);let u=r[c];s&1<<c&&(u=0),a[l]=u}return a}function v0(s,t,n,r,o){const a=[...o],i=b0(n,t);for(let l=0;l<a.length;l++)if(i.indexOf(l)>-1)a[l]=Number.MAX_SAFE_INTEGER;else{const c=y0(t,n,l);let u=r[c];s&1<<c&&(u=Number.MAX_SAFE_INTEGER),a[l]=u}for(let l=0;l<a.length;l++){const c=o[l];a[l]<0&&(a[l]+=c),a[l]=or(0,a[l],o[l])}return a}function $0(s,t,n){let r=s[t];return(n&1<<t||r==null)&&(r=1),r}function C0(s,t,n,r,o,a){let i=t[o];const l=n[o]||1;(s&1<<o||a&1<<o||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const c=r[o];return i<0&&(i+=c),i=or(0,i,c-1),i}function N0(s,t,n,r,o,a){let i=t[o];const l=n[o]||1;(s&1<<o||a&1<<o||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const c=r[o];return i<0&&(i+=c),l>0?i=or(0,i,c):i=or(-1,i,c-1),i}function Df(s,t,n){let r=n.length;for(let o=0;o<n.length;o++)if(n[o]>1){r=o;break}for(let o=r+1;o<n.length;o++)if(t[o]>0||n[o]!==s[o])return!1;return!0}function Rf(s,t){let n=s.length>0?s[s.length-1]:1;for(let r=0;r<s.length-1;r++)n+=s[r]*t[r];return n}function uh(s,t,n){let r;const o=s.shape.length;typeof t=="number"?r=[t,...new Array(o-1).fill(0)]:t.length<o?r=t.concat(new Array(o-t.length).fill(0)):r=t.slice(),r.forEach(i=>{k(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(o).fill(-1):typeof n=="number"?a=[n,...new Array(o-1).fill(-1)]:n.length<o?a=n.concat(new Array(o-n.length).fill(-1)):a=n,a=a.map((i,l)=>i>=0?i:(k(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),s.shape[l]-r[l])),[r,a]}function Ff(s,t,n,r,o,a,i,l,c){let u=t.slice(),h=n.slice(),d=r;r==null&&(d=new Array(u.length));const p=ch(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&l!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&c!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const f=s.length-u.length,m=ch(l),g=s.slice();m.forEach(N=>{u[N]=0,h[N]=1,g.splice(N,0,1)});const{begin:y,end:b,strides:x}=x0(g,p,f,u,h,d,o,a,i);u=y,h=b,d=x;const w=ch(c);w.forEach(N=>{h[N]=u[N]+1,d[N]=1});const v=m0(u,h,d),C=v.filter((N,S)=>w.indexOf(S)===-1);return{nonStrided:d.every(N=>N===1),$begin:u,$end:h,$strides:d,size:v,newShape:g,outShape:C}}var k0=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",assertParamsValid:Af,maskToAxes:ch,computeOutShape:m0,stridesWithElidedDims:g0,getNormalizedAxes:x0,startIndicesWithElidedDims:w0,stopIndicesWithElidedDims:v0,stridesForAxis:$0,startForAxis:C0,stopForAxis:N0,isSliceContinous:Df,computeFlatOffset:Rf,parseSliceParams:uh,sliceInfo:Ff});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jr{getClassName(){return this.constructor.className}static fromConfig(t,n){return new t(n)}}class En{constructor(){this.classNameMap={}}static getMap(){return En.instance==null&&(En.instance=new En),En.instance}static register(t){En.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function X(s){k(s.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),k(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),En.register(s)}var lT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",Serializable:jr,SerializationMap:En,registerClass:X});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT=.001,I0=.1;function uT(s,t,n){return n==null&&(n=_f()),Of(s,t,(r,o)=>Lf(r,o,n))}function _f(){return R.backend.floatPrecision()===32?cT:I0}function Of(s,t,n){let r=!0;if((Mt(s)||Mt(t))&&(r=!1),Mt(s)&&Mt(t)&&(r=!0),r){const i=s.constructor.name,l=t.constructor.name;if(i!==l)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${l}`)}if(Array.isArray(s)&&Array.isArray(t)){const i=xs(s),l=xs(t);if(!Ae(i,l))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${l}]`)}const o=Mt(s)?s:_s(s),a=Mt(t)?t:_s(t);if(o.length!==a.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${a.length}.
Actual:   ${o}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){const l=o[i],c=a[i];if(!n(l,c))throw new Error(`Arrays differ: actual[${i}] = ${l}, expected[${i}] = ${c}.
Actual:   ${o}.
Expected: ${a}.`)}}function hT(s,t){s().then(()=>t.fail(),()=>t())}function dT(s,t){const n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return gs(s)||gs(s[0])||gs(t)||gs(t[0])?Of(s,n,(r,o)=>r==o):Of(s,t,(r,o)=>Lf(r,o,0))}function pT(s,t,n){if(n==null&&(n=_f()),!Lf(s,t,n))throw new Error(`Numbers differ: actual === ${s}, expected === ${t}`)}function Lf(s,t,n){return!isFinite(s)&&!isFinite(t)?!0:!(isNaN(s)||isNaN(t)||Math.abs(s-t)>n)}function fT(s,t,n){for(let r=0;r<s.length;r++)if(s[r]<t||s[r]>n)throw new Error(`Value out of range:${s[r]} low: ${t}, high: ${n}`)}function mT(s,t){expect(new Float32Array(s)).toEqual(new Float32Array(t))}function S0(s){for(let t=0;t<s.length;t++){const n=s[t];Array.isArray(n)?S0(n):s[t]=ys(n)}return s}var gT=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",TEST_EPSILON_FLOAT16:I0,expectArraysClose:uT,testEpsilon:_f,expectPromiseToFail:hT,expectArraysEqual:dT,expectNumbersClose:pT,expectValuesInRange:fT,expectArrayBuffersEqual:mT,encodeStrings:S0});/** @license See the LICENSE file. */const T0="3.9.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(){q().set("PROD",!0)}function bT(){q().set("DEBUG",!0)}function xT(){q().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function wT(s){q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(s+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function vT(){R.disposeVariables()}function dr(){return R}function hh(){return R.memory()}function $T(s){return R.profile(s)}function V(s,t){return R.tidy(s,t)}function $e(s){Ps(s).forEach(n=>n.dispose())}function Dt(s){return R.keep(s)}function CT(s){return R.time(s)}function NT(s){return R.setBackend(s)}function kT(){return R.ready()}function IT(){return R.backendName}function ST(s){R.removeBackend(s)}function TT(s){return R.findBackend(s)}function ET(s){return R.findBackendFactory(s)}function Pf(s,t,n=1){return R.registerBackend(s,t,n)}function E0(){return R.backend}function AT(s,t){q().setPlatform(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(s,t){let n=T(s,"a","add"),r=T(t,"b","add");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(Lr,o)}const Y=F({add_:DT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(s,t){let n=T(s,"a","floorDiv"),r=T(t,"b","floorDiv");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(Ko,o)}const dh=F({floorDiv_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(s,t){let n=T(s,"a","div"),r=T(t,"b","div");if([n,r]=lt(n,r),n.dtype==="int32"&&r.dtype==="int32")return dh(n,r);const o={a:n,b:r},a={};return R.runKernel(Wo,o,a)}const pe=F({div_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(s,t){let n=T(s,"a","mul"),r=T(t,"b","mul");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(oa,o)}const L=F({mul_:_T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(s){const t=T(s,"x","abs");if(t.dtype==="complex64"){const n={x:t};return R.runKernel(Li,n)}else{const n={x:t};return R.runKernel(Ti,n)}}const bt=F({abs_:OT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(s){const n={x:T(s,"x","acos")};return R.runKernel(Ao,n)}const zf=F({acos_:LT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(s){const n={x:T(s,"x","acosh")};return R.runKernel(Do,n)}const Mf=F({acosh_:PT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(s){k(Array.isArray(s),()=>"The argument passed to tf.addN() must be a list of tensors"),k(s.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${s.length}`);const t=s.map((o,a)=>T(o,`tensors${a}`,"addN")),n=t[0];t.forEach(o=>{if(o.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!Ae(o.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return R.runKernel(Ei,r)}const A0=F({addN_:zT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(s,t=null,n=!1){const o={x:T(s,"x","all","bool")},a={axis:t,keepDims:n};return R.runKernel(Kc,o,a)}const ph=F({all_:MT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(s,t=null,n=!1){const o={x:T(s,"x","any","bool")},a={axis:t,keepDims:n};return R.runKernel(Xc,o,a)}const Bl=F({any_:BT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(s,t=0){const r={x:T(s,"x","argMax")},o={axis:t};return R.runKernel(Ai,r,o)}const qr=F({argMax_:VT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(s,t=0){const r={x:T(s,"x","argMin")},o={axis:t};return R.runKernel(Di,r,o)}const Bf=F({argMin_:WT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(s){const n={x:T(s,"x","asin")};return R.runKernel(Ro,n)}const Vf=F({asin_:UT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(s){const n={x:T(s,"x","asinh")};return R.runKernel(Fo,n)}const Wf=F({asinh_:GT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(s){const n={x:T(s,"x","atan")};return R.runKernel(_o,n)}const Uf=F({atan_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(s,t){let n=T(s,"a","atan2"),r=T(t,"b","atan2");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(Lo,o)}const Gf=F({atan2_:jT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(s){const n={x:T(s,"x","atanh")};return R.runKernel(Oo,n)}const Hf=F({atanh_:qT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vl(s,t,n,r,o="NHWC",a){const i=s[3],l=[...t,i],c=Vs(o);return Rt(s,l,n,a,r,null,null,c)}function Wn(s,t,n,r,o,a,i="channelsLast"){const[l,c]=fh(t);let u;if(i==="channelsLast")u=[l,c,s[3],s[3]];else if(i==="channelsFirst")u=[l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${i}`);return Rt(s,u,n,r,o,a,!1,i)}function Bs(s,t,n,r,o,a,i="NDHWC"){const[l,c,u]=qf(t);let h,d;if(i==="NDHWC")d="channelsLast",h=[l,c,u,s[4],s[4]];else if(i==="NCDHW")d="channelsFirst",h=[l,c,u,s[1],s[1]];else throw new Error(`Unknown dataFormat ${i}`);return pr(s,h,n,r,o,!1,d,a)}function Rt(s,t,n,r,o,a,i=!1,l="channelsLast"){let[c,u,h,d]=[-1,-1,-1,-1];if(l==="channelsLast")[c,u,h,d]=s;else if(l==="channelsFirst")[c,d,u,h]=s;else throw new Error(`Unknown dataFormat ${l}`);const[p,f,,m]=t,[g,y]=fh(n),[b,x]=fh(r),w=Oa(p,b),v=Oa(f,x),{padInfo:C,outHeight:I,outWidth:N}=YT(o,u,h,g,y,w,v,a,l),S=i?m*d:m;let E;return l==="channelsFirst"?E=[c,S,I,N]:l==="channelsLast"&&(E=[c,I,N,S]),{batchSize:c,dataFormat:l,inHeight:u,inWidth:h,inChannels:d,outHeight:I,outWidth:N,outChannels:S,padInfo:C,strideHeight:g,strideWidth:y,filterHeight:p,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:s,outShape:E,filterShape:t}}function pr(s,t,n,r,o,a=!1,i="channelsLast",l){let[c,u,h,d,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[c,u,h,d,p]=s;else if(i==="channelsFirst")[c,p,u,h,d]=s;else throw new Error(`Unknown dataFormat ${i}`);const[f,m,g,,y]=t,[b,x,w]=qf(n),[v,C,I]=qf(r),N=Oa(f,v),S=Oa(m,C),E=Oa(g,I),{padInfo:A,outDepth:_,outHeight:D,outWidth:O}=ZT(o,u,h,d,b,x,w,N,S,E,l),B=a?y*p:y;let W;return i==="channelsFirst"?W=[c,B,_,D,O]:i==="channelsLast"&&(W=[c,_,D,O,B]),{batchSize:c,dataFormat:i,inDepth:u,inHeight:h,inWidth:d,inChannels:p,outDepth:_,outHeight:D,outWidth:O,outChannels:B,padInfo:A,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:E,dilationDepth:v,dilationHeight:C,dilationWidth:I,inShape:s,outShape:W,filterShape:t}}function KT(s,t,n,r,o){r==null&&(r=jf(s,t,n));const a=s[0],i=s[1],l=Kr((a-t+2*r)/n+1,o),c=Kr((i-t+2*r)/n+1,o);return[l,c]}function XT(s,t,n,r,o,a){o==null&&(o=jf(s,t,r));const i=s[0],l=s[1],c=s[2],u=Kr((i-t+2*o)/r+1,a),h=Kr((l-t+2*o)/r+1,a),d=Kr((c-t+2*o)/r+1,a);return[u,h,d,n]}function jf(s,t,n,r=1){const o=Oa(t,r);return Math.floor((s[0]*(n-1)-n+o)/2)}function fh(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function qf(s){return typeof s=="number"?[s,s,s]:s}function Oa(s,t){return t<=1?s:s+(s-1)*(t-1)}function YT(s,t,n,r,o,a,i,l,c){let u,h,d;if(typeof s=="number"){u={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=KT([t,n],a,r,s,l);h=f[0],d=f[1]}else if(s==="same"){h=Math.ceil(t/r),d=Math.ceil(n/o);const p=Math.max(0,(h-1)*r+a-t),f=Math.max(0,(d-1)*o+i-n),m=Math.floor(p/2),g=p-m,y=Math.floor(f/2),b=f-y;u={top:m,bottom:g,left:y,right:b,type:"SAME"}}else if(s==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),d=Math.ceil((n-i+1)/o);else if(typeof s=="object"){const p=c==="channelsLast"?s[1][0]:s[2][0],f=c==="channelsLast"?s[1][1]:s[2][1],m=c==="channelsLast"?s[2][0]:s[3][0],g=c==="channelsLast"?s[2][1]:s[3][1];u={top:p,bottom:f,left:m,right:g,type:p===0&&f===0&&m===0&&g===0?"VALID":"EXPLICIT"},h=Kr((t-a+p+f)/r+1,l),d=Kr((n-i+m+g)/o+1,l)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:u,outHeight:h,outWidth:d}}function ZT(s,t,n,r,o,a,i,l,c,u,h){let d,p,f,m;if(typeof s=="number"){d={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const y=XT([t,n,r,1],l,1,o,s,h);p=y[0],f=y[1],m=y[2]}else if(s==="same"){p=Math.ceil(t/o),f=Math.ceil(n/a),m=Math.ceil(r/i);const g=(p-1)*o+l-t,y=(f-1)*a+c-n,b=(m-1)*i+u-r,x=Math.floor(g/2),w=g-x,v=Math.floor(y/2),C=y-v,I=Math.floor(b/2),N=b-I;d={top:v,bottom:C,left:I,right:N,front:x,back:w,type:"SAME"}}else if(s==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-l+1)/o),f=Math.ceil((n-c+1)/a),m=Math.ceil((r-u+1)/i);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:d,outDepth:p,outHeight:f,outWidth:m}}function Kr(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function fr(s){const[t,n,r]=fh(s);return t===1&&n===1&&r===1}function Wt(s,t){return fr(s)||fr(t)}function Vs(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(s,t){const r={x:T(s,"x","reshape","string_or_numeric")},o={shape:t};return R.runKernel(ml,r,o)}const P=F({reshape_:JT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(s,t,n,r,o){const a=T(s,"x","avgPool","float32"),i=1;k(Wt(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let l=a,c=!1;a.rank===3&&(c=!0,l=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),o!=null&&k(Ct(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o};let d=R.runKernel(Ri,u,h);return d=ne(d,a.dtype),c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Wl=F({avgPool_:QT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(s,t,n,r,o,a="NDHWC"){const i=T(s,"x","avgPool3d","float32");let l=i,c=!1;i.rank===4&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),k(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),o!=null&&k(Ct(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a};let d=R.runKernel(Fi,u,h);return d=ne(d,l.dtype),c?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Kf=F({avgPool3d_:e2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(s,t=0){k(s.length>=1,()=>"Pass at least one tensor to concat");const n=zl(s,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Ms(n[0]);const r=n,o={axis:t};return R.runKernel(Pi,r,o)}const ft=F({concat_:t2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(s){const n={x:T(s,"x","sigmoid")};return R.runKernel(ga,n)}const ns=F({sigmoid_:n2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(s,t,n){const r=T(s,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const o={x:r},a={begin:t,size:n};return R.runKernel(wl,o,a)}const Fe=F({slice_:s2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(s){const n={x:T(s,"x","tanh")};return R.runKernel($a,n)}const Xr=F({tanh_:r2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(s,t,n,r,o,a){const i=T(s,"forgetBias","basicLSTMCell"),l=T(t,"lstmKernel","basicLSTMCell"),c=T(n,"lstmBias","basicLSTMCell"),u=T(r,"data","basicLSTMCell"),h=T(o,"c","basicLSTMCell"),d=T(a,"h","basicLSTMCell"),p=ft([u,d],1),f=Ie(p,l),m=Y(f,c),g=m.shape[0],y=m.shape[1]/4,b=[g,y],x=Fe(m,[0,0],b),w=Fe(m,[0,y],b),v=Fe(m,[0,y*2],b),C=Fe(m,[0,y*3],b),I=Y(L(ns(x),Xr(w)),L(h,ns(Y(i,v)))),N=L(Xr(I),ns(C));return[I,N]}const a2=F({basicLSTMCell_:o2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(s,t,n){const r=T(s,"x","batchToSpaceND"),o=t.reduce((l,c)=>l*c);k(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),k(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),k(r.shape[0]%o==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);const a={x:r},i={blockShape:t,crops:n};return R.runKernel(Oi,a,i)}const Ul=F({batchToSpaceND_:i2});function l2(s){let t;return s.rank===0||s.rank===1?t=P(s,[1,1,1,s.size]):s.rank===2?t=P(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(s,t,n,r,o,a){a==null&&(a=.001);const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;r!=null&&(h=T(r,"offset","batchNorm")),k(l.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(u==null||l.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:l2(i),scale:u,offset:h,mean:l,variance:c},f={varianceEpsilon:a},m=R.runKernel(ji,p,f);return P(m,i.shape)}const Yr=F({batchNorm_:c2});function u2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),k(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&k(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),Yr(i,l,c,h,u,a)}const D0=F({batchNorm2d_:u2});function h2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),k(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&k(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),Yr(i,l,c,h,u,a)}const R0=F({batchNorm3d_:h2});function d2(s,t,n,r,o,a){const i=T(s,"x","batchNorm"),l=T(t,"mean","batchNorm"),c=T(n,"variance","batchNorm");let u;o!=null&&(u=T(o,"scale","batchNorm"));let h;return r!=null&&(h=T(r,"offset","batchNorm")),k(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&k(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),Yr(i,l,c,h,u,a)}const F0=F({batchNorm4d_:d2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(s,t,n){const r=T(s,"x","bincount"),o=T(t,"weights","bincount");k(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),k(n>=0,()=>`size must be non-negative, but got ${n}.`),k(o.size===r.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:n};return R.runKernel(Jc,a,i)}const Xf=F({bincount_:p2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(s,t){const n=T(s,"s0","broadcastArgs","int32"),r=T(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const o={s0:n,s1:r};return R.runKernel(Zp,o)}const _0=F({broadcastArgs_:f2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(s,t){let n=T(s,"broadcastTo","x");const r=n.shape;if(t.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=P(n,u)}const o=n.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(o[u]===t[u])a[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(a.map((u,h)=>u>1?h:-1).filter(u=>u>=0).length===0)return Ms(n);const l={x:n},c={reps:a};return R.runKernel(Ca,l,c)}const La=F({broadcastTo_:m2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(s){const n={x:T(s,"x","ceil")};return R.runKernel(zo,n)}const Yf=F({ceil_:g2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(s,t,n){const r=T(s,"x","clipByValue");k(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const o={x:r},a={clipValueMin:t,clipValueMax:n};return R.runKernel(Mo,o,a)}const rn=F({clipByValue_:y2});function b2(s){return ft(s,0)}const O0=F({concat1d_:b2});function x2(s,t){return ft(s,t)}const L0=F({concat2d_:x2});function w2(s,t){return ft(s,t)}const P0=F({concat3d_:w2});function v2(s,t){return ft(s,t)}const z0=F({concat4d_:v2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(s,t,n,r,o="NHWC",a=[1,1],i){const l=T(s,"x","conv2d"),c=T(t,"filter","conv2d");let u=l,h=!1;l.rank===3&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),k(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),i!=null&&k(Ct(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d=o==="NHWC"?u.shape[3]:u.shape[1];k(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),k(Wt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const p={x:u,filter:c},f={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},m=R.runKernel(zi,p,f);return h?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ws=F({conv2d_:$2});function C2(s,t,n,r,o="NWC",a=1,i){const l=T(s,"x","conv1d"),c=T(t,"filter","conv1d");let u=l,h=!1;l.rank===2&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1]])),k(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),k(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),i!=null&&k(Ct(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),k(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),k(Wt(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),k(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const d=P(c,[1,c.shape[0],c.shape[1],c.shape[2]]),p=P(u,[u.shape[0],1,u.shape[1],u.shape[2]]),y=Ws(p,d,[1,n],r,"NHWC",[1,a],i);return h?P(y,[y.shape[2],y.shape[3]]):P(y,[y.shape[0],y.shape[2],y.shape[3]])}const mh=F({conv1d_:C2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N2(s,t,n,r,o,a="NHWC",i){k(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let l=s,c=t,u=!1;t.rank===3&&(u=!0,c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,s[0],s[1],s[2]]),k(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),k(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),k(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const h=a==="NHWC"?l[3]:l[1],d=a==="NHWC"?c.shape[3]:c.shape[1];k(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),k(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),i!=null&&k(Ct(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const p={dy:c,filter:n},f={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,inputShape:l},m=R.runKernel(Mi,p,f);return u?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Zf=F({conv2DBackpropInput_:N2});function k2(s,t,n,r,o,a){const i=T(s,"x","conv2dTranspose"),l=T(t,"filter","conv2dTranspose");return Zf(n,i,l,r,o,"NHWC",a)}const gh=F({conv2dTranspose_:k2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(s,t,n,r,o="NDHWC",a=[1,1,1]){const i=T(s,"x","conv3d"),l=T(t,"filter","conv3d");let c=i,u=!1;i.rank===4&&(u=!0,c=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),k(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),k(c.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${l.shape[3]}.`),k(Wt(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),k(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const h={x:c,filter:l},d={strides:n,pad:r,dataFormat:o,dilations:a},p=R.runKernel(Bi,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Jf=F({conv3d_:I2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(s,t,n,r,o){k(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,i=t,l=!1;t.rank===4&&(l=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,s[0],s[1],s[2],s[3]]);const c=a[4],u=i.shape[4];k(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),k(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),k(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),k(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`),k(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const h={dy:i,filter:n},d={pad:o,strides:r,inputShape:a},p=R.runKernel(nu,h,d);return l?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const M0=F({conv3DBackpropInput_:S2});function T2(s,t,n,r,o){const a=T(s,"x","conv3dTranspose"),i=T(t,"filter","conv3dTranspose");return M0(n,a,i,r,o)}const B0=F({conv3dTranspose_:T2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(s){const n={x:T(s,"x","cos")};return R.runKernel(Bo,n)}const Gl=F({cos_:E2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(s){const n={x:T(s,"x","cosh")};return R.runKernel(Vo,n)}const yh=F({cosh_:A2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(s,t=0,n=!1,r=!1){const a={x:T(s,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return R.runKernel(Vi,a,i)}const bh=F({cumsum_:D2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(s,t,n,r=!1){const o=T(s,"x","denseBincount"),a=T(t,"weights","denseBincount");k(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),k(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),k(n>=0,()=>`size must be non-negative, but got ${n}.`),k(a.size===o.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${a.shape}.`);const i={x:o,weights:a},l={size:n,binaryOutput:r};return R.runKernel(ru,i,l)}const V0=F({denseBincount_:R2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(s,t,n="NHWC"){const r=T(s,"x","depthToSpace"),o=n==="NHWC"?r.shape[1]:r.shape[2],a=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];k(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${r.shape}`),k(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${r.shape}`),k(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const l={x:r},c={blockSize:t,dataFormat:n};return R.runKernel(ou,l,c)}const Qf=F({depthToSpace_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(s,t,n,r,o="NHWC",a=[1,1],i){const l=T(s,"x","depthwiseConv2d"),c=T(t,"filter","depthwiseConv2d");let u=l,h=!1;l.rank===3&&(h=!0,u=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),k(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),k(u.shape[3]===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),i!=null&&k(Ct(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d={x:u,filter:c},p={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i},f=R.runKernel(Wi,d,p);return h?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Pa=F({depthwiseConv2d_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(s){const n={x:T(s,"x","diag")};return R.runKernel(lu,n)}const L2=F({diag_:O2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(s,t,n,r,o=[1,1],a="NHWC"){const i=T(s,"x","dilation2d"),l=T(t,"filter","dilation2d");k(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),k(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),k(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let c=i,u=!1;i.rank===3&&(c=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const h={x:c,filter:l},d={strides:n,pad:r,dilations:o},p=R.runKernel(Ui,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const em=F({dilation2d_:P2});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(s,t){const n=s.length,r=[];for(let o=0;o<n;o++){const a=n-1-o,i=s[a]||1;(t[t.length-1-o]||1)>1&&i===1&&r.unshift(a)}return r}function It(s,t){const n=[];for(let r=0;r<t.length;r++){const o=s[s.length-r-1],a=t.length-r-1,i=t[a];(o==null||o===1&&i>1)&&n.unshift(a)}return n}function Te(s,t){const n=[],r=Math.max(s.length,t.length);for(let o=0;o<r;o++){let a=s[s.length-o-1];a==null&&(a=1);let i=t[t.length-o-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){const l=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(l)}else n.unshift(a)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z2(s,t){let n=T(s,"a","equal","string_or_numeric"),r=T(t,"b","equal","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Gi,o)}const gn=F({equal_:z2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M2(s,t,n){const r=T(t,"a","where"),o=T(n,"b","where"),a=T(s,"condition","where","bool"),i=Te(Te(a.shape,r.shape),o.shape),l=La(a,i),c=La(r,i),u=La(o,i),h={condition:l,t:c,e:u};return R.runKernel(xl,h)}const Kt=F({where_:M2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(s){const n={x:T(s,"x","zerosLike")};return R.runKernel(Tl,n)}const _e=F({zerosLike_:B2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(s,t){let n=T(s,"a","div"),r=T(t,"b","div");[n,r]=lt(n,r);const o=pe(n,r),a=_e(o),i=gn(r,a);return Kt(i,a,o)}const tm=F({divNoNan_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(s,t){const n=T(s,"t1","dot"),r=T(t,"t2","dot");k((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const o=n.rank===1?n.size:n.shape[1],a=r.rank===1?r.size:r.shape[0];if(k(o===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${a}.`),n.rank===1&&r.rank===1){const i=P(n,[1,-1]),l=P(r,[-1,1]),c=Ie(i,l);return P(c,[])}else if(n.rank===1&&r.rank===2){const i=P(n,[1,-1]),l=P(r,[r.shape[0],r.shape[1]]),c=Ie(i,l);return P(c,[c.size])}else if(n.rank===2&&r.rank===1){const i=P(r,[-1,1]),l=Ie(n,i);return P(l,[l.size])}else{const i=P(r,[r.shape[0],r.shape[1]]);return Ie(n,i)}}const W0=F({dot_:W2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(s,...t){const n=t.map((o,a)=>T(o,`tensors${a}`,"einsum")),r={equation:s};return R.runKernel(hu,n,r)}const U0=F({einsum_:U2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(s){const n={x:T(s,"x","elu")};return R.runKernel(Uo,n)}const Ma=F({elu_:G2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(s){let t=T(s,"x","erf");k(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ne(t,"float32"));const n={x:t};return R.runKernel(Go,n)}const nm=F({erf_:H2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(s){const n={x:T(s,"x","exp")};return R.runKernel(Ho,n)}const yn=F({exp_:j2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(s,t=0){const n=T(s,"x","expandDims","string_or_numeric");k(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},o={dim:t};return R.runKernel(Hi,r,o)}const on=F({expandDims_:q2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(s){const n={x:T(s,"x","expm1")};return R.runKernel(jo,n)}const sm=F({expm1_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(s,t){const n=T(s,"x","tile","string_or_numeric");k(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},o={reps:t};return R.runKernel(Ca,r,o)}const An=F({tile_:X2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(s,t,n,r="float32"){t==null&&(t=s);const o=Se([s,t],r),a=s<=t?s:t;for(let l=0;l<a;++l)o.set(1,l,l);const i=P(o.toTensor(),[s,t]);if(n==null)return i;if(n.length===1)return An(on(i,0),[n[0],1,1]);if(n.length===2)return An(on(on(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return An(on(on(on(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const rm=F({eye_:Y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(s,t,n){const r={shape:s,value:t,dtype:n};return R.runKernel(fu,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(s){const n={x:T(s,"x","floor")};return R.runKernel(qo,n)}const Va=F({floor_:Z2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(s,t,n=0,r=0){const o=T(s,"x","gather"),a=T(t,"indices","gather","int32"),i={x:o,indices:a},l={axis:n,batchDims:r};return R.runKernel(qi,i,l)}const Zr=F({gather_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(s,t){let n=T(s,"a","greater","string_or_numeric"),r=T(t,"b","greater","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Ki,o)}const an=F({greater_:Q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(s,t){let n=T(s,"a","greaterEqual","string_or_numeric"),r=T(t,"b","greaterEqual","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Xo,o)}const mr=F({greaterEqual_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(s){const n={input:T(s,"input","imag")};return R.runKernel(bu,n)}const xh=F({imag_:tE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(s){const n={x:T(s,"x","isFinite")};return R.runKernel(Zo,n)}const G0=F({isFinite_:nE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(s){const n={x:T(s,"x","isInf")};return R.runKernel(Jo,n)}const H0=F({isInf_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(s){const n={x:T(s,"x","isNaN")};return R.runKernel(Qo,n)}const om=F({isNaN_:rE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(s,t=.2){const r={x:T(s,"x","leakyRelu")},o={alpha:t};return R.runKernel(Xi,r,o)}const Hl=F({leakyRelu_:oE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(s,t){let n=T(s,"a","less","string_or_numeric"),r=T(t,"b","less","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Yi,o)}const wh=F({less_:aE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(s,t){let n=T(s,"a","lessEqual","string_or_numeric"),r=T(t,"b","lessEqual","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Zi,o)}const gr=F({lessEqual_:iE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(s,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:s,stop:t,num:n};return R.runKernel(xu,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(s,t=5,n=1,r=1,o=.5){const a=T(s,"x","localResponseNormalization");k(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),k(Ct(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,l=!1;a.rank===3&&(l=!0,i=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const c={x:i},u={depthRadius:t,bias:n,alpha:r,beta:o},h=R.runKernel(tl,c,u);return l?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const am=F({localResponseNormalization_:lE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(s){const n={x:T(s,"x","log")};return R.runKernel(ea,n)}const bn=F({log_:cE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(s){const n={x:T(s,"x","log1p")};return R.runKernel(ta,n)}const jl=F({log1p_:uE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(s){return k(ar(s),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=T(t,"x","tf.grad","string_or_numeric"),o=n!=null?T(n,"dy","tf.grad"):null;return R.tidy(()=>{const{value:a,grads:i}=R.gradients(()=>s(r),[r],o);return o!=null&&zt(a.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vh(i),i[0]})}}function dE(s){return k(ar(s),()=>"The f passed in grads(f) must be a function"),(t,n)=>{k(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=zl(t,"args","tf.grads","string_or_numeric"),o=n!=null?T(n,"dy","tf.grads"):null;return R.tidy(()=>{const{value:a,grads:i}=R.gradients(()=>s(...r),r,o);return o!=null&&zt(a.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(i),i})}}function pE(s){return k(ar(s),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{k(t instanceof Pe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),k(n==null||n instanceof Pe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:o}=R.gradients(()=>s(t),[t],n);return vh(r),{grad:r[0],value:o}}}function fE(s){return k(ar(s),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{k(Array.isArray(t)&&t.every(o=>o instanceof Pe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),k(n==null||n instanceof Pe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=R.gradients(()=>s(...t),t,n);return n!=null&&zt(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(r.grads),r}}function q0(s,t){k(ar(s),()=>"The f passed in variableGrads(f) must be a function"),k(t==null||Array.isArray(t)&&t.every(u=>u instanceof Pl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=t!=null;if(!n){t=[];for(const u in R.registeredVariables)t.push(R.registeredVariables[u])}const r=n?t.filter(u=>!u.trainable):null,o=t.length;t=t.filter(u=>u.trainable),k(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const a=!0,{value:i,grads:l}=R.gradients(s,t,null,a);k(l.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const c={};return t.forEach((u,h)=>{l[h]!=null&&(c[u.name]=l[h])}),r!=null&&r.forEach(u=>c[u.name]=null),{value:i,grads:c}}function ws(s){return R.customGrad(s)}function vh(s){if(s.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(s){const n={x:T(s,"x","neg")};return R.runKernel(ll,n)}const rt=F({neg_:mE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(s){const n={x:T(s,"x","softplus")};return R.runKernel(ya,n)}const Jr=F({softplus_:gE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(s){const t=T(s,"x","logSigmoid");return ws(r=>({value:rt(Jr(rt(r))),gradFunc:i=>L(i,ns(rt(r)))}))(t)}const K0=F({logSigmoid_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(s,t=null,n=!1){const o={x:T(s,"x","max")},a={reductionIndices:t,keepDims:n};return R.runKernel(nl,o,a)}const Un=F({max_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(s,t){let n=T(s,"a","sub"),r=T(t,"b","sub");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(wa,o)}const ce=F({sub_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(s,t=null,n=!1){let r=T(s,"x","sum");r.dtype==="bool"&&(r=ne(r,"int32"));const o={x:r},a={axis:t,keepDims:n};return R.runKernel(vl,o,a)}const ue=F({sum_:wE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(s,t=-1){const n=T(s,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ws((o,a)=>{const i=!0,l=Un(o,t,!0),c=ce(o,l),u=ce(ne(c,"float32"),bn(ue(yn(c),t,i)));return a([u]),{value:u,gradFunc:(d,p)=>{const[f]=p,m=!0,g=yn(f);return ce(d,L(ue(d,t,m),g))}}})(n)}const $h=F({logSoftmax_:vE});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(s,t){for(let n=0;n<s.length;++n)if(s[s.length-n-1]!==t-1-n)return!1;return!0}function X0(s,t,n){const r=s.length+t.length,o=[];let a=0,i=0;for(let l=0;l<r;l++)n.indexOf(l)===-1?o.push(s[a++]):o.push(t[i++]);return o}function Ft(s,t){const n=[],r=s.length;for(let a=0;a<r;a++)t.indexOf(a)===-1&&n.push(s[a]);const o=t.map(a=>s[a]);return[n,o]}function mt(s,t){const n=t.map(r=>1);return X0(s,n,t)}function Ut(s,t,n){k(im(t,n),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function gt(s,t){if(im(s,t))return null;const n=[];for(let r=0;r<t;++r)s.indexOf(r)===-1&&n.push(r);return s.forEach(r=>n.push(r)),n}function Wa(s){return s.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function xt(s,t){const n=[];for(let r=t-s;r<t;++r)n.push(r);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(s,t=null,n=!1){const r=T(s,"x","logSumExp"),o=ke(t,r.shape),a=Un(r,o,!0),i=ce(r,a),l=yn(i),c=ue(l,o),u=bn(c),h=Y(P(a,u.shape),u);if(n){const d=mt(h.shape,o);return P(h,d)}return h}const lm=F({logSumExp_:$E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(s,t){const n=T(s,"a","logicalAnd","bool"),r=T(t,"b","logicalAnd","bool");Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(Ji,o)}const Gn=F({logicalAnd_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(s){const n={x:T(s,"x","logicalNot","bool")};return R.runKernel(Qi,n)}const ql=F({logicalNot_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(s,t){const n=T(s,"a","logicalOr","bool"),r=T(t,"b","logicalOr","bool");Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(el,o)}const Ch=F({logicalOr_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(s,t){const n=T(s,"a","logicalXor","bool"),r=T(t,"b","logicalXor","bool");return Te(n.shape,r.shape),Gn(Ch(s,t),ql(Gn(s,t)))}const Y0=F({logicalXor_:IE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(s,t,n,r,o){const a=T(s,"x","maxPool"),i=1;let l=a,c=!1;a.rank===3&&(c=!0,l=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),k(Wt(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),o!=null&&k(Ct(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o},d=R.runKernel(sl,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Kl=F({maxPool_:SE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(s,t=[1,1,1],n,r,o,a="NDHWC"){const i=T(s,"x","maxPool3d");let l=i,c=!1;i.rank===4&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),k(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),o!=null&&k(Ct(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const u={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:o,dataFormat:a},d=R.runKernel(rl,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const cm=F({maxPool3d_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(s,t,n,r,o=!1){const i={x:T(s,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:o},c=R.runKernel(Cu,i,l);return{result:c[0],indexes:c[1]}}const Z0=F({maxPoolWithArgmax_:EE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(s,t){let n=T(s,"a","maximum"),r=T(t,"b","maximum");[n,r]=lt(n,r),n.dtype==="bool"&&(n=ne(n,"int32"),r=ne(r,"int32")),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(na,o)}const vs=F({maximum_:AE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(s,t=null,n=!1){const o={x:T(s,"x","mean")},a={axis:t,keepDims:n};return R.runKernel(ol,o,a)}const ut=F({mean_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(s,t="float32"){if(t==="complex64"){const r=wt(s,"float32"),o=wt(s,"float32");return cr(r,o)}const n=Bt(H(s),t);return R.makeTensor(n,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(s,t="float32"){if(t==="complex64"){const r=xn(s,"float32"),o=wt(s,"float32");return cr(r,o)}const n=Hp(H(s),t);return R.makeTensor(n,s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(s,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(s===void 0)return[];let r=T(s,"x","meshgrid",s instanceof Pe?s.dtype:"float32");if(t===void 0)return[r];let o=T(t,"y","meshgrid",t instanceof Pe?t.dtype:"float32");const a=H(r.shape),i=H(o.shape);return n==="xy"?(r=P(r,[1,-1]),o=P(o,[-1,1]),[Ie(xn([i,1],r.dtype),r),Ie(o,xn([1,a],o.dtype))]):(r=P(r,[-1,1]),o=P(o,[1,-1]),[Ie(r,xn([1,i],r.dtype)),Ie(xn([a,1],o.dtype),o)])}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(s,t=null,n=!1){const o={x:T(s,"x","min")},a={axis:t,keepDims:n};return R.runKernel(al,o,a)}const Xl=F({min_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(s,t){let n=T(s,"a","minimum"),r=T(t,"b","minimum");[n,r]=lt(n,r),n.dtype==="bool"&&(n=ne(n,"int32"),r=ne(r,"int32")),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(sa,o)}const Ua=F({minimum_:_E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(s,t,n){k(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=T(s,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const o=n==="reflect"?1:0;for(let l=0;l<r.rank;l++)k(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(t[l][0]>=0&&t[l][0]<=r.shape[l]-o&&t[l][1]>=0&&t[l][1]<=r.shape[l]-o,()=>`Padding in dimension ${l} cannot be greater than or equal to ${r.shape[l]-o} or less than 0 for input of shape ${r.shape}`);const a={paddings:t,mode:n},i={x:r};return R.runKernel(il,i,a)}const um=F({mirrorPad_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(s,t){let n=T(s,"a","mod"),r=T(t,"b","mod");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(ra,o)}const hm=F({mod_:LE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(s){const t=T(s,"x","square"),n={};return R.runKernel("Square",{x:t},n)}const We=F({square_:PE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(s,t=null,n=!1){s=T(s,"x","moments");const r=ke(t,s.shape),o=ut(s,r,n);let a=o.shape;n||(a=mt(o.shape,r));const i=We(ce(ne(s,"float32"),P(o,a))),l=ut(i,r,n);return{mean:o,variance:l}}const Nh=F({moments_:zE});function ME(s,t,n,r){const o=T(t,"data","multiRNNCell"),a=zl(n,"c","multiRNNCell"),i=zl(r,"h","multiRNNCell");let l=o;const c=[];for(let d=0;d<s.length;d++){const p=s[d](l,a[d],i[d]);c.push(p[0]),c.push(p[1]),l=p[1]}const u=[],h=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),h.push(c[d+1]);return[u,h]}const BE=F({multiRNNCell_:ME});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(s,t,n,r=!1){const o=T(s,"logits","multinomial"),a=o.size,i=o.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const c={logits:i===1?P(o,[1,-1]):o},u={numSamples:t,seed:n,normalized:r},h=R.runKernel(Nu,c,u);return i===1?P(h,[h.size]):h}const J0=F({multinomial_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(s,t){let n=T(s,"a","notEqual","string_or_numeric"),r=T(t,"b","notEqual","string_or_numeric");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r};return R.runKernel(cl,o)}const Qr=F({notEqual_:WE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(s){const n={x:T(s,"x","onesLike")};return R.runKernel(ul,n)}const wn=F({onesLike_:UE});function GE(s,t){const n=T(s,"v1","outerProduct"),r=T(t,"v2","outerProduct");k(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const o=P(n,[-1,1]),a=P(r,[1,-1]);return Ie(o,a)}const HE=F({outerProduct_:GE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(s,t,n=0){const r=T(s,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},a={x:r};return R.runKernel(pl,a,o)}const Us=F({pad_:jE});function qE(s,t,n=0){return k(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Us(s,[t],n)}const KE=F({pad1d_:qE});function XE(s,t,n=0){return k(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Us(s,t,n)}const YE=F({pad2d_:XE});function ZE(s,t,n=0){return k(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Us(s,t,n)}const JE=F({pad3d_:ZE});function QE(s,t,n=0){return k(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Us(s,t,n)}const eA=F({pad4d_:QE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(s,t,n){const r=T(s,"x","spaceToBatchND");k(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),k(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),k(r.shape.reduce((i,l,c)=>c>0&&c<=t.length?i&&(l+n[c-1][0]+n[c-1][1])%t[c-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const o={x:r},a={blockShape:t,paddings:n};return R.runKernel($l,o,a)}const Yl=F({spaceToBatchND_:tA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(s,t,n,r,o,a){o==null&&(o=[1,1]),a==null&&(a=1),r===0&&(r="valid");const i=T(s,"x","maxPool");let l=i,c=!1;i.rank===3&&(c=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(Wt(a,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${o}'`);const u=Wn(l.shape,t,a,o,r),h=[u.dilationHeight,u.dilationWidth];let d;r==="same"?d=rA([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=sA([u.inHeight,u.inWidth],h,d),g=p?r:"valid",y=p?l:Yl(l,h,f),x=(n==="avg"?()=>Wl(y,t,a,g):()=>Kl(y,t,a,g))(),w=p?x:Ul(x,h,m);return c?P(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function sA(s,t,n){const r=n.map(h=>h[0]),o=n.map(h=>h[1]),a=s.concat(r,o),i=t.map((h,d)=>(h-a[d]%h)%h),l=o.map((h,d)=>h+i[d]),c=t.map((h,d)=>[r[d],l[d]]),u=t.map((h,d)=>[0,i[d]]);return[c,u]}function rA(s,t){const r=s.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),o=r.map(i=>Math.floor(i/2)),a=r.map((i,l)=>i-o[l]);return r.map((i,l)=>[o[l],a[l]])}const Q0=F({pool_:nA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(s,t){let n=T(s,"base","pow"),r=T(t,"exp","pow");[n,r]=lt(n,r);const o={a:n,b:r};return R.runKernel(aa,o)}const Gs=F({pow_:oA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(s,t){const n=T(s,"x","prelu"),r=T(t,"alpha","prelu"),o={x:n,alpha:r};return R.runKernel(fl,o)}const Zl=F({prelu_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(s,t=null,n=!1){let r=T(s,"x","prod");r.dtype==="bool"&&(r=ne(r,"int32"));const o={x:r},a={axis:t,keepDims:n};return R.runKernel(Tu,o,a)}const kh=F({prod_:iA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(s,t,n){const r=H(s);let o=null;if(n==null||n==="float32")o=new Float32Array(r);else if(n==="int32")o=new Int32Array(r);else if(n==="bool")o=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<r;a++)o[a]=t();return R.makeTensor(o,s,n)}const cA=F({rand_:lA});var ew={exports:{}};(function(s){(function(t,n,r){function o(c){var u=this,h=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(c),u.s0<0&&(u.s0+=1),u.s1-=h(c),u.s1<0&&(u.s1+=1),u.s2-=h(c),u.s2<0&&(u.s2+=1),h=null}function a(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var h=new o(c),d=u&&u.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&a(d,h),p.state=function(){return a(h,{})}),p}function l(){var c=4022871197,u=function(h){h=h.toString();for(var d=0;d<h.length;d++){c+=h.charCodeAt(d);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(Ue,s,!1)})(ew);var tw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(Ue,s,!1)})(tw);var nw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,h==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(Ue,s,!1)})(nw);var sw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.x,d=c.i,p,f;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,c.i=d+1&7,f};function u(h,d){var p,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,p=0;p<d.length;++p)f[p&7]=f[p&7]<<15^d.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8&&(f[7]=-1),h.x=f,h.i=0,p=256;p>0;--p)h.next()}u(c,l)}function a(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.x&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(Ue,s,!1)})(sw);var rw={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.w,d=c.X,p=c.i,f,m;return c.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,c.i=p,m+(h^h>>>16)|0};function u(h,d){var p,f,m,g,y,b=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=b[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],p=b[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,b[m]=f^p;h.w=y,h.X=b,h.i=m}u(c,l)}function a(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.X&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(Ue,s,!1)})(rw);var ow={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.b,p=c.c,f=c.d,m=c.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,c.b=d=d<<20^d>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)c.b^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(Ue,s,!1)})(ow);var aw={exports:{}};(function(s){(function(t,n){var r=this,o=256,a=6,i=52,l="random",c=n.pow(o,a),u=n.pow(2,i),h=u*2,d=o-1,p;function f(v,C,I){var N=[];C=C==!0?{entropy:!0}:C||{};var S=b(y(C.entropy?[v,w(t)]:v==null?x():v,3),N),E=new m(N),A=function(){for(var _=E.g(a),D=c,O=0;_<u;)_=(_+O)*o,D*=o,O=E.g(1);for(;_>=h;)_/=2,D/=2,O>>>=1;return(_+O)/D};return A.int32=function(){return E.g(4)|0},A.quick=function(){return E.g(4)/4294967296},A.double=A,b(w(E.S),t),(C.pass||I||function(_,D,O,B){return B&&(B.S&&g(B,E),_.state=function(){return g(E,{})}),O?(n[l]=_,D):_})(A,S,"global"in C?C.global:this==n,C.state)}n["seed"+l]=f;function m(v){var C,I=v.length,N=this,S=0,E=N.i=N.j=0,A=N.S=[];for(I||(v=[I++]);S<o;)A[S]=S++;for(S=0;S<o;S++)A[S]=A[E=d&E+v[S%I]+(C=A[S])],A[E]=C;(N.g=function(_){for(var D,O=0,B=N.i,W=N.j,M=N.S;_--;)D=M[B=d&B+1],O=O*o+M[d&(M[B]=M[W=d&W+D])+(M[W]=D)];return N.i=B,N.j=W,O})(o)}function g(v,C){return C.i=v.i,C.j=v.j,C.S=v.S.slice(),C}function y(v,C){var I=[],N=typeof v,S;if(C&&N=="object")for(S in v)try{I.push(y(v[S],C-1))}catch{}return I.length?I:N=="string"?v:v+"\0"}function b(v,C){for(var I=v+"",N,S=0;S<I.length;)C[d&S]=d&(N^=C[d&S]*19)+I.charCodeAt(S++);return w(C)}function x(){try{var v;return p&&(v=p.randomBytes)?v=v(o):(v=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(v)),w(v)}catch{var C=r.navigator,I=C&&C.plugins;return[+new Date,r,I,r.screen,w(t)]}}function w(v){return String.fromCharCode.apply(0,v)}if(b(n.random(),t),s.exports){s.exports=f;try{p=require("crypto")}catch{}}})([],Math)})(aw);var uA=ew.exports,hA=tw.exports,dA=nw.exports,pA=sw.exports,fA=rw.exports,mA=ow.exports,eo=aw.exports;eo.alea=uA;eo.xor128=hA;eo.xorwow=dA;eo.xorshift7=pA;eo.xor4096=fA;eo.tychei=mA;var Ga=eo;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dm{constructor(t,n,r,o,a){this.mean=t,this.stdDev=n,this.dtype=r,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=a||Math.random();this.random=Ga.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let t,n,r=!1;for(;!r;){let o,a,i;do o=2*this.random()-1,a=2*this.random()-1,i=o*o+a*a;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*l,n=this.mean+this.stdDev*a*l,(!this.truncated||this.isValidTruncated(t))&&(r=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class gA{constructor(t,n,r,o){this.alpha=t,this.beta=1/n,this.dtype=r;const a=o||Math.random();this.randu=Ga.alea(a.toString()),this.randn=new dm(0,1,r,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,n,r,o,a,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,t=o*o,n=1-.331*t*t,r=.5*t+this.d*(1-i+Math.log(i)),a=this.randu(),a<n||Math.log(a)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class yA{constructor(t=0,n=1,r,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=n-t,this.dtype=r,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${n} <= 1 and dtype is not float`);this.random=Ga.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(s,t,n=1,r="float32",o){if(n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const a=new gA(t,n,r,o),i=Se(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const xA=F({randomGamma_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(s,t=0,n=1,r,o){if(r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const a=new dm(t,n,r,!1,o),i=Se(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const iw=F({randomNormal_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(s,t=0,n=1,r="float32",o){const a=Se(s,r),i=new yA(t,n,null,o);for(let l=0;l<a.values.length;l++)a.values[l]=i.nextValue();return a.toTensor()}const Ha=F({randomUniform_:vA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(s,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");const o={start:s,stop:t,step:n,dtype:r};return R.runKernel(Eu,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(s){const n={input:T(s,"input","real")};return R.runKernel(Au,n)}const Jl=F({real_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(s){const n={x:T(s,"x","reciprocal")};return R.runKernel(ia,n)}const pm=F({reciprocal_:CA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(s){const n={x:T(s,"x","relu")};return R.runKernel(la,n)}const ss=F({relu_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(s){const n={x:T(s,"x","relu6")};return R.runKernel(ca,n)}const Ih=F({relu6_:kA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(s,t){const r={x:T(s,"x","reverse")},o={dims:t};return R.runKernel(bl,r,o)}const vn=F({reverse_:IA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(s){const t=T(s,"x","reverse");return k(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),vn(t,0)}const TA=F({reverse1d_:SA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(s,t){const n=T(s,"x","reverse");return k(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),vn(n,t)}const AA=F({reverse2d_:EA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(s,t){const n=T(s,"x","reverse");return k(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),vn(n,t)}const RA=F({reverse3d_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(s,t){const n=T(s,"x","reverse");return k(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),vn(n,t)}const _A=F({reverse4d_:FA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(s){const n={x:T(s,"x","round")};return R.runKernel(ua,n)}const Sh=F({round_:OA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(s){const n={x:T(s,"x","rsqrt")};return R.runKernel(ha,n)}const Th=F({rsqrt_:LA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(s,t){if((Mt(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Mt(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ur(s,[],[],t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(s){const n={x:T(s,"x","selu")};return R.runKernel(da,n)}const Eh=F({selu_:PA});function zA(s,t,n,r,o,a=[1,1],i="NHWC"){const l=T(s,"x","separableConv2d"),c=T(t,"depthwiseFilter","separableConv2d"),u=T(n,"pointwiseFilter","separableConv2d");let h=l,d=!1;if(l.rank===3&&(d=!0,h=P(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),k(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),k(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),k(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const p=c.shape[2],f=c.shape[3];k(u.shape[2]===p*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`);const m=Pa(h,c,r,o,i,a),y=Ws(m,u,1,"valid",i);return d?P(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const fm=F({separableConv2d_:zA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function MA(s,t){const n=T(s,"x","setdiff1d"),r=T(t,"y","setdiff1d");k(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),k(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),k(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),a=await r.data(),i=new Set(a);let l=0;for(let h=0;h<o.length;h++)i.has(o[h])||l++;const c=new kt([l],n.dtype),u=new kt([l],"int32");for(let h=0,d=0;h<o.length;h++)i.has(o[h])||(c.values[d]=o[h],u.values[d]=h,d++);return[c.toTensor(),u.toTensor()]}const lw=MA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(s){const n={x:T(s,"x","sign")};return R.runKernel(ma,n)}const mm=F({sign_:BA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(s){const n={x:T(s,"x","sin")};return R.runKernel(pa,n)}const Ah=F({sin_:VA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(s){const n={x:T(s,"x","sinh")};return R.runKernel(fa,n)}const Dh=F({sinh_:WA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(s,t,n){const r=T(s,"x","slice1d");return k(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Fe(r,[t],[n])}const Rh=F({slice1d_:UA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(s,t,n){const r=T(s,"x","slice2d");return k(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}const gm=F({slice2d_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(s,t,n){const r=T(s,"x","slice3d");return k(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}const Fh=F({slice3d_:HA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(s,t,n){const r=T(s,"x","slice4d");return k(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Fe(r,t,n)}const Ql=F({slice4d_:jA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(s,t=-1){const n=T(s,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},o={dim:t};return R.runKernel(Nl,r,o)}const ec=F({softmax_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(s){k(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return R.runKernel(pu,t)}const tc=F({fft_:KA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(s){k(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return R.runKernel(yu,t)}const qa=F({ifft_:XA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(s){const t=s.shape[s.shape.length-1],n=s.size/t;let r;if(t<=2){const o=P(s,[n,t]);r=qa(o)}else{const o=[n,2*(t-1)],a=P(Jl(s),[n,t]),i=P(xh(s),[n,t]),l=vn(Fe(a,[0,1],[n,t-2]),1),c=L(vn(Fe(i,[0,1],[n,t-2]),1),me(-1)),u=ft([a,l],1),h=ft([i,c],1),d=P(cr(u,h),[o[0],o[1]]);r=qa(d)}if(r=Jl(r),s.rank===3&&s.shape[0]!==0){const o=r,a=s.shape[0];r=P(r,[a,r.shape[0]/a,r.shape[1]]),o.dispose()}return r}const _h=F({irfft_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(s,t,n=0){const o={x:T(s,"x","split")},a={numOrSizeSplits:t,axis:n};return R.runKernel(Cl,o,a)}const ln=F({split_:ZA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(s,t){k(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let n=s.shape[s.shape.length-1];const r=s.size/n;let o;if(t!=null&&t<n){const m=s.shape.map(y=>0),g=s.shape.map(y=>y);g[s.shape.length-1]=t,o=Fe(s,m,g),n=t}else if(t!=null&&t>n){const m=s.shape.map(g=>g);m[s.shape.length-1]=t-n,o=ft([s,wt(m)],s.shape.length-1),n=t}else o=s;const a=_e(o),i=P(cr(o,a),[r,n]),l=tc(i),c=Math.floor(n/2)+1,u=Jl(l),h=xh(l),d=ln(u,[c,n-c],u.shape.length-1),p=ln(h,[c,n-c],h.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=c,P(cr(d[0],p[0]),f)}const nc=F({rfft_:JA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA(s){const n={x:T(s,"x","sqrt")};return R.runKernel(ba,n)}const Gt=F({sqrt_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(s,t){let n=T(s,"a","squaredDifference"),r=T(t,"b","squaredDifference");[n,r]=lt(n,r),Te(n.shape,r.shape);const o={a:n,b:r},a={};return R.runKernel(xa,o,a)}const Oh=F({squaredDifference_:eD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(s,t){const n=T(s,"x","squeeze");return P(n,Os(n.shape,t).newShape)}const $s=F({squeeze_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(s,t=0){const n=zl(s,"tensors","stack","string_or_numeric");k(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&k(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,o={axis:t};return R.runKernel(dl,r,o)}const $n=F({stack_:nD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(s,t=0){const r={x:T(s,"x","step")},o={alpha:t};return R.runKernel(Na,r,o)}const Ka=F({step_:sD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(s,t,n,r,o=0,a=0,i=0,l=0,c=0){const h={x:T(s,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:o,endMask:a,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:c};return R.runKernel(Bu,h,d)}const ym=F({stridedSlice_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(s){const n={x:T(s,"x","tan")};return R.runKernel(va,n)}const bm=F({tan_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(s,t){Fr(s);const n=xs(s,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ur(s,null,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(s,t,n){if(Fr(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=xs(s,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ur(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(s,t,n){if(Fr(s),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=xs(s,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ur(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(s,t,n){if(Fr(s),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=xs(s,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ur(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(s,t,n){if(Fr(s),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=xs(s,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,ur(s,t,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cD(s,t=1,n=!0){const r=T(s,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[l,c]=R.runKernel(Gu,a,i);return{values:l,indices:c}}const xm=F({topk_:cD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(s,t=0,n=1,r,o){if(r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const a=new dm(t,n,r,!0,o),i=Se(s,r);for(let l=0;l<i.values.length;l++)i.values[l]=a.nextValue();return i.toTensor()}const Lh=F({truncatedNormal_:uD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(s,t=0){const n=T(s,"x","unique","string_or_numeric");k(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},o={axis:t},[a,i]=R.runKernel(ju,r,o);return{values:a,indices:i}}const Ph=F({unique_:hD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(s,t,n){const r=T(s,"x","unsortedSegmentSum"),o=T(t,"segmentIds","unsortedSegmentSum","int32");k(Ct(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:o},i={numSegments:n};return R.runKernel(Sl,a,i)}const wm=F({unsortedSegmentSum_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(s,t=0){const n=T(s,"x","unstack","string_or_numeric");k(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},o={axis:t};return R.runKernel(Il,r,o)}const Hn=F({unstack_:pD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cw(s,t=!0,n,r){return R.makeVariable(s,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh(s,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=Se(s,"int32"),o=Se([n.length,s.length],"int32");for(let a=0;a<n.length;a++){const i=r.indexToLoc(n[a]),l=a*s.length;o.values.set(i,l)}return o.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function fD(s){const t=T(s,"condition","whereAsync","bool"),n=await t.data(),r=zh(t.shape,n);return s!==t&&t.dispose(),r}const vm=fD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function mD(s,t,n){const r=T(s,"tensor","boolMask"),o=T(t,"mask","boolMask","bool"),a=n==null?0:n,i=o.rank,l=r.shape;k(i>0,()=>"mask cannot be scalar"),zt(l.slice(a,a+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let g=a;g<a+i;g++)c*=l[g];const u=l.slice(0,a).concat([c],l.slice(a+i)),h=P(r,u),d=P(o,[-1]),p=await vm(d),f=$s(p,[1]),m=Zr(h,f,a);return s!==r&&r.dispose(),t!==o&&o.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),m}const gD=mD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(s,t="euclidean",n=null,r=!1){s=T(s,"x","norm");const o=uw(s,t,n);let a=o.shape;if(r){const i=ke(n,s.shape);a=mt(o.shape,i)}return P(o,a)}function uw(s,t,n=null){if(s.rank===0)return bt(s);if(s.rank!==1&&n===null)return uw(P(s,[-1]),t,n);if(s.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ue(bt(s),n);if(t===1/0)return Un(bt(s),n);if(t===-1/0)return Xl(bt(s),n);if(t==="euclidean"||t===2)return Gt(ue(Gs(bt(s),me(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Un(ue(bt(s),n[0]),n[1]-1);if(t===1/0)return Un(ue(bt(s),n[1]),n[0]);if(t===-1/0)return Xl(ue(bt(s),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Gt(ue(We(s),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Mh=F({norm_:yD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(s,t,n,r,o=!0){const a=T(s,"v","movingAverage"),i=T(t,"x","movingAverage"),l=T(n,"decay","movingAverage");Wx(a,i),k(Ae(a.shape,i.shape),()=>"Shape mismatch in v and x");const c=me(1),u=ce(c,l);let h=L(ce(i,a),u);if(o){k(r!=null,()=>"When using zeroDebias: true, step is required.");const d=T(r,"step","movingAverage");h=pe(h,ce(c,Gs(l,d)))}return Y(a,h)}const xD=F({movingAverage_:bD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(s,t,n){const r=T(s,"indices","scatterND","int32"),o=T(t,"updates","scatterND");Ef(o,r,n);const a={indices:r,updates:o},i={shape:n};return R.runKernel(Fu,a,i)}const hw=F({scatterND_:wD});function vD(s,t,n,r){if(s.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${s.shape}.`);const o=s.rank>0?s.shape[0]:1,a=s.rank>1?s.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(s,t,n,r=0){const o=T(s,"sparseIndices","sparseToDense","int32"),a=T(t,"sparseValues","sparseToDense"),i=T(r,"defaultValue","sparseToDense",a.dtype);vD(o,a,n,i);const l={sparseIndices:o,sparseValues:a,defaultValue:i},c={outputShape:n};return R.runKernel(zu,l,c)}const $m=F({sparseToDense_:$D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(s,t){const n=T(t,"indices","gatherND","int32"),o={params:T(s,"x","gatherND","string_or_numeric"),indices:n};return R.runKernel(gu,o)}const dw=F({gatherND_:CD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(s,t){if(t==null)return s.shape.slice();if(Ae(s.shape,t))return t;if(s.shape.length===t.length){const n=[];for(let r=0;r<s.shape.length;r++)t[r]==null&&s.shape[r]!=null?n.push(s.shape[r]):n.push(t[r]);return n}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(s,t,n,r){const o=T(s,"x","dropout");if(k(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),k(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof Pe?o.clone():o;const a=ND(o,n),i=1-t,l=pe(Va(Y(Ha(a,0,1,"float32",r),i)),i);return L(o,l)}const pw=F({dropout_:kD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function Cm(s,t,n){const r=1-s%2,o=new Float32Array(s);for(let a=0;a<s;++a){const i=2*Math.PI*a/(s+r-1);o[a]=t-n*Math.cos(i)}return Ht(o,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ID(s,t,n=1){const r=T(s,"predictions","inTopK"),o=T(t,"targets","inTopK");k(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),k(r.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`),zt(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];k(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),l=await o.data(),[c,u]=[i.length/a,a],h=Nt("bool",c);for(let d=0;d<c;d++){const p=d*u,f=i.subarray(p,p+u),m=[];for(let g=0;g<f.length;g++)m.push({value:f[g],index:g});m.sort((g,y)=>y.value-g.value),h[d]=0;for(let g=0;g<n;g++)if(m[g].index===l[d]){h[d]=1;break}}return s!==r&&r.dispose(),t!==o&&o.dispose(),Vn(h,o.shape,"bool")}const SD=ID;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(s,t,n,r,o,a="NHWC",i){let l=s;s.rank===3&&(l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let c=t;c.rank===3&&(c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),k(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),k(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u=a==="NHWC"?l.shape[3]:l.shape[1],h=a==="NHWC"?c.shape[3]:c.shape[1];k(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),k(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),i!=null&&k(Ct(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const d={x:l,dy:c},p={strides:r,pad:o,dataFormat:a,dimRoundingMode:i,filterShape:n};return R.runKernel(eu,d,p)}const Nm=F({conv2DBackpropFilter_:TD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(s,t,n){if(n==null||n==="linear")return s;if(n==="relu")return L(s,Ka(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Vh(s,t){let n=t;const r=It(s.shape,t.shape);return r.length>0&&(n=ue(n,r)),P(n,s.shape)}function Wh(s,t,n,r){if(t==="linear")return s;if(t==="relu")return ss(s);if(t==="elu")return Ma(s);if(t==="relu6")return Ih(s);if(t==="prelu")return Zl(s,n);if(t==="leakyrelu")return Hl(s,r);if(t==="sigmoid")return ns(s);throw new Error(`Unknown fused activation ${t}.`)}const Uh=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED({x:s,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:l,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(c=c||"linear",Uh(R.state.gradientDepth,c)===!1){let C=Ws(s,t,n,r,o,a,i);return l!=null&&(C=Y(C,l)),Wh(C,c,u,h)}const d=T(s,"x","conv2d"),p=T(t,"filter","conv2d");let f=d,m=!1;d.rank===3&&(m=!0,f=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),k(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),k(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),i!=null&&k(Ct(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),k(f.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`),k(Wt(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),k(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);const g=Rt(f.shape,p.shape,n,a,r,i);let y;l!=null&&(y=T(l,"bias","fused conv2d"),[y]=lt(y,d),Te(g.outShape,y.shape));let b;u!=null&&(b=T(u,"prelu weights","fused conv2d"));const x=(C,I)=>{const[N,S,E,A]=I,_=Bh(C,E,c);k(fr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const D=Zf(S.shape,_,N,n,r),O=Nm(S,_,N.shape,n,r),B=[D,O];if(A!=null){const W=Vh(A,_);B.push(W)}return B},w={x:f,filter:p,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:c,leakyreluAlpha:h};return l==null?ws((I,N,S)=>{let E=R.runKernel(Al,w,v);return S([N,I,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,p):ws((I,N,S,E)=>{let A=R.runKernel(Al,w,v);return E([N,I,A,S]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(f,p,y)}const km=F({fusedConv2d_:ED});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(s,t,n,r,o,a=[1,1],i){let l=s;s.rank===3&&(l=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let c=t;c.rank===3&&(c=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:l,dy:c},h={strides:r,pad:o,dimRoundingMode:i,dilations:a,filterShape:n};return R.runKernel(au,u,h)}const mw=F({depthwiseConv2dNativeBackpropFilter_:AD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(s,t,n,r,o,a=[1,1],i){let l=t,c=!1;t.rank===3&&(c=!0,l=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:l,filter:n},h={strides:r,pad:o,dimRoundingMode:i,dilations:a,inputShape:s},d=R.runKernel(iu,u,h);return c?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const gw=F({depthwiseConv2dNativeBackpropInput_:DD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD({x:s,filter:t,strides:n,pad:r,dataFormat:o="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:l,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(Uh(R.state.gradientDepth,c)===!1){let C=Pa(s,t,n,r,o,a,i);return l!=null&&(C=Y(C,l)),Wh(C,c,u,h)}const d=T(s,"x","depthwiseConv2d"),p=T(t,"filter","depthwiseConv2d");let f=d,m=!1;d.rank===3&&(m=!0,f=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),k(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),k(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),k(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),a==null&&(a=[1,1]),k(Wt(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),i!=null&&k(Ct(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const g=Rt(f.shape,p.shape,n,a,r,i,!0);let y;l!=null&&(y=T(l,"bias","fused conv2d"),[y]=lt(y,d),Te(g.outShape,y.shape));let b;u!=null&&(b=T(u,"prelu weights","fused depthwiseConv2d"));const x=(C,I)=>{k(fr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[N,S,E,A]=I,_=Bh(C,E,c),D=gw(S.shape,_,N,n,r,a,i),O=mw(S,_,N.shape,n,r,a,i);if(A!=null){const B=Vh(y,_);return[D,O,B]}return[D,O]},w={x:f,filter:p,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:o,dilations:a,dimRoundingMode:i,activation:c,leakyreluAlpha:h};return l==null?ws((I,N,S)=>{let E=R.runKernel(Dl,w,v);return S([N,I,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(f,p):ws((I,N,S,E)=>{let A=R.runKernel(Dl,w,v);return E([N,I,A,S]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(f,p,y)}const yw=F({fusedDepthwiseConv2d_:RD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD({a:s,b:t,transposeA:n=!1,transposeB:r=!1,bias:o,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:l}){if(Uh(R.state.gradientDepth,a)===!1){let A=Ie(s,t,n,r);return o!=null&&(A=Y(A,o)),Wh(A,a,i,l)}let c=T(s,"a","fused matMul"),u=T(t,"b","fused matMul");[c,u]=lt(c,u);const h=n?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=c.shape.slice(0,-2),g=u.shape.slice(0,-2),y=H(m),b=H(g);k(c.rank>=2&&u.rank>=2&&c.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${u.rank}.`),k(Ae(m,g),()=>`Error in fused matMul: outer dimensions (${m}) and (${g}) of Tensors with shapes ${c.shape} and ${u.shape} must match.`),k(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([p,f]),w=n?P(c,[y,h,p]):P(c,[y,p,h]),v=r?P(u,[b,f,d]):P(u,[b,d,f]);let C;o!=null&&(C=T(o,"bias","fused matMul"),[C]=lt(C,c),Te(x,C.shape));let I;i!=null&&(I=T(i,"prelu weights","fused matMul"));const N=(A,_)=>{const[D,O,B,W]=_,M=Bh(P(A,B.shape),B,a);let j,U;if(!n&&!r?(j=Ie(M,O,!1,!0),U=Ie(D,M,!0,!1)):!n&&r?(j=Ie(M,O,!1,!1),U=Ie(M,D,!0,!1)):n&&!r?(j=Ie(O,M,!1,!0),U=Ie(D,M,!1,!1)):(j=Ie(O,M,!0,!0),U=Ie(M,D,!0,!0)),o!=null){const K=Vh(W,M);return[j,U,K]}else return[j,U]},S={a:w,b:v,bias:C,preluActivationWeights:I},E={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:l};return o==null?ws((_,D,O)=>{const B=R.runKernel(El,S,E);return O([_,D,B]),{value:P(B,x),gradFunc:N}})(w,v):ws((_,D,O,B)=>{const W=R.runKernel(El,S,E);return B([_,D,W,O]),{value:P(W,x),gradFunc:N}})(w,v,C)}const Gh=F({fusedMatMul_:FD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _D=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",conv2d:km,depthwiseConv2d:yw,matMul:Gh});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(s){return Cm(s,.54,.46)}const LD=F({hammingWindow_:OD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(s){return Cm(s,.5,.5)}const bw=F({hannWindow_:PD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(s,t,n,r=!1,o=0){let a=0;const i=[];for(;a+t<=s.size;)i.push(Fe(s,a,t)),a+=n;if(r)for(;a<s.size;){const l=a+t-s.size,c=ft([Fe(s,a,t-l),Ba([l],o)]);i.push(c),a+=n}return i.length===0?to([],[0,t]):P(ft(i),[i.length,t])}const xw=F({frame_:zD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(s,t,n,r,o=bw){r==null&&(r=fw(t));const a=xw(s,t,n),i=L(a,o(t));return nc(i,r)}const BD=F({stft_:MD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(s,t,n,r,o="bilinear",a=0){const i=T(s,"image","cropAndResize"),l=T(t,"boxes","cropAndResize","float32"),c=T(n,"boxInd","cropAndResize","int32"),u=l.shape[0];k(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),k(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${l.shape}.`),k(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${l.shape}.`),k(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),k(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),k(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const h={image:i,boxes:l,boxInd:c},d={method:o,extrapolationValue:a,cropSize:r};return R.runKernel(su,h,d)}const WD=F({cropAndResize_:VD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(s){const t=T(s,"image","flipLeftRight","float32");k(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return R.runKernel(mu,n,{})}const GD=F({flipLeftRight_:UD});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(s){const t=T(s,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];k(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),k(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const o=new Array(t.rank);return o.fill(1,0,n),o[n]=3,An(t,o)}const jD=F({grayscaleToRGB_:HD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(s,t,n=0,r=.5){const o=T(s,"image","rotateWithOffset","float32");k(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const a={image:o},i={radians:t,fillValue:n,center:r};return R.runKernel(Ku,a,i)}const KD=F({rotateWithOffset_:qD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(s,t,n,r,o,a){r==null&&(r=.5),o==null&&(o=Number.NEGATIVE_INFINITY),a==null&&(a=0);const i=s.shape[0];return n=Math.min(n,i),k(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),k(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),k(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),k(t.rank===1,()=>"scores must be a 1D tensor"),k(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),k(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const a=T(s,"boxes","nonMaxSuppression"),i=T(t,"scores","nonMaxSuppression"),l=Xa(a,i,n,r,o);n=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;const c={maxOutputSize:n,iouThreshold:r,scoreThreshold:o};return R.runKernel(ku,{boxes:a,scores:i},c)}const YD=F({nonMaxSuppression_:XD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(s,t,n){const r=JD(s,t,n),o=r<0?-(r+1):r;s.splice(o,0,t)}function JD(s,t,n){return eR(s,t,n||QD)}function QD(s,t){return s>t?1:s<t?-1:0}function eR(s,t,n){let r=0,o=s.length,a=0,i=!1;for(;r<o;){a=r+(o-r>>>1);const l=n(t,s[a]);l>0?r=a+1:(o=a,i=!l)}return i?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(s,t,n,r,o){return Im(s,t,n,r,o,0)}function jh(s,t,n,r,o,a){return Im(s,t,n,r,o,0,!1,a,!0)}function qh(s,t,n,r,o,a){return Im(s,t,n,r,o,a,!0)}function Im(s,t,n,r,o,a,i=!1,l=!1,c=!1){const u=[];for(let y=0;y<t.length;y++)t[y]>o&&u.push({score:t[y],boxIndex:y,suppressBeginIndex:0});u.sort(ww);const h=a>0?-.5/a:0,d=[],p=[];for(;d.length<n&&u.length>0;){const y=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:w}=y;if(b<o)break;let v=!1;for(let C=d.length-1;C>=w;--C){const I=tR(s,x,d[C]);if(I>=r){v=!0;break}if(y.score=y.score*nR(r,h,I),y.score<=o)break}y.suppressBeginIndex=d.length,v||(y.score===b?(d.push(x),p.push(y.score)):y.score>o&&ZD(u,y,ww))}const f=d.length,m=n-f;l&&m>0&&(d.push(...new Array(m).fill(0)),p.push(...new Array(m).fill(0)));const g={selectedIndices:d};return i&&(g.selectedScores=p),c&&(g.validOutputs=f),g}function tR(s,t,n){const r=s.subarray(t*4,t*4+4),o=s.subarray(n*4,n*4+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),l=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(o[0],o[2]),h=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),p=Math.max(o[1],o[3]),f=(l-a)*(c-i),m=(d-u)*(p-h);if(f<=0||m<=0)return 0;const g=Math.max(a,u),y=Math.max(i,h),b=Math.min(l,d),x=Math.min(c,p),w=Math.max(b-g,0)*Math.max(x-y,0);return w/(f+m-w)}function nR(s,t,n){const r=Math.exp(t*n*n);return n<=s?r:0}function ww(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const a=T(s,"boxes","nonMaxSuppressionAsync"),i=T(t,"scores","nonMaxSuppressionAsync"),l=Xa(a,i,n,r,o);n=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold;const c=await Promise.all([a.data(),i.data()]),u=c[0],h=c[1],{selectedIndices:d}=Hh(u,h,n,r,o);return a!==s&&a.dispose(),i!==t&&i.dispose(),Ht(d,"int32")}const rR=sR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=0){const i=T(s,"boxes","nonMaxSuppression"),l=T(t,"scores","nonMaxSuppression"),c=Xa(i,l,n,r,o,a);n=c.maxOutputSize,r=c.iouThreshold,o=c.scoreThreshold,a=c.softNmsSigma;const u={boxes:i,scores:l},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:a},d=R.runKernel(Su,u,h);return{selectedIndices:d[0],selectedScores:d[1]}}const aR=F({nonMaxSuppressionWithScore_:oR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function iR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=0){const i=T(s,"boxes","nonMaxSuppressionAsync"),l=T(t,"scores","nonMaxSuppressionAsync"),c=Xa(i,l,n,r,o,a);n=c.maxOutputSize,r=c.iouThreshold,o=c.scoreThreshold,a=c.softNmsSigma;const u=await Promise.all([i.data(),l.data()]),h=u[0],d=u[1],{selectedIndices:p,selectedScores:f}=qh(h,d,n,r,o,a);return i!==s&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Ht(p,"int32"),selectedScores:Ht(f)}}const lR=iR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=!1){const i=T(s,"boxes","nonMaxSuppression"),l=T(t,"scores","nonMaxSuppression"),c=Xa(i,l,n,r,o,null),u=c.maxOutputSize,h=c.iouThreshold,d=c.scoreThreshold,p={boxes:i,scores:l},f={maxOutputSize:u,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:a},m=R.runKernel(Iu,p,f);return{selectedIndices:m[0],validOutputs:m[1]}}const uR=F({nonMaxSuppressionPadded_:cR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hR(s,t,n,r=.5,o=Number.NEGATIVE_INFINITY,a=!1){const i=T(s,"boxes","nonMaxSuppressionAsync"),l=T(t,"scores","nonMaxSuppressionAsync"),c=Xa(i,l,n,r,o,null),u=c.maxOutputSize,h=c.iouThreshold,d=c.scoreThreshold,[p,f]=await Promise.all([i.data(),l.data()]),{selectedIndices:m,validOutputs:g}=jh(p,f,u,h,d,a);return i!==s&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Ht(m,"int32"),validOutputs:me(g,"int32")}}const dR=hR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(s,t,n=!1,r=!1){const o=T(s,"images","resizeBilinear");k(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),k(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),k(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=o,i=!1;o.rank===3&&(i=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=R.runKernel(yl,l,c);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const vw=F({resizeBilinear_:pR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(s,t,n=!1,r=!1){const o=T(s,"images","resizeNearestNeighbor");k(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),k(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),k(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=o,i=!1;o.rank===3&&(i=!0,a=P(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={images:a},c={alignCorners:n,halfPixelCenters:r,size:t},u=R.runKernel(gl,l,c);return i?P(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const $w=F({resizeNearestNeighbor_:fR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(s,t="binary",n=!1,r=.5){const o=T(s,"image","threshold"),a=.2989,i=.587,l=.114,c=o.shape[0]*o.shape[1];let u=L(Ht([r]),255),h,d,p,f;if(k(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),k(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),k(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),k(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[h,d,p]=ln(o,[1,1,1],-1);const y=L(h,a),b=L(d,i),x=L(p,l);f=Y(Y(y,b),x)}else f=s;if(t==="otsu"){const y=Xf(ne(Sh(f),"int32"),Vn([]),256);u=gR(y,c)}const m=n?gr(f,u):an(f,u);return ne(L(m,255),"int32")}function gR(s,t){let n=Ht([-1]),r=Ht([0]),o=Ht([0]),a,i,l,c,u,h;for(let d=0;d<s.size-1;d++){a=Fe(s,0,d+1),i=Fe(s,d+1),u=pe(ue(a),t),h=pe(ue(i),t);const p=ue(L(a,ja(0,a.size)));l=pe(p,ue(a));const f=Ba(i.shape,a.size),m=Y(ja(0,i.size),f),g=L(i,m);c=pe(ue(g),ue(i));const y=ce(l,c),b=ce(l,c),x=L(u,h);o=L(L(x,y),b);const w=an(o,r);r=Kt(w,o,r),n=Kt(w,Ht([d]),n)}return n}const yR=F({threshold_:mR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bR(s,t,n="nearest",r="constant",o=0,a){const i=T(s,"image","transform","float32"),l=T(t,"transforms","transform","float32");k(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),k(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const c={image:i,transforms:l},u={interpolation:n,fillMode:r,fillValue:o,outputShape:a};return R.runKernel(Hu,c,u)}const xR=F({transform_:bR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(s,t,n){k(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),k(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=T(s,"a","bandPart");k(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const o=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const l=P(ja(0,a,1,"int32"),[-1,1]),c=ja(0,i,1,"int32"),u=ce(l,c),h=Gn(gr(u,me(+t,"int32")),mr(u,me(-n,"int32"))),d=wt([a,i],r.dtype);return P($n(Hn(P(r,[-1,a,i])).map(p=>Kt(h,p,d))),o)}const vR=F({bandPart_:wR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(s){let t;if(Array.isArray(s)){t=!1,k(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=s[0].shape[0];for(let a=1;a<s.length;++a)k(s[a].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[a].shape[0]} vs. ${o})`)}else t=!0,s=ln(s,s.shape[0],0).map(o=>$s(o,[0]));k(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const n=[],r=s;for(let o=0;o<s.length;++o)n.push(R.tidy(()=>{let a=r[o];if(o>0)for(let i=0;i<o;++i){const l=L(ue(L(n[i],a)),n[i]);a=ce(a,l)}return pe(a,Mh(a,"euclidean"))}));return t?$n(n,0):n}const CR=F({gramSchmidt_:$R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(s,t=!1){if(k(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return Cw(s,t);{const n=s.shape.slice(0,s.shape.length-2).reduce((c,u)=>c*u),r=Hn(P(s,[n,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),o=[],a=[];r.forEach(c=>{const[u,h]=Cw(c,t);o.push(u),a.push(h)});const i=P($n(o,0),s.shape),l=P($n(a,0),s.shape);return[i,l]}}function Cw(s,t=!1){return R.tidy(()=>{k(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const n=s.shape[0],r=s.shape[1];let o=rm(n),a=Ms(s);const i=to([[1]],[1,1]);let l=Ms(i);const c=n>=r?r:n;for(let u=0;u<c;++u){const h=a,d=l,p=o;[l,a,o]=R.tidy(()=>{const f=Fe(a,[u,u],[n-u,1]),m=Mh(f),g=Fe(a,[u,u],[1,1]),y=Kt(an(g,0),to([[-1]]),to([[1]])),b=ce(g,L(y,m)),x=pe(f,b);x.shape[0]===1?l=Ms(i):l=ft([i,Fe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=rt(pe(Ie(y,b),m)),v=Fe(a,[u,0],[n-u,r]),C=L(w,l),I=Re(l);if(u===0)a=ce(v,Ie(C,Ie(I,v)));else{const E=ce(v,Ie(C,Ie(I,v)));a=ft([Fe(a,[0,0],[u,r]),E],0)}const N=Re(C),S=Fe(o,[0,u],[n,o.shape[1]-u]);if(u===0)o=ce(S,Ie(Ie(S,l),N));else{const E=ce(S,Ie(Ie(S,l),N));o=ft([Fe(o,[0,0],[n,u]),E],1)}return[l,a,o]}),$e([h,d,p])}return!t&&n>r&&(o=Fe(o,[0,0],[n,r]),a=Fe(a,[0,0],[r,r])),[o,a]})}const kR=F({qr_:NR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Jt||(Jt={}));function IR(s,t,n=Jt.SUM_BY_NONZERO_WEIGHTS){const r=T(s,"losses","computeWeightedLoss");let o=null;t!=null&&(o=T(t,"weights","computeWeightedLoss"));const a=o==null?r:L(r,o);if(n===Jt.NONE)return a;if(n===Jt.SUM)return ue(a);if(n===Jt.MEAN){if(o==null)return ut(a);{const i=r.size/o.size,l=pe(ue(a),ue(o));return i>1?pe(l,me(i)):l}}if(n===Jt.SUM_BY_NONZERO_WEIGHTS){if(o==null)return pe(ue(a),me(r.size));{const i=L(o,xn(r.shape)),l=ne(ue(Qr(i,me(0))),"float32");return pe(ue(a),l)}}throw Error(`Unknown reduction: ${n}`)}const Hs=F({computeWeightedLoss_:IR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(s,t,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const o=T(s,"labels","absoluteDifference"),a=T(t,"predictions","absoluteDifference");let i=null;n!=null&&(i=T(n,"weights","absoluteDifference")),zt(o.shape,a.shape,"Error in absoluteDifference: ");const l=bt(ce(o,a));return Hs(l,i,r)}const TR=F({absoluteDifference_:SR});function ER(s,t,n,r,o=Jt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","cosineDistance"),i=T(t,"predictions","cosineDistance");let l=null;r!=null&&(l=T(r,"weights","cosineDistance")),zt(a.shape,i.shape,"Error in cosineDistance: ");const c=me(1),u=ce(c,ue(L(a,i),n,!0));return Hs(u,l,o)}const AR=F({cosineDistance_:ER});function DR(s,t,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){let o=T(s,"labels","hingeLoss");const a=T(t,"predictions","hingeLoss");let i=null;n!=null&&(i=T(n,"weights","hingeLoss")),zt(o.shape,a.shape,"Error in hingeLoss: ");const l=me(1);o=ce(L(me(2),o),l);const c=ss(ce(l,L(o,a)));return Hs(c,i,r)}const RR=F({hingeLoss_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(s,t,n,r=1,o=Jt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","huberLoss"),i=T(t,"predictions","huberLoss");let l=null;n!=null&&(l=T(n,"weights","huberLoss")),zt(a.shape,i.shape,"Error in huberLoss: ");const c=me(r),u=bt(ce(i,a)),h=Ua(u,c),d=ce(u,h),p=Y(L(me(.5),We(h)),L(c,d));return Hs(p,l,o)}const _R=F({huberLoss_:FR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(s,t,n,r=1e-7,o=Jt.SUM_BY_NONZERO_WEIGHTS){const a=T(s,"labels","logLoss"),i=T(t,"predictions","logLoss");let l=null;n!=null&&(l=T(n,"weights","logLoss")),zt(a.shape,i.shape,"Error in logLoss: ");const c=me(1),u=me(r),h=rt(L(a,bn(Y(i,u)))),d=L(ce(c,a),bn(Y(ce(c,i),u))),p=ce(h,d);return Hs(p,l,o)}const LR=F({logLoss_:OR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(s,t,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const o=T(s,"labels","meanSquaredError"),a=T(t,"predictions","meanSquaredError");let i=null;n!=null&&(i=T(n,"weights","meanSquaredError")),zt(o.shape,a.shape,"Error in meanSquaredError: ");const l=Oh(o,a);return Hs(l,i,r)}const zR=F({meanSquaredError_:PR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(s,t){const n=T(s,"labels","sigmoidCrossEntropyWithLogits"),r=T(t,"logits","sigmoidCrossEntropyWithLogits");zt(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=ss(r),a=L(r,n),i=jl(yn(rt(bt(r))));return Y(ce(o,a),i)}function BR(s,t,n,r=0,o=Jt.SUM_BY_NONZERO_WEIGHTS){let a=T(s,"multiClassLabels","sigmoidCrossEntropy");const i=T(t,"logits","sigmoidCrossEntropy");let l=null;if(n!=null&&(l=T(n,"weights","sigmoidCrossEntropy")),zt(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const u=me(r),h=me(1),d=me(.5);a=Y(L(a,ce(h,u)),L(d,u))}const c=MR(a,i);return Hs(c,l,o)}const VR=F({sigmoidCrossEntropy_:BR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(s,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ws((o,a,i)=>{const c=lm(a,[n],!0),u=ce(ne(a,"float32"),c);i([o,u]);const h=rt(L(u,o));return{value:ue(h,[n]),gradFunc:(f,m)=>{const[g,y]=m,b=mt(f.shape,[n]);return[L(P(f,b),ce(ne(g,"float32"),yn(y))),L(P(f,b),ce(yn(y),ne(g,"float32")))]}}})(s,t)}function UR(s,t,n,r=0,o=Jt.SUM_BY_NONZERO_WEIGHTS){let a=T(s,"onehotLabels","softmaxCrossEntropy");const i=T(t,"logits","softmaxCrossEntropy");let l=null;if(n!=null&&(l=T(n,"weights","softmaxCrossEntropy")),zt(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const u=me(r),h=me(1),d=me(a.shape[1]);a=Y(L(a,ce(h,u)),pe(u,d))}const c=WR(a,i);return Hs(c,l,o)}const GR=F({softmaxCrossEntropy_:UR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(s,t,n,r){const o=T(s,"indices","sparseFillEmptyRows"),a=T(t,"values","sparseFillEmptyRows"),i=T(n,"denseShape","sparseFillEmptyRows"),l=T(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const c={indices:o,values:a,denseShape:i,defaultValue:l},u=R.runKernel(_u,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const jR=F({sparseFillEmptyRows_:HR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(s,t,n){const r=T(s,"inputIndices","sparseReshape"),o=T(t,"inputShape","sparseReshape"),a=T(n,"newShape","sparseReshape");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:o,newShape:a},l=R.runKernel(Ou,i);return{outputIndices:l[0],outputShape:l[1]}}const KR=F({sparseReshape_:qR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(s,t,n){const r=T(s,"data","sparseSegmentMean"),o=T(t,"indices","sparseSegmentMean"),a=T(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);const i={data:r,indices:o,segmentIds:a};return R.runKernel(Lu,i)}const YR=F({sparseSegmentMean_:XR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(s,t,n){const r=T(s,"data","sparseSegmentSum"),o=T(t,"indices","sparseSegmentSum"),a=T(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);const i={data:r,indices:o,segmentIds:a};return R.runKernel(Pu,i)}const JR=F({sparseSegmentSum_:ZR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(s,t,n,r,o,a,i,l){const c=T(s,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const u=T(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:o,rightPad:a,padWidth:i,preserveShortSequences:l},d={data:c,dataSplits:u},p=R.runKernel(Vu,d,h);return{nGrams:p[0],nGramsSplits:p[1]}}const eF=F({stringNGrams_:QR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(s,t,n=!0){const r=T(s,"input","stringSplit","string"),o=T(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const a={skipEmpty:n},i={input:r,delimiter:o},l=R.runKernel(Wu,i,a);return{indices:l[0],values:l[1],shape:l[2]}}const nF=F({stringSplit_:tF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(s,t){const n=T(s,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const o={input:n};return R.runKernel(Uu,o,r)}const rF=F({stringToHashBucketFast_:sF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oF={fft:tc,ifft:qa,rfft:nc,irfft:_h},aF={hammingWindow:LD,hannWindow:bw,frame:xw,stft:BD},jn={flipLeftRight:GD,grayscaleToRGB:jD,resizeNearestNeighbor:$w,resizeBilinear:vw,rotateWithOffset:KD,cropAndResize:WD,nonMaxSuppression:YD,nonMaxSuppressionAsync:rR,nonMaxSuppressionWithScore:aR,nonMaxSuppressionWithScoreAsync:lR,nonMaxSuppressionPadded:uR,nonMaxSuppressionPaddedAsync:dR,threshold:yR,transform:xR},Nw={bandPart:vR,gramSchmidt:CR,qr:kR},iF={absoluteDifference:TR,computeWeightedLoss:Hs,cosineDistance:AR,hingeLoss:RR,huberLoss:_R,logLoss:LR,meanSquaredError:zR,sigmoidCrossEntropy:VR,softmaxCrossEntropy:GR},sc={sparseFillEmptyRows:jR,sparseReshape:KR,sparseSegmentMean:YR,sparseSegmentSum:JR},Kh={stringNGrams:eF,stringSplit:nF,stringToHashBucketFast:rF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class js extends jr{minimize(t,n=!1,r){const{value:o,grads:a}=this.computeGradients(t,r);if(r!=null){const i=r.map(l=>({name:l.name,tensor:a[l.name]}));this.applyGradients(i)}else this.applyGradients(a);return $e(a),n?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,n){return q0(t,n)}dispose(){this.iterations_!=null&&$e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(js,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xh extends js{constructor(t,n,r=null){super();this.learningRate=t,this.rho=n,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${r}/accum_grad`,variable:V(()=>_e(a).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${r}/accum_var`,variable:V(()=>_e(a).variable(i))});const l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;const c=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;V(()=>{const h=Y(L(c,this.rho),L(We(l),1-this.rho)),d=L(pe(Gt(Y(u,this.epsilon)),Gt(Y(c,this.epsilon))),l),p=Y(L(u,this.rho),L(We(d),1-this.rho));c.assign(h),u.assign(p);const f=Y(L(d,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&($e(this.accumulatedGrads.map(t=>t.variable)),$e(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=t.length/2,r=!1;this.accumulatedGrads=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedUpdates=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.rho,n.epsilon)}}Xh.className="Adadelta";X(Xh);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yh extends js{constructor(t,n=.1){super();this.learningRate=t,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r];if(this.accumulatedGrads[o]==null){const c=!1;this.accumulatedGrads[o]={originalName:`${r}/accumulator`,variable:V(()=>Ba(a.shape,this.initialAccumulatorValue).variable(c))}}const i=Array.isArray(t)?t[o].tensor:t[r];if(i==null)return;const l=this.accumulatedGrads[o].variable;V(()=>{const c=Y(l,We(i));l.assign(c);const u=Y(L(pe(i,Gt(Y(c,R.backend.epsilon()))),-this.learningRate),a);a.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&$e(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulatedGrads=t.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,n){return new t(n.learningRate,n.initialAccumulatorValue)}}Yh.className="Adagrad";X(Yh);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zh extends js{constructor(t,n,r,o=null){super();this.learningRate=t,this.beta1=n,this.beta2=r,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=me(n).variable(),this.accBeta2=me(r).variable()}),o==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const n=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);V(()=>{const r=ce(1,this.accBeta1),o=ce(1,this.accBeta2);n.forEach((a,i)=>{const l=R.registeredVariables[a],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:V(()=>_e(l).variable(c))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:V(()=>_e(l).variable(c))});const u=Array.isArray(t)?t[i].tensor:t[a];if(u==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,p=Y(L(h,this.beta1),L(u,1-this.beta1)),f=Y(L(d,this.beta2),L(We(u),1-this.beta2)),m=pe(p,r),g=pe(f,o);h.assign(p),d.assign(f);const y=Y(L(pe(m,Y(Gt(g),this.epsilon)),-this.learningRate),l);l.assign(y)}),this.accBeta1.assign(L(this.accBeta1,this.beta1)),this.accBeta2.assign(L(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&$e(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&$e(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t),V(()=>{this.accBeta1.assign(Gs(this.beta1,this.iterations_+1)),this.accBeta2.assign(Gs(this.beta2,this.iterations_+1))});const n=t.length/2,r=!1;this.accumulatedFirstMoment=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedSecondMoment=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon)}}Zh.className="Adam";X(Zh);/**
* @license
* Copyright 2018 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/class Jh extends js{constructor(t,n,r,o=null,a=0){super();this.learningRate=t,this.beta1=n,this.beta2=r,this.epsilon=o,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=me(0).variable(),this.accBeta1=me(n).variable()}),o==null&&(this.epsilon=R.backend.epsilon())}applyGradients(t){const n=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);V(()=>{const r=ce(1,this.accBeta1),o=pe(-this.learningRate,Y(L(this.iteration,this.decay),1));n.forEach((a,i)=>{const l=R.registeredVariables[a],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:_e(l).variable(c)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:_e(l).variable(c)});const u=Array.isArray(t)?t[i].tensor:t[a];if(u==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,p=Y(L(h,this.beta1),L(u,1-this.beta1)),f=L(d,this.beta2),m=bt(u),g=vs(f,m);h.assign(p),d.assign(g);const y=Y(L(pe(o,r),pe(p,Y(g,this.epsilon))),l);l.assign(y)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(L(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&$e(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&$e(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}Jh.className="Adamax";X(Jh);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rc extends js{constructor(t){super();this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=Array.isArray(t)?t[o].tensor:t[r];if(a==null)return;const i=R.registeredVariables[r];V(()=>{const l=Y(L(this.c,a),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Dt(me(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,n){return new t(n.learningRate)}}rc.className="SGD";X(rc);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qh extends rc{constructor(t,n,r=!1){super(t);this.learningRate=t,this.momentum=n,this.useNesterov=r,this.accumulations=[],this.m=me(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r];if(this.accumulations[o]==null){const c=!1;this.accumulations[o]={originalName:`${r}/momentum`,variable:V(()=>_e(a).variable(c))}}const i=this.accumulations[o].variable,l=Array.isArray(t)?t[o].tensor:t[r];l!=null&&V(()=>{let c;const u=Y(L(this.m,i),l);this.useNesterov?c=Y(L(this.c,Y(l,L(u,this.m))),a):c=Y(L(this.c,u),a),i.assign(u),a.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&$e(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulations=t.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,n){return new t(n.learningRate,n.momentum,n.useNesterov)}}Qh.className="Momentum";X(Qh);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ed extends js{constructor(t,n=.9,r=0,o=null,a=!1){super();if(this.learningRate=t,this.decay=n,this.momentum=r,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,o==null&&(this.epsilon=R.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(r=>r.name):Object.keys(t)).forEach((r,o)=>{const a=R.registeredVariables[r],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${r}/rms`,variable:V(()=>_e(a).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${r}/momentum`,variable:V(()=>_e(a).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${r}/mg`,variable:V(()=>_e(a).variable(i))});const l=Array.isArray(t)?t[o].tensor:t[r];if(l==null)return;const c=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;V(()=>{const h=Y(L(c,this.decay),L(We(l),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[o].variable,p=Y(L(d,this.decay),L(l,1-this.decay)),f=pe(L(l,this.learningRate),Gt(ce(h,Y(We(p),this.epsilon)))),m=Y(L(u,this.momentum),f);c.assign(h),d.assign(p),u.assign(m);const g=ce(a,m);a.assign(g)}else{const d=Y(L(c,this.decay),L(We(l),1-this.decay)),p=Y(L(u,this.momentum),pe(L(l,this.learningRate),Gt(Y(d,this.epsilon))));c.assign(d),u.assign(p);const f=ce(a,p);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&$e(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&$e(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&$e(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=this.centered?t.length/3:t.length/2,r=!1;this.accumulatedMeanSquares=t.slice(0,n).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.accumulatedMoments=t.slice(n,n*2).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=t.slice(n*2,n*3).map(o=>({originalName:o.name,variable:o.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,n){return new t(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}ed.className="RMSProp";X(ed);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class no{static sgd(t){return new rc(t)}static momentum(t,n,r=!1){return new Qh(t,n,r)}static rmsprop(t,n=.9,r=0,o=null,a=!1){return new ed(t,n,r,o,a)}static adam(t=.001,n=.9,r=.999,o=null){return new Zh(t,n,r,o)}static adadelta(t=.001,n=.95,r=null){return new Xh(t,n,r)}static adamax(t=.002,n=.9,r=.999,o=null,a=0){return new Jh(t,n,r,o,a)}static adagrad(t,n=.1){return new Yh(t,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so={sgd:no.sgd,momentum:no.momentum,adadelta:no.adadelta,adagrad:no.adagrad,rmsprop:no.rmsprop,adamax:no.adamax,adam:no.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:s=>s())();function td(){return new Promise(s=>lF(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(s,t){const n=s[0].length;s.forEach((o,a)=>{k(o.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),k(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=s[0];s.forEach((o,a)=>{for(let i=0;i<n;i++)k(i===t||o[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${o}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Cs(s,t){const n=s[0].slice();for(let r=1;r<s.length;r++)n[t]+=s[r][t];return n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tm=30;function nd(s){return s<=Tm?s:qc(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Em(s,t,n){const r=n*(typeof s=="number"?s:s[0]),o=t*(typeof s=="number"?s:s[1]);return[r,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oc(s,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(s[0]/n),o=o.concat(s.slice(1));else{o=o.concat(s[0]);const a=t.length;for(let i=0;i<a;++i)o=o.concat([s[i+1]/t[i],t[i]]);o=o.concat(s.slice(a+1))}return o}function ac(s,t,n=!0){const r=[];if(n){r.push(t);for(let o=t+1;o<s;++o)o<=2*t?(r.push(o),r.push(o-(t+1))):r.push(o)}else{const o=[],a=[];for(let i=1;i<s;++i)i>=t*2+1||i%2==1?a.push(i):o.push(i);r.push(...o),r.push(0),r.push(...a)}return r}function ic(s,t,n,r=!0){const o=[];r?o.push(s[0]/n):o.push(s[0]*n);for(let a=1;a<s.length;++a)a<=t.length?r?o.push(t[a-1]*s[a]):o.push(s[a]/t[a-1]):o.push(s[a]);return o}function Am(s,t){const n=[0];for(let r=0;r<t;++r)n.push(s[r][0]);return n}function Dm(s,t,n){const r=s.slice(0,1);for(let o=0;o<n;++o)r.push(s[o+1]-t[o][0]-t[o][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sd=1.7580993408473768,rd=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rm=.3275911,Fm=.254829592,_m=-.284496736,Om=1.421413741,Lm=-1.453152027,Pm=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const n=new Float32Array(s.length*2);for(let r=0;r<n.length;r+=2)n[r]=s[r/2],n[r+1]=t[r/2];return n}function kw(s){const t=new Float32Array(s.length/2),n=new Float32Array(s.length/2);for(let r=0;r<s.length;r+=2)t[r/2]=s[r],n[r/2]=s[r+1];return{real:t,imag:n}}function Iw(s){const t=Math.ceil(s.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=0;o<s.length;o+=4)n[Math.floor(o/4)]=s[o],r[Math.floor(o/4)]=s[o+1];return{real:n,imag:r}}function Sw(s){const t=Math.floor(s.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=2;o<s.length;o+=4)n[Math.floor(o/4)]=s[o],r[Math.floor(o/4)]=s[o+1];return{real:n,imag:r}}function zm(s,t){const n=s[t*2],r=s[t*2+1];return{real:n,imag:r}}function Tw(s,t,n,r){s[r*2]=t,s[r*2+1]=n}function Ew(s,t){const n=new Float32Array(s/2),r=new Float32Array(s/2);for(let o=0;o<Math.ceil(s/2);o++){const a=(t?2:-2)*Math.PI*(o/s);n[o]=Math.cos(a),r[o]=Math.sin(a)}return{real:n,imag:r}}function Aw(s,t,n){const r=(n?2:-2)*Math.PI*(s/t),o=Math.cos(r),a=Math.sin(r);return{real:o,imag:a}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mm="->",cF=/->/g,Dw=",",Rw="...";function Bm(s,t){s=s.replace(/\s/g,"");const n=(s.length-s.replace(cF,"").length)/Mm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Mm}").`);const[r,o]=s.split(Mm);k(r.indexOf(Rw)===-1,()=>`The ellipsis notation ("${Rw}") is not supported yet.`);const a=r.split(Dw),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let p=0;p<o.length;++p){const f=o[p];if(!a.some(m=>m.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);l.indexOf(f)===-1&&l.push(f)}for(let p=0;p<r.length;++p){const f=r[p];l.indexOf(f)===-1&&f!==Dw&&l.push(f)}const c=new Array(a.length);for(let p=0;p<i;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);c[p]=[];for(let f=0;f<a[p].length;++f)c[p].push(l.indexOf(a[p][f]))}const u=l.length,h=o.length,d=[];for(let p=h;p<u;++p)d.push(p);return{allDims:l,summedDims:d,idDims:c}}function Vm(s,t){let n=new Array(s);n.fill(-1);for(let o=0;o<t.length;++o)n[t[o]]=o;const r=[];for(let o=0;o<s;++o)n[o]===-1&&r.push(o);return n=n.filter(o=>o!==-1),{permutationIndices:n,expandDims:r}}function Wm(s,t,n){const r=new Array(s);for(let o=0;o<n.length;++o){const a=n[o].shape;for(let i=0;i<t[o].length;++i)r[t[o][i]]===void 0?r[t[o][i]]=a[i]:k(r[t[o][i]]===a[i],()=>`Expected dimension ${r[t[o][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function Um(s,t){const n=s,r=[];let o=0;s.length===0&&n.push(-1),o=s.length+1;for(let i=0;i<o;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const l=n[i],c=uF(t,l);for(const u of c)a.indexOf(u)===-1&&(r[i].push(u),a.push(u))}return{path:n,steps:r}}function Gm(s){return s.every((t,n)=>t===n)}function uF(s,t){const n=[];for(let r=0;r<s.length;++r)(s[r].length===0||s[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function Hm(s,t,n=0){let r=[];if(typeof t=="number")k(s.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(s.shape[n]/t);else{const o=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);k(o<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(a!==-1){const i=t.reduce((l,c)=>c>0?l+c:l);t[a]=s.shape[n]-i}k(s.shape[n]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fw(s,t){let n=!1,r;for(s<=Tm?(r=s,n=!0):r=qc(s,Math.floor(Math.sqrt(s)));!n;)r>t||r===s?n=!0:r=qc(s,r+1);return r}function _w(s,t,n){const r=[],o=s.length;for(let a=0;a<o;a++)a!==t?r.push(s[a]):r.push(n);return r}function jm(s,t,n,r){const o=t.shape.length,a=s.shape.length;if(r!==0&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(s.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${s.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=s.shape[n],l=[];let c=1,u=1,h=1;for(let d=0;d<r;++d)l.push(s.shape[d]),c*=s.shape[d];for(let d=r;d<n;d++)l.push(s.shape[d]),u*=s.shape[d];for(let d=r;d<o;d++)l.push(t.shape[d]);for(let d=n+1;d<a;d++)l.push(s.shape[d]),h*=s.shape[d];return{batchSize:c,sliceSize:h,outerSize:u,dimSize:i,outputShape:l}}var hF=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",segOpComputeOptimalWindowSize:Fw,computeOutShape:_w,collectGatherOpShapeInfo:jm});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(s){try{return s.map(t=>Vr(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Ow(s){return s.map(t=>ys(t))}var Lw=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",slice_util:k0,segment_util:hF,fromUint8ToStringArray:ro,fromStringArrayToUint8:Ow,upcastType:fn,axesAreInnerMostDims:im,combineLocations:X0,computeOutAndReduceShapes:Ft,expandShapeToKeepDim:mt,assertAxesAreInnerMostDims:Ut,getAxesPermutation:gt,getUndoAxesPermutation:Wa,getInnerMostAxes:xt,getBroadcastDims:za,getReductionAxes:It,assertAndGetBroadcastShape:Te,assertParamsConsistent:Sm,computeOutShape:Cs,computeDilation2DInfo:Vl,computePool2DInfo:Wn,computePool3DInfo:Bs,computeConv2DInfo:Rt,computeConv3DInfo:pr,computeDefaultPad:jf,tupleValuesAreOne:fr,eitherStridesOrDilationsAreOne:Wt,convertConv2DDataFormat:Vs,getFusedDyActivation:Bh,getFusedBiasGradient:Vh,applyActivation:Wh,shouldFuse:Uh,PARALLELIZE_THRESHOLD:Tm,computeOptimalWindowSize:nd,getImageCenter:Em,getReshaped:oc,getPermuted:ac,getReshapedPermuted:ic,getSliceBeginCoords:Am,getSliceSize:Dm,prepareAndValidate:lh,validateUpdateShape:Tf,validateInput:Ef,calculateShapes:_a,SELU_SCALEALPHA:sd,SELU_SCALE:rd,ERF_P:Rm,ERF_A1:Fm,ERF_A2:_m,ERF_A3:Om,ERF_A4:Lm,ERF_A5:Pm,warn:sn,log:$I,mergeRealAndImagArrays:qs,splitRealAndImagArrays:kw,complexWithEvenIndex:Iw,complexWithOddIndex:Sw,getComplexWithIndex:zm,assignToTypedArray:Tw,exponents:Ew,exponent:Aw,decodeEinsumEquation:Bm,getEinsumPermutation:Vm,checkEinsumDimSizes:Wm,getEinsumComputePath:Um,isIdentityPermutation:Gm,prepareSplitSize:Hm});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dF=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",nonMaxSuppressionV3Impl:Hh,nonMaxSuppressionV4Impl:jh,nonMaxSuppressionV5Impl:qh,whereImpl:zh});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw={kernelName:Ti,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,Ka(ne(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pF={kernelName:Ao,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=We(ne(n,"float32")),o=Gt(ce(me(1),r));return rt(pe(s,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF={kernelName:Do,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=Gt(ce(We(ne(n,"float32")),1));return pe(s,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF={kernelName:Lr,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{let l=s;const c=It(n.shape,o);return c.length>0&&(l=ue(l,c)),P(l,n.shape)},b:()=>{let l=s;const c=It(r.shape,o);return c.length>0&&(l=ue(l,c)),P(l,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF={kernelName:Ei,saveAllInputs:!0,gradFunc:(s,t)=>{const n={};return t.forEach((r,o)=>{n[o]=()=>s.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF={kernelName:Ai,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>_e(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bF={kernelName:Di,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>_e(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF={kernelName:Ro,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,Gt(ce(me(1),We(ne(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF={kernelName:Fo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=Gt(Y(me(1),We(ne(n,"float32"))));return pe(s,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF={kernelName:Lo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{const l=Y(We(n),We(r));let c=L(s,pe(r,l));const u=It(n.shape,o);return u.length>0&&(c=ue(c,u)),P(c,n.shape)},b:()=>{const l=Y(We(n),We(r));let c=rt(L(s,pe(n,l)));const u=It(r.shape,o);return u.length>0&&(c=ue(c,u)),P(c,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:_o,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,Y(We(ne(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF={kernelName:Oo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,ce(me(1),We(ne(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(s,t,n,r,o,a){const i=T(s,"dy","avgPool3dGrad"),l=T(t,"input","avgPool3dGrad");let c=i,u=l,h=!1;l.rank===4&&(h=!0,c=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),k(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),k(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),a!=null&&k(Ct(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const d={dy:c,input:u},p={filterSize:n,strides:r,pad:o,dimRoundingMode:a},f=R.runKernel(Zc,d,p);return h?P(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const kF=F({avgPool3dGrad_:NF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF={kernelName:Fi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=n;return{x:()=>kF(s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SF(s,t,n,r,o){const a=T(s,"dy","avgPoolGrad"),i=T(t,"input","avgPoolGrad");k(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let l=i,c=a,u=!1;i.rank===3&&(u=!0,l=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),k(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const h={dy:c,input:l},d={filterSize:n,strides:r,pad:o},p=R.runKernel(Yc,h,d);return u?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const TF=F({avgPoolGrad_:SF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF={kernelName:Ri,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{filterSize:o,strides:a,pad:i}=n;return{x:()=>TF(s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF={kernelName:_i,inputsToSave:["a","b"],gradFunc:(s,t,n)=>{const[r,o]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Ie(s,o,!1,!0),b:()=>Ie(r,s,!0,!1)}:!a&&i?{a:()=>Ie(s,o,!1,!1),b:()=>Ie(s,r,!0,!1)}:a&&!i?{a:()=>Ie(o,s,!1,!0),b:()=>Ie(r,s,!1,!1)}:{a:()=>Ie(o,s,!0,!0),b:()=>Ie(s,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF={kernelName:Oi,gradFunc:(s,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Yl(s,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={kernelName:Cx,gradFunc:(s,t,n)=>{const r=n,o=r.inputShape,a=r.shape,i=Array.from(a);for(let c=o.length-1;c>=0;c--)if(o[c]===a[c])i[c]=1;else if(o[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${a}].`);const l=[];for(let c=0;c<i.length;c++)i[c]>1&&l.push(c);return{x:()=>ue(s,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF={kernelName:Po,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={kernelName:zo,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF={kernelName:Mo,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:a}=n;return{x:()=>Kt(Gn(mr(r,o),gr(r,a)),s,_e(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LF={kernelName:Li,inputsToSave:["x"],gradFunc:Pw.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF={kernelName:Pi,saveAllInputs:!0,gradFunc:(s,t,n)=>{const r=t.map(c=>c.shape),{axis:o}=n,a=ke(o,t[0].shape)[0],i=r.map(c=>c[a]);return ln(s,i,a).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zF={kernelName:zi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,{dilations:a,strides:i,pad:l,dataFormat:c}=n;return k(fr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Zf(r.shape,s,o,i,l,c),filter:()=>Nm(r,s,o.shape,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF={kernelName:Mi,inputsToSave:["dy","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c}=n;return{dy:()=>Ws(s,o,a,i,l,1,c),filter:()=>Nm(s,r,o.shape,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(s,t,n,r,o){let a=s;s.rank===4&&(a=P(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),k(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),k(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),k(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),k(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),k(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const l={x:a,dy:i},c={strides:r,pad:o,filterShape:n};return R.runKernel(tu,l,c)}const VF=F({conv3DBackpropFilter_:BF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WF={kernelName:Bi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const{dilations:r,strides:o,pad:a}=n;k(fr(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,l]=t;return{x:()=>M0(i.shape,s,l,o,a),filter:()=>VF(i,s,l.shape,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF={kernelName:Bo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(rt(Ah(ne(n,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF={kernelName:Vo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(Dh(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF={kernelName:Vi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{axis:o,exclusive:a,reverse:i}=n;return{x:()=>{const l=gt([o],r.rank);let c=bh(s,o,a,!i);return l!=null&&(c=Re(c,l)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jF={kernelName:Wi,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const{dilations:r,strides:o,pad:a,dimRoundingMode:i}=n,l=r==null?[1,1]:r;k(fr(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[c,u]=t;return k(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),k(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),k(Wt(o,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${l}'.`),i!=null&&k(Ct(a),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`),{x:()=>gw(c.shape,s,u,o,a,l,i),filter:()=>mw(c,s,u.shape,o,a,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qF={kernelName:Ui,inputsToSave:["x","filter"],gradFunc:(s,t,n)=>{const[r,o]=t,a={x:r,filter:o,dy:s},i={x:r,filter:o,dy:s};return{x:()=>R.runKernel(cu,a,n),filter:()=>R.runKernel(uu,i,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KF={kernelName:Uo,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t,r={dy:s,y:n};return{x:()=>R.runKernel(du,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XF={kernelName:Go,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t,r=L(yn(rt(We(n))),2/Math.sqrt(Math.PI));return{x:()=>L(s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YF={kernelName:Ho,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF={kernelName:Hi,inputsToSave:["input"],gradFunc:(s,t)=>{const[n]=t;return{input:()=>P(s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF={kernelName:jo,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,yn(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QF={kernelName:qo,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e_={kernelName:Ko,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{const l=pe(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{let l=L(s,ne(n,"float32"));const c=It(r.shape,o);c.length>0&&(l=P(ue(l,c),r.shape));const u=We(r);return rt(pe(l,ne(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_={kernelName:ji,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,n)=>{const{varianceEpsilon:r}=n,[o,a,i,l]=t,c=l==null?me(1):l,u=It(a.shape,o.shape),h=[];if(a.rank===1){for(let v=0;v<o.shape.length-1;++v)h.push(o.shape[v]);h.push(1)}const d=ce(o,a),p=L(s,c),f=Th(Y(i,me(r))),m=L(L(L(f,f),f),me(-.5));return{x:()=>a.rank===1?P(L(L(s,An(P(f,[1,1,1,a.shape[0]]),h)),c),o.shape):P(L(L(s,f),c),o.shape),mean:()=>{let v=L(L(f,me(-1)),p);return a.rank===1&&(v=ue(v,u)),P(v,a.shape)},variance:()=>{let v=L(L(m,d),p);return a.rank===1&&(v=ue(v,u)),P(v,a.shape)},scale:()=>{const v=L(d,f);let C=L(s,v);return a.rank===1&&(C=ue(C,u)),P(C,a.shape)},offset:()=>{let v=s;return a.rank===1&&(v=ue(v,u)),P(v,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_={kernelName:qi,inputsToSave:["x","indices"],gradFunc:(s,t,n)=>{const[r,o]=t,{axis:a}=n,i=ke(a,r.shape)[0];return{x:()=>{const c=r.shape,u=o.size,h=c.slice(0,i),d=h.length,p=c.slice(a,c.length).slice(1),f=p.length,m=zw(0,d),g=zw(d+1,d+1+f),y=Mw([h,[u],p]),b=P(s,y),x=P(o,[u]),w=Mw([[d],m,g]),v=Re(b,w);let C=wm(v,x,r.shape[i]);const I=Wa(w);return C=Re(C,I),C},indices:()=>o}}};function zw(s,t){const n=[];for(let r=s;r<t;++r)n.push(r);return n}function Mw(s){const t=[];for(let n=0;n<s.length;++n)for(let r=0;r<s[n].length;++r)t.push(s[n][r]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s_={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>_e(n),b:()=>_e(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r_={kernelName:Yo,gradFunc:s=>({x:()=>ne(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o_={kernelName:Zo,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_={kernelName:Jo,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i_={kernelName:Qo,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l_={kernelName:Xi,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{alpha:o}=n,a=an(r,0);return{x:()=>Kt(a,s,L(s,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c_={kernelName:ta,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,Y(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_={kernelName:ea,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,ne(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_={kernelName:Nx,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const a=!0,i=yn(r);return ce(s,L(ue(s,o,a),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(s,t,n,r=5,o=1,a=1,i=.5){const l={x:s,y:t,dy:n},c={depthRadius:r,bias:o,alpha:a,beta:i};return R.runKernel(wu,l,c)}const p_=F({localResponseNormalizationBackprop_:d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f_={kernelName:tl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{depthRadius:a,bias:i,alpha:l,beta:c}=n;return{x:()=>p_(r,o,s,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(s,t,n,r){return t.rank<n.rank&&(t=P(t,mt(t.shape,r))),s.rank<n.rank&&(s=P(s,mt(s.shape,r))),{x:()=>L(s,ne(gn(n,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vw={kernelName:nl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const r=n,{reductionIndices:o}=r,a=t[0],i=t[1],l=ke(o,a.shape),c=Bw(s,i,a,l);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_={kernelName:na,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>L(s,ne(mr(n,r),"float32")),b:()=>L(s,ne(wh(n,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(s,t,n,r,o,a,i){const l=T(s,"dy","maxPool3dGrad"),c=T(t,"input","maxPool3dGrad"),u=T(n,"output","maxPool3dGrad");let h=l,d=c,p=u,f=!1;c.rank===4&&(f=!0,h=P(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=P(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),k(h.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),k(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),k(p.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),i!=null&&k(Ct(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const m={dy:h,input:d,output:p},g={filterSize:r,strides:o,pad:a,dimRoundingMode:i},y=R.runKernel($u,m,g);return f?P(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const y_=F({maxPool3dGrad_:g_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b_={kernelName:rl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=n;return{x:()=>y_(s,r,o,a,i,l,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(s,t,n,r,o,a,i){const l=T(s,"dy","maxPoolGrad"),c=T(t,"input","maxPoolGrad"),u=T(n,"output","maxPoolGrad");k(c.rank===l.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${l.rank})`),k(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),i!=null&&k(Ct(a),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h={dy:l,input:c,output:u},d={filterSize:r,strides:o,pad:a,dimRoundingMode:i};return R.runKernel(vu,h,d)}const w_=F({maxPoolGrad_:x_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_={kernelName:sl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r,o]=t,{filterSize:a,strides:i,pad:l}=n;return{x:()=>w_(s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $_={kernelName:ol,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{axis:o}=n,a=ke(o,r.shape),l=Ft(r.shape,a)[1],c=H(l);return{x:()=>{const h=r.shape.slice();a.forEach(f=>{h[f]=1});const d=P(s,h);return pe(L(d,xn(r.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C_={kernelName:al,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,n)=>{const r=n,{axis:o}=r,[a,i]=t,l=ke(o,a.shape),c=Bw(s,i,a,l);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_={kernelName:sa,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t;return{a:()=>L(s,ne(gr(n,r),"float32")),b:()=>L(s,ne(an(n,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_={kernelName:il,inputsToSave:["x"],gradFunc:(s,t,n)=>{const r=t[0],{paddings:o}=n,a=o.map(i=>i[0]);return{x:()=>Fe(s,a,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_={kernelName:ra,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{const l=It(n.shape,o);return l.length>0?P(ue(s,l),n.shape):s},b:()=>{const l=L(s,rt(Va(pe(n,r)))),c=It(r.shape,o);return c.length>0?P(ue(l,c),r.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_={kernelName:oa,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{const l=L(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{const l=L(s,ne(n,"float32")),c=It(r.shape,o);return c.length>0?P(ue(l,c),r.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_={kernelName:ll,gradFunc:s=>({x:()=>rt(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E_={kernelName:hl,inputsToSave:["indices"],gradFunc:(s,t)=>{const n=t[0];return{indices:()=>wt(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_={kernelName:ul,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_={kernelName:dl,saveAllInputs:!0,gradFunc:(s,t,n)=>{const{axis:r}=n;return Hn(s,r).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww={kernelName:pl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const r=t[0],{paddings:o}=n,a=o.map(i=>i[0]);return{x:()=>Fe(s,a,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_={kernelName:aa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[n,r,o]=t,a=n,i=r,l=Te(a.shape,i.shape);return{a:()=>{const h=ne(i,"float32");let d=L(s,L(h,Gs(a,ce(h,me(1)))));const p=It(a.shape,l);return p.length>0&&(d=ue(d,p)),P(d,a.shape)},b:()=>{const h=an(a,0),d=Kt(h,bn(a),_e(a));let p=L(s,L(o,d));const f=It(i.shape,l);return f.length>0&&(p=ue(p,f)),P(p,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F_={kernelName:fl,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[n,r]=t,o=an(n,0);return{x:()=>Kt(o,s,L(s,r)),alpha:()=>{let a=Kt(o,_e(s),L(s,n));const i=It(r.shape,s.shape);return i.length>0&&(a=ue(a,i)),P(a,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const __={kernelName:Wo,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{const l=pe(s,ne(r,"float32")),c=It(n.shape,o);return c.length>0?P(ue(l,c),n.shape):l},b:()=>{let l=L(s,ne(n,"float32"));const c=It(r.shape,o);c.length>0&&(l=P(ue(l,c),r.shape));const u=We(r);return rt(pe(l,ne(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_={kernelName:ia,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,rt(We(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_={kernelName:ca,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t,r=L(gr(n,6),Ka(n));return{x:()=>L(s,ne(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P_={kernelName:la,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,ne(Ka(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_={kernelName:ml,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>P(s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_={kernelName:yl,inputsToSave:["images"],gradFunc:(s,t,n)=>{const[r]=t,o={dy:s,images:r};return{images:()=>R.runKernel(Ru,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_={kernelName:gl,inputsToSave:["images"],gradFunc:(s,t,n)=>{const[r]=t,o={dy:s,images:r};return{images:()=>R.runKernel(Du,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={kernelName:bl,gradFunc:(s,t,n)=>{const{dims:r}=n,o=ke(r,s.shape);return{x:()=>vn(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_={kernelName:ua,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={kernelName:ha,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>rt(pe(s,L(Gs(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={kernelName:xl,inputsToSave:["condition"],gradFunc:(s,t)=>{const[n]=t;return{condition:()=>ne(_e(n),"float32"),t:()=>L(s,ne(n,s.dtype)),e:()=>L(s,ne(ql(n),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_={kernelName:da,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>{const r=an(n,me(0)),o=me(sd),a=me(rd),i=L(s,a),l=L(L(s,o),yn(ne(n,"float32")));return Kt(r,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_={kernelName:ga,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,L(n,ce(me(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_={kernelName:ma,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K_={kernelName:pa,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(Gl(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_={kernelName:fa,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(yh(ne(n,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y_={kernelName:wl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{begin:o,size:a}=n,i=r.shape,[l,c]=uh(r,o,a),u=[];for(let h=0;h<s.rank;h++)u.push([l[h],i[h]-l[h]-c[h]]);return{x:()=>Us(s,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_={kernelName:Nl,outputsToSave:[!0],gradFunc:(s,t,n)=>{const[r]=t,{dim:o}=n,a=!0,i=L(s,r);return{logits:()=>ce(i,L(ue(i,[o],a),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_={kernelName:ya,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,ns(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw={kernelName:$l,gradFunc:(s,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Ul(s,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw={kernelName:Cl,gradFunc:(s,t,n)=>{const{axis:r}=n;return{x:()=>ft(s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_={kernelName:ba,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,L(Gt(ne(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO={kernelName:Mu,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(s,L(ne(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO={kernelName:xa,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=me(2);return{a:()=>L(s,L(o,ce(n,r))),b:()=>L(s,L(o,ce(r,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO={kernelName:Na,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sO={kernelName:wa,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[n,r]=t,o=Te(n.shape,r.shape);return{a:()=>{let l=s;const c=It(n.shape,o);return c.length>0&&(l=ue(l,c)),P(l,n.shape)},b:()=>{let l=s;const c=It(r.shape,o);return c.length>0&&(l=ue(l,c)),P(rt(l),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO={kernelName:vl,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:a}=n;ke(a,r.shape).forEach(u=>{o[u]=1});const l=P(s,o),c=L(l,xn(r.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO={kernelName:va,inputsToSave:["x"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>pe(s,We(Gl(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO={kernelName:$a,outputsToSave:[!0],gradFunc:(s,t)=>{const[n]=t;return{x:()=>L(ce(me(1),We(n)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iO={kernelName:Ca,inputsToSave:["x"],gradFunc:(s,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let i=_e(r);if(r.rank===1)for(let l=0;l<o[0];++l)i=Y(i,Fe(s,[l*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)i=Y(i,Fe(s,[l*r.shape[0],c*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)i=Y(i,Fe(s,[l*r.shape[0],c*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let l=0;l<o[0];++l)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)for(let h=0;h<o[3];++h)i=Y(i,Fe(s,[l*r.shape[0],c*r.shape[1],u*r.shape[2],h*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO={kernelName:kl,gradFunc:(s,t,n)=>{const r=n,{perm:o}=r,a=Wa(o);return{x:()=>Re(s,a)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO={kernelName:Il,gradFunc:(s,t,n)=>{const r=n,{axis:o}=r;return{value:()=>$n(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uO={kernelName:Sl,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[n]=t;return{x:()=>hO(s,n)}}};function hO(s,t){const n=vs(t,_e(t)),r=Zr(s,n);let o=mr(t,me(0,"int32"));const a=r.rank-o.rank;for(let l=0;l<a;++l)o=on(o,l+1);o=Gn(o,xn(r.shape,"bool"));const i=_e(r);return Kt(o,r,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO={kernelName:Tl,gradFunc:s=>({x:()=>_e(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=[Pw,pF,fF,mF,gF,yF,bF,xF,wF,vF,$F,CF,IF,EF,AF,DF,RF,FF,_F,OF,LF,PF,MF,zF,WF,UF,GF,HF,jF,qF,__,KF,XF,YF,ZF,JF,e_,QF,t_,n_,s_,r_,o_,a_,i_,l_,c_,u_,h_,f_,Vw,Vw,m_,b_,v_,$_,C_,N_,k_,I_,S_,T_,E_,A_,D_,Ww,Ww,R_,F_,O_,L_,P_,z_,M_,B_,V_,W_,U_,G_,H_,j_,q_,K_,X_,Y_,Z_,J_,Uw,Uw,Gw,Gw,Q_,tO,eO,nO,sO,rO,oO,aO,iO,lO,cO,uO,dO];for(const s of pO)kx(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.abs=function(){return this.throwIfDisposed(),bt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acos=function(){return this.throwIfDisposed(),zf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.acosh=function(){return this.throwIfDisposed(),Mf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.add=function(s){return this.throwIfDisposed(),Y(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.all=function(s,t){return this.throwIfDisposed(),ph(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.any=function(s,t){return this.throwIfDisposed(),Bl(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMax=function(s){return this.throwIfDisposed(),qr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.argMin=function(s){return this.throwIfDisposed(),Bf(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asScalar=function(){return this.throwIfDisposed(),k(this.size===1,()=>"The array must have only 1 element."),P(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asType=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as2D=function(s,t){return this.throwIfDisposed(),P(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as3D=function(s,t,n){return this.throwIfDisposed(),P(this,[s,t,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as4D=function(s,t,n,r){return this.throwIfDisposed(),P(this,[s,t,n,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.as5D=function(s,t,n,r,o){return this.throwIfDisposed(),P(this,[s,t,n,r,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asin=function(){return this.throwIfDisposed(),Vf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.asinh=function(){return this.throwIfDisposed(),Wf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan=function(){return this.throwIfDisposed(),Uf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atan2=function(s){return this.throwIfDisposed(),Gf(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.atanh=function(){return this.throwIfDisposed(),Hf(this)};G().prototype.avgPool=function(s,t,n,r){return this.throwIfDisposed(),Wl(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),Ul(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.batchNorm=function(s,t,n,r,o){return this.throwIfDisposed(),Yr(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.broadcastTo=function(s){return this.throwIfDisposed(),La(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cast=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ceil=function(){return this.throwIfDisposed(),Yf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),rn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof Pe&&(s=[s]),ft([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv1d=function(s,t,n,r,o,a){return this.throwIfDisposed(),mh(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2dTranspose=function(s,t,n,r,o){return this.throwIfDisposed(),gh(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.conv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Ws(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cos=function(){return this.throwIfDisposed(),Gl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cosh=function(){return this.throwIfDisposed(),yh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.cumsum=function(s,t,n){return this.throwIfDisposed(),bh(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),Qf(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.depthwiseConv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),Pa(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dilation2d=function(s,t,n,r,o){return this.throwIfDisposed(),em(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.divNoNan=function(s){return this.throwIfDisposed(),tm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.div=function(s){return this.throwIfDisposed(),pe(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.dot=function(s){return this.throwIfDisposed(),W0(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.elu=function(){return this.throwIfDisposed(),Ma(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.equal=function(s){return this.throwIfDisposed(),gn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.erf=function(){return this.throwIfDisposed(),nm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.exp=function(){return this.throwIfDisposed(),yn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expandDims=function(s){return this.throwIfDisposed(),on(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.expm1=function(){return this.throwIfDisposed(),sm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.fft=function(){return this.throwIfDisposed(),tc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floor=function(){return this.throwIfDisposed(),Va(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.floorDiv=function(s){return this.throwIfDisposed(),dh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.gather=function(s,t){return this.throwIfDisposed(),Zr(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greaterEqual=function(s){return this.throwIfDisposed(),mr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.greater=function(s){return this.throwIfDisposed(),an(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.ifft=function(){return this.throwIfDisposed(),qa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.irfft=function(){return this.throwIfDisposed(),_h(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isFinite=function(){return this.throwIfDisposed(),G0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isInf=function(){return this.throwIfDisposed(),H0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.isNaN=function(){return this.throwIfDisposed(),om(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Hl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.lessEqual=function(s){return this.throwIfDisposed(),gr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.less=function(s){return this.throwIfDisposed(),wh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.localResponseNormalization=function(s,t,n,r){return this.throwIfDisposed(),am(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSigmoid=function(){return this.throwIfDisposed(),K0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSoftmax=function(s){return this.throwIfDisposed(),$h(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),lm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log=function(){return this.throwIfDisposed(),bn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.log1p=function(){return this.throwIfDisposed(),jl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalAnd=function(s){return this.throwIfDisposed(),Gn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalNot=function(){return this.throwIfDisposed(),ql(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalOr=function(s){return this.throwIfDisposed(),Ch(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.logicalXor=function(s){return this.throwIfDisposed(),Y0(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.matMul=function(s,t,n){return this.throwIfDisposed(),Ie(this,s,t,n)};G().prototype.maxPool=function(s,t,n,r){return this.throwIfDisposed(),Kl(this,s,t,n,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.max=function(s,t){return this.throwIfDisposed(),Un(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.maximum=function(s){return this.throwIfDisposed(),vs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mean=function(s,t){return this.throwIfDisposed(),ut(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.min=function(s,t){return this.throwIfDisposed(),Xl(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.minimum=function(s){return this.throwIfDisposed(),Ua(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),um(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mod=function(s){return this.throwIfDisposed(),hm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.mul=function(s){return this.throwIfDisposed(),L(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.neg=function(){return this.throwIfDisposed(),rt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.norm=function(s,t,n){return this.throwIfDisposed(),Mh(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.notEqual=function(s){return this.throwIfDisposed(),Qr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.oneHot=function(s,t=1,n=0){return this.throwIfDisposed(),Ra(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.onesLike=function(){return this.throwIfDisposed(),wn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pad=function(s,t){return this.throwIfDisposed(),Us(this,s,t)};G().prototype.pool=function(s,t,n,r,o){return this.throwIfDisposed(),Q0(this,s,t,n,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.pow=function(s){return this.throwIfDisposed(),Gs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prelu=function(s){return this.throwIfDisposed(),Zl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.prod=function(s,t){return this.throwIfDisposed(),kh(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reciprocal=function(){return this.throwIfDisposed(),pm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu=function(){return this.throwIfDisposed(),ss(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.relu6=function(){return this.throwIfDisposed(),Ih(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshapeAs=function(s){return this.throwIfDisposed(),P(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reshape=function(s){return this.throwIfDisposed(),P(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeBilinear=function(s,t,n){return this.throwIfDisposed(),vw(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.resizeNearestNeighbor=function(s,t,n){return this.throwIfDisposed(),$w(this,s,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.reverse=function(s){return this.throwIfDisposed(),vn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rfft=function(){return this.throwIfDisposed(),nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.round=function(){return this.throwIfDisposed(),Sh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.rsqrt=function(){return this.throwIfDisposed(),Th(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.selu=function(){return this.throwIfDisposed(),Eh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.separableConv2d=function(s,t,n,r,o,a){return this.throwIfDisposed(),fm(this,s,t,n,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sigmoid=function(){return this.throwIfDisposed(),ns(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sign=function(){return this.throwIfDisposed(),mm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sin=function(){return this.throwIfDisposed(),Ah(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sinh=function(){return this.throwIfDisposed(),Dh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.slice=function(s,t){return this.throwIfDisposed(),Fe(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softmax=function(s){return this.throwIfDisposed(),ec(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.softplus=function(){return this.throwIfDisposed(),Jr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Yl(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.split=function(s,t){return this.throwIfDisposed(),ln(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sqrt=function(){return this.throwIfDisposed(),Gt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.square=function(){return this.throwIfDisposed(),We(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squaredDifference=function(s){return this.throwIfDisposed(),Oh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.squeeze=function(s){return this.throwIfDisposed(),$s(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stack=function(s,t){this.throwIfDisposed();const n=s instanceof Pe?[this,s]:[this,...s];return $n(n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.step=function(s){return this.throwIfDisposed(),Ka(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.stridedSlice=function(s,t,n,r,o,a,i,l){return this.throwIfDisposed(),ym(this,s,t,n,r,o,a,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sub=function(s){return this.throwIfDisposed(),ce(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.sum=function(s,t){return this.throwIfDisposed(),ue(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tan=function(){return this.throwIfDisposed(),bm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tanh=function(){return this.throwIfDisposed(),Xr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.tile=function(s){return this.throwIfDisposed(),An(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.topk=function(s,t){return this.throwIfDisposed(),xm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.transpose=function(s){return this.throwIfDisposed(),Re(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unique=function(s){return this.throwIfDisposed(),Ph(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),wm(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.unstack=function(s){return this.throwIfDisposed(),Hn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.where=function(s,t){return this.throwIfDisposed(),Kt(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */G().prototype.zerosLike=function(){return this.throwIfDisposed(),_e(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let qm;function St(){return qm==null&&(qm=E0().epsilon()),qm}function rs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ns extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Ns.prototype)}}class qn extends Error{constructor(t){super(t);Object.setPrototypeOf(this,qn.prototype)}}class z extends Error{constructor(t){super(t);Object.setPrototypeOf(this,z.prototype)}}class Ce extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Ce.prototype)}}class Km extends Error{constructor(t){super(t);Object.setPrototypeOf(this,Km.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oo(s,t){if(Array.isArray(s)){let n=[];for(let r=0;r<t;r++)n=n.concat(s);return n}else{const n=new Array(t);return n.fill(s),n}}function ks(s,t){if(!s)throw new Km(t)}function Hw(s,t){let n=0;for(const r of s)r===t&&n++;return n}function cn(s){return s.length===1?s[0]:s}function tt(s){return Array.isArray(s)?s:[s]}function Ks(s){const n=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ao(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}let Kn={};function Xm(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function Ym(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>Ym(t));else{const t=Object.keys(s);for(const n of t){const r=s[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?s[n]=r.value:Ym(r))}}}function lc(s,t={},n={},r="object",o=!1){if(typeof s=="string"){const a=s;let i;if(a in n)i=n[a];else if(a in Kn)i=Kn[a];else if(i=t[a],i==null)throw new z(`Unknown ${r}: ${s}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const a=s;if(a.className==null||a.config==null)throw new z(`${r}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);const i=a.className;let l,c;if(i in n?[l,c]=n[i]:i in Kn?[l,c]=Kn.className:i in t&&([l,c]=t[i]),l==null)throw new z(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const u={};for(const f of Object.keys(Kn))u[f]=Kn[f];for(const f of Object.keys(n))u[f]=n[f];const h=a.config;h.customObjects=u;const d=Object.assign({},Kn);for(const f of Object.keys(n))Kn[f]=n[f];Ym(a.config);const p=c(l,a.config,n,o);return Kn=Object.assign({},d),p}else{const u=Object.assign({},Kn);for(const d of Object.keys(n))Kn[d]=n[d];const h=new l(a.config);return Kn=Object.assign({},u),h}}}function fO(s,t){return s<t?-1:s>t?1:0}function od(s,t){return-1*fO(s,t)}function yr(s){if(s==null)return s;const t=[];for(const n of s)t.indexOf(n)===-1&&t.push(n);return t}function mO(s){if(s==null)throw new z(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function io(s,t,n){if(n!=null&&s.indexOf(n)<0)throw new z(`${n} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function Zm(s,t,n=0,r=1/0){return ks(n>=0),ks(r>=n),Array.isArray(s)&&s.length>=n&&s.length<=r&&s.every(o=>typeof o===t)}function _t(s,t){Array.isArray(s)?(k(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((n,r)=>_t(n,`element ${r+1} of ${t}`))):k(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${jw(s)}.`)}function jw(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>jw(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function gO(s,t){let n=Vt(),r;return(...a)=>{const i=Vt();return i-n<t||(n=i,r=s(...a)),r}}function qw(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jm(s,t){return V(()=>Gt(ue(L(s,s),t,!0)))}class cc extends jr{getConfig(){return{}}}class Qm extends cc{constructor(t){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return V(()=>{const n=Jm(t,this.axis),r=rn(n,0,this.maxValue);return L(t,pe(r,Y(St(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Qm.className="MaxNorm";X(Qm);class eg extends cc{constructor(t){super();this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return V(()=>pe(t,Y(St(),Jm(t,this.axis))))}getConfig(){return{axis:this.axis}}}eg.className="UnitNorm";X(eg);class tg extends cc{apply(t){return ss(t)}}tg.className="NonNeg";X(tg);class ng extends cc{constructor(t){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return V(()=>{const n=Jm(t,this.axis),r=Y(L(this.rate,rn(n,this.minValue,this.maxValue)),L(1-this.rate,n));return L(t,pe(r,Y(St(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ng.className="MinMaxNorm";X(ng);const Kw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Tt(s){return Xm(s)}function Xw(s,t={}){return lc(s,En.getMap().classNameMap,t,"constraint")}function Et(s){if(s==null)return null;if(typeof s=="string"){const n={className:s in Kw?Kw[s]:s,config:{}};return Xw(n)}else return s instanceof cc?s:Xw(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yO(s){return new Qm(s)}function bO(s){return new eg(s)}function xO(){return new tg}function wO(s){return new ng(s)}var vO=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",maxNorm:yO,unitNorm:bO,nonNeg:xO,minMaxNorm:wO});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $O=["channelsFirst","channelsLast"],CO=["nearest","bilinear"],NO=["valid","same","causal"],kO=["max","avg"],IO=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ya=new Map;function yt(s){io($O,"DataFormat",s)}function SO(s){io(CO,"InterpolationFormat",s)}function Dn(s){io(NO,"PaddingMode",s)}function Yw(s){io(kO,"PoolMode",s)}const uc=[],Zw="/";function lo(s,t){uc.push(s);try{const n=t();return uc.pop(),n}catch(n){throw uc.pop(),n}}function TO(){return uc.length===0?"":uc.join(Zw)+Zw}function Jw(s){if(!e1(s))throw new Error("Not a valid tensor name: '"+s+"'");return TO()+s}function Qw(s){if(!e1(s))throw new Error("Not a valid tensor name: '"+s+"'");Ya.has(s)||Ya.set(s,0);const t=Ya.get(s);if(Ya.set(s,Ya.get(s)+1),t>0){const n=`${s}_${t}`;return Ya.set(n,1),n}else return s}const EO=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function e1(s){return!!s.match(EO)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AO(s){return s===parseInt(s.toString(),10)}function br(s,t,n){t==null&&(t=0),n==null&&(n=s.length);let r=1;for(let o=t;o<n;++o)r*=s[o];return r}function Za(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<s.length;n++){const r=s[n];r<t&&(t=r)}return t}function xr(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<s.length;n++){const r=s[n];r>t&&(t=r)}return t}function os(s,t){if(t<s)throw new z(`end (${t}) < begin (${s}) is forbidden.`);const n=[];for(let r=s;r<t;++r)n.push(r);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ad(s,t){return ne(s,t)}function hc(s,t=-1){const n=s.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),P(s,n)}function DO(s,t){return V(()=>{if(s.shape.length!==2)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const n=hc(s,1);return og(n,[1,t,1])})}function RO(s){const t=[br(s.shape)];return P(s,t)}function FO(s){if(s.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],br(s.shape,1)];return P(s,t)}function co(s,t,n){return V(()=>{switch(s.rank){case 1:return Rh(s,t,n);case 2:return gm(s,[t,0],[n,s.shape[1]]);case 3:return Fh(s,[t,0,0],[n,s.shape[1],s.shape[2]]);case 4:return Ql(s,[t,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Fe(s,[t,0,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Fe(s,[t,0,0,0,0,0],[n,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function sg(s,t,n){return V(()=>{switch(s.rank){case 1:return Rh(s,t,n);case 2:return gm(s,[0,t],[s.shape[0],n]);case 3:return Fh(s,[0,0,t],[s.shape[0],s.shape[1],n]);case 4:return Ql(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],n]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function id(s,t,n,r){return V(()=>{switch(s.rank){case 1:return Rh(s,t,n);case 2:switch(r){case 1:return co(s,t,n);case 2:return sg(s,t,n);default:throw new z(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return co(s,t,n);case 2:return Fh(s,[0,t,0],[s.shape[0],n,s.shape[2]]);case 3:return sg(s,t,n);default:throw new z(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return co(s,t,n);case 2:return Ql(s,[0,t,0,0],[s.shape[0],n,s.shape[2],s.shape[3]]);case 3:return Ql(s,[0,0,t,0],[s.shape[0],s.shape[1],n,s.shape[3]]);case 4:return sg(s,t,n);default:throw new z(`The axis is not within the rank of the tensor ${r}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function rg(s,t=-1){let n;return t<0&&(n=s[0].rank,n!==0?t=n:t=0),t===s[0].rank&&(t=-1),ft(s,t)}function t1(s,t){switch(s.rank){case 1:return O0([s,t]);case 2:return L0([s,t],0);case 3:return P0([s,t],0);case 4:return z0([s,t],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function og(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new z(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return An(s,t)}function ld(s,t=0,n=1,r,o){return iw(s,t,n,r,o)}function Is(s,t,n,r){if(s.rank<2||t.rank<2)throw new Ce(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const o=s.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(o!==a)throw new Ce(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return Gh({a:s,b:t,transposeA:!1,transposeB:!1,bias:r?ag(s.rank,r,rs()):null,activation:n});{const o=s.shape.slice(),a=o.pop();s=P(s,[-1,a]);const i=t.shape.slice(),l=i.pop(),c=i.pop(),u=[...i,l],h=Array.from({length:t.rank},(m,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=P(Re(t,h),[c,-1]);const d=[...o,...u];return P(Gh({a:s,b:t,transposeA:!1,transposeB:!1,bias:r?ag(s.rank,r,rs()):null,activation:n}),d)}}function n1(s,t,n){return V(()=>(Array.isArray(t)?t=Ht(t,"int32"):t=ne(t,"int32"),Zr(s,t,n)))}function dc(s){return L(s,s)}function ag(s,t,n){const r=t.shape;if(t.rank!==1&&t.rank!==s)throw new z(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1,1]):P(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,1,r[0]]):P(t,[1].concat(r))}else if(s===4){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1]):P(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,r[0]]):P(t,[1].concat(r))}else if(s===3){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1]):P(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,r[0]]):P(t,[1].concat(r))}else if(s<3)return t;throw new z(`Unsupported input rank by biasAdd: ${t.rank}`)}function as(s,t,n){return V(()=>(n==null&&(n=rs()),yt(n),Y(s,ag(s.rank,t,n))))}function _O(s,t=1){if(t!==1)throw new Ce(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ma(s)}function OO(s){return V(()=>pe(s,Y(bt(s),1)))}function s1(s,t,n,r){return V(()=>pw(s,t,n,r))}function LO(s){return V(()=>{const t=Y(.5,L(.2,s));return rn(t,0,1)})}function pc(s,t,n=!1){return n?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const PO=["fanIn","fanOut","fanAvg"],zO=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MO(s){io(PO,"FanMode",s)}function BO(s){io(zO,"Distribution",s)}class Xn extends jr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ig extends Xn{apply(t,n){return wt(t,n)}}ig.className="Zeros";X(ig);class cd extends Xn{apply(t,n){return xn(t,n)}}cd.className="Ones";X(cd);class lg extends Xn{constructor(t){super();if(typeof t!="object")throw new z(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new z(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return V(()=>L(me(this.value),xn(t,n)))}getConfig(){return{value:this.value}}}lg.className="Constant";X(lg);class cg extends Xn{constructor(t){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return Ha(t,this.minval,this.maxval,n)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}cg.className="RandomUniform";X(cg);class ug extends Xn{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ce(`randomNormal does not support dType ${n}.`);return ld(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ug.className="RandomNormal";X(ug);class hg extends Xn{constructor(t){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ce(`truncatedNormal does not support dType ${n}.`);return Lh(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hg.className="TruncatedNormal";X(hg);class dg extends Xn{constructor(t){super();this.gain=t.gain!=null?t.gain:1}apply(t,n){return V(()=>{if(t.length!==2||t[0]!==t[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return L(this.gain,rm(t[0]))})}getConfig(){return{gain:this.gain}}}dg.className="Identity";X(dg);function VO(s,t="channelsLast"){let n,r;if(yt(t),s.length===2)n=s[0],r=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const o=br(s,2);n=s[1]*o,r=s[0]*o}else if(t==="channelsLast"){const o=br(s,0,s.length-2);n=s[s.length-2]*o,r=s[s.length-1]*o}}else{const o=br(s);n=Math.sqrt(o),r=Math.sqrt(o)}return[n,r]}class un extends Xn{constructor(t){super();if(t.scale<0)throw new z(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,MO(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,BO(this.distribution),this.seed=t.seed}apply(t,n){const r=VO(t),o=r[0],a=r[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(o+a)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Ce(`${this.getClassName()} does not support dType ${n}.`);return Lh(t,0,l,n,this.seed)}else{const l=Math.sqrt(3*i);return Ha(t,-l,l,n)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}un.className="VarianceScaling";X(un);class ud extends un{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}ud.className="GlorotUniform";X(ud);class hd extends un{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}hd.className="GlorotNormal";X(hd);class dd extends un{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}dd.className="HeNormal";X(dd);class pd extends un{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}pd.className="HeUniform";X(pd);class fd extends un{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return un.className}}fd.className="LeCunNormal";X(fd);class md extends un{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return un.className}}md.className="LeCunNormal";X(md);class pg extends Xn{constructor(t){super();if(this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new Ce("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,n){return V(()=>{if(t.length<2)throw new Ce("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const r=t[0]>t[1]?[t[1],t[0]]:t,o=ld(r,0,1,"float32");let a=Nw.gramSchmidt(o);return t[0]>t[1]&&(a=Re(a)),L(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}}pg.className="Orthogonal";X(pg);const r1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function o1(s,t={}){return lc(s,En.getMap().classNameMap,t,"initializer")}function ht(s){return Xm(s)}function ot(s){if(typeof s=="string"){const t=s in r1?r1[s]:s;if(t==="GlorotNormal")return new hd;if(t==="GlorotUniform")return new ud;if(t==="HeNormal")return new dd;if(t==="HeUniform")return new pd;if(t==="LeCunNormal")return new fd;if(t==="LeCunUniform")return new md;{const n={};return n.className=t,n.config={},o1(n)}}else return s instanceof Xn?s:o1(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WO(){return new ig}function UO(){return new cd}function GO(s){return new lg(s)}function HO(s){return new cg(s)}function jO(s){return new ug(s)}function qO(s){return new hg(s)}function KO(s){return new dg(s)}function XO(s){return new un(s)}function YO(s){return new ud(s)}function ZO(s){return new hd(s)}function JO(s){return new dd(s)}function QO(s){return new pd(s)}function eL(s){return new fd(s)}function tL(s){return new md(s)}function nL(s){return new pg(s)}var sL=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",zeros:WO,ones:UO,constant:GO,randomUniform:HO,randomNormal:jO,truncatedNormal:qO,identity:KO,varianceScaling:XO,glorotUniform:YO,glorotNormal:ZO,heNormal:JO,heUniform:QO,leCunNormal:eL,leCunUniform:tL,orthogonal:nL});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let rL=0;function a1(){return rL++}const gd={};function yd(s=""){return s in gd||(gd[s]=0),gd[s]+=1,s+gd[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fg(s){return Array.isArray(s)&&Array.isArray(s[0])}function bd(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function Ne(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new z(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Be(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new z(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xd(s){let t=0;for(const n of s)n.shape.length===0?t+=1:t+=n.shape.reduce((r,o)=>r*o);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const i1="Variable";class l1{constructor(t,n="float32",r=i1,o=!0,a=null){this.dtype=n==null?"float32":n,this.shape=t.shape,this.id=a1(),r=r==null?i1:r,this.originalName=Jw(r),this.name=Qw(this.originalName),this.trainable_=o,this.constraint=a,this.val=cw(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),oL(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function oL(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function mg(s){return s.map(t=>t.read())}function gg(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vt{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class is{constructor(t,n,r,o,a,i,l){this.dtype=t,this.shape=n,this.sourceLayer=r,this.inputs=o,this.callArgs=a,this.outputTensorIndex=l,this.id=a1(),i!=null&&(this.originalName=Jw(i),this.name=Qw(this.originalName)),this.rank=n.length}}let aL=0;class wd{constructor(t,n){this.callArgs=n,this.id=aL++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const r of t.inboundLayers)r!=null&&r.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const n of this.inboundLayers)n!=null?t.push(n.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let iL=0;class Oe extends jr{constructor(t={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=iL++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=t.name;if(!n){const r=this.getClassName();n=Ks(r)+"_"+yd(r)}if(this.name=n,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let r;if(t.batchInputShape!=null)r=t.batchInputShape;else if(t.inputShape!=null){let a=null;t.batchSize!=null&&(a=t.batchSize),r=[a].concat(t.inputShape)}this.batchInputShape=r;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,n){return t.name+"_ib-"+n.toString()}getNodeAtIndex(t,n){if(this.inboundNodes.length===0)throw new qn(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=t)throw new z(`Asked to get ${n} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return cn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return cn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} is not connected, no input to return.`);return cn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ns(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ns(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(n=>n.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=tt(t),this.inputSpec==null||this.inputSpec.length===0)return;const n=tt(this.inputSpec);if(t.length!==n.length)throw new z(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){const o=t[r],a=n[r];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new z(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new z(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new z(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new z(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const l=o.shape;for(const c in a.axes){const u=Number(c),h=a.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new z(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const c=a.shape[l],u=o.shape[l];if(c!=null&&u!=null&&c!==u)throw new z(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(t,n){return t}invokeCallHook(t,n){this._callHook!=null&&this._callHook(t,n)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,n){n=n||{},this.assertNotDisposed();const r=tt(t);let o=!0;for(const i of r)if(!(i instanceof is)){o=!1;break}let a=!0;for(const i of r)if(i instanceof is){a=!1;break}if(o===a)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return lo(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of tt(t))i.push(l.shape);this.build(cn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let i=this.call(t,n);const l=tt(i),c=[];for(let u of l)r.indexOf(u)!==-1&&(u=u.clone()),c.push(u);if(i=cn(c),this.activityRegularizer!=null)throw new Ce("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=lL(t),l=this.computeOutputShape(i);let c;const u=cL(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?c=l.map((h,d)=>new is(u,h,this,tt(t),n,this.name,d)):c=new is(u,l,this,tt(t),n,this.name),this.addInboundNode(t,c,null,null,i,l,n),this._refCount++,this.activityRegularizer!=null)throw new Ce("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((r,o)=>{r!=null&&t[o]!=null&&t[o]!==r&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ns(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const n of this.inboundNodes){const r=JSON.stringify(n.outputShapes);t.indexOf(r)===-1&&t.push(r)}if(t.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Ns(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xd(this.weights)}build(t){this.built=!0}getWeights(t=!1){return mg(t?this.trainableWeights:this.weights)}setWeights(t){V(()=>{const n=this.weights;if(n.length!==t.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${n.length} weights. Provided weights: ${t}...`);if(n.length===0)return;const r=[],o=mg(n);for(let a=0;a<o.length;++a){const i=o[a],l=n[a],c=t[a];if(!Ae(i.shape,c.shape))throw new z(`Layer weight shape ${i.shape} not compatible with provided weight shape ${c.shape}`);r.push([l,c])}gg(r)})}addWeight(t,n,r,o,a,i,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new z(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(o=ot("zeros"));const c=o.apply(n,r),u=new l1(c,r,t,i,l);return c.dispose(),a!=null&&this.addLoss(()=>a.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=tt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(t,n,r,o,a,i,l=null){const c=tt(t);n=tt(n),r=tt(r),o=tt(o),a=bd(a),i=bd(i);const u=[],h=[],d=[];for(const p of c)u.push(p.sourceLayer),h.push(p.nodeIndex),d.push(p.tensorIndex);new wd({outboundLayer:this,inboundLayers:u,nodeIndices:h,tensorIndices:d,inputTensors:c,outputTensors:n,inputMasks:r,outputMasks:o,inputShapes:a,outputShapes:i},l);for(let p=0;p<n.length;p++)n[p].sourceLayer=this,n[p].nodeIndex=this.inboundNodes.length-1,n[p].tensorIndex=p}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount==0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function lL(s){s=tt(s);const t=[];for(const n of s)t.push(n.shape);return cn(t)}function cL(s){return"float32"}function c1(s,t,n){if((t==null||n!=null&&n>0)&&(t=s.sourceLayer,n=s.nodeIndex),t.inboundNodes.length===0)return[s];{const r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{const o=[];for(let a=0;a<r.inboundLayers.length;a++){const i=r.inputTensors[a],l=r.inboundLayers[a],c=r.nodeIndices[a],u=c1(i,l,c);for(const h of u)o.indexOf(h)===-1&&o.push(h)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ja extends Oe{constructor(t){super({dtype:t.dtype,name:t.name!=null?t.name:yd("input").toString()});if(t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=t.dtype||"float32";this.batchInputShape=n,this.dtype=r,this.inputSpec=[{shape:n}];const o=new is(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new wd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ja.className="InputLayer";X(Ja);function u1(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let n=s.dtype;return n==null&&(n="float32"),new Ja({batchInputShape:t,name:s.name,dtype:n,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function wr(s){if(s==null)return;const t=[],n=[],r=[];for(const o in s){const a=s[o];if(typeof a!="number"){const i=a;t.push(i.data()),n.push(o),r.push(i)}}if(t.length>0){const o=await Promise.all(t);for(let a=0;a<o.length;++a)s[n[a]]=o[a][0];$e(r)}}function h1(s){if(s!=null)for(const t in s){const n=s[t];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var d1;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(d1||(d1={}));const uL=125;class Qa{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,n){}async onEpochEnd(t,n){}async onBatchBegin(t,n){}async onBatchEnd(t,n){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class p1{constructor(t,n=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=n}append(t){this.callbacks.push(t)}setParams(t){for(const n of this.callbacks)n.setParams(t)}setModel(t){for(const n of this.callbacks)n.setModel(t)}async onEpochBegin(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onEpochBegin(t,n)}async onEpochEnd(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onEpochEnd(t,n)}async onBatchBegin(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onBatchBegin(t,n)}async onBatchEnd(t,n){n==null&&(n={});for(const r of this.callbacks)await r.onBatchEnd(t,n)}async onTrainBegin(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainEnd(t)}}class hL extends Qa{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,n){n==null&&(n={});const r=n.size==null?0:n.size;this.seen+=r;for(const o in n){const a=n[o];if(typeof a=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+a*r;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const l=V(()=>Y(this.totals[o],L(a,r)));this.totals[o]=l,i!=null&&i.dispose()}}}async onEpochEnd(t,n){if(n!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?n[r]=this.totals[r]/this.seen:V(()=>{const o=L(pe(1,this.seen),this.totals[r]);n[r]=o,this.totals[r].dispose(),Dt(n[r])}))}}class f1 extends Qa{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,n){n==null&&(n={}),this.epoch.push(t);for(const r in n)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(n[r])}async syncData(){const t=[],n=[],r=[];for(const a in this.history){const i=this.history[a];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const c=i[l];t.push(c.data()),n.push(a),r.push(l)}}const o=await Promise.all(t);for(let a=0;a<o.length;++a)this.history[n[a]][r[a]].dispose(),this.history[n[a]][r[a]]=o[a][0]}}class m1 extends Qa{constructor(t,n){super();if(this.currentEpoch=0,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=uL),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");jc(this.yieldEvery)&&(this.maybeWait=gO(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,n,r){const o=[];this.yield!=null&&(await wr(r),o.push(this.yield(t,n,r))),o.push(td()),await Promise.all(o)}async onEpochBegin(t,n){this.currentEpoch=t,this.epochBegin!=null&&(await wr(n),await this.epochBegin(t,n))}async onEpochEnd(t,n){const r=[];this.epochEnd!=null&&(await wr(n),r.push(this.epochEnd(t,n))),this.yieldEvery==="epoch"&&r.push(td()),await Promise.all(r)}async onBatchBegin(t,n){this.batchBegin!=null&&(await wr(n),await this.batchBegin(t,n))}async onBatchEnd(t,n){const r=[];this.batchEnd!=null&&(await wr(n),r.push(this.batchEnd(t,n))),this.yieldEvery==="batch"?r.push(td()):jc(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,t,n)),await Promise.all(r)}async onTrainBegin(t){this.trainBegin!=null&&(await wr(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await wr(t),await this.trainEnd(t))}}function g1(s,t){return s==null&&(s={}),s instanceof Qa?[s]:Array.isArray(s)&&s[0]instanceof Qa?s:tt(s).map(r=>new m1(r,t))}class Rn{constructor(){}static registerCallbackConstructor(t,n){k(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Rn.checkForDuplicate(n),Rn.constructors[t]==null&&(Rn.constructors[t]=[]),Rn.constructors[t].push(n)}static checkForDuplicate(t){for(const n in Rn.constructors)Rn.constructors[+n].forEach(o=>{if(o===t)throw new z("Duplicate callback constructor.")})}static clear(){Rn.constructors={}}static createCallbacks(t){const n=[];for(const r in Rn.constructors){const o=+r;t>=o&&n.push(...Rn.constructors[o])}return n.map(r=>new r)}}Rn.constructors={};function y1(s,t,n,r,o,a,i,l,c){const u=new f1,h=[new hL,...Rn.createCallbacks(t)];s!=null&&h.push(...s),h.push(u);const d=new p1(h);return d.setParams({epochs:n,initialEpoch:r,samples:o,steps:a,batchSize:i,verbose:t,doValidation:l,metrics:c}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ls(s,t={},n=!1){return lc(s,En.getMap().classNameMap,t,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vd(s,t){return V(()=>{s.dtype!=="float32"&&(s=ne(s,"float32"));const n=ue(dc(s),t,!0),r=Ba(n.shape,St()),o=Gt(vs(n,r));return pe(s,o)})}function uo(s,t){return V(()=>ut(dc(ce(t,s)),-1))}function $d(s,t){return V(()=>ut(bt(ce(t,s)),-1))}function ei(s,t){return V(()=>{const n=ce(s,t),r=rn(bt(s),St(),Number.MAX_VALUE),o=bt(pe(n,r));return L(100,ut(o,-1))})}function dL(s,t){return V(()=>{const n=rn(t,St(),Number.MAX_VALUE),r=bn(Y(1,n)),o=rn(s,St(),Number.MAX_VALUE),a=bn(Y(1,o));return ut(dc(ce(r,a)),-1)})}function pL(s,t){return V(()=>{const n=vs(0,ce(1,L(s,t)));return ut(dc(n),-1)})}function fL(s,t){return V(()=>{const n=vs(0,ce(1,L(s,t)));return ut(n,-1)})}function mL(s,t){return V(()=>{const n=ue(L(s,t),-1),r=Un(L(ce(1,s),t),-1);return vs(0,Y(1,ce(r,n)))})}function gL(s,t){return V(()=>{const n=Math.log(2),r=ce(t,s),o=ce(Y(r,Jr(L(-2,r))),n);return ut(o,-1)})}function fc(s,t,n=!1){return V(()=>{if(n)t=ec(t);else{const r=ue(t,t.shape.length-1,!0);t=pe(t,r)}return t=rn(t,St(),1-St()),rt(ue(L(ne(s,"float32"),bn(t)),t.shape.length-1))})}function Cd(s,t,n=!1){return V(()=>{const r=ne(Va(RO(s)),"int32");t=rn(t,St(),1-St());const o=t.shape,a=P(Ra(r,o[o.length-1]),o);return fc(a,t,n)})}function yL(s,t){if(!Ae(s.shape,t.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return V(()=>{const n=ss(t),r=rt(bt(t));return Y(ce(n,L(t,s)),jl(yn(r)))})}function Nd(s,t){return V(()=>{let n;return n=rn(t,St(),1-St()),n=bn(pe(n,ce(1,n))),ut(yL(s,n),-1)})}function bL(s,t){return V(()=>{const n=rn(s,St(),1),r=rn(t,St(),1);return ue(L(s,bn(pe(n,r))),-1)})}function xL(s,t){return V(()=>{const n=bn(Y(St(),t));return ut(ce(t,L(s,n)),-1)})}function yg(s,t){return V(()=>{const n=vd(s,-1),r=vd(t,-1),o=L(n,r);return rt(ue(o,-1))})}const kd={meanSquaredError:uo,meanAbsoluteError:$d,meanAbsolutePercentageError:ei,meanSquaredLogarithmicError:dL,squaredHinge:pL,hinge:fL,categoricalHinge:mL,logcosh:gL,categoricalCrossentropy:fc,sparseCategoricalCrossentropy:Cd,binaryCrossentropy:Nd,kullbackLeiblerDivergence:bL,poisson:xL,cosineProximity:yg};function bg(s){if(typeof s=="string"){if(s in kd)return kd[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xg(s,t){return V(()=>{const n=L(.5,wn(t)),r=ad(an(t,n),s.dtype);return ut(gn(s,r),-1)})}function wg(s,t){return V(()=>ad(gn(qr(s,-1),qr(t,-1)),"float32"))}function b1(s,t){return V(()=>ne(ue(Gn(gn(s,1),gn(t,1))),"float32"))}function wL(s,t){return V(()=>ne(ue(Gn(gn(s,1),gn(t,0))),"float32"))}function vL(s,t){return V(()=>ne(ue(Gn(gn(s,0),gn(t,1))),"float32"))}function x1(s,t){return V(()=>{const n=b1(s,t),r=vL(s,t),o=Y(n,r);return ne(Kt(an(o,0),pe(n,o),0),"float32")})}function $L(s,t){return V(()=>{const n=b1(s,t),r=wL(s,t),o=Y(n,r);return ne(Kt(an(o,0),pe(n,o),0),"float32")})}function w1(s,t){return Nd(s,t)}function v1(s,t){return s.rank===t.rank&&(s=$s(s,[s.rank-1])),t=qr(t,-1),t.dtype!==s.dtype&&(t=ne(t,s.dtype)),ne(gn(s,t),"float32")}const CL=uo,NL=uo,kL=$d,IL=$d,SL=ei,TL=ei,vg=fc,EL=yg,$1=Cd,Id={binaryAccuracy:xg,categoricalAccuracy:wg,precision:x1,categoricalCrossentropy:vg,sparseCategoricalCrossentropy:$1,mse:CL,MSE:NL,mae:kL,MAE:IL,mape:SL,MAPE:TL,cosine:EL};function AL(s){if(typeof s=="string"&&s in Id)return Id[s];if(typeof s!="string"&&s!=null)return s;throw new z(`Unknown metric ${s}`)}function Sd(s){if(ks(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const n of Object.keys(kd))if(kd[n]===s){t=n;break}if(t!==void 0)return t;for(const n of Object.keys(Id))if(Id[n]===s){t=n;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function DL(s){const t={Adagrad:()=>so.adagrad(.01),Adadelta:()=>so.adadelta(1,.95,St()),Adam:()=>so.adam(.001,.9,.999,St()),Adamax:()=>so.adamax(.002,.9,.999,St(),0),RMSProp:()=>so.rmsprop(.001,.9,0,St()),SGD:()=>so.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new z(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const C1=1*1024*1024;function N1(s,t,n=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!$g(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const r=JSON.stringify(s);r.length>C1&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${C1}.`)}}function $g(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const n of t)if(typeof n!="string"||!$g(s[n]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!$g(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function RL(s,t,n,r=console.log){const o=_L(s),a=["Layer (type)","Output shape","Param #"];o?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(h=>Math.floor(t*h)));let i;if(!o){a.push("Receives inputs"),i=[];for(const h in s.nodesByDepth)i.push(...s.nodesByDepth[h])}r("_".repeat(t)),Td(a,n,r),r("=".repeat(t));const l=s.layers;for(let h=0;h<l.length;++h)o?OL(l[h],n,r):LL(l[h],n,i,r),r((h===l.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const c=FL(s),u=xd(s.nonTrainableWeights);r(`Total params: ${c+u}`),r(`Trainable params: ${c}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function FL(s){let t;return s.collectedTrainableWeights!=null?t=xd(s.collectedTrainableWeights):t=xd(s.trainableWeights),t}function _L(s){let t=!0;const n=[],r=[];for(const o in s.nodesByDepth)n.push(s.nodesByDepth[o]);for(const o of n){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}r.push(...o)}if(t)for(const o of s.layers){let a=!1;for(const i of o.inboundNodes)if(r.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Td(s,t,n=console.log){let r="";for(let o=0;o<s.length;++o)o>0&&(r=r.slice(0,r.length-1)+" "),r+=s[o],r=r.slice(0,t[o]),r+=" ".repeat(t[o]-r.length);n(r)}function OL(s,t,n){let r;try{r=JSON.stringify(s.outputShape)}catch{r="multiple"}const o=s.name,a=s.getClassName(),i=[`${o} (${a})`,r,s.countParams().toString()];Td(i,t,n)}function LL(s,t,n,r){let o;try{o=JSON.stringify(s.outputShape)}catch{o="multiple"}const a=[];for(const h of s.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${p}[${f}][${m}]`)}const i=s.name,l=s.getClassName(),c=a.length===0?"":a[0],u=[`${i} (${l})`,o,s.countParams().toString(),c];Td(u,t,r);for(let h=1;h<a.length;++h)Td(["","","",a[h]],t,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function k1(s,t,n){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof n=="string"}function mc(s,t){if(s===null)return null;if(typeof s=="string")return ao(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const n=[],r=s.length;for(let o=0;o<r;++o){const a=s[o];k1(t,o,a)?n.push(a):n.push(mc(a,t))}return n}else{const n={};for(const r of Object.keys(s)){const o=s[r];if(r==="name"&&typeof o=="string")n[r]=o;else{const a=ao(r);n[a]=mc(o,a)}}return n}}function Cg(s,t){if(s==null)return null;if(typeof s=="string")return Ks(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const n=[],r=s.length;for(let o=0;o<r;++o){const a=s[o];k1(t,o,a)?n.push(a):n.push(Cg(a,t))}return n}else{const n={};for(const r of Object.keys(s)){const o=s[r],a=Ks(r);(r==="name"||r==="className")&&typeof o=="string"?n[a]=o:n[a]=Cg(o,r)}return n}}/** @license See the LICENSE file. */const Ed="3.9.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function PL(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return ne(t,s.dtype)}catch{throw new z(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class vr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof vr)for(const n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(const n of t)this.add(n.key,n.value)}}add(t,n,r){if(this.id2Value[t.id]==null)this.id2Value[t.id]=PL(t,n),this.name2Id[t.name]=t.id,r!=null&&(this.id2Mask[t.id]=r);else throw new z(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof is){if(this.id2Value[t.id]==null)throw new z(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const n=this.name2Id[t];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof is){if(this.id2Value[t.id]==null)throw new z(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const n=this.name2Id[t];if(n==null)throw new z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&$e(this.id2Mask)}}const Ng={},I1={};function gc(s,t,n,r){const o=n==null?!1:n.training,a=Array.isArray(s),i=a?s:[s],l=i.map(m=>m.name),c=[],u=t.names();for(const m of l)u.indexOf(m)!==-1?c.push(t.getValue(m)):c.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let d,p;if(Ng[h]==null){const m=zL(i,t);d=m.sorted,p=m.recipientCounts,Ng[h]=d,I1[h]=p}d=Ng[h],p={},o||Object.assign(p,I1[h]);const f=new vr(t);for(let m=0;m<d.length;++m){if(r!=null){const E=hh().numTensors;E>r.maxNumTensors&&(r.maxNumTensors=E),E<r.minNumTensors&&(r.minNumTensors=E)}const g=d[m],y=g.sourceLayer;if(y instanceof Ja)continue;const b=[],x=[],w=[];let v=!1;for(const E of g.inputs){const A=f.getValue(E),_=f.getMask(E);b.push(A),x.push(_),_!=null&&(v=!0),o||(p[E.name]--,p[E.name]===0&&!t.hasKey(E)&&l.indexOf(E.name)===-1&&!A.isDisposed&&E.sourceLayer.stateful!==!0&&w.push(A))}v&&(n=n||{},n.mask=x[0]);const C=tt(y.apply(b,n));let I=null;y.supportsMasking&&(I=y.computeMask(b,x));const N=BL(g),S=Array.isArray(N)?N:[N];for(let E=0;E<S.length;++E){f.hasKey(S[E])||f.add(S[E],C[E],Array.isArray(I)?I[0]:I);const A=l.indexOf(S[E].name);A!==-1&&(c[A]=C[E])}o||$e(w)}return f.disposeMasks(),a?c:c[0]}function zL(s,t){k(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(s.length===1){const o=S1(s[0],t);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const a of s){const{sorted:i,recipientMap:l}=S1(a,t);for(const c of i)o.has(c.name)||(n.push(c),o.add(c.name));for(const c in l)r[c]==null&&(r[c]=new Set),l[c].forEach(u=>r[c].add(u))}}return{sorted:n,recipientCounts:ML(r)}}function ML(s){const t={};for(const n in s)t[n]=s[n].size;return t}function S1(s,t){const n=new Set,r=[],o={};for(const l of t.names())n.add(l);const a=[],i=[];for(a.push(s);a.length>0;){const l=a[a.length-1];if(n.has(l.name)){a.pop();continue}const c=i[i.length-1]===a.length-1;if(l.inputs.length===0||c)a.pop(),r.push(l),n.add(l.name),c&&i.pop();else{i.push(a.length-1);for(const u of l.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(l.name),!n.has(u.name)&&a.push(u)}}return{sorted:r,recipientMap:o}}function BL(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let n=null;for(let r=0;r<s.sourceLayer.inboundNodes.length;++r)for(const o of s.sourceLayer.inboundNodes[r].outputTensors)if(o.id===s.id){n=r;break}t=s.sourceLayer.getOutputAt(n)}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class cs extends Oe{constructor(t){super({});if(this.containerNodes=new Set,this.name=t.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=yd(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],yr(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);yr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.sourceLayer,v=x.nodeIndex,C=x.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(C)}for(const x of this.inputs){const w=x.sourceLayer,v=x.nodeIndex,C=x.tensorIndex;ks(v===0,"input layer has >1 nodes"),ks(C===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const w=this.inputLayers[x];if(!(w instanceof Ja))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const n={},r={},o={},a={},i={},l=[],c=(x,w,v,C,I,N)=>{(C==null||I==null||N==null)&&(C=x.sourceLayer,I=x.nodeIndex,N=x.tensorIndex);const S=C.inboundNodes[I];if(v.indexOf(S)!==-1)throw new qn(`The tensor ${x.name} at layer "${C.name}" is part of a cycle.`);if(w.indexOf(S)!==-1)return;this.containerNodes.add(cs.nodeKey(C,I)),C.id in i||(i[C.id]=Object.keys(i).length),v.indexOf(S)===-1&&v.push(S);const E=S.inboundLayers.length;for(let A=0;A<E;A++){const _=S.inputTensors[A],D=S.inboundLayers[A],O=S.nodeIndices[A],B=S.tensorIndices[A];c(_,w,v,D,O,B)}for(w.push(S);v.indexOf(S)>=0;)v.splice(v.indexOf(S),1);l.push(S)},u=[],h=[];for(const x of this.outputs)c(x,u,h);const d=l.slice().reverse();for(const x of d){r[x.id]=x,x.id in n||(n[x.id]=0);let w=n[x.id];const v=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];w=Math.max(w,v),o[x.outboundLayer.id]=w,a[x.outboundLayer.id]=x.outboundLayer,n[x.id]=w;for(let C=0;C<x.inboundLayers.length;C++){const I=x.inboundLayers[C],N=x.nodeIndices[C],S=I.inboundNodes[N],E=n[S.id]==null?0:n[S.id];n[S.id]=Math.max(w+1,E),r[S.id]=S}}const p={};for(const x in n){const w=n[x];w in p||(p[w]=[]),p[w].push(r[x])}const f={};for(const x in o){const w=o[x];w in f||(f[w]=[]),f[w].push(a[x])}let m=Object.keys(f).map(x=>parseInt(x,10)).sort(od);this.layers=[];for(const x of m){const w=f[x];w.sort((v,C)=>{const I=i[v.id],N=i[C.id];return I<N?-1:I>N?1:0});for(const v of w)v instanceof cs&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=f,m=Object.keys(p).map(x=>parseInt(x,10)).sort(od);const g=this.inputs.slice(),y=[];for(const x of m)for(const w of p[x]){const v=w.outboundLayer;if(v!=null){for(const C of w.inputTensors)if(g.indexOf(C)===-1)throw new qn(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${v.name}". The following previous layers were accessed without issue: ${y}`);for(const C of w.outputTensors)g.push(C);y.push(v.name)}}this.nodesByDepth=p;const b=this.layers.map(x=>x.name);for(const x of b){const w=b.filter(v=>v===x).length;if(w!==1)throw new qn(`The name "${x}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new wd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(const n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const r of this.layers)n.push(...r.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){const r={};let o=0;for(const i of this.layers)for(const l of i.weights){if(r[l.originalName]!=null)throw new z(`Duplicate weight name: ${l.originalName}`);r[l.originalName]=l,o++}const a=[];for(const i in t){let l=i;if(r[i]==null){const c=i.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(r[l]!=null)a.push([r[l],t[i]]);else if(n)throw new z(`Provided weight data has no target variable: ${i}`);delete r[l]}if(n){const i=[];for(const l in r)i.push(l);if(i.length>0)throw new z(`${i.length} of ${o} weights are not set: ${i}`)}gg(a)}updatedConfig(){const t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${Ed}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){const r=Cg(this.updatedConfig());return n?JSON.stringify(r):r}call(t,n){return V(()=>{t=tt(t);const r=new vr;for(let o=0;o<this.inputs.length;++o)r.add(this.inputs[o],t[o]);return gc(this.outputs,r,n)})}computeMask(t,n){return V(()=>{t=tt(t);let r;return n==null?r=oo(null,t.length):r=tt(n),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){const n=bd(t);if(n.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let l=0;l<n.length;l++){const c=this.inputLayers[l],u=n[l],h=c.name+"_0_0";r[h]=u}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(od);if(o.length>1)for(const l of o){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(h.id)!==-1)continue;const d=[];for(let g=0;g<u.inboundLayers.length;g++){const y=u.inboundLayers[g],b=u.nodeIndices[g],x=u.tensorIndices[g],w=`${y.name}_${b}_${x}`,v=r[w];d.push(v)}const p=h.computeOutputShape(cn(d)),f=bd(p),m=h.inboundNodes.indexOf(u);for(let g=0;g<f.length;g++){const y=`${h.name}_${m}_${g}`;r[y]=f[g]}}}const a=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const c=this.outputLayers[l],u=this.outputLayersNodeIndices[l],h=this.outputLayersTensorIndices[l],d=`${c.name}_${u}_${h}`;i.push(d)}for(let l=0;l<i.length;l++){const c=i[l];ks(c in r),a.push(r[c])}return cn(a)}runInternalGraph(t,n){n==null&&(n=oo(null,t.length));const r={};for(let c=0;c<this.inputs.length;++c){const u=this.inputs[c],h=t[c],d=n[c];r[u.id]=[h,d]}const o=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(od);for(const c of o){const u=this.nodesByDepth[c];for(const h of u){const d=h.outboundLayer,p=h.inputTensors,f=h.outputTensors,m=new Array;for(const g of p)g.id in r&&m.push(r[g.id]);if(m.length===p.length){let g={},y,b,x,w;if(h.callArgs!=null&&(g=h.callArgs),m.length===1){const[v,C]=m[0];g.mask==null&&(g.mask=C),x=tt(d.call(v,g)),w=tt(d.computeMask(v,C)),y=[v],b=[C]}else y=m.map(v=>v[0]),b=m.map(v=>v[1]),g.mask==null&&(g.mask=b),x=tt(d.call(y,g)),w=tt(d.computeMask(y,b));if(d.activityRegularizer)throw new Ce("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<f.length;++v){const C=f[v],I=x[v],N=w[v];r[C.id]=[I,N]}}}}const a=[],i=[],l=[];for(const c of this.outputs){ks(c.id in r,`Could not compute output ${c.name} : ${c.id}`);const[u,h]=r[c.id];l.push(u.shape),a.push(u),i.push(h)}return[a,i,l]}buildNodeConversionMap(t){const n={};let r;for(const o of this.layers){r=o instanceof cs?1:0;for(let a=0;a<o.inboundNodes.length;a++){const i=cs.nodeKey(o,a);this.containerNodes.has(i)&&(n[i]=r,r+=1)}}return n}getLayer(t,n){if(n!=null){if(this.layers.length<=n)throw new z(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(t==null)throw new z("Provide either a layer name or layer index");for(const r of this.layers)if(r.name===t)return r;throw new z(`No such layer: ${t}`)}calculateLosses(){return V(()=>{const t=[];for(const n of this.layers)for(let r=0;r<n.inboundNodes.length;++r){const o=cs.nodeKey(n,r);this.containerNodes.has(o)&&t.push(...n.calculateLosses())}return t})}getConfig(){const t={name:this.name},n=this.buildNodeConversionMap(this.layers),r=[];for(const i of this.layers){const l=i.getClassName(),c=i.getConfig(),u=[];for(let d=0;d<i.inboundNodes.length;d++){const p=i.inboundNodes[d],f=cs.nodeKey(i,d);let m={};if(this.containerNodes.has(f)){if(p.callArgs)try{JSON.stringify(p.callArgs),m=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(p.inboundLayers.length>0){const g=[];for(let y=0;y<p.inboundLayers.length;y++){const b=p.inboundLayers[y],x=p.nodeIndices[y],w=p.tensorIndices[y],v=cs.nodeKey(b,x);let C=n[v];C==null&&(C=0),g.push([b.name,C,w,m])}u.push(g)}}}const h={};h.name=i.name,h.className=l,h.config=c,h.inboundNodes=u,r.push(h)}t.layers=r;const o=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],c=this.inputLayersNodeIndices[i],u=cs.nodeKey(l,c);if(!this.containerNodes.has(u))continue;let h=n[u];h==null&&(h=0);const d=this.inputLayersTensorIndices[i];o.push([l.name,h,d])}t.inputLayers=o;const a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],c=this.outputLayersNodeIndices[i],u=cs.nodeKey(l,c);if(!this.containerNodes.has(u))continue;let h=n[u];h==null&&(h=0);const d=this.outputLayersTensorIndices[i];a.push([l.name,h,d])}return t.outputLayers=a,t}static fromConfig(t,n,r={},o=!1){const a={},i={};function l(y,b){y.name in i?i[y.name].push(b):i[y.name]=[b]}function c(y,b){const x=[];let w;for(const v of b){const C=v[0],I=v[1],N=v[2];if(w=v[3]==null?{}:v[3],!(C in a)){l(y,b);return}const S=a[C];if(S.inboundNodes.length<=I){l(y,b);return}const E=S.inboundNodes[I];x.push(E.outputTensors[N])}x.length>0&&y.apply(cn(x),w)}function u(y){const b=y.name,x=ls(y,n.customObjects!=null?n.customObjects:{});x.setFastWeightInitDuringBuild(o),a[b]=x,y.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${v}`);l(x,v)})}const h=n.name,d=n.layers;for(const y of d)u(y);for(;!mO(i);)for(const y of d){const b=a[y.name];if(b.name in i){const x=i[b.name];delete i[b.name];for(const w of x)c(b,w)}}const p=[],f=[],m=n.inputLayers;for(const y of m){const b=y[0],x=y[1],w=y[2];ks(b in a);const C=a[b].inboundNodes[x].outputTensors;p.push(C[w])}const g=n.outputLayers;for(const y of g){const b=y[0],x=y[1],w=y[2];ks(b in a);const C=a[b].inboundNodes[x].outputTensors;f.push(C[w])}return new t({inputs:p,outputs:f,name:h})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VL(s,t,n){const r=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(o=>null);if(r===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==r)throw new Error(`Provided ${n} is an array of ${s.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const o=[];return t.forEach(a=>{a in s?o.push(s[a]):o.push(null)}),o}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(s)}`)}function T1(s,t){return VL(s,t,"classWeight")}async function E1(s,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const o=V(()=>{if(s.shape.length===1)return Ms(s);if(s.shape.length===2){if(s.shape[1]>1)return qr(s,1);if(s.shape[1]===1)return P(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await o.data());$e(o);const i=[];return a.forEach(l=>{if(n[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(n[l])}),Ht(i,"float32")}else return null}function WL(s,t){return L(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const UL=32;function A1(s,t){let n,r;const o=t;n=o.xs,r=o.ys,k(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=D1("input",s.inputNames,n),i=D1("output",s.outputNames,r),l=a[0].shape[0];k(a.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),k(i.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let c=0;c<a.length;c++)k(a[c].shape[0]===l,()=>`Batch size mismatch: input ${s.inputNames[c]} has ${a[c].shape[0]}; expected  ${l} based on input ${s.inputNames[0]}.`);for(let c=0;c<i.length;c++)k(i[c].shape[0]===l,()=>`Batch size mismatch: output ${s.outputNames[c]} has ${i[c].shape[0]}; expected  ${l} based on input ${s.inputNames[0]}.`);return{xs:a,ys:i}}function D1(s,t,n){if(n instanceof Pe)return[n];if(Array.isArray(n))return k(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),n;{const r=[];for(const o of t){if(n[o]==null)throw new z(`The feature data generated by the dataset lacks the required ${s} key '${o}'.`);r.push(n[o])}return r}}function GL(s){if(s.length===3)throw new Ce("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function HL(s,t,n){const r=n.batchesPerEpoch!=null;if(k(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),k(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),k(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const o=n.validationData!=null;let a,i;if(o)if(R1(n.validationData))k(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const y=GL(n.validationData);a=y.xs,i=y.ys}const l=s.makeTrainFunction(),c=s.getDedupedMetricsNames();let u;o?u=c.slice().concat(c.map(y=>"val_"+y)):u=c.slice();const h=g1(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:p,history:f}=y1(h,d,n.epochs,null,null,jL(t,n),null,o,u);p.setModel(s),s.history=f,await p.onTrainBegin(),s.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const y={};await p.onEpochBegin(m);let b=0,x=0;for(r||(g=await t.iterator());r?b<n.batchesPerEpoch:!0;){const w=await g.next();if(r&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:v,ys:C}=A1(s,w.value),I={};I.batch=x,I.size=v[0].shape[0],await p.onBatchBegin(x,I);const N=[];if(n.classWeight!=null){const A=T1(n.classWeight,s.outputNames);for(let _=0;_<A.length;++_)N.push(await E1(C[_],null,A[_]))}const S=v.concat(C).concat(N),E=l(S);$e(S);for(let A=0;A<c.length;++A){const _=c[A],D=E[A];I[_]=D,Dt(D)}await p.onBatchEnd(x,I),h1(I),x++,b++}if(r?b>=n.batchesPerEpoch:w.done){if(o){let v;R1(n.validationData)?v=tt(await s.evaluateDataset(n.validationData,{batches:n.validationBatches})):v=tt(s.evaluate(a,i,{batchSize:n.validationBatchSize==null?UL:n.validationBatchSize,verbose:0}));for(let C=0;C<s.metricsNames.length;++C)y[`val_${s.metricsNames[C]}`]=v[C]}break}if(s.stopTraining_)break}if(await p.onEpochEnd(m,y),m++,s.stopTraining_)break}return await p.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function jL(s,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(s.size)&&(n=s.size),n}function R1(s){return typeof s.iterator=="function"}function qL(s){return typeof s.next=="function"}async function KL(s,t,n){n=n||{};const r=n.batches!=null,o=s.testFunction;let a=[];if(n.verbose>0)throw new Ce("Verbose mode is not implemented yet.");k(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i=qL(t)?t:await t.iterator();let l=0,c=0;for(;r?c<n.batches:!0;){const u=await i.next();if(a=V(()=>{if(u.value){const{xs:h,ys:d}=A1(s,u.value),p=h.concat(d),f=V(()=>o(p));if($e(p),c===0)for(let g=0;g<f.length;++g)a.push(me(0));const m=p[0].shape[0];for(let g=0;g<f.length;++g){const y=f[g],b=a[g];a[g]=V(()=>Y(a[g],L(m,y))),c>0&&$e(b)}$e(f),l+=m,++c}return a}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<a.length;++u){const h=a[u];a[u]=pe(a[u],l),$e(h)}return cn(a)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kg(s){k(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function yc(s,t,n){return s==null?[null]:Array.isArray(s)?s.map(r=>co(r,t,n-t)):co(s,t,n-t)}function Ig(s,t){return V(()=>s==null?null:Array.isArray(s)?s.map(n=>Ig(n,t)):n1(s,t.dtype==="int32"?t:ne(t,"int32")))}function Sg(s,t){const n=[];let r=0,o=null;for(;r<s;)o=r+t,o>=s&&(o=s),n.push([r,o]),r=o;return n}async function XL(s,t,n,r,o,a,i,l,c,u,h,d,p,f,m){o==null&&(o=32),a==null&&(a=1),h==null&&(h=!0),p==null&&(p=0);let g=!1;if(c!=null&&u!=null&&(g=!0),m!=null&&(g=!0,f==null))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=s.checkNumSamples(n,o,f,"steps_per_epoch");let b;y!=null&&(b=os(0,y)),i==null&&(i=1);const{callbackList:x,history:w}=y1(l,i,a,p,y,f,o,g,d);x.setModel(s),s.history=w,await x.onTrainBegin(),s.stopTraining_=!1;for(let v=p;v<a;++v){await x.onEpochBegin(v);const C={};if(f!=null)throw new Ce("stepsPerEpoch mode is not implemented yet.");{if(h==="batch")throw new Ce("batch shuffling is not implemneted yet");h&&Bp(b);const I=Ht(b),N=Sg(y,o);for(let S=0;S<N.length;++S){const E={};if(await x.onBatchBegin(S,E),V(()=>{const A=N[S][0],_=N[S][1],D=co(I,A,_-A);E.batch=S,E.size=_-A;const O=Ig(n,D),B=t(O);for(let W=0;W<r.length;++W){const M=r[W],j=B[W];E[M]=j,Dt(j)}if(S===N.length-1&&g){const W=s.testLoop(c,u,o);for(let M=0;M<r.length;++M){const j=r[M],U=W[M];Dt(U),C["val_"+j]=U}}}),await x.onBatchEnd(S,E),h1(E),s.stopTraining_)break}I.dispose()}if(await x.onEpochEnd(v,C),s.stopTraining_)break}return await x.onTrainEnd(),await s.history.syncData(),s.history}async function YL(s,t,n,r={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let o,a,i,l,c,u,h;try{const d=r.batchSize==null?32:r.batchSize;kg(d);const p=!1,f=await s.standardizeUserData(t,n,r.sampleWeight,r.classWeight,p,d);o=f[0],a=f[1],h=f[2];let m=!1,g;if(r.validationData!=null&&r.validationData.length>0){if(m=!0,r.validationData.length===2)i=r.validationData[0],l=r.validationData[1];else throw r.validationData.length===3?new Ce("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const N=!0,S=await s.standardizeUserData(i,l,null,null,N,d);c=S[0],u=S[1],g=c.concat(u)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){m=!0;const N=Math.floor(o[0].shape[0]*(1-r.validationSplit)),S=o[0].shape[0];c=yc(o,N,S),o=yc(o,0,N),u=yc(a,N,S),a=yc(a,0,N),g=c.concat(u)}else r.validationSteps!=null&&(m=!0);const y=o.concat(a).concat(h);s.checkTrainableWeightsConsistency();const b=s.makeTrainFunction(),x=s.getDedupedMetricsNames();let w,v;m?(s.makeTestFunction(),w=s.testFunction,v=x.slice().concat(x.map(N=>"val_"+N))):(w=null,g=[],v=x.slice());const C=g1(r.callbacks,r.yieldEvery);return await XL(s,b,y,x,d,r.epochs,r.verbose,C,w,g,r.shuffle,v,r.initialEpoch,null,null)}finally{s.isTraining=!1,ho(o,t),ho(a,n),ho(c,i),ho(u,l),h!=null&&$e(h)}}function F1(s){const t=[];s instanceof Pe&&(s=[s]);for(let n=0;n<s.length;++n){const r=s[n];if(r.rank===1)t.push(hc(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ho(s,t){if(s==null)return;const n=[];if(t instanceof Pe)n.push(t.id);else if(Array.isArray(t))t.forEach(o=>n.push(o.id));else if(t!=null)for(const o in t){const a=t[o];n.push(a.id)}const r=[];if(s instanceof Pe)n.indexOf(s.id)===-1&&r.push(s);else if(Array.isArray(s))s.forEach(o=>{n.indexOf(o.id)===-1&&r.push(o)});else if(s!=null)for(const o in s){const a=s[o];n.indexOf(a.id)===-1&&r.push(a)}r.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZL(s){return s instanceof Pe}function Tg(s){return Array.isArray(s)}function _1(s){return!ZL(s)&&!Tg(s)}function O1(s,t,n,r=!0,o=""){if(t==null||t.length===0){if(s!=null){let i=!1;if(Tg(s)&&s.length>0)i=!0;else if(_1(s)){for(const l in s)if(s.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new z(`Error when checking model ${o} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(i=>null);let a;if(_1(s)){s=s,a=[];for(const i of t){if(s[i]==null)throw new z(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(s[i])}}else if(Tg(s)){if(s=s,s.length!==t.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);a=s}else{if(s=s,t.length>1)throw new z(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);a=[s]}if(a=F1(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;const l=a[i];if(l.shape.length!==n[i].length)throw new z(`Error when checking ${o}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${l.shape}`);for(let c=0;c<n[i].length;++c){if(c===0&&!r)continue;const u=l.shape[c],h=n[i][c];if(h!=null&&h>=0&&u!==h)throw new z(`${o} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${o} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return a}function JL(s,t,n){const r=yr(s.map(a=>a.shape[0]));r.sort();const o=yr(t.map(a=>a.shape[0]));if(o.sort(),r.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(a=>a.shape))}`);if(o.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(r.length>0&&o.length>0&&!Ae(r,o))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${o[0]} target sample(s).`)}function QL(s,t,n){const r=[uo,Nd,fc];for(let o=0;o<s.length;++o){const a=s[o],i=t[o],l=n[o];if(i!=null){if(i===fc&&a.shape[a.shape.length-1]===1)throw new z(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){const c=a.shape.slice(1),u=l.slice(1);for(let h=0;h<c.length;++h){const d=c[h],p=u[h];if(p!=null&&d!==p)throw new z(`A target Tensor with shape ${a.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function L1(s,t,n,r=!0,o=""){let a;if(Array.isArray(s)){if(s.length!==t.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);a=s}else{if(t.length>1)throw new z(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);a=[s]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;const l=a[i];if(l.shape.length!==n[i].length)throw new z(`Error when checking ${o}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let c=0;c<n[i].length;++c){if(c===0&&!r)continue;const u=l.shape[c],h=n[i][c];if(h!=null&&h!==u)throw new z(`Error when checking ${o}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function e3(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(r=>[]);let n;if(typeof s=="string"||typeof s=="function")n=[s];else if(Array.isArray(s)||typeof s=="object")n=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(n))return t.map(r=>n);{const r=[];for(const o of t){let a=n.hasOwnProperty(o)?n[o]:[];Array.isArray(a)||(a=[a]),r.push(a)}return r}}const t3="layers-model";class Xs extends cs{constructor(t){super(t);this.isTraining=!1}summary(t,n,r=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");RL(this,t,n,r)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=DL(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof js))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new z(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(bg(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);n=t.loss.map(l=>bg(l))}else{const i=bg(t.loss);this.outputs.forEach(l=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],c=this.outputNames[i];this.feedOutputNames.push(c),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],lo("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(r.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=e3(t.metrics,this.outputNames),a=(i,l,c)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([c,i])};lo("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(r.indexOf(i)!==-1)continue;const l=o[i];(u=>{const h="";let d,p,f;for(const m of u){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const y=this.internalOutputShapes[i];y[y.length-1]===1||this.lossFunctions[i]===Nd?["accuracy","acc"].indexOf(m)!==-1?p=xg:["crossentropy","ce"].indexOf(m)!==-1&&(p=w1):this.lossFunctions[i]===Cd?["accuracy","acc"].indexOf(m)!==-1?p=v1:["crossentropy","ce"].indexOf(m)!==-1&&(p=$1):["accuracy","acc"].indexOf(m)!==-1?p=wg:["crossentropy","ce"].indexOf(m)!==-1&&(p=vg);let b;["accuracy","acc"].indexOf(m)!==-1?b="acc":["crossentropy","ce"].indexOf(m)!==-1&&(b="ce"),f=p,d=h+b}else f=AL(m),d=h+Sd(m);let g;lo(d,()=>{g=f}),a(i,d,g)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,n,r={}){const o=r.batchSize==null?32:r.batchSize;kg(o);const a=!0,i=this.standardizeUserDataXY(t,n,a,o);try{const l=i[0].concat(i[1]);this.makeTestFunction();const c=this.testFunction,u=this.testLoop(c,l,o,r.verbose,r.steps);return cn(u)}finally{ho(i[0],t),ho(i[1],n)}}async evaluateDataset(t,n){return this.makeTestFunction(),KL(this,t,n)}checkNumSamples(t,n,r,o="steps"){let a;if(r!=null){if(a=null,n!=null)throw new z(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(t!=null)Array.isArray(t)?a=t[0].shape[0]:a=t.shape[0];else throw new z(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return a}execute(t,n){if(Array.isArray(n)&&n.length===0)throw new z("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(n),o=r?n:[n],a=this.retrieveSymbolicTensors(o),i=new vr;if(t instanceof Pe&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new z(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)i.add(this.inputs[c],t[c])}else for(const c of this.inputs){const u=t[c.name];if(u==null)throw new z(`No value is provided for the model's input ${c.name}`);i.add(c,u)}const l=gc(a,i);return r?l:l[0]}retrieveSymbolicTensors(t){const n=oo(null,t.length);let r=t.length;for(const o of this.layers){const a=Array.isArray(o.output)?o.output:[o.output],i=a.map(l=>l.name);for(let l=0;l<t.length;++l){const c=i.indexOf(t[l]);if(c!==-1&&(n[l]=a[c],r--),r===0)break}if(r===0)break}if(r>0){const o=[];throw n.forEach((a,i)=>{a==null&&o.push(t[i])}),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return n}predictLoop(t,n=32,r=!1){return V(()=>{const o=this.checkNumSamples(t);if(r)throw new Ce("Verbose predictLoop() is not implemented yet.");const a=Sg(o,n),i=this.outputs.map(l=>[]);for(let l=0;l<a.length;++l)V(()=>{const u=a[l][0],h=a[l][1],d=yc(t,u,h),p=[];if(Array.isArray(d))for(let m=0;m<d.length;++m)p.push({key:this.inputs[m],value:d[m]});else p.push({key:this.inputs[0],value:d});const f=new vr(p);return gc(this.outputs,f)}).forEach((u,h)=>i[h].push(u));return cn(i.map(l=>ft(l,0)))})}predict(t,n={}){const r=F1(t);L1(r,this.inputNames,this.feedInputShapes,!1);try{const o=n.batchSize==null?32:n.batchSize;return kg(o),this.predictLoop(r,o)}finally{ho(r,t)}}predictOnBatch(t){L1(t,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,n)}standardizeUserDataXY(t,n,r=!0,o){if(this.optimizer_==null)throw new qn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===Cd?a.push(l.slice(0,l.length-1).concat([1])):a.push(l)}if(t=O1(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=O1(n,this.feedOutputNames,a,!1,"target"),JL(t,n),QL(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!=0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,n,r,o,a=!0,i){const[l,c]=this.standardizeUserDataXY(t,n,a,i);if(r!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){const h=T1(o,this.outputNames);u=[];for(let d=0;d<h.length;++d)u.push(await E1(c[d],null,h[d]))}return[l,c,u]}testLoop(t,n,r,o=0,a){return V(()=>{const i=this.checkNumSamples(n,r,a,"steps"),l=[];if(o>0)throw new Ce("Verbose mode is not implemented yet.");if(a!=null)throw new Ce("steps mode in testLoop() is not implemented yet");{const c=Sg(i,r),u=Ht(os(0,i));for(let h=0;h<c.length;++h){const d=c[h][0],p=c[h][1],f=co(u,d,p-d),m=Ig(n,f),g=t(m);if(h===0)for(let y=0;y<g.length;++y)l.push(me(0));for(let y=0;y<g.length;++y){const b=g[y];l[y]=Y(l[y],L(p-d,b))}}for(let h=0;h<l.length;++h)l[h]=pe(l[h],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,n=[];for(let r=0;r<t.length;++r){const o=t[r];let a=o;Hw(t,o)>1&&(a+=`_${Hw(t.slice(0,r),o)}`),n.push(a)}return n}makeTrainFunction(){return t=>{const n=[],r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const d=[];for(let g=0;g<this.inputs.length;++g)d.push({key:this.inputs[g],value:r[g]});const p=new vr(d),f=gc(this.outputs,p,{training:!0});let m;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g](o[g],f[g]);a[g]!=null&&(b=WL(b,a[g]));const x=ut(b);n.push(x),g===0?m=b:m=Y(m,b)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=n[g];else{const b=this.metricsTensors[g][0],x=this.metricsTensors[g][1];y=ut(b(o[x],f[x]))}Dt(y),i.push(y)}return m=ut(m),this.calculateLosses().forEach(g=>{m=Y(m,g)}),m},c=this.collectedTrainableWeights.map(d=>d.read()),u=!0;return[this.optimizer_.minimize(l,u,c)].concat(i)}}makeTestFunction(){this.testFunction=t=>V(()=>{const n=[];let r;const o=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:o[u]});const l=new vr(i),c=gc(this.outputs,l);for(let u=0;u<this.lossFunctions.length;++u){const h=this.lossFunctions[u],d=ut(h(a[u],c[u]));u===0?r=d:r=Y(r,d),n.push(r)}for(let u=0;u<this.metricsTensors.length;++u){const h=this.metricsTensors[u][0],d=this.metricsTensors[u][1],p=ut(h(a[d],c[d]));n.push(p)}return n})}async fit(t,n,r={}){return YL(this,t,n,r)}async fitDataset(t,n){return HL(this,t,n)}async trainOnBatch(t,n){const r=await this.standardizeUserData(t,n),o=r[0],a=r[1],l=this.makeTrainFunction()(o.concat(a)),c=[];for(const u of l){const h=await u.data();c.push(h[0])}return $e(l),cn(c)}getNamedWeights(t){const n=[],r=t!=null&&t.trainableOnly,o=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let i=0;i<o.length;++i)r&&!o[i].trainable||n.push({name:o[i].originalName,tensor:a[i]});return n}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=hh().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=n-hh().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Ks(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(n=>Ks(n))}else{const n=Object.keys(this.loss);t={};const r=this.loss;for(const o of n)if(typeof r[o]=="string")t[o]=Ks(r[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ks(Sd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ks(Sd(t)));{const t={};for(const n in this.metrics)t[n]=Ks(Sd(this.metrics[n]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=mc(t.optimizer_config),r=ls(n);let o;if(typeof t.loss=="string")o=ao(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(i=>ao(i));else if(t.loss!=null){o={};for(const i in t.loss)o[i]=ao(t.loss[i])}let a;if(Array.isArray(t.metrics))a=t.metrics.map(i=>ao(i));else if(t.metrics!=null){a={};for(const i in t.metrics)a[i]=ao(t.metrics[i])}this.compile({loss:o,metrics:a,optimizer:r})}async save(t,n){if(typeof t=="string"){const u=bf(t);if(u.length===0)throw new z(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new z(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await mf(this.getNamedWeights(n)),o=!1,a=null,l={modelTopology:this.toJSON(a,o),format:t3,generatedBy:`TensorFlow.js tfjs-layers v${Ed}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:h,specs:d}=await mf(await this.optimizer.getWeights(),u);r.specs.push(...d),r.data=oh([r.data,h])}if(this.userDefinedMetadata!=null){const u=!0;N1(this.userDefinedMetadata,this.name,u),l.userDefinedMetadata=this.userDefinedMetadata}return l.weightData=r.data,l.weightSpecs=r.specs,t.save(l)}setUserDefinedMetadata(t){N1(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xs.className="Model";X(Xs);class P1 extends Xs{}P1.className="Functional";X(P1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function n3(s,t){"modelTopology"in s||(s={modelTopology:s}),s=s;let n=s.modelTopology;n.model_config!=null&&(n=n.model_config);const r=mc(n),o=ls(r,t);if(s.weightsManifest!=null){const a=await c0(s.weightsManifest,s.pathPrefix,o.weights.map(l=>l.originalName)),i={};for(const l of o.weights)i[l.originalName]=a[l.originalName];o.loadWeights(i),$e(a)}return o}async function s3(s,t){if(t==null&&(t={}),typeof s=="string"){const n=xf(s,t);if(n.length===0)n.push(ih(s,t));else if(n.length>1)throw new z(`Found more than one (${n.length}) load handlers for URL '${s}'`);s=n[0]}return r3(s,void 0,t)}async function r3(s,t,n){if(n==null&&(n={}),s.load==null)throw new z("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await s.load();let o=r.modelTopology;o.model_config!=null&&(o=o.model_config);const a=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&a,l=ls(mc(o),t,i),c=r.trainingConfig;if(c!=null&&l.loadTrainingConfig(c),r.userDefinedMetadata!=null&&l.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new z("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:h}=o3(r.weightData,r.weightSpecs);l.loadWeights(u,a),l.optimizer!=null&&h.length>0&&await l.optimizer.setWeights(h),$e(u),$e(h.map(d=>d.tensor))}return l}function o3(s,t){const n=rh(s,t),r={},o=[];return t.forEach(a=>{a.group==="optimizer"?o.push({name:a.name,tensor:n[a.name]}):r[a.name]=n[a.name]}),{modelWeights:r,optimizerWeights:o}}class po extends Xs{constructor(t){super({inputs:[],outputs:[]});if(t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:yd("sequential_"),t.layers!=null)for(const n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new z(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const n=t instanceof po||t instanceof Xs;let r;if(n){if(r=t,r.outputs.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=u1({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(t.inboundNodes.length!==1)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=c1(this.outputs[0])}this.inboundNodes=[],new wd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:oo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Be(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xs({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,r=console.log){this.built||this.build(),super.summary(t,n,r)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,r={}){if(!this.built)throw new qn("The model needs to be compiled before being used.");return this.model.evaluate(t,n,r)}async evaluateDataset(t,n){if(!this.built)throw new qn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,r={}){if(!this.built)throw new qn("The model needs to be compiled before being used.");return this.model.fit(t,n,r)}async fitDataset(t,n){if(!this.built)throw new qn("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,r={},o=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new z("Legacy serialization format not supported yet.");a=n}else k(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;const l=new t(i);if(!(l instanceof po))throw new Ce(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const c of a){const h=ls(c,void 0,o);o&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(t){if(this.model==null)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const n of this.layers){const r={};r.className=n.getClassName(),r.config=n.getConfig(),t.push(r)}return{name:this.name,layers:t}}}po.className="Sequential";X(po);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a3(s){return new Xs(s)}function i3(s){return new po(s)}function l3(s,t){return t==null&&(t={}),s3(s,t)}function z1(s){return u1(s)}function c3(s,t){Rn.registerCallbackConstructor(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hn extends jr{getConfig(){return{}}}class M1 extends hn{apply(t,n=1){return _O(t,n)}}M1.className="elu";X(M1);class B1 extends hn{apply(t){return Eh(t)}}B1.className="selu";X(B1);class V1 extends hn{apply(t){return ss(t)}}V1.className="relu";X(V1);class W1 extends hn{apply(t){return V(()=>Ua(6,ss(t)))}}W1.className="relu6";X(W1);class U1 extends hn{apply(t){return t}}U1.className="linear";X(U1);class G1 extends hn{apply(t){return ns(t)}}G1.className="sigmoid";X(G1);class H1 extends hn{apply(t){return LO(t)}}H1.className="hardSigmoid";X(H1);class j1 extends hn{apply(t){return Jr(t)}}j1.className="softplus";X(j1);class q1 extends hn{apply(t){return OO(t)}}q1.className="softsign";X(q1);class K1 extends hn{apply(t){return Xr(t)}}K1.className="tanh";X(K1);class Eg extends hn{apply(t,n=-1){return ec(t,n)}}Eg.className="softmax";X(Eg);class X1 extends hn{apply(t,n=-1){return $h(t,n)}}X1.className="logSoftmax";X(X1);class Y1 extends hn{apply(t,n=1){return V(()=>L(ns(L(t,n)),t))}}Y1.className="swish";X(Y1);class Z1 extends hn{apply(t){return V(()=>L(t,Xr(Jr(t))))}}Z1.className="mish";X(Z1);function $r(s){return s.getClassName()}function Ag(s,t={}){return lc(s,En.getMap().classNameMap,t,"activation")}function Cr(s){if(s==null){const t={};return t.className="linear",t.config={},Ag(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},Ag(t)}else return s instanceof hn?s:Ag(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dg(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class J1 extends jr{}class bc extends J1{constructor(t){super();Dg(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return V(()=>{let n=wt([1]);return this.hasL1&&(n=Y(n,ue(L(this.l1,bt(t))))),this.hasL2&&(n=Y(n,ue(L(this.l2,dc(t))))),P(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,n){return new t({l1:n.l1,l2:n.l2})}}bc.className="L1L2";X(bc);function u3(s){return Dg(s),new bc({l1:s!=null?s.l1:null,l2:0})}function h3(s){return Dg(s),new bc({l2:s!=null?s.l2:null,l1:0})}const Q1={l1l2:"L1L2"};function Ge(s){return Xm(s)}function ev(s,t={}){return lc(s,En.getMap().classNameMap,t,"regularizer")}function at(s){if(s==null)return null;if(typeof s=="string"){const n={className:s in Q1?Q1[s]:s,config:{}};return ev(n)}else return s instanceof J1?s:ev(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rg extends Oe{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=Ne(t);let r=ss(t);return this.maxValue!=null&&(r=rn(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}}Rg.className="ReLU";X(Rg);class Fg extends Oe{constructor(t){super(t==null?{}:t);this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const r=Ne(t);return Hl(r,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}Fg.className="LeakyReLU";X(Fg);class _g extends Oe{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ot(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=at(t.alphaRegularizer),this.alphaConstraint=Et(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Be(t);const n=t.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)n[o-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)r[o]=t[o];this.inputSpec=[new vt({ndim:t.length,axes:r})],this.built=!0}call(t,n){return t=Ne(t),Zl(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ht(this.alphaInitializer),alphaRegularizer:Ge(this.alphaRegularizer),alphaConstraint:Tt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}}_g.className="PReLU";X(_g);class Og extends Oe{constructor(t){super(t==null?{}:t);if(this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Ce(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const r=Ne(t);return Ma(r)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}Og.className="ELU";X(Og);class Lg extends Oe{constructor(t){super(t==null?{}:t);this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){const r=Ne(t);return L(r,ne(an(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}}Lg.className="ThresholdedReLU";X(Lg);class Pg extends Oe{constructor(t){super(t==null?{}:t);this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Eg().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){const r=Ne(t);return this.softmax(r,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}Pg.className="Softmax";X(Pg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ti(s,t,n){if(typeof s=="number")return oo(s,t);if(s.length!==t)throw new z(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let r=0;r<t;++r){const o=s[r];if(!AO(o))throw new z(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${o}`)}return s}function us(s,t,n,r,o=1){if(s==null)return s;const a=t+(t-1)*(o-1);let i;return n==="same"?i=s:i=s-a+1,Math.floor((i+r-1)/r)}function Ss(s,t,n,r){if(s==null)return null;if(r==="valid")s=s*t+xr([n-t,0]);else if(r==="same")s=s*t;else throw new z(`Unsupport padding mode: ${r}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zg(s,t){return V(()=>(yt(t),t==="channelsFirst"?Re(s,[0,2,3,1]):s))}function tv(s,t){return V(()=>(yt(t),t==="channelsFirst"?Re(s,[0,2,3,4,1]):s))}function d3(s,t,n,r=1,o="valid",a,i=1){return V(()=>{if(a==null&&(a=rs()),yt(a),s.shape.length!==3)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(s=Re(s,[0,2,1])),o==="causal")throw new Ce("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=mh(s,t,r,o==="same"?"same":"valid","NWC",i);return n!=null&&(l=as(l,n)),l})}function nv(s,t,n,r=[1,1],o="valid",a,i,l=null){return V(()=>{if(a==null&&(a=rs()),yt(a),s.rank!==3&&s.rank!==4)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let c=zg(s,a);if(o==="causal")throw new Ce("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=km({x:c,filter:t,strides:r,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:l}),a==="channelsFirst"&&(c=Re(c,[0,3,1,2])),c})}function p3(s,t,n,r=[1,1,1],o="valid",a,i){return V(()=>{if(a==null&&(a=rs()),yt(a),s.rank!==4&&s.rank!==5)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let l=tv(s,a);if(o==="causal")throw new Ce("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=Jf(l,t,r,o==="same"?"same":"valid","NDHWC",i),n!=null&&(l=as(l,n)),a==="channelsFirst"&&(l=Re(l,[0,4,1,2,3])),l})}class Ad extends Oe{constructor(t,n){super(n);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ad.verifyArgs(n),this.rank=t,_t(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ce(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ti(n.kernelSize,t,"kernelSize"),this.strides=ti(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,Dn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,yt(this.dataFormat),this.activation=Cr(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=ot(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Et(n.biasConstraint),this.biasRegularizer=at(n.biasRegularizer),this.activityRegularizer=at(n.activityRegularizer),this.dilationRate=ti(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ks("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Zm(t.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$r(this.activation),useBias:this.useBias,biasInitializer:ht(this.biasInitializer),biasRegularizer:Ge(this.biasRegularizer),activityRegularizer:Ge(this.activityRegularizer),biasConstraint:Tt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}class ni extends Ad{constructor(t,n){super(t,n);this.kernel=null,ni.verifyArgs(n),this.filters=n.filters,_t(this.filters,"filters"),this.kernelInitializer=ot(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Et(n.kernelConstraint),this.kernelRegularizer=at(n.kernelRegularizer)}build(t){t=Be(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new z(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],o=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:r}}],this.built=!0}call(t,n){return V(()=>{t=Ne(t);let r;const o=this.bias==null?null:this.bias.read(),a=qw(this.activation.getClassName());if(a!=null&&this.rank===2)r=nv(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)r=d3(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=nv(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=p3(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ce("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Be(t);const n=[],r=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<r.length;++a){const i=us(r[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(n),o.push(this.filters)):(o.push(this.filters),o=o.concat(n)),o}getConfig(){const t={filters:this.filters,kernelInitializer:ht(this.kernelInitializer),kernelRegularizer:Ge(this.kernelRegularizer),kernelConstraint:Tt(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class si extends ni{constructor(t){super(2,t);si.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Zm(t.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}si.className="Conv2D";X(si);class ri extends ni{constructor(t){super(3,t);ri.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}ri.className="Conv3D";X(ri);class Mg extends si{constructor(t){super(t);if(this.inputSpec=[new vt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Be(t),t.length!==4)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const r=t[n],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vt({ndim:4,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{let r=Ne(t);if(r.shape.length!==4)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape,a=o[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const c=o[i],u=o[l],h=this.kernelSize[0],d=this.kernelSize[1],p=this.strides[0],f=this.strides[1],m=Ss(c,p,h,this.padding),g=Ss(u,f,d,this.padding),y=[a,m,g,this.filters];this.dataFormat!=="channelsLast"&&(r=Re(r,[0,2,3,1]));let b=gh(r,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=Re(b,[0,3,1,2])),this.bias!=null&&(b=as(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=Be(t);const n=t.slice();let r,o,a;this.dataFormat==="channelsFirst"?(r=1,o=2,a=3):(r=3,o=1,a=2);const i=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],u=this.strides[1];return n[r]=this.filters,n[o]=Ss(n[o],c,i,this.padding),n[a]=Ss(n[a],u,l,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Mg.className="Conv2DTranspose";X(Mg);class Bg extends ri{constructor(t){super(t);if(this.inputSpec=[new vt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Be(t),t.length!==5)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");const r=t[n],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new vt({ndim:5,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{let r=Ne(t);if(r.shape.length!==5)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape,a=o[0];let i,l,c;this.dataFormat==="channelsFirst"?(c=2,i=3,l=4):(c=1,i=2,l=3);const u=o[c],h=o[i],d=o[l],p=this.kernelSize[0],f=this.kernelSize[1],m=this.kernelSize[2],g=this.strides[0],y=this.strides[1],b=this.strides[2],x=Ss(u,g,p,this.padding),w=Ss(h,y,f,this.padding),v=Ss(d,b,m,this.padding),C=[a,x,w,v,this.filters];this.dataFormat!=="channelsLast"&&(r=Re(r,[0,2,3,4,1]));let I=B0(r,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=Re(I,[0,4,1,2,3])),this.bias!==null&&(I=as(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(t){t=Be(t);const n=t.slice();let r,o,a,i;this.dataFormat==="channelsFirst"?(r=1,o=2,a=3,i=4):(r=4,o=1,a=2,i=3);const l=this.kernelSize[0],c=this.kernelSize[1],u=this.kernelSize[2],h=this.strides[0],d=this.strides[1],p=this.strides[2];return n[r]=this.filters,n[o]=Ss(n[o],h,l,this.padding),n[a]=Ss(n[a],d,c,this.padding),n[i]=Ss(n[i],p,u,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Bg.className="Conv3DTranspose";X(Bg);class sv extends ni{constructor(t,n){super(t,n);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=ot(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=at(n.depthwiseRegularizer),this.depthwiseConstraint=Et(n.depthwiseConstraint),this.pointwiseInitializer=ot(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=at(n.pointwiseRegularizer),this.pointwiseConstraint=Et(n.pointwiseConstraint)}build(t){if(t=Be(t),t.length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);const r=t[n],o=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let l=0;l<this.rank;++l)a.push(1);a.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new vt({ndim:this.rank+2,axes:{[n]:r}})],this.built=!0}call(t,n){return V(()=>{t=Ne(t);let r;if(this.rank===1)throw new Ce("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Re(t,[0,2,3,1])),r=fm(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=as(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Re(r,[0,3,1,2])),r})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ht(this.depthwiseInitializer),t.pointwiseInitializer=ht(this.pointwiseInitializer),t.depthwiseRegularizer=Ge(this.depthwiseRegularizer),t.pointwiseRegularizer=Ge(this.pointwiseRegularizer),t.depthwiseConstraint=Tt(this.depthwiseConstraint),t.pointwiseConstraint=Tt(this.pointwiseConstraint),t}}sv.className="SeparableConv";class Vg extends sv{constructor(t){super(2,t)}}Vg.className="SeparableConv2D";X(Vg);class xc extends ni{constructor(t){super(1,t);xc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Zm(t.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}xc.className="Conv1D";X(xc);class Wg extends Oe{constructor(t){super(t);typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return V(()=>{if(t=Ne(t),this.dataFormat==="channelsLast"){const r=id(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return id(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=id(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return id(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}Wg.className="Cropping2D";X(Wg);class Ug extends Oe{constructor(t){super(t);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yt(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,SO(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const n=t[2]==null?null:this.size[0]*t[2],r=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,r]}else{const n=t[1]==null?null:this.size[0]*t[1],r=t[2]==null?null:this.size[1]*t[2];return[t[0],n,r,t[3]]}}call(t,n){return V(()=>{let r=Ne(t);const o=r.shape;if(this.dataFormat==="channelsFirst"){r=Re(r,[0,2,3,1]);const a=this.size[0]*o[2],i=this.size[1]*o[3],l=this.interpolation==="nearest"?jn.resizeNearestNeighbor(r,[a,i]):jn.resizeBilinear(r,[a,i]);return Re(l,[0,3,1,2])}else{const a=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?jn.resizeNearestNeighbor(r,[a,i]):jn.resizeBilinear(r,[a,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}Ug.className="UpSampling2D";X(Ug);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f3(s,t,n=[1,1],r="valid",o,a){return V(()=>{o==null&&(o=rs()),yt(o);let i=zg(s,o);if(s.rank!==4)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Pa(i,t,n,r==="same"?"same":"valid","NHWC",a),o==="channelsFirst"&&(i=Re(i,[0,3,1,2])),i})}class Gg extends Ad{constructor(t){super(2,t);this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ot(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Et(t.depthwiseConstraint),this.depthwiseRegularizer=at(t.depthwiseRegularizer)}build(t){if(t=Be(t),t.length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);const r=t[n],o=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return V(()=>{t=Ne(t);let r=f3(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=as(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Be(t);const n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=us(n,this.kernelSize[0],this.padding,this.strides[0]),i=us(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,a,i]:[t[0],a,i,o]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ht(this.depthwiseInitializer),t.depthwiseRegularizer=Ge(this.depthwiseRegularizer),t.depthwiseConstraint=Tt(this.depthwiseRegularizer),t}}Gg.className="DepthwiseConv2D";X(Gg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rv(s,t,n,r){if(Array.isArray(s)){if(t!=null||n!=null)throw new z("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=s.slice(s.length-r,s.length),s=s.slice(0,s.length-r)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function o(a){return a==null||Array.isArray(a)?a:[a]}return t=o(t),n=o(n),{inputs:s,initialState:t,constants:n}}function ov(s,t,n,r=!1,o,a,i=!1,l=!1){return V(()=>{const c=t.shape.length;if(c<3)throw new z(`Input should be at least 3D, but is ${c}D.`);const u=[1,0].concat(os(2,c));if(t=Re(t,u),a!=null)throw new Ce("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===c-1&&(o=on(o,-1)),o=Re(o,u)),r&&(t=vn(t,0),o!=null&&(o=vn(o,0)));const h=[];let d,p=n;const f=t.shape[0],m=Hn(t);let g;o!=null&&(g=Hn(o));for(let b=0;b<f;++b){const x=m[b],w=V(()=>s(x,p));if(o==null)d=w[0],p=w[1];else{const v=V(()=>{const C=g[b],I=ce(wn(C),C),N=Y(L(w[0],C),L(p[0],I)),S=p.map((E,A)=>Y(L(w[1][A],C),L(E,I)));return{output:N,newStates:S}});d=v.output,p=v.newStates}l&&h.push(d)}let y;return l&&(y=$n(h,1)),[d,y,p]})}class hs extends Oe{constructor(t){super(t);let n;if(t.cell==null)throw new z("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new Fd({cells:t.cell}):n=t.cell,n.stateSize==null)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new vt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return os(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){fg(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const r=n[0];let o;if(this.returnSequences?o=[t[0],t[1],r]:o=[t[0],r],this.returnState){const a=[];for(const i of n)a.push([t[0],i]);return[o].concat(a)}else return o}computeMask(t,n){return V(()=>{Array.isArray(n)&&(n=n[0]);const r=this.returnSequences?n:null;if(this.returnState){const o=this.states.map(a=>null);return[r].concat(o)}else return r})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let r=0;r<t;++r)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Ce("Constants support is not implemented in RNN yet.");fg(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new vt({shape:[n,null,...r]});const o=[t[0]].concat(t.slice(2));this.cell.build(o);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!Ae(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new vt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){V(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>wt([r,o])):this.states_=[wt([r,this.cell.stateSize])];else if(t==null)$e(this.states_),this.keptStates!=null&&($e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>wt([r,o])):this.states_[0]=wt([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):$e(this.states_);for(let o=0;o<this.states_.length;++o){const a=t[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,i];if(!Ae(a.shape,l))throw new z(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${a.shape}`);this.states_[o]=a}}this.states_=this.states_.map(o=>Dt(o.clone()))})}apply(t,n){let r=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const a=rv(t,r,o,this.numConstants);t=a.inputs,r=a.initialState,o=a.constants;let i=[],l=[];if(r!=null){n.initialState=r,i=i.concat(r),this.stateSpec=[];for(const u of r)this.stateSpec.push(new vt({shape:u.shape}));l=l.concat(this.stateSpec)}if(o!=null&&(n.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof is){const u=[t].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,n);return this.inputSpec=d,p}else return super.apply(t,n)}call(t,n){return V(()=>{const r=n==null?null:n.mask,o=n==null?null:n.training;let a=n==null?null:n.initialState;t=Ne(t),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new z(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:o},u=ov((m,g)=>{const y=this.cell.call([m].concat(g),l);return[y[0],y.slice(1)]},t,a,this.goBackwards,r,null,this.unroll,this.returnSequences),h=u[0],d=u[1],p=u[2];this.stateful&&this.resetStates(p,o);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(t){return V(()=>{let n=wt(t.shape);return n=ue(n,[1,2]),n=hc(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?og(n,[1,r]):n):this.cell.stateSize>1?[og(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===hs.className&&(n.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,t,n)}static fromConfig(t,n,r={}){const o=n.cell,a=ls(o,r);return new t(Object.assign(n,{cell:a}))}}hs.className="RNN";X(hs);class wc extends Oe{}class Dd extends wc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_t(this.units,"units"),this.activation=Cr(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=at(t.kernelRegularizer),this.recurrentRegularizer=at(t.recurrentRegularizer),this.biasRegularizer=at(t.biasRegularizer),this.kernelConstraint=Et(t.kernelConstraint),this.recurrentConstraint=Et(t.recurrentConstraint),this.biasConstraint=Et(t.biasConstraint),this.dropout=Za([1,xr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,xr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Be(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return V(()=>{if(t=t,t.length!==2)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];const o=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>wn(t),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>wn(r),rate:this.recurrentDropout,training:o}));let a;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?a=Is(L(t,i),this.kernel.read()):a=Is(t,this.kernel.read()),this.bias!=null&&(a=as(a,this.bias.read())),l!=null&&(r=L(r,l));let c=Y(a,Is(r,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:$r(this.activation),useBias:this.useBias,kernelInitializer:ht(this.kernelInitializer),recurrentInitializer:ht(this.recurrentInitializer),biasInitializer:ht(this.biasInitializer),kernelRegularizer:Ge(this.kernelRegularizer),recurrentRegularizer:Ge(this.recurrentRegularizer),biasRegularizer:Ge(this.biasRegularizer),activityRegularizer:Ge(this.activityRegularizer),kernelConstraint:Tt(this.kernelConstraint),recurrentConstraint:Tt(this.recurrentConstraint),biasConstraint:Tt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,n)}}Dd.className="SimpleRNNCell";X(Dd);class Hg extends hs{constructor(t){t.cell=new Dd(t);super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return new t(n)}}Hg.className="SimpleRNN";X(Hg);class Rd extends wc{constructor(t){super(t);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=t.units,_t(this.units,"units"),this.activation=Cr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Cr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=at(t.kernelRegularizer),this.recurrentRegularizer=at(t.recurrentRegularizer),this.biasRegularizer=at(t.biasRegularizer),this.kernelConstraint=Et(t.kernelConstraint),this.recurrentConstraint=Et(t.recurrentConstraint),this.biasConstraint=Et(t.biasConstraint),this.dropout=Za([1,xr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,xr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Be(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return V(()=>{if(t=t,t.length!==2)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const r=n.training==null?!1:n.training;let o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>wn(t),rate:this.dropout,training:r,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>wn(o),rate:this.recurrentDropout,training:r,count:3}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,c,u;0<this.dropout&&this.dropout<1&&(t=L(t,a[0]));let h=Is(t,this.kernel.read());this.useBias&&(h=as(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,i[0]));const d=this.recurrentKernel.read(),[p,f]=ln(d,[2*this.units,this.units],d.rank-1),m=Is(o,p),[g,y,b]=ln(h,3,h.rank-1),[x,w]=ln(m,2,m.rank-1);l=this.recurrentActivation.apply(Y(g,x)),c=this.recurrentActivation.apply(Y(y,w));const v=Is(L(c,o),f);u=this.activation.apply(Y(b,v));const C=Y(L(l,o),L(Y(1,rt(l)),u));return[C,C]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:$r(this.activation),recurrentActivation:$r(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ht(this.kernelInitializer),recurrentInitializer:ht(this.recurrentInitializer),biasInitializer:ht(this.biasInitializer),kernelRegularizer:Ge(this.kernelRegularizer),recurrentRegularizer:Ge(this.recurrentRegularizer),biasRegularizer:Ge(this.biasRegularizer),activityRegularizer:Ge(this.activityRegularizer),kernelConstraint:Tt(this.kernelConstraint),recurrentConstraint:Tt(this.recurrentConstraint),biasConstraint:Tt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,n)}}Rd.className="GRUCell";X(Rd);class jg extends hs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Rd(t);super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}jg.className="GRU";X(jg);class vc extends wc{constructor(t){super(t);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,_t(this.units,"units"),this.activation=Cr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Cr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ot(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=at(t.kernelRegularizer),this.recurrentRegularizer=at(t.recurrentRegularizer),this.biasRegularizer=at(t.biasRegularizer),this.kernelConstraint=Et(t.kernelConstraint),this.recurrentConstraint=Et(t.recurrentConstraint),this.biasConstraint=Et(t.biasConstraint),this.dropout=Za([1,xr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Za([1,xr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Be(t);const r=t[t.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const a=this.biasInitializer,i=this.units;o=new(n=class extends Xn{apply(c,u){const h=a.apply([i]),d=new cd().apply([i]),p=a.apply([i*2]);return t1(t1(h,d),p)}},n.className="CustomInit",n)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return V(()=>{const r=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>wn(t),rate:this.dropout,training:r,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>wn(o),rate:this.recurrentDropout,training:r,count:4}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let c,u,h,d;0<this.dropout&&this.dropout<1&&(t=L(t,i[0]));let p=Is(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=L(o,l[0])),p=Y(p,Is(o,this.recurrentKernel.read())),this.useBias&&(p=as(p,this.bias.read()));const[f,m,g,y]=ln(p,4,p.rank-1);c=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(m),h=Y(L(u,a),L(c,this.activation.apply(g))),d=this.recurrentActivation.apply(y);const b=L(d,this.activation.apply(h));return[b,b,h]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:$r(this.activation),recurrentActivation:$r(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ht(this.kernelInitializer),recurrentInitializer:ht(this.recurrentInitializer),biasInitializer:ht(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ge(this.kernelRegularizer),recurrentRegularizer:Ge(this.recurrentRegularizer),biasRegularizer:Ge(this.biasRegularizer),activityRegularizer:Ge(this.activityRegularizer),kernelConstraint:Tt(this.kernelConstraint),recurrentConstraint:Tt(this.recurrentConstraint),biasConstraint:Tt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,n)}}vc.className="LSTMCell";X(vc);class qg extends hs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vc(t);super(t)}call(t,n){return V(()=>{this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}qg.className="LSTM";X(qg);class Fd extends wc{constructor(t){super(t);this.cells=t.cells}get stateSize(){const t=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return V(()=>{t=t;let r=t.slice(1);const o=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();const a=[];let i;for(let l=0;l<this.cells.length;++l){const c=this.cells[l];r=o[l],l===0?i=[t[0]].concat(r):i=[i[0]].concat(r),i=c.call(i,n),a.push(i.slice(1))}r=[];for(const l of a.slice().reverse())r.push(...l);return[i[0]].concat(r)})}build(t){fg(t)&&(t=t[0]),t=t;let n;this.cells.forEach((r,o)=>{lo(`RNNCell_${o}`,()=>{r.build(t),Array.isArray(r.stateSize)?n=r.stateSize[0]:n=r.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){const t=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),o={cells:this.cells.map(n)};return Object.assign({},t,o)}static fromConfig(t,n,r={}){const o=[];for(const a of n.cells)o.push(ls(a,r));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const r of this.cells)n.push(...r.trainableWeights);return n.concat(t)}return t}getWeights(){const t=[];for(const n of this.cells)t.push(...n.weights);return mg(t)}setWeights(t){const n=[];for(const r of this.cells){const o=r.weights.length,a=t.splice(o);for(let i=0;i<r.weights.length;++i)n.push([r.weights[i],a[i]])}gg(n)}}Fd.className="StackedRNNCells";X(Fd);function Nr(s){const{ones:t,rate:n,training:r=!1,count:o=1}=s,a=()=>s1(t(),n),i=()=>pc(a,t,r);return!o||o<=1?Dt(i().clone()):Array(o).fill(void 0).map(i).map(c=>Dt(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var m3=function(s,t){var n={};for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&t.indexOf(r)<0&&(n[r]=s[r]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,r=Object.getOwnPropertySymbols(s);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(s,r[o])&&(n[r[o]]=s[r[o]]);return n};class av extends hs{constructor(t){if(t.unroll)throw new Ce("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ce("It is not possible at the moment to stack convolutional cells.");super(t);this.inputSpec=[new vt({ndim:5})]}call(t,n){return V(()=>{if(this.cell.dropoutMask!=null&&($e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new z("ConvRNN2D cell does not support constants");const r=n==null?null:n.mask,o=n==null?null:n.training,a=n==null?null:n.initialState;return super.call(t,{mask:r,training:o,initialState:a})})}computeOutputShape(t){let n=this.computeSingleOutputShape(t);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([t[0],...n.slice(-3)])]),n}getInitialState(t){return V(()=>{const{stateSize:n}=this.cell,r=t.shape,o=this.computeSingleOutputShape(r),a=[o[0],...o.slice(2)],i=wt(a);return Array.isArray(n)?Array(n.length).fill(i):[i]})}resetStates(t,n=!1){V(()=>{if(!this.stateful)throw new Ns("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),a=[o[0],...o.slice(2)];if(r[0]==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(a)):this.states_=[wt(a)];else if(t==null)$e(this.states_),this.keptStates!=null&&($e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>wt(a)):this.states_[0]=wt(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n?this.keptStates.push(this.states_.slice()):$e(this.states_);for(let l=0;l<this.states_.length;++l){const c=t[l],u=a;if(!Ae(c.shape,u))throw new z(`State ${l} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${c.shape}`);this.states_[l]=c}}this.states_=this.states_.map(l=>Dt(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:n,filters:r,kernelSize:o,padding:a,strides:i,dilationRate:l}=this.cell,c=n==="channelsFirst",u=t[c?3:2],h=t[c?4:3],d=us(u,o[0],a,i[0],l[0]),p=us(h,o[1],a,i[1],l[1]);return[...t.slice(0,2),...c?[r,d,p]:[d,p,r]]}}av.className="ConvRNN2D";class _d extends vc{constructor(t){const{filters:n,kernelSize:r,strides:o,padding:a,dataFormat:i,dilationRate:l}=t;super(Object.assign({},t,{units:n}));this.filters=n,_t(this.filters,"filters"),this.kernelSize=ti(r,2,"kernelSize"),this.kernelSize.forEach(c=>_t(c,"kernelSize")),this.strides=ti(o||1,2,"strides"),this.strides.forEach(c=>_t(c,"strides")),this.padding=a||"valid",Dn(this.padding),this.dataFormat=i||"channelsLast",yt(this.dataFormat),this.dilationRate=ti(l||1,2,"dilationRate"),this.dilationRate.forEach(c=>_t(c,"dilationRate"))}build(t){var n;t=Be(t);const r=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[r]==null)throw new z(`The channel dimension of the input should be defined. Found ${t[r]}`);const o=t[r],a=4,i=this.kernelSize.concat([o,this.filters*a]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const u=this.biasInitializer,h=this.filters;c=new(n=class extends Xn{apply(p,f){const m=u.apply([h]),g=xn([h]),y=u.apply([h*2]);return rg([m,g,y])}},n.className="CustomInit",n)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return V(()=>{if(t.length!==3)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const r=n.training||!1,o=t[0],a=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>wn(o),rate:this.dropout,training:r,count:l}));const c=this.dropoutMask,u=(Z,J,Q)=>!J||!J[Q]?Z:L(J[Q],Z);let h=u(o,c,0),d=u(o,c,1),p=u(o,c,2),f=u(o,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>wn(a),rate:this.recurrentDropout,training:r,count:l}));const m=this.recurrentDropoutMask;let g=u(a,m,0),y=u(a,m,1),b=u(a,m,2),x=u(a,m,3);const w=3,[v,C,I,N]=ln(this.kernel.read(),l,w),[S,E,A,_]=this.useBias?ln(this.bias.read(),l):[null,null,null,null];h=this.inputConv(h,v,S,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,I,A,this.padding),f=this.inputConv(f,N,_,this.padding);const[D,O,B,W]=ln(this.recurrentKernel.read(),l,w);g=this.recurrentConv(g,D),y=this.recurrentConv(y,O),b=this.recurrentConv(b,B),x=this.recurrentConv(x,W);const M=this.recurrentActivation.apply(Y(h,g)),j=this.recurrentActivation.apply(Y(d,y)),U=Y(L(j,i),L(M,this.activation.apply(Y(p,b)))),K=L(this.recurrentActivation.apply(Y(f,x)),this.activation.apply(U));return[K,K,U]})}getConfig(){const t=super.getConfig(),n=m3(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,n,r,o){const a=Ws(t,n,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?as(a,r,this.dataFormat):a}recurrentConv(t,n){return Ws(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}_d.className="ConvLSTM2DCell";X(_d);class Kg extends av{constructor(t){const n=new _d(t);super(Object.assign({},t,{cell:n}))}static fromConfig(t,n){return new t(n)}}Kg.className="ConvLSTM2D";X(Kg);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Od extends Oe{constructor(t){super(t);this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const n=t.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(this.noiseShape[o]==null?n[o]:this.noiseShape[o]);return r}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t);if(0<this.rate&&this.rate<1){const o=n.training==null?!1:n.training,a=this.getNoiseShape(r);return pc(()=>s1(r,this.rate,a,this.seed),()=>r,o)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}}Od.className="Dropout";X(Od);class Xg extends Od{constructor(t){super(t);this.inputSpec=[{ndim:3}]}getNoiseShape(t){const n=t.shape;return[n[0],1,n[2]]}}Xg.className="SpatialDropout1D";X(Xg);class Yg extends Oe{constructor(t){super(t);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,_t(this.units,"units"),this.activation=Cr(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=ot(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ot(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Et(t.kernelConstraint),this.biasConstraint=Et(t.biasConstraint),this.kernelRegularizer=at(t.kernelRegularizer),this.biasRegularizer=at(t.biasRegularizer),this.activityRegularizer=at(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Be(t);const n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Be(t);const n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t),o=qw(this.activation.getClassName());let a;return o!=null?a=Is(r,this.kernel.read(),o,this.bias?this.bias.read():null):(a=Is(r,this.kernel.read()),this.bias!=null&&(a=as(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:$r(this.activation),useBias:this.useBias,kernelInitializer:ht(this.kernelInitializer),biasInitializer:ht(this.biasInitializer),kernelRegularizer:Ge(this.kernelRegularizer),biasRegularizer:Ge(this.biasRegularizer),activityRegularizer:Ge(this.activityRegularizer),kernelConstraint:Tt(this.kernelConstraint),biasConstraint:Tt(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}Yg.className="Dense";X(Yg);class Zg extends Oe{constructor(t){t=t||{};super(t);this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Be(t);for(const n of t.slice(1))if(n==null)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],br(t,1)]}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=Ne(t);if(this.dataFormat==="channelsFirst"&&r.rank>1){const o=[0];for(let a=2;a<r.rank;++a)o.push(a);o.push(1),r=Re(r,o)}return FO(r)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(t,n),t}}Zg.className="Flatten";X(Zg);class Jg extends Oe{constructor(t){super(t);this.supportsMasking=!0,this.activation=Cr(t.activation)}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t);return this.activation.apply(r)})}getConfig(){const t={activation:$r(this.activation)},n=super.getConfig();return Object.assign(t,n),t}}Jg.className="Activation";X(Jg);class Qg extends Oe{constructor(t){super(t);this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return V(()=>(t=Ne(t),DO(t,this.n)))}getConfig(){const t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}}Qg.className="RepeatVector";X(Qg);class ey extends Oe{constructor(t){super(t);this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){const r="Total size of new array must be unchanged.",o=n.slice();let a=1,i=null;for(let c=0;c<o.length;++c){const u=o[c];if(this.isUnknown(u))if(i===null)i=c;else throw new z("Can only specifiy one unknown dimension.");else a*=u}const l=br(t);if(i!==null){if(a===0||l%a!=0)throw new z(r);o[i]=l/a}else if(l!==a)throw new z(r);return o}computeOutputShape(t){let n=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t),o=r.shape,a=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return P(r,a)})}getConfig(){const t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}}ey.className="Reshape";X(ey);class ty extends Oe{constructor(t){super(t);if(t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const n=os(1,t.dims.length+1);if(!Ae(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new vt({ndim:this.dims.length+1})]}computeOutputShape(t){t=Be(t);const n=t.slice();return this.dims.forEach((r,o)=>{n[o+1]=t[r]}),n}call(t,n){return Re(Ne(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}}ty.className="Permute";X(ty);class ny extends Oe{constructor(t){super(t==null?{}:t);this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){const r=Ne(t),o=-1;return Bl(Qr(r,this.maskValue),o)}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t),o=-1,a=!0,i=Bl(Qr(r,this.maskValue),o,a);return L(r,ne(i,r.dtype))})}}ny.className="Masking";X(ny);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sy extends Oe{constructor(t){super(t);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(tt(t.inputLength))}this.inputDim=t.inputDim,_t(this.inputDim,"inputDim"),this.outputDim=t.outputDim,_t(this.outputDim,"outputDim"),this.embeddingsInitializer=ot(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=at(t.embeddingsRegularizer),this.activityRegularizer=at(t.activityRegularizer),this.embeddingsConstraint=Et(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return V(()=>this.maskZero?(t=Ne(t),Qr(t,_e(t))):null)}computeOutputShape(t){if(t=Be(t),this.inputLength==null)return[...t,this.outputDim];const n=tt(this.inputLength);if(n.length!==t.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let o=0;o<n.length;++o){const a=n[o],i=t[o+1];if(a!=null&&i!=null&&a!==i)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);a==null&&(n[r]=i),r++}}return[t[0],...n,this.outputDim]}call(t,n){return V(()=>{this.invokeCallHook(t,n);let r=Ne(t);r.dtype!=="int32"&&(r=ad(r,"int32"));const o=n1(this.embeddings.read(),P(r,[r.size]));return P(o,Be(this.computeOutputShape(r.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ht(this.embeddingsInitializer),embeddingsRegularizer:Ge(this.embeddingsRegularizer),activityRegularizer:Ge(this.activityRegularizer),embeddingsConstraint:Tt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}}sy.className="Embedding";X(sy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fo extends Oe{constructor(t){super(t||{});this.supportsMasking=!0}mergeFunction(t){throw new Ce}computeElementwiseOpOutputShape(t,n){if(t==null||n==null)return null;if(t.length<n.length)return this.computeElementwiseOpOutputShape(n,t);if(n.length===0)return t;const r=t.slice(0,t.length-n.length);for(let o=0;o<n.length;++o){const a=t[t.length-n.length+o],i=n[o];if(a==null||i==null||a<0||i<0)r.push(null);else if(a===1)r.push(i);else if(i===1)r.push(a);else{if(a!==i)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(n));r.push(a)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Be(t)]),t=t,t.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let n=[];for(const a of t)a!=null&&a[0]!==null&&n.push(a[0]);if(n=yr(n),n.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=t[0]==null?null:t[0].slice(1);for(let a=1;a<t.length;++a){const i=t[a]==null?null:t[a].slice(1);r=this.computeElementwiseOpOutputShape(r,i)}const o=t.map(a=>a.length);t.indexOf(null)===-1&&yr(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,n){return V(()=>{if(t=t,this.reshapeRequired){const r=[],o=t.map(a=>a.rank);if(o.indexOf(null)===-1){const a=xr(o);for(let i of t){const l=i.rank;for(let c=0;c<a-l;++c)i=hc(i,1);r.push(i)}return this.mergeFunction(r)}else{let a=!1;for(const c of t){const u=c.rank;if(u==null){const h=c.shape,d=h[0],p=h.slice(1).concat([d]);let f=P(c,[d].concat(br(h.slice(1))));f=Re(f,[1,0]),f=P(f,p),r.push(f),a=!0}else if(u>1){const h=os(1,u).concat([0]);r.push(Re(c,h)),a=!0}else r.push(c)}let i=this.mergeFunction(r);const l=i.rank;if(a){if(l==null){const c=i.shape,u=c.length,h=c[u-1],d=[h].concat(c.slice(0,c.length-1));i=P(Re(P(i,[-1,h]),[1,0]),d)}else if(l>1){const c=[l-1].concat(os(0,l-1));i=Re(i,c)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let n;t[0]==null?n=null:n=t[0].slice(1);for(let o=1;o<t.length;++o){const a=t[o]==null?null:t[o].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let r=[];for(const o of t)o!=null&&o[0]!==null&&r.push(o[0]);return r=yr(r),r.length===1?n=r.concat(n):n=[null].concat(n),n}computeMask(t,n){return V(()=>{if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an Array");if(!Array.isArray(t))throw new z("`inputs` should be an Array");if(n.length!==t.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${n.length})`);if(n.every(o=>o==null))return null;n=n.map(o=>o==null?o:on(o,0));let r=n[0];for(let o=1;o<n.length-1;++o)r=Gn(r,n[o]);return r})}}class ry extends fo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=Y(n,t[r]);return n})}}ry.className="Add";X(ry);class oy extends fo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=L(n,t[r]);return n})}}oy.className="Multiply";X(oy);class ay extends fo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0].clone();for(let r=1;r<t.length;++r)n=Y(n,t[r]);return L(1/t.length,n)})}}ay.className="Average";X(ay);class iy extends fo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=vs(n,t[r]);return n})}}iy.className="Maximum";X(iy);class ly extends fo{constructor(t){super(t)}mergeFunction(t){return V(()=>{let n=t[0];for(let r=1;r<t.length;++r)n=Ua(n,t[r]);return n})}}ly.className="Minimum";X(ly);class cy extends fo{constructor(t){super(t);this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(const o of t)if(o!=null){n=!1;break}if(n)return;const r=[];for(let o=0;o<t.length;++o){const a=t[o].slice();a.splice(this.axis,1);let i=!1;for(const l of r)if(Ae(l,a)){i=!0;break}i||r.push(a)}if(r.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return V(()=>rg(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new z("A `Concatenate` layer should be called on a list of inputs.");const n=t,r=n[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(const a of n.slice(1)){if(r[o]==null||a[o]==null){r[o]=null;break}r[o]+=a[o]}return r}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new z("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new z(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return V(()=>{let r=!0;if(n.forEach(i=>{if(i!=null){r=!1;return}}),r)return null;const o=[];for(let i=0;i<t.length;++i)n[i]==null?o.push(ne(wn(t[i]),"bool")):n[i].rank<t[i].rank?o.push(on(n[i],-1)):o.push(n[i]);const a=ft(o,this.axis);return ph(a,-1,!1)})}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}cy.className="Concatenate";X(cy);function $c(s,t){for(;s<0;)s+=t;return s}function g3(s,t,n){if(s.shape.length>3||t.shape.length>3)throw new Ce("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),k(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),s.dtype==="complex64"||t.dtype==="complex64")throw new Ce("batchDot is not implemented for complex64-type Tensors yet.");const r=s.shape.length,o=t.shape.length;n==null&&(n=[r-1,o-2]);const a=n;return V(()=>{let i;if(r>o){i=r-o;const c=[];for(let u=0;u<i;++u)c.push(1);t=P(t,t.shape.concat(c))}else if(o>r){i=o-r;const c=[];for(let u=0;u<i;++u)c.push(1);s=P(s,s.shape.concat(c))}else i=0;let l;if(s.shape.length===2&&t.shape.length===2)a[0]===a[1]?l=ue(L(s,t),a[0]):l=ue(L(Re(s,[1,0]),t),a[1]);else{const c=a[0]!==s.shape.length-1,u=a[1]===t.shape.length-1;l=Ie(s,t,c,u)}if(i>0){let c;r>o?c=r+o-3:c=r-1;const u=[];for(let h=c;h<c+i;++h)u.push(h);l=$s(l,u)}return l.shape.length===1&&(l=on(l,1)),l})}class uy extends fo{constructor(t){super(t);this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0],r=t[1];if(n.length>3||r.length>3)throw new Ce("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,r);if(n[o[0]]!==r[o[1]])throw new z(`Dimension incompatibility: ${n[o[0]]} !== ${r[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],r=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((a,i)=>$c(a,t[i].shape.length)):o=[$c(this.axes,n.shape.length),$c(this.axes,r.shape.length)],this.normalize&&(n=vd(n,o[0]),r=vd(r,o[1])),g3(n,r,o)}interpretAxes(t,n){let r;return Array.isArray(this.axes)?r=this.axes:r=[$c(this.axes,t.length),$c(this.axes,n.length)],r}computeOutputShape(t){k(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0].slice(),r=t[1].slice();if(n.length>3||r.length>3)throw new Ce("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(n,r);n.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);const a=n.concat(r);return a.length===1&&a.push(1),a}computeMask(t,n){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}}uy.className="Dot";X(uy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hy extends Oe{constructor(t){super(t);this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t);return pc(()=>Y(ld(r.shape,0,this.stddev),r),()=>r,n.training||!1)})}}hy.className="GaussianNoise";X(hy);class dy extends Oe{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return V(()=>{this.invokeCallHook(t,n);const r=Ne(t);return this.rate>0&&this.rate<1?pc(()=>{const a=Math.sqrt(this.rate/(1-this.rate));return L(r,ld(r.shape,1,a))},()=>r,n.training||!1):r})}}dy.className="GaussianDropout";X(dy);class py extends Oe{constructor(t){super(t);this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ne(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return V(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(t);return pc(()=>{const a=Ne(t),i=1.6732632423543772,l=1.0507009873554805,c=-i*l;let u=mr(Ha(r),this.rate);u=ad(u,"float32");const h=((1-this.rate)*(1+this.rate*c**2))**-.5,d=-h*c*this.rate,p=Y(L(a,u),L(Y(u,-1),c));return Y(L(p,h),d)},()=>Ne(t),n.training||!1)}return t})}}py.className="AlphaDropout";X(py);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cc(s,t,n,r,o,a=.001){let i;if(s.rank===2)i=D0(s,t,n,r,o,a);else if(s.rank===3)i=R0(s,t,n,r,o,a);else if(s.rank===4)i=F0(s,t,n,r,o,a);else throw new Ce(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return i}function y3(s,t,n,r,o=.001){return V(()=>{const a=Nh(s,r),i=a.mean,l=a.variance;return[Cc(s,i,l,n,t,o),i,l]})}function b3(s,t,n,r,o=.001){return V(()=>{const a=Nh(s,r),i=a.mean,l=a.variance,c=[];for(const m of os(0,s.rank))r.indexOf(m)!==-1?c.push(1):c.push(s.shape[m]);const u=P(i,c),h=P(l,c),d=t==null?null:P(t,c),p=n==null?null:P(n,c);return[Cc(s,u,h,p,d,o),i,l]})}function x3(s,t,n,r,o=.001){return Ae(r.slice().sort(),os(0,s.rank-1))?y3(s,t,n,r,o):b3(s,t,n,r,o)}class fy extends Oe{constructor(t){t==null&&(t={});super(t);this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ot(t.betaInitializer||"zeros"),this.gammaInitializer=ot(t.gammaInitializer||"ones"),this.movingMeanInitializer=ot(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ot(t.movingVarianceInitializer||"ones"),this.betaConstraint=Et(t.betaConstraint),this.gammaConstraint=Et(t.gammaConstraint),this.betaRegularizer=at(t.betaRegularizer),this.gammaRegularizer=at(t.gammaRegularizer)}build(t){t=Be(t);const n=this.axis>=0?this.axis:this.axis+t.length,r=t[n];if(r==null)throw new z(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new vt({ndim:t.length,axes:{[n]:r}})];const o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return V(()=>{const r=n.training==null?!1:n.training,o=Ne(t),a=o.shape,i=a.length,l=os(0,i),c=this.axis>=0?this.axis:this.axis+i;l.splice(c,1);const u=oo(1,i);u[c]=a[c];const h=l.slice();h.sort();const d=!Ae(h,os(0,i).slice(0,i-1)),p=()=>{if(d){const x=P(this.movingMean.read(),u),w=P(this.movingVariance.read(),u),v=this.center?P(this.beta.read(),u):null,C=this.scale?P(this.gamma.read(),u):null;return Cc(o,x,w,v,C,this.epsilon)}else return Cc(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return p();const[f,m,g]=x3(o,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(x,w,v)=>{V(()=>{const C=1-v,I=x.read(),N=L(ce(I,w),C);x.write(ce(I,N))})};return(()=>{y(this.movingMean,m,this.momentum),y(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ht(this.betaInitializer),gammaInitializer:ht(this.gammaInitializer),movingMeanInitializer:ht(this.movingMeanInitializer),movingVarianceInitializer:ht(this.movingVarianceInitializer),betaRegularizer:Ge(this.betaRegularizer),gammaRegularizer:Ge(this.gammaRegularizer),betaConstraint:Tt(this.betaConstraint),gammaConstraint:Tt(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}}fy.className="BatchNormalization";X(fy);class my extends Oe{constructor(t){t==null&&(t={});super(t);if(this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ot(t.betaInitializer||"zeros"),this.gammaInitializer=ot(t.gammaInitializer||"ones"),this.betaRegularizer=at(t.betaRegularizer),this.gammaRegularizer=at(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Be(t);const n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(const a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==yr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(a=>t[a]),o=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,n){const r=Ne(t),o=r.shape,a=o.length;return V(()=>{const i=!0;let{mean:l,variance:c}=Nh(r,this.axis,i);const u=oo(1,a);for(const g of this.axis)u[g]=o[g];const h=g=>g!=null&&g.shape.length!==a&&this.axis!==[a-1]?P(g,u):g;let d=h(this.gamma.read()),p=h(this.beta.read());const f=[],m=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(o[g]),m.push(1)):(f.push(1),m.push(o[g]));return l=An(l,f),c=An(c,f),d=An(d,m),p=An(p,m),Cc(r,l,c,p,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ht(this.betaInitializer),gammaInitializer:ht(this.gammaInitializer),betaRegularizer:Ge(this.betaRegularizer),gammaRegularizer:Ge(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}}my.className="LayerNormalization";X(my);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w3(s,t,n){return V(()=>{if(s.rank!==4)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=rs()),n!=="channelsLast"&&n!=="channelsFirst")throw new z(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],Us(s,r)})}class gy extends Oe{constructor(t){t==null&&(t={});super(t);if(this.dataFormat=t.dataFormat==null?rs():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,r;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[n,r]}this.inputSpec=[new vt({ndim:4})]}computeOutputShape(t){t=Be(t);let n,r;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?r=t[3]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],t[1],n,r]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?r=t[2]+this.padding[1][0]+this.padding[1][1]:r=null,[t[0],n,r,t[3]])}call(t,n){return V(()=>w3(Ne(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}gy.className="ZeroPadding2D";X(gy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ld(s,t,n,r,o,a){return V(()=>{yt(o),Yw(a),Dn(r),n==null&&(n=[1,1]),r==null&&(r="valid"),o==null&&(o=rs()),a==null&&(a="max"),s=zg(s,o);let i;const l=r==="same"?"same":"valid";return a==="max"?i=Kl(s,t,n,l):i=Wl(s,t,n,l),o==="channelsFirst"&&(i=Re(i,[0,3,1,2])),i})}function iv(s,t,n,r,o,a){return V(()=>{yt(o),Yw(a),Dn(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),o==null&&(o=rs()),a==null&&(a="max"),s=tv(s,o);let i;const l=r==="same"?"same":"valid";return a==="max"?i=cm(s,t,n,l):i=Kf(s,t,n,l),o==="channelsFirst"&&(i=Re(i,[0,4,1,2,3])),i})}class lv extends Oe{constructor(t){t.poolSize==null&&(t.poolSize=2);super(t);if(typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(_t(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);_t(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Dn(this.padding),this.inputSpec=[new vt({ndim:3})]}computeOutputShape(t){t=Be(t);const n=us(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],n,t[2]]}call(t,n){return V(()=>{this.invokeCallHook(t,n),t=hc(Ne(t),2);const r=this.poolingFunction(Ne(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return $s(r,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(t,n),t}}class yy extends lv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),Ld(t,n,r,o,a,"max")}}yy.className="MaxPooling1D";X(yy);class by extends lv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),Ld(t,n,r,o,a,"avg")}}by.className="AveragePooling1D";X(by);class cv extends Oe{constructor(t){t.poolSize==null&&(t.poolSize=[2,2]);super(t);if(this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];_t(this.poolSize,"poolSize"),_t(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yt(this.dataFormat),Dn(this.padding),this.inputSpec=[new vt({ndim:4})]}computeOutputShape(t){t=Be(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2];return n=us(n,this.poolSize[0],this.padding,this.strides[0]),r=us(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,r]:[t[0],n,r,t[3]]}call(t,n){return V(()=>(this.invokeCallHook(t,n),this.poolingFunction(Ne(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class xy extends cv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),Ld(t,n,r,o,a,"max")}}xy.className="MaxPooling2D";X(xy);class wy extends cv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),Ld(t,n,r,o,a,"avg")}}wy.className="AveragePooling2D";X(wy);class uv extends Oe{constructor(t){t.poolSize==null&&(t.poolSize=[2,2,2]);super(t);if(this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];_t(this.poolSize,"poolSize"),_t(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yt(this.dataFormat),Dn(this.padding),this.inputSpec=[new vt({ndim:5})]}computeOutputShape(t){t=Be(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],r=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return n=us(n,this.poolSize[0],this.padding,this.strides[0]),r=us(r,this.poolSize[1],this.padding,this.strides[1]),o=us(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,r,o]:[t[0],n,r,o,t[4]]}call(t,n){return V(()=>(this.invokeCallHook(t,n),this.poolingFunction(Ne(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class vy extends uv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),iv(t,n,r,o,a,"max")}}vy.className="MaxPooling3D";X(vy);class $y extends uv{constructor(t){super(t)}poolingFunction(t,n,r,o,a){return yt(a),Dn(o),iv(t,n,r,o,a,"avg")}}$y.className="AveragePooling3D";X($y);class hv extends Oe{constructor(t){super(t);this.inputSpec=[new vt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,n){throw new Ce}}class Cy extends hv{constructor(t){super(t||{})}call(t,n){return V(()=>{const r=Ne(t);return ut(r,1)})}}Cy.className="GlobalAveragePooling1D";X(Cy);class Ny extends hv{constructor(t){super(t||{})}call(t,n){return V(()=>{const r=Ne(t);return Un(r,1)})}}Ny.className="GlobalMaxPooling1D";X(Ny);class dv extends Oe{constructor(t){super(t);this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,yt(this.dataFormat),this.inputSpec=[new vt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,n){throw new Ce}getConfig(){const t={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class ky extends dv{call(t,n){return V(()=>{const r=Ne(t);return this.dataFormat==="channelsLast"?ut(r,[1,2]):ut(r,[2,3])})}}ky.className="GlobalAveragePooling2D";X(ky);class Iy extends dv{call(t,n){return V(()=>{const r=Ne(t);return this.dataFormat==="channelsLast"?Un(r,[1,2]):Un(r,[2,3])})}}Iy.className="GlobalMaxPooling2D";X(Iy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pv extends Oe{constructor(t){super(t);this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(t,n),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,n,r={}){const o=n.layer,a=ls(o,r);delete n.layer;const i={layer:a};return Object.assign(i,n),new t(i)}}class Sy extends pv{constructor(t){super(t);this.supportsMasking=!0}build(t){if(t=Be(t),t.length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const n=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Be(t);const n=[t[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(n),o=t[1];return[r[0],o].concat(r.slice(1))}call(t,n){return V(()=>(t=Ne(t),ov((i,l)=>[Ne(this.layer.call(i,n)),[]],t,[],!1,null,null,!1,!0)[1]))}}Sy.className="TimeDistributed";X(Sy);function v3(s){io(IO,"BidirectionalMergeMode",s)}const $3="concat";class Ty extends pv{constructor(t){super(t);const n=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=n,this.forwardLayer=ls(r),n.goBackwards=n.goBackwards!==!0;const o={};if(o.className=t.layer.getClassName(),o.config=n,this.backwardLayer=ls(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?$3:t.mergeMode,v3(this.mergeMode),t.weights)throw new Ce("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const n=t.length,r=Math.floor(n/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let n=this.forwardLayer.computeOutputShape(t);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let r,o,a;return this.returnState&&(a=n.slice(1)),r=n[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,o=[r]):this.mergeMode==null?o=[r,r.slice()]:o=[r],this.returnState?this.mergeMode==null?o.concat(a).concat(a.slice()):[r].concat(a).concat(a.slice()):cn(o)}apply(t,n){let r=n==null?null:n.initialState,o=n==null?null:n.constants;n==null&&(n={});const a=rv(t,r,o,this.numConstants);if(t=a.inputs,r=a.initialState,o=a.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(r==null||r.length===0)&&o==null)return super.apply(t,n);const i=[],l=[];if(r!=null){const u=r.length;if(u%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=r,i.push(...r);const h=r.map(d=>new vt({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,u/2),this.backwardLayer.stateSpec=h.slice(u/2),l.push(...h)}if(o!=null)throw new Ce("Support for constants in Bidirectional layers is not implemented yet.");const c=i[0]instanceof is;for(const u of i)if(u instanceof is!==c)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const u=[t].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(u,n);return this.inputSpec=d,p}else return super.apply(t,n)}call(t,n){return V(()=>{const r=n.initialState;let o,a;if(r==null)o=this.forwardLayer.call(t,n),a=this.backwardLayer.call(t,n);else{const c=r.slice(0,r.length/2),u=r.slice(r.length/2);o=this.forwardLayer.call(t,Object.assign(n,{initialState:c})),a=this.backwardLayer.call(t,Object.assign(n,{initialState:u}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(a.slice(1))),o=o[0],a=a[0]),this.returnSequences&&(a=vn(a,1));let l;return this.mergeMode==="concat"?l=rg([o,a]):this.mergeMode==="sum"?l=Y(o,a):this.mergeMode==="ave"?l=L(.5,Y(o,a)):this.mergeMode==="mul"?l=L(o,a):this.mergeMode==null&&(l=[o,a]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){lo(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),lo(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,n){Array.isArray(n)&&(n=n[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[n,n]:r=n:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const a=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(a).concat(a):[r].concat(a).concat(a)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,n){const r=ls(n.layer);if(delete n.layer,n.numConstants!=null)throw new Ce("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=n;return o.layer=r,new t(o)}}Ty.className="Bidirectional";X(Ty);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function C3(s){return new Ja(s)}function N3(s){return new Og(s)}function k3(s){return new Rg(s)}function I3(s){return new Fg(s)}function S3(s){return new _g(s)}function T3(s){return new Pg(s)}function E3(s){return new Lg(s)}function A3(s){return new xc(s)}function D3(s){return new si(s)}function R3(s){return new Mg(s)}function F3(s){return new ri(s)}function _3(s){return new Bg(s)}function O3(s){return new Vg(s)}function L3(s){return new Wg(s)}function P3(s){return new Ug(s)}function z3(s){return new Gg(s)}function M3(s){return new Jg(s)}function B3(s){return new Yg(s)}function V3(s){return new Od(s)}function W3(s){return new Xg(s)}function U3(s){return new Zg(s)}function G3(s){return new Qg(s)}function H3(s){return new ey(s)}function j3(s){return new ty(s)}function q3(s){return new sy(s)}function K3(s){return new ry(s)}function X3(s){return new ay(s)}function Y3(s){return new cy(s)}function Z3(s){return new iy(s)}function J3(s){return new ly(s)}function Q3(s){return new oy(s)}function eP(s){return new uy(s)}function tP(s){return new fy(s)}function nP(s){return new my(s)}function sP(s){return new gy(s)}function Ey(s){return new by(s)}function rP(s){return Ey(s)}function oP(s){return Ey(s)}function Ay(s){return new wy(s)}function aP(s){return Ay(s)}function iP(s){return Ay(s)}function Dy(s){return new $y(s)}function lP(s){return Dy(s)}function cP(s){return Dy(s)}function uP(s){return new Cy(s)}function hP(s){return new ky(s)}function fv(s){return new Ny(s)}function mv(s){return new Iy(s)}function gv(s){return new yy(s)}function yv(s){return new xy(s)}function dP(s){return new vy(s)}function pP(s){return new jg(s)}function fP(s){return new Rd(s)}function mP(s){return new qg(s)}function gP(s){return new vc(s)}function yP(s){return new Hg(s)}function bP(s){return new Dd(s)}function xP(s){return new Kg(s)}function wP(s){return new _d(s)}function vP(s){return new hs(s)}function $P(s){return new Fd(s)}function CP(s){return new Ty(s)}function NP(s){return new Sy(s)}const kP=fv,IP=mv,SP=gv,TP=yv;function EP(s){return new hy(s)}function AP(s){return new dy(s)}function DP(s){return new py(s)}function RP(s){return new ny(s)}var FP=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",inputLayer:C3,elu:N3,reLU:k3,leakyReLU:I3,prelu:S3,softmax:T3,thresholdedReLU:E3,conv1d:A3,conv2d:D3,conv2dTranspose:R3,conv3d:F3,conv3dTranspose:_3,separableConv2d:O3,cropping2D:L3,upSampling2d:P3,depthwiseConv2d:z3,activation:M3,dense:B3,dropout:V3,spatialDropout1d:W3,flatten:U3,repeatVector:G3,reshape:H3,permute:j3,embedding:q3,add:K3,average:X3,concatenate:Y3,maximum:Z3,minimum:J3,multiply:Q3,dot:eP,batchNormalization:tP,layerNormalization:nP,zeroPadding2d:sP,averagePooling1d:Ey,avgPool1d:rP,avgPooling1d:oP,averagePooling2d:Ay,avgPool2d:aP,avgPooling2d:iP,averagePooling3d:Dy,avgPool3d:lP,avgPooling3d:cP,globalAveragePooling1d:uP,globalAveragePooling2d:hP,globalMaxPooling1d:fv,globalMaxPooling2d:mv,maxPooling1d:gv,maxPooling2d:yv,maxPooling3d:dP,gru:pP,gruCell:fP,lstm:mP,lstmCell:gP,simpleRNN:yP,simpleRNNCell:bP,convLstm2d:xP,convLstm2dCell:wP,rnn:vP,stackedRNNCells:$P,bidirectional:CP,timeDistributed:NP,globalMaxPool1d:kP,globalMaxPool2d:IP,maxPool1d:SP,maxPool2d:TP,Layer:Oe,RNN:hs,RNNCell:wc,input:z1,gaussianNoise:EP,gaussianDropout:AP,alphaDropout:DP,masking:RP});function _P(s,t){return xg(s,t)}function OP(s,t){return w1(s,t)}function LP(s,t){return v1(s,t)}function PP(s,t){return wg(s,t)}function zP(s,t){return vg(s,t)}function MP(s,t){return x1(s,t)}function BP(s,t){return $L(s,t)}function VP(s,t){return yg(s,t)}function WP(s,t){return $d(s,t)}function UP(s,t){return ei(s,t)}function GP(s,t){return ei(s,t)}function HP(s,t){return ei(s,t)}function jP(s,t){return uo(s,t)}function qP(s,t){return uo(s,t)}function KP(s,t){return uo(s,t)}var XP=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",binaryAccuracy:_P,binaryCrossentropy:OP,sparseCategoricalAccuracy:LP,categoricalAccuracy:PP,categoricalCrossentropy:zP,precision:MP,recall:BP,cosineProximity:VP,meanAbsoluteError:WP,meanAbsolutePercentageError:UP,MAPE:GP,mape:HP,meanSquaredError:jP,MSE:qP,mse:KP});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var YP=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",modelFromJSON:n3});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZP(s){return new bc(s)}function JP(s){return u3(s)}function QP(s){return h3(s)}var ez=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",l1l2:ZP,l1:JP,l2:QP});/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bv extends Qa{constructor(){super(...arguments);this.model=null}setModel(t){if(!(t instanceof Xs))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Pd(s,t){return s<t}function xv(s,t){return s>t}class wv extends bv{constructor(t){super();if(t==null&&(t={}),t.restoreBestWeights)throw new Ce("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Pd:this.mode==="max"?this.monitorFunc=xv:this.monitor.indexOf("acc")!==-1?this.monitorFunc=xv:this.monitorFunc=Pd,this.monitorFunc===Pd&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Pd?1/0:-1/0}async onEpochEnd(t,n){await wr(n);const r=this.getMonitorValue(n);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){t==null&&(t={});const n=t[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),n}}function tz(s){return new wv(s)}const nz={earlyStopping:tz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ds;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(ds||(ds={}));var vv;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(vv||(vv={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ry={};function sz(s,t){const n={tfOpName:s,category:"custom",inputs:[],attrs:[],customExecutor:t};Ry[s]=n}function $v(s){return Ry[s]}function rz(s){delete Ry[s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $(s,t,n,r,o){const a=t.inputParams[s];if(a&&a.inputIndexStart!==void 0){const l=a.inputIndexStart,c=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?l+1:a.inputIndexEnd;if(a.type==="tensor")return Qt(t.inputNames[a.inputIndexStart],n,r,o);if(a.type==="tensors")return t.inputNames.slice(l,c).map(p=>Qt(p,n,r,o));const u=Qt(t.inputNames.slice(l)[0],n,r,o),h=u.dataSync();return a.type==="number"?h[0]:Tn(u.shape,h)}const i=t.attrParams[s];return i&&i.value}function Qt(s,t,n,r){const[o,a]=Cn(s);if(r!=null){const l=r.getHashTableHandleByName(o);if(l!=null)return l}const i=n.currentContextIds.find(l=>!!t[zd(o,l)]);return i!==void 0?t[zd(o,i)][a]:void 0}function oz(s,t,n){return t[zd(s,n.currentContextId)]}function Ys(s,t){const[n,r,o]=Cn(s);return[zd(n,t&&t.currentContextId),r,o]}function zd(s,t){return t?`${s}-${t}`:s}function Cn(s){const t=s.split(":");if(t.length===1)return[s,0,void 0];const n=t[0],r=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[n,o,r]}function Md(s,t,n){let r=$("pad",s,t,n);if(r==="explicit"){r=$("explicitPaddings",s,t,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)o[a][0]=r[a*2],o[a][1]=r[a*2+1];return o}return r}function Zs(s){return s.kept?s:Ms(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const az=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var iz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var cz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:lz});const uz=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var hz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dz=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var pz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:dz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var mz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:fz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var yz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bz=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var xz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:bz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wz=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var vz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:wz});const $z=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Cz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:$z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var kz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Nz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var Sz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Iz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var Ez=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Tz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var Dz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Fz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Rz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _z=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var Oz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:_z});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var Pz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Lz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Mz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:zz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Vz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Bz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Uz=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",json:Wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cv{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[iz,cz,hz,pz,mz,yz,xz,vz,Cz,kz,Sz,Ez,Dz,Fz,Oz,Pz,Mz,Vz,Uz],n=[].concat(...t.map(r=>r.json));this.opMappers=n.reduce((r,o)=>(r[o.tfOpName]=o,r),{})}transformGraph(t,n={}){const r=t.node,o=[],a=[],i=[],l=r.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?o.push(g[y.name]):y.op==="Const"?a.push(g[y.name]):(y.input==null||y.input.length===0)&&i.push(g[y.name]),g),{});let c=[];const u=[];let h={},d={};n!=null&&(h=this.mapSignatureEntries(n.inputs),d=this.mapSignatureEntries(n.outputs));const p=Object.keys(l);p.forEach(g=>{const y=l[g];y.inputNames.forEach((b,x)=>{const[w,,v]=Ys(b),C=l[w];if(C.outputs!=null){const I=C.outputs.indexOf(v);if(I!==-1){const N=`${w}:${I}`;y.inputNames[x]=N}}y.inputs.push(C),C.children.push(y)})}),Object.keys(d).length===0?p.forEach(g=>{const y=l[g];y.children.length===0&&u.push(y)}):Object.keys(d).forEach(g=>{const[y]=Ys(g),b=l[y];b!=null&&(b.signatureKey=d[g],u.push(b))}),Object.keys(h).length>0?Object.keys(h).forEach(g=>{const[y]=Ys(g),b=l[y];b&&(b.signatureKey=h[g],c.push(b))}):c=o;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const m={nodes:l,inputs:c,outputs:u,weights:a,placeholders:o,signature:n,functions:f};return i.length>0&&(m.initNodes=i),m}mapSignatureEntries(t){return Object.keys(t||{}).reduce((n,r)=>(n[t[r].name]=r,n),{})}mapNode(t){const n=$v(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const r={name:t.name,op:t.op,category:n.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:n.outputs};return n.inputs!=null&&(r.inputParams=n.inputs.reduce((o,a)=>(o[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},o),{})),n.attrs!=null&&(r.attrParams=n.attrs.reduce((o,a)=>{const i=a.type;let l;switch(a.type){case"string":l=Fy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Fy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":l=Vy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Vy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":l=Oy(t.attr,a.tfName,a.defaultValue||0),l===void 0&&!!a.tfDeprecatedName&&(l=Oy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":l=By(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=By(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":l=_y(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=_y(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":l=Uy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Uy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":l=My(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=My(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":l=Wy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Wy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":l=Py(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=Py(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":l=zy(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=zy(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":l=kv(t.attr,a.tfName,a.defaultValue),l===void 0&&!!a.tfDeprecatedName&&(l=kv(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${t.op}`)}return o[a.name]={value:l,type:i},o},{})),r}mapFunction(t){const n=t.nodeDef,r=[],o=[];let a={};n!=null&&(a=n.reduce((d,p)=>(d[p.name]=this.mapNode(p),p.op==="Const"&&o.push(d[p.name]),d),{}));const i=[],l=[];t.signature.inputArg.forEach(d=>{const[p]=Ys(d.name),f={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ly(d.type),type:"dtype"}},children:[]};f.signatureKey=d.name,i.push(f),a[p]=f}),Object.keys(a).forEach(d=>{const p=a[d];p.inputNames.forEach((f,m)=>{const[g,,y]=Ys(f),b=a[g];if(b.outputs!=null){const x=b.outputs.indexOf(y);if(x!==-1){const w=`${g}:${x}`;p.inputNames[m]=w}}p.inputs.push(b),b.children.push(p)})});const u=t.ret;t.signature.outputArg.forEach(d=>{const[p,f]=Ys(u[d.name]),m=a[p];m!=null&&(m.defaultOutput=f,l.push(m))});const h=this.mapArgsToSignature(t);return{nodes:a,inputs:i,outputs:l,weights:o,placeholders:r,signature:h}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r),n),{}),outputs:t.signature.outputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r,t.ret),n),{})}}mapArgToTensorInfo(t,n){let r=t.name;return n!=null&&(r=n[r]),{name:r,dtype:t.type}}}function Gz(s){const t=q().global;if(typeof t.atob!="undefined")return t.atob(s);if(typeof Buffer!="undefined")return new Buffer(s,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Nv(s,t){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):Gz(s);return t?n:n.toLowerCase()}function Fy(s,t,n,r=!1){const o=s[t];return o!=null?Nv(o.s,r):n}function _y(s,t,n){const r=s[t];return r?r.b:n}function Oy(s,t,n){const r=s[t]||{},o=r.i!=null?r.i:r.f!=null?r.f:n;return typeof o=="number"?o:parseInt(o,10)}function Ly(s){switch(typeof s=="string"&&(s=ds[s]),s){case ds.DT_FLOAT:return"float32";case ds.DT_INT32:case ds.DT_INT64:case ds.DT_INT8:case ds.DT_UINT8:return"int32";case ds.DT_BOOL:return"bool";case ds.DT_DOUBLE:return"float32";case ds.DT_STRING:return"string";default:return null}}function kv(s,t,n){const r=s[t];return r&&r.func?r.func.name:n}function Py(s,t,n){const r=s[t];return r&&r.type?Ly(r.type):n}function zy(s,t,n){const r=s[t];return r&&r.list&&r.list.type?r.list.type.map(o=>Ly(o)):n}function Iv(s){if(!s.unknownRank)return s.dim!=null?s.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function My(s,t,n){const r=s[t];return r&&r.shape?Iv(r.shape):n}function By(s,t,n){const r=s[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):n}function Vy(s,t,n,r=!1){const o=s[t];return o&&o.list&&o.list.s?o.list.s.map(a=>Nv(a,r)):n}function Wy(s,t,n){const r=s[t];return r&&r.list&&r.list.shape?r.list.shape.map(o=>Iv(o)):n}function Uy(s,t,n){const r=s[t];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hz{constructor(t,n,r){this.node=t,this.tensorMap=n,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,a)=>(o[a]=this.getAttr(a),o),{}))}getInput(t){return Qt(t,this.tensorMap,this.context)}getAttr(t,n){const r=this.node.rawAttrs[t];if(r.tensor!=null)return Qt(t,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Oy(this.node.rawAttrs,t,n);if(r.s!=null)return Fy(this.node.rawAttrs,t,n);if(r.b!=null)return _y(this.node.rawAttrs,t,n);if(r.shape!=null)return My(this.node.rawAttrs,t,n);if(r.type!=null)return Py(this.node.rawAttrs,t,n);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return By(this.node.rawAttrs,t,n);if(r.list.s!=null)return Vy(this.node.rawAttrs,t,n);if(r.list.shape!=null)return Wy(this.node.rawAttrs,t,n);if(r.list.b!=null)return Uy(this.node.rawAttrs,t,n);if(r.list.type!=null)return zy(this.node.rawAttrs,t,n)}return n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jz=(s,t,n)=>{switch(s.op){case"BiasAdd":case"AddV2":case"Add":return[Y($("a",s,t,n),$("b",s,t,n))];case"AddN":return[A0($("tensors",s,t,n))];case"FloorMod":case"Mod":return[hm($("a",s,t,n),$("b",s,t,n))];case"Mul":return[L($("a",s,t,n),$("b",s,t,n))];case"RealDiv":case"Div":return[pe($("a",s,t,n),$("b",s,t,n))];case"DivNoNan":return[tm($("a",s,t,n),$("b",s,t,n))];case"FloorDiv":return[dh($("a",s,t,n),$("b",s,t,n))];case"Sub":return[ce($("a",s,t,n),$("b",s,t,n))];case"Minimum":return[Ua($("a",s,t,n),$("b",s,t,n))];case"Maximum":return[vs($("a",s,t,n),$("b",s,t,n))];case"Pow":return[Gs($("a",s,t,n),$("b",s,t,n))];case"SquaredDifference":return[Oh($("a",s,t,n),$("b",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qz=(s,t,n)=>{switch(s.op){case"Abs":case"ComplexAbs":return[bt($("x",s,t,n))];case"Acos":return[zf($("x",s,t,n))];case"Acosh":return[Mf($("x",s,t,n))];case"Asin":return[Vf($("x",s,t,n))];case"Asinh":return[Wf($("x",s,t,n))];case"Atan":return[Uf($("x",s,t,n))];case"Atan2":return[Gf($("x",s,t,n),$("y",s,t,n))];case"Atanh":return[Hf($("x",s,t,n))];case"Ceil":return[Yf($("x",s,t,n))];case"Complex":return[cr($("real",s,t,n),$("imag",s,t,n))];case"Cos":return[Gl($("x",s,t,n))];case"Cosh":return[yh($("x",s,t,n))];case"Elu":return[Ma($("x",s,t,n))];case"Erf":return[nm($("x",s,t,n))];case"Exp":return[yn($("x",s,t,n))];case"Expm1":return[sm($("x",s,t,n))];case"Floor":return[Va($("x",s,t,n))];case"Log":return[bn($("x",s,t,n))];case"Log1p":return[jl($("x",s,t,n))];case"Imag":return[xh($("x",s,t,n))];case"Neg":return[rt($("x",s,t,n))];case"Reciprocal":return[pm($("x",s,t,n))];case"Real":return[Jl($("x",s,t,n))];case"Relu":return[ss($("x",s,t,n))];case"Round":return[Sh($("x",s,t,n))];case"Selu":return[Eh($("x",s,t,n))];case"Sigmoid":return[ns($("x",s,t,n))];case"Sin":return[Ah($("x",s,t,n))];case"Sign":return[mm($("x",s,t,n))];case"Sinh":return[Dh($("x",s,t,n))];case"Softplus":return[Jr($("x",s,t,n))];case"Sqrt":return[Gt($("x",s,t,n))];case"Square":return[We($("x",s,t,n))];case"Tanh":return[Xr($("x",s,t,n))];case"Tan":return[bm($("x",s,t,n))];case"ClipByValue":return[rn($("x",s,t,n),$("clipValueMin",s,t,n),$("clipValueMax",s,t,n))];case"Relu6":return[Ih($("x",s,t,n))];case"Rsqrt":return[Th(Qt(s.inputNames[0],t,n))];case"Prod":return[kh($("x",s,t,n),$("axes",s,t,n))];case"LeakyRelu":return[Hl($("x",s,t,n),$("alpha",s,t,n))];case"Prelu":return[Zl($("x",s,t,n),$("alpha",s,t,n))];case"IsNan":return[om(Qt(s.inputNames[0],t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(s,t,n=""){if(!(typeof s=="number"||typeof t=="number")){k(s.length===t.length,()=>n+` Shapes ${s} and ${t} must match`);for(let r=0;r<s.length;r++){const o=s[r],a=t[r];k(o<0||a<0||o===a,()=>n+` Shapes ${s} and ${t} must match`)}}}function Sv(s){return!(typeof s=="number"||s.some(t=>t<0))}function Nc(s,t,n){let r=Gy(s,n);const o=!Sv(r);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(o&&t.forEach(a=>{r=Gy(a.shape,r)}),!Sv(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Gy(s,t){if(typeof s=="number")return t;if(typeof t=="number")return s;if(s.length!==t.length)throw new Error(`Incompatible ranks during merge: ${s} vs. ${t}`);const n=[];for(let r=0;r<s.length;++r){const o=s[r],a=t[r];if(o>=0&&a>=0&&o!==a)throw new Error(`Incompatible shape during merge: ${s} vs. ${t}`);n[r]=o>=0?o:a}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kz{constructor(t,n,r,o,a,i,l){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=o,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=me(0),Dt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const n=this.tensors[t];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(t){return t.map(n=>this.read(n))}write(t,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[t]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Yn(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=n,Dt(n),r.written=!0,this.tensors[t]=r}writeMany(t,n){if(t.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${n.length}.`);t.forEach((r,o)=>this.write(r,n[o]))}gather(t,n){if(!!n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return Vn([],[0].concat(this.elementShape));const r=this.readMany(t);return Yn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),$n(r,0)}concat(t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Vn([],[0].concat(this.elementShape));const n=[];for(let o=0;o<this.size();o++)n.push(o);const r=this.readMany(n);return Yn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),ft(r,0)}scatter(t,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,Hn(n,0))}split(t,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let r=0;const o=t.map(c=>(r+=c,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=r===0?0:n.size/r,i=[];V(()=>{n=P(n,[1,r,a]);for(let c=0;c<t.length;++c){const u=c===0?0:o[c-1],h=[0,u,0],d=[1,t[c],a];i[c]=P(Fe(n,h,d),this.elementShape)}return i});const l=[];for(let c=0;c<t.length;c++)l[c]=c;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oi{constructor(t,n,r,o=-1){this.tensors=t,this.elementShape=n,this.elementDtype=r,t!=null&&t.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);Yn(n,a.shape,"TensorList shape mismatch: "),Dt(a)}),this.idTensor=me(0),this.maxNumElements=o,Dt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new oi([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(n=>{(t==null||!t.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Yn(t,this.elementShape,"TensorList shape mismatch: ");const o=Nc(this.elementShape,this.tensors,t);return V(()=>{const a=this.tensors.map(i=>P(i,o));return $n(a,0)})}popBack(t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Nc(this.elementShape,this.tensors,t),o=this.tensors.pop();return Yn(o.shape,t,"TensorList shape mismatch: "),P(o,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Yn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Dt(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Yn(this.tensors[t].shape,n,"TensorList shape mismatch: ");const o=Nc(this.elementShape,this.tensors,n);return P(this.tensors[t],o)}setItem(t,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Yn(this.elementShape,n.shape,"TensorList shape mismatch: "),Dt(n),this.tensors[t]=n}gather(t,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Yn(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());const o=Nc(this.elementShape,this.tensors,r);return t.length===0?Vn([],[0].concat(o)):V(()=>{const a=t.map(i=>P(this.tensors[i],o));return $n(a,0)})}concat(t,n){if(!!t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Yn(this.elementShape,n,"TensorList shape mismatch: ");const r=Nc(this.elementShape,this.tensors,n);return this.size()===0?Vn([],[0].concat(r)):V(()=>{const o=this.tensors.map(a=>P(a,r));return ft(o,0)})}}function Xz(s,t,n){const r=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==n)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${n}`);const o=s.shape.slice(1);Yn(o,t,"TensorList shape mismatch: ");const a=Hn(s);return new oi(a,t,r)}function Yz(s,t,n){return new oi([],s,t,n)}function Zz(s,t,n,r){if(t.length!==s.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${s.shape[0]}`);const o=Math.max(...t);if(r!=null&&r!==-1&&o>=r)throw new Error(`Max index must be < array size (${o}  vs. ${r})`);const a=new oi([],n,s.dtype,r),i=Hn(s,0);return t.forEach((l,c)=>{a.setItem(l,i[c])}),a}function Jz(s,t,n){let r=0;const o=t.map(h=>(r+=h,r));if(r!==s.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${s.shape}`);const a=s.shape.slice(1),i=Gy(a,n),l=r===0?0:s.size/r,c=V(()=>{const h=[];s=P(s,[1,r,l]);for(let d=0;d<t.length;++d){const p=d===0?0:o[d-1],f=[0,p,0],m=[1,t[d],l];h[d]=P(Fe(s,f,m),i)}return s.dispose(),h}),u=new oi([],n,s.dtype,t.length);for(let h=0;h<c.length;h++)u.setItem(h,c[h]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz=async(s,t,n)=>{switch(s.op){case"If":case"StatelessIf":{const r=$("thenBranch",s,t,n),o=$("elseBranch",s,t,n),a=$("cond",s,t,n),i=$("args",s,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[o].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",s,t,n),o=$("cond",s,t,n),a=$("args",s,t,n),i=await n.functionMap[o].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),l=a.map(h=>h.id);let c=await i[0].data();i.forEach(h=>{!h.kept&&l.indexOf(h.id)===-1&&h.dispose()});let u=a;for(;c[0];){const h=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const d=u.map(f=>f.id);h.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()});const p=await n.functionMap[o].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);c=await p[0].data(),p.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&d.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{const r=$("pred",s,t,n);return[Zs(r)]}case"Switch":{const r=$("pred",s,t,n);let o=$("data",s,t,n);return o.kept||(o=Zs(o)),(await r.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{const r=s.inputNames.find(o=>Qt(o,t,n)!==void 0);if(r){const o=Qt(r,t,n);return[Zs(o)]}return}case"Enter":{const r=$("frameName",s,t,n),o=$("tensor",s,t,n);return n.enterFrame(r),[Zs(o)]}case"Exit":{const r=$("tensor",s,t,n);return n.exitFrame(),[Zs(r)]}case"NextIteration":{const r=$("tensor",s,t,n);return n.nextIteration(),[Zs(r)]}case"TensorArrayV3":{const r=$("size",s,t,n),o=$("dtype",s,t,n),a=$("elementShape",s,t,n),i=$("dynamicSize",s,t,n),l=$("clearAfterRead",s,t,n),c=$("identicalElementShapes",s,t,n),u=$("name",s,t,n),h=new Kz(u,o,r,a,c,i,l);return n.addTensorArray(h),[h.idTensor,me(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",s,t,n),o=$("index",s,t,n),a=$("tensor",s,t,n),i=n.getTensorArray(r.id);return i.write(o,a),[i.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",s,t,n),o=$("index",s,t,n);return[n.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",s,t,n),o=$("indices",s,t,n),a=$("dtype",s,t,n);return[n.getTensorArray(r.id).gather(o,a)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",s,t,n),o=$("indices",s,t,n),a=$("tensor",s,t,n),i=n.getTensorArray(r.id);return i.scatter(o,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id),a=$("dtype",s,t,n);return[o.concat(a)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",s,t,n),o=$("tensor",s,t,n),a=$("lengths",s,t,n),i=n.getTensorArray(r.id);return i.split(a,o),[i.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id);return[me(o.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",s,t,n),o=n.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",s,t,n),o=$("index",s,t,n),a=$("tensor",s,t,n),i=n.getTensorList(r.id);return i.setItem(o,a),[i.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",s,t,n),o=$("index",s,t,n),a=$("elementShape",s,t,n),i=$("elementDType",s,t,n);return[n.getTensorList(r.id).getItem(o,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",s,t,n),o=$("tensor",s,t,n),a=$("elementShape",s,t,n),i=$("numElements",s,t,n),l=Zz(o,r,a,i);return n.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",s,t,n),o=$("elementDType",s,t,n);let a;s.op==="TensorListReserve"?a="numElements":a="maxNumElements";const i=$(a,s,t,n),l=Yz(r,o,i);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=$("tensorListId",s,t,n),o=$("indices",s,t,n),a=$("elementShape",s,t,n),i=$("elementDType",s,t,n);return[n.getTensorList(r.id).gather(o,i,a)]}case"TensorListStack":{const r=$("tensorListId",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n),i=$("numElements",s,t,n);return[n.getTensorList(r.id).stack(o,a,i)]}case"TensorListFromTensor":{const r=$("tensor",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n),i=Xz(r,o,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{const r=$("tensorListId",s,t,n),o=n.getTensorList(r.id),a=$("dtype",s,t,n),i=$("elementShape",s,t,n);return[o.concat(a,i)]}case"TensorListPushBack":{const r=$("tensorListId",s,t,n),o=$("tensor",s,t,n),a=n.getTensorList(r.id);return a.pushBack(o),[a.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",s,t,n),o=$("elementShape",s,t,n),a=$("elementDType",s,t,n);return[n.getTensorList(r.id).popBack(o,a)]}case"TensorListSplit":{const r=$("tensor",s,t,n),o=$("elementShape",s,t,n),a=$("lengths",s,t,n),i=Jz(r,a,o);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(s,t,n){const[r,o]=$("fusedOps",s,t,n),a=r==="biasadd",i=!a,l=o==="prelu",c=r==="fusedbatchnorm",u=$("numArgs",s,t,n);if(a){if(l&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&a&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const h=$("strides",s,t,n),d=Md(s,t,n),p=$("dataFormat",s,t,n).toUpperCase(),f=$("dilations",s,t,n);let[m,g]=$("args",s,t,n);i&&(g=m,m=void 0);const y=$("leakyreluAlpha",s,t,n);return{stride:h,pad:d,dataFormat:p,dilations:f,biasArg:m,preluArg:g,activationFunc:o,leakyreluAlpha:y}}const eM=(s,t,n)=>{switch(s.op){case"Conv1D":{const r=$("stride",s,t,n),o=$("pad",s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilation",s,t,n);return[mh($("x",s,t,n),$("filter",s,t,n),r,o,a,i)]}case"Conv2D":{const r=$("strides",s,t,n),o=Md(s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilations",s,t,n);return[Ws($("x",s,t,n),$("filter",s,t,n),[r[1],r[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Tv(s,t,n);return[km({x:$("x",s,t,n),filter:$("filter",s,t,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Tv(s,t,n);return[yw({x:$("x",s,t,n),filter:$("filter",s,t,n),strides:[r[1],r[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$("outputShape",s,t,n),o=$("strides",s,t,n),a=Md(s,t,n);return[gh($("x",s,t,n),$("filter",s,t,n),r,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$("strides",s,t,n),o=Md(s,t,n),a=$("dilations",s,t,n),i=$("dataFormat",s,t,n).toUpperCase();return[Pa($("input",s,t,n),$("filter",s,t,n),[r[1],r[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("dataFormat",s,t,n).toUpperCase(),i=$("dilations",s,t,n);return[Jf($("x",s,t,n),$("filter",s,t,n),[r[1],r[2],r[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[Wl($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[Kl($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n),i=$("includeBatchInIndex",s,t,n),{result:l,indexes:c}=Z0($("x",s,t,n),[a[1],a[2]],[r[1],r[2]],o,i);return[l,c]}case"AvgPool3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[Kf($("x",s,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("kernelSize",s,t,n);return[cm($("x",s,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=$("strides",s,t,n),o=$("pad",s,t,n),a=$("dilations",s,t,n),i=r[1],l=r[2],c=a[1],u=a[2];return[em($("x",s,t,n),$("filter",s,t,n),[i,l],o,[c,u],"NHWC")]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM=(s,t,n)=>{switch(s.op){case"Fill":{const r=$("shape",s,t,n),o=$("dtype",s,t,n),a=$("value",s,t,n);return[Ba(r,a,o)]}case"LinSpace":{const r=$("start",s,t,n),o=$("stop",s,t,n),a=$("num",s,t,n);return[j0(r,o,a)]}case"Multinomial":{const r=$("logits",s,t,n),o=$("numSamples",s,t,n),a=$("seed",s,t,n);return[J0(r,o,a)]}case"OneHot":{const r=$("indices",s,t,n),o=$("depth",s,t,n),a=$("onValue",s,t,n),i=$("offValue",s,t,n);return[Ra(r,o,a,i)]}case"Ones":return[xn($("shape",s,t,n),$("dtype",s,t,n))];case"OnesLike":return[wn($("x",s,t,n))];case"RandomUniform":return[Ha($("shape",s,t,n),$("minval",s,t,n),$("maxval",s,t,n),$("dtype",s,t,n))];case"Range":{const r=$("start",s,t,n),o=$("stop",s,t,n),a=$("step",s,t,n);return[ja(r,o,a,$("dtype",s,t,n))]}case"TruncatedNormal":{const r=$("shape",s,t,n),o=$("mean",s,t,n),a=$("stdDev",s,t,n),i=$("seed",s,t,n);return[Lh(r,o,a,$("dtype",s,t,n),i)]}case"Zeros":return[wt($("shape",s,t,n),$("dtype",s,t,n))];case"ZerosLike":return[_e($("x",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hy(s,t,n){const r=$("boxes",s,t,n),o=$("scores",s,t,n),a=$("maxOutputSize",s,t,n),i=$("iouThreshold",s,t,n),l=$("scoreThreshold",s,t,n),c=$("softNmsSigma",s,t,n);return{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}}const nM=async(s,t,n)=>{switch(s.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=Hy(s,t,n),u=await jn.nonMaxSuppressionWithScoreAsync(r,o,a,i,l,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=Hy(s,t,n),c=$("padToMaxOutputSize",s,t,n),u=await jn.nonMaxSuppressionPaddedAsync(r,o,a,i,l,c);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=Hy(s,t,n);return[await jn.nonMaxSuppressionAsync(r,o,a,i,l)]}case"Where":{const r=ne($("condition",s,t,n),"bool"),o=[await vm(r)];return r.dispose(),o}case"ListDiff":return lw($("x",s,t,n),$("y",s,t,n));default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM=(s,t,n)=>{switch(s.op){case"TopKV2":{const r=$("x",s,t,n),o=$("k",s,t,n),a=$("sorted",s,t,n),i=xm(r,o,a);return[i.values,i.indices]}case"Unique":{const r=$("x",s,t,n),o=Ph(r);return[o.values,o.indices]}case"UniqueV2":{const r=$("x",s,t,n),o=$("axis",s,t,n),a=Ph(r,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM=(s,t,n)=>{switch(s.op){case"Const":return t[s.name];case"PlaceholderWithDefault":const r=$("default",s,t,n);return[Qt(s.name,t,n)||r];case"Placeholder":return[Qt(s.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=$("x",s,t,n);return[Zs(u)]}case"IdentityN":return $("x",s,t,n).map(u=>Zs(u));case"Snapshot":const o=$("x",s,t,n);return[Zs(o)];case"Shape":return[Ht($("x",s,t,n).shape,"int32")];case"ShapeN":return $("x",s,t,n).map(u=>Ht(u.shape));case"Size":return[me($("x",s,t,n).size,"int32")];case"Rank":return[me($("x",s,t,n).rank,"int32")];case"NoOp":return[me(1)];case"Print":const a=$("x",s,t,n),i=$("data",s,t,n),l=$("message",s,t,n),c=$("summarize",s,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oM{constructor(t,n){this.keyDType=t,this.valueDType=n,this.handle=me(0),this.tensorMap=new Map,Dt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return me(this.size(),"int32")}async import(t,n){this.checkKeyAndValueTensor(t,n);const r=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),V(()=>{const o=Hn(n),a=r.length,i=o.length;k(a===i,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${i} elements.`);for(let l=0;l<a;l++){const c=r[l],u=o[l];Dt(u),this.tensorMap.set(c,u)}return this.handle})}async find(t,n){this.checkKeyAndValueTensor(t,n);const r=await t.data();return V(()=>{const o=[];for(let a=0;a<r.length;a++){const i=r[a],l=this.findWithDefault(i,n);o.push(l)}return $n(o)})}findWithDefault(t,n){const r=this.tensorMap.get(t);return r!=null?r:n}checkKeyAndValueTensor(t,n){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=async(s,t,n,r)=>{switch(s.op){case"HashTable":case"HashTableV2":{const o=$("keyDType",s,t,n),a=$("valueDType",s,t,n),i=new oM(o,a);return r.addHashTable(s.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const o=$("tableHandle",s,t,n,r),a=$("keys",s,t,n),i=$("values",s,t,n);return[await r.getHashTableById(o.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const o=$("tableHandle",s,t,n,r),a=$("keys",s,t,n),i=$("defaultValue",s,t,n);return[await r.getHashTableById(o.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=$("tableHandle",s,t,n,r);return[r.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=(s,t,n)=>{switch(s.op){case"ResizeBilinear":{const r=$("images",s,t,n),o=$("size",s,t,n),a=$("alignCorners",s,t,n),i=$("halfPixelCenters",s,t,n);return[jn.resizeBilinear(r,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const r=$("images",s,t,n),o=$("size",s,t,n),a=$("alignCorners",s,t,n),i=$("halfPixelCenters",s,t,n);return[jn.resizeNearestNeighbor(r,[o[0],o[1]],a,i)]}case"CropAndResize":{const r=$("image",s,t,n),o=$("boxes",s,t,n),a=$("boxInd",s,t,n),i=$("cropSize",s,t,n),l=$("method",s,t,n),c=$("extrapolationValue",s,t,n);return[jn.cropAndResize(r,o,a,i,l,c)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lM=(s,t,n)=>{switch(s.op){case"Equal":return[gn($("a",s,t,n),$("b",s,t,n))];case"NotEqual":return[Qr($("a",s,t,n),$("b",s,t,n))];case"Greater":return[an($("a",s,t,n),$("b",s,t,n))];case"GreaterEqual":return[mr($("a",s,t,n),$("b",s,t,n))];case"Less":return[wh($("a",s,t,n),$("b",s,t,n))];case"LessEqual":return[gr($("a",s,t,n),$("b",s,t,n))];case"LogicalAnd":return[Gn($("a",s,t,n),$("b",s,t,n))];case"LogicalNot":return[ql($("a",s,t,n))];case"LogicalOr":return[Ch($("a",s,t,n),$("b",s,t,n))];case"Select":case"SelectV2":return[Kt($("condition",s,t,n),$("a",s,t,n),$("b",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM=(s,t,n)=>{switch(s.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ie($("a",s,t,n),$("b",s,t,n),$("transposeA",s,t,n),$("transposeB",s,t,n))];case"Einsum":return[U0($("equation",s,t,n),...$("tensors",s,t,n))];case"Transpose":return[Re($("x",s,t,n),$("perm",s,t,n))];case"_FusedMatMul":const[r,o]=$("fusedOps",s,t,n),a=r==="biasadd",i=o==="prelu",l=$("numArgs",s,t,n),c=$("leakyreluAlpha",s,t,n);if(a){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=$("args",s,t,n);return[Gh({a:$("a",s,t,n),b:$("b",s,t,n),transposeA:$("transposeA",s,t,n),transposeB:$("transposeB",s,t,n),bias:u,activation:o,preluActivationWeights:h,leakyreluAlpha:c})];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM=(s,t,n)=>{switch(s.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Yr($("x",s,t,n),$("mean",s,t,n),$("variance",s,t,n),$("offset",s,t,n),$("scale",s,t,n),$("epsilon",s,t,n))];case"FusedBatchNormV3":return[Yr($("x",s,t,n),$("mean",s,t,n),$("variance",s,t,n),$("offset",s,t,n),$("scale",s,t,n),$("epsilon",s,t,n))];case"LRN":return[am($("x",s,t,n),$("radius",s,t,n),$("bias",s,t,n),$("alpha",s,t,n),$("beta",s,t,n))];case"Softmax":return[ec($("x",s,t,n))];case"LogSoftmax":return[$h($("x",s,t,n))];case"SparseToDense":return[$m($("sparseIndices",s,t,n),$("outputShape",s,t,n),$("sparseValues",s,t,n),$("defaultValue",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=(s,t,n)=>{switch(s.op){case"Max":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Un($("x",s,t,n),i,l)]}case"Mean":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[ut($("x",s,t,n),i,l)]}case"Min":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Xl($("x",s,t,n),i,l)]}case"Sum":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[ue($("x",s,t,n),i,l)]}case"All":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[ph($("x",s,t,n),i,l)]}case"Any":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[Bl($("x",s,t,n),i,l)]}case"ArgMax":{const i=$("axis",s,t,n);return[qr($("x",s,t,n),i)]}case"ArgMin":{const i=$("axis",s,t,n);return[Bf($("x",s,t,n),i)]}case"Prod":{const i=$("axis",s,t,n),l=$("keepDims",s,t,n);return[kh($("x",s,t,n),i,l)]}case"Cumsum":{const i=$("axis",s,t,n),l=$("exclusive",s,t,n),c=$("reverse",s,t,n);return[bh($("x",s,t,n),i,l,c)]}case"Bincount":const r=$("x",s,t,n),o=$("weights",s,t,n),a=$("size",s,t,n);return[Xf(r,o,a)];case"DenseBincount":{const i=$("x",s,t,n),l=$("weights",s,t,n),c=$("size",s,t,n),u=$("binaryOutput",s,t,n);return[V0(i,l,c,u)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM=(s,t,n)=>{switch(s.op){case"ConcatV2":case"Concat":{const r=$("n",s,t,n),o=$("axis",s,t,n);let a=$("tensors",s,t,n);return a=a.slice(0,r),[ft(a,o)]}case"Gather":{const r=$("x",s,t,n),o=$("indices",s,t,n);return[Zr(r,ne(o,"int32"),0)]}case"GatherV2":{const r=$("axis",s,t,n),o=$("batchDims",s,t,n),a=$("x",s,t,n),i=$("indices",s,t,n);return[Zr(a,ne(i,"int32"),r,o)]}case"Reverse":{const r=$("dims",s,t,n),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const a=$("x",s,t,n);return[vn(a,o)]}case"ReverseV2":{const r=$("axis",s,t,n),o=$("x",s,t,n);return[vn(o,r)]}case"Slice":{const r=$("begin",s,t,n),o=$("size",s,t,n);return[Fe($("x",s,t,n),r,o)]}case"StridedSlice":{const r=$("begin",s,t,n),o=$("end",s,t,n),a=$("strides",s,t,n),i=$("beginMask",s,t,n),l=$("endMask",s,t,n),c=$("ellipsisMask",s,t,n),u=$("newAxisMask",s,t,n),h=$("shrinkAxisMask",s,t,n),d=$("x",s,t,n);return[ym(d,r,o,a,i,l,c,u,h)]}case"Pack":return V(()=>{const r=$("axis",s,t,n),o=$("tensors",s,t,n),a=o[0].shape,i=$s(o[0]).shape,l=o.map(c=>{const u=Ae(c.shape,a);if(!u&&!Ae($s(c).shape,i))throw new Error("the input tensors shape does not match");return u?c:P(c,a)});return[$n(l,r)]});case"Unpack":{const r=$("axis",s,t,n),o=$("tensor",s,t,n);return Hn(o,r)}case"Tile":{const r=$("reps",s,t,n);return[An($("x",s,t,n),r)]}case"Split":case"SplitV":{const r=$("axis",s,t,n),o=$("numOrSizeSplits",s,t,n),a=$("x",s,t,n);return ln(a,o,r)}case"ScatterNd":{const r=$("indices",s,t,n),o=$("values",s,t,n),a=$("shape",s,t,n);return[hw(r,o,a)]}case"GatherNd":{const r=$("x",s,t,n),o=$("indices",s,t,n);return[dw(r,o)]}case"SparseToDense":{const r=$("sparseIndices",s,t,n),o=$("outputShape",s,t,n),a=$("sparseValues",s,t,n),i=$("defaultValue",s,t,n);return[$m(r,a,o,a.dtype===i.dtype?i:ne(i,a.dtype))]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=(s,t,n)=>{switch(s.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=sc.sparseFillEmptyRows($("indices",s,t,n),$("values",s,t,n),$("denseShape",s,t,n),$("defaultValue",s,t,n));return[r,o,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=sc.sparseReshape($("inputIndices",s,t,n),$("inputShape",s,t,n),$("newShape",s,t,n));return[r,o]}case"SparseSegmentMean":return[sc.sparseSegmentMean($("data",s,t,n),$("indices",s,t,n),$("segmentIds",s,t,n))];case"SparseSegmentSum":return[sc.sparseSegmentSum($("data",s,t,n),$("indices",s,t,n),$("segmentIds",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM=(s,t,n)=>{switch(s.op){case"FFT":return[tc($("x",s,t,n))];case"IFFT":return[qa($("x",s,t,n))];case"RFFT":return[nc($("x",s,t,n))];case"IRFFT":return[_h($("x",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM=(s,t,n)=>{switch(s.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=Kh.stringNGrams($("data",s,t,n),$("dataSplits",s,t,n),$("separator",s,t,n),$("nGramWidths",s,t,n),$("leftPad",s,t,n),$("rightPad",s,t,n),$("padWidth",s,t,n),$("preserveShortSequences",s,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:a}=Kh.stringSplit($("input",s,t,n),$("delimiter",s,t,n),$("skipEmpty",s,t,n));return[r,o,a]}case"StringToHashBucketFast":return[Kh.stringToHashBucketFast($("input",s,t,n),$("numBuckets",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=(s,t,n)=>{switch(s.op){case"Cast":return[ne($("x",s,t,n),$("dtype",s,t,n))];case"ExpandDims":{const r=$("axis",s,t,n);return[on($("x",s,t,n),r)]}case"Squeeze":{const r=$("axis",s,t,n);return[$s($("x",s,t,n),r)]}case"Reshape":return[P($("x",s,t,n),$("shape",s,t,n))];case"MirrorPad":return[um($("x",s,t,n),$("padding",s,t,n),$("mode",s,t,n))];case"PadV2":case"Pad":return[Us($("x",s,t,n),$("padding",s,t,n),$("constantValue",s,t,n))];case"SpaceToBatchND":{const r=$("blockShape",s,t,n),o=$("paddings",s,t,n);return[Yl($("x",s,t,n),r,o)]}case"BatchToSpaceND":{const r=$("blockShape",s,t,n),o=$("crops",s,t,n);return[Ul($("x",s,t,n),r,o)]}case"DepthToSpace":{const r=$("blockSize",s,t,n),o=$("dataFormat",s,t,n).toUpperCase();return[Qf($("x",s,t,n),r,o)]}case"BroadcastTo":return[La($("x",s,t,n),$("shape",s,t,n))];case"BroadcastArgs":return[_0($("s0",s,t,n),$("s1",s,t,n))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(s,t,n,r){const o=((a,i,l)=>{switch(a.category){case"arithmetic":return V(()=>jz(a,i,l));case"basic_math":return V(()=>qz(a,i,l));case"control":return Qz(a,i,l);case"convolution":return V(()=>eM(a,i,l));case"creation":return V(()=>tM(a,i,l));case"dynamic":return nM(a,i,l);case"evaluation":return V(()=>sM(a,i,l));case"image":return V(()=>iM(a,i,l));case"graph":return V(()=>rM(a,i,l));case"logical":return V(()=>lM(a,i,l));case"matrices":return V(()=>cM(a,i,l));case"normalization":return V(()=>uM(a,i,l));case"reduction":return V(()=>hM(a,i,l));case"slice_join":return V(()=>dM(a,i,l));case"sparse":return V(()=>pM(a,i,l));case"spectral":return V(()=>fM(a,i,l));case"string":return V(()=>mM(a,i,l));case"transformation":return V(()=>gM(a,i,l));case"hash_table":return aM(a,i,l,r);case"custom":const c=$v(a.op);if(c&&c.customExecutor)return c.customExecutor(new Hz(a,i,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(s,t,n);return Or(o)?o.then(a=>[].concat(a)):[].concat(o)}class Av{constructor(t={},n={},r={},o={}){this.weightMap=t,this.tensorArrayMap=n,this.tensorListMap=r,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,n){return{id:t,frameName:n,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let n=0;n<this.contexts.length-1;n++){const r=this.contexts.slice(0,this.contexts.length-n);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(t);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dv(s,t,n,r){const o=new Set,a=[];let i=null,l=null;const c=new Set,u=Object.keys(s).map(p=>Cn(p)[0]);let h=[];r!=null&&(h=r.map(p=>Cn(p.name)[0]));const d=[...t];for(;d.length>0;){const p=d.pop();if((Rv(p)||vM(p)||$M(p))&&i==null&&(i=p,l=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(p.name),n[p.name]==null&&u.indexOf(p.name)===-1&&h.indexOf(p.name)===-1){if(p.inputs.length===0){a.push(p.name);continue}p.inputs.forEach(f=>{c.has(f.name)||(c.add(f.name),d.push(f))})}}return{inputs:s,outputs:t,usedNodes:o,missingInputs:a,dynamicNode:i,syncInputs:l}}function yM(s,t,n){const{usedNodes:r,inputs:o}=n,a=[],i=Object.keys(o).map(h=>Cn(h)[0]).map(h=>s.nodes[h]),l=s.initNodes;i.forEach(h=>{r.has(h.name)&&a.push(h)}),s.weights.forEach(h=>{r.has(h.name)&&a.push(h)}),l!=null&&l.forEach(h=>{r.has(h.name)&&a.push(h)});const c=new Set,u=[];for(;a.length>0;){const h=a.pop();c.add(h.name),t[h.name]||u.push(h),h.children.forEach(d=>{!c.has(d.name)&&r.has(d.name)&&d.inputs.every(p=>c.has(p.name))&&a.push(d)})}return u}const bM=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],xM=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],wM=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Rv(s){return bM.indexOf(s.op)>=0}function vM(s){return xM.indexOf(s.op)>=0}function $M(s){return wM.indexOf(s.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bd{constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new Bd(t.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const n=Object.keys(t).map(r=>t[r].map(o=>o.id));this._weightIds=[].concat(...n),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const n=t.signatureKey||t.name;return t.defaultOutput?`${n}:${t.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((t,n)=>(t[n]=this._functions[n].signature,t),{})}getCompilationKey(t,n){const r=t.map(a=>a.name).sort(),o=n.map(a=>a.name).sort();return r.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,n){const r=Dv(t,n,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:a,syncInputs:i}=r;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){const l=n.map(u=>u.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${c}]. Missing the following inputs: [${o}]`)}return yM(this.graph,this.weightMap,r)}execute(t,n){t=this.mapInputs(t);const r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n);const o=r.map(d=>this.graph.nodes[Cn(d)[0]]),a=n.map(d=>Cn(d)[0]);let i=a.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);const l=this.getCompilationKey(o,i);let c=this.compiledMap.get(l);c==null&&(c=this.compile(t,i),this.compiledMap.set(l,c));const u={},h={};return V(()=>{const d=new Av(this.weightMap,u,h,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(t).forEach(g=>{const[y,b]=Cn(g),x=[];x[b]=t[g],p[y]=x});const f=this.getFrozenTensorIds(p),m={};for(let g=0;g<c.length;g++){const y=c[g];if(!p[y.name]){const b=Ev(y,p,d,this._resourceManager);if(Or(b))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);p[y.name]=b,this.checkTensorForDisposal(y.name,y,p,d,f,a,m)}}return this.parent==null&&d.dispose(f),n.map(g=>Qt(g,p,d))})}getFrozenTensorIds(t){const n=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(o=>o.id)));return new Set(n)}checkTensorForDisposal(t,n,r,o,a,i,l){n.category==="control"||i.indexOf(t)!==-1||(r[t].forEach(c=>{c!=null&&(l[c.id]=(l[c.id]||0)+n.children.length)}),n.inputs.forEach(c=>{if(c.category!=="control"){const u=oz(c.name,r,o);u!=null&&u.forEach(h=>{if(h&&!h.kept&&!a.has(h.id)){const d=l[h.id];d===1?(h.dispose(),delete l[h.id]):d!=null&&l[h.id]--}})}}))}async executeAsync(t,n){return this._executeAsync(t,n)}async _executeAsync(t,n,r=!1,o={},a={}){r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),n=this.mapOutputs(n),this.checkOutputs(n));const i=new Av(this.weightMap,o,a,this.functionExecutorMap),l=await this.executeWithControlFlow(t,i,n,r),c=n.map(p=>Qt(p,l,i)),u=c.map(p=>p.id),h=Object.keys(t).map(p=>t[p].id),d=new Set([...u,...h,...this.weightIds]);return Object.keys(l).forEach(p=>{l[p].forEach(m=>{m&&!m.kept&&!m.isDisposed&&!d.has(m.id)&&m.dispose()})}),this.parent==null&&i.dispose(d),c}async executeFunctionAsync(t,n,r){const o=t.reduce((a,i,l)=>(a[this.inputs[l].name]=i,a),{});return this._executeAsync(o,this.outputNodes,!0,n,r)}async executeWithControlFlow(t,n,r,o){const a=Object.keys(t),i=a.map(w=>this.graph.nodes[Cn(w)[0]]),l=r.map(w=>Cn(w)[0]);let c=l.map(w=>this.graph.nodes[w]);c.length===0&&(c=this._outputs);const{usedNodes:u,missingInputs:h,dynamicNode:d,syncInputs:p}=Dv(t,c,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{const[v,C]=Cn(w),I=[];I[C]=t[w],m[v]=I});const g={},y=this.getFrozenTensorIds(m),b={};for(;f.length>0;){const w=this.processStack(i,f,n,m,b,y,l,g,u);await Promise.all(w)}d==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=c.filter(w=>!Rv(w)&&!Qt(w.name,m,n)).map(w=>w.name);if(x.length>0){let w="";throw d!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${h}]. ${w}`)}return m}processStack(t,n,r,o,a,i,l,c,u){const h=[];for(;n.length>0;){const d=n.pop();r.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&$("isConstant",d.node,o,r)&&([p]=Ys(d.node.name,r)),o[d.node.name]==null){const f=Ev(d.node,o,r,this._resourceManager);p||([p]=Ys(d.node.name,r));const m=r.currentContext;Or(f)?h.push(f.then(g=>(o[p]=g,r.currentContext=m,this.checkTensorForDisposal(p,d.node,o,r,i,l,c),this.processChildNodes(d.node,n,r,o,a,u),g))):(o[p]=f,this.checkTensorForDisposal(p,d.node,o,r,i,l,c),this.processChildNodes(d.node,n,r,o,a,u))}else this.processChildNodes(d.node,n,r,o,a,u)}return h}processChildNodes(t,n,r,o,a,i){t.children.forEach(l=>{const[c]=Ys(l.name,r);a[c]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(u=>!!Qt(u,o,r))&&(a[c]=!0,n.push({contexts:r.currentContext,node:l})):l.inputNames.every(u=>!!Qt(u,o,r))&&(a[c]=!0,n.push({contexts:r.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(n=>n.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(n=>{const r=t[n],[o]=Cn(n),a=this.graph.nodes[o];if(a.attrParams.shape&&a.attrParams.shape.value){const i=a.attrParams.shape.value,l=i.length===r.shape.length&&r.shape.every((c,u)=>i[u]===-1||i[u]===c);k(l,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&k(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){const n={};for(const r in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null){const o=this._signature.inputs[r];n[o.name]=t[r]}else n[r]=t[r];return n}checkInputs(t){const n=Object.keys(t).filter(r=>{const[o]=Cn(r);return this.graph.nodes[o]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(t){return t.map(n=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[n]!=null?this._signature.outputs[n].name:n,{})}checkOutputs(t){t.forEach(n=>{const[r]=Cn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}}class CM{constructor(t={},n={}){this.hashTableNameToHandle=t,this.hashTableMap=n}addHashTable(t,n){this.hashTableNameToHandle[t]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM="?tfjs-format=file",kM="model.json";class Fv{constructor(t,n={}){this.modelUrl=t,this.loadOptions=n,this.version="n/a",n==null&&(this.loadOptions={}),this.resourceManager=new CM}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=ih(t,this.loadOptions);else{const n=xf(t,this.loadOptions);if(n.length===0)n.push(ih(t,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[t]}'`);this.handler=n[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const n=this.artifacts.modelTopology;let r;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?r=this.artifacts.userDefinedMetadata.signature:r=this.artifacts.signature,this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;const o=rh(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Bd(Cv.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const a=Cv.Instance.transformGraph(t.modelInitializer);this.initializer=new Bd(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,n){if(typeof t=="string"){const r=bf(t);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,n){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Pe)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((n,r,o)=>(n[r]=t[o],n),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,n){t=this.normalizeInputs(t),n=this.normalizeOutputs(n);const r=this.executor.execute(t,n);return r.length>1?r:r[0]}async executeAsync(t,n){t=this.normalizeInputs(t),n=this.normalizeOutputs(n);const r=await this.executor.executeAsync(t,n);return r.length>1?r:r[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((n,r)=>(n[r]=[t[r]],n),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function IM(s,t={}){if(s==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&s.load==null&&(s.endsWith("/")||(s=s+"/"),s=`${s}${kM}${NM}`);const n=new Fv(s,t);return await n.load(),n}/** @license See the LICENSE file. */const _v="3.9.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function SM(s,t){return Vd(s,t)}function Vd(s,t,n=new Map,r=new Set){if(s==null)return null;if(r.has(s))throw new Error("Circular references are not supported.");if(n.has(s))return n.get(s);const o=t(s);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(ai(s)){const a=Array.isArray(s)?[]:{};r.add(s);for(const i in s){const l=s[i],c=Vd(l,t,n,r);a[i]=c}return r.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return n.set(s,o.value),o.value}function TM(s,t=Lv){return Ov(s,t)}function Ov(s,t,n=new Set){const r=s[0];if(n.has(r))throw new Error("Circular references are not supported.");const o=t(s);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(ai(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const l=s.map(u=>u[i]),c=Ov(l,t,n);a[i]=c}return n.delete(r),a}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return o.value}function Lv(s){return s===null?null:ai(s[0])?{value:null,recurse:!0}:{value:s,recurse:!1}}async function Pv(s,t){const n=new Map;Vd(s,t,n);for(const o of Array.from(n.keys())){const a=n.get(o);if(Or(a)){const i=await a;n.set(o,i)}}return Vd(s,t,n)}function ai(s){let t=!1;if(q().get("IS_BROWSER"))t=s instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");t=s instanceof n}return s!=null&&!ArrayBuffer.isView(s)&&(Array.isArray(s)||typeof s=="object"&&!(s instanceof Pe)&&!(s instanceof Promise)&&!t)}function EM(s){return s==null||AM(s)||Array.isArray(s)||typeof s=="object"&&s instanceof Pe||Mt(s)}function AM(s){return s===null||typeof s!="object"&&typeof s!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function DM(s){return SM(s,RM)}function RM(s){return s instanceof Pe?{value:s.clone(),recurse:!1}:ai(s)?{value:null,recurse:!0}:{value:s,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class zv{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,n){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=n}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const n of t)this.push(n)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const n=this.wrap(this.begin+t),r=this.get(n);return this.set(n,this.pop()),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Wd extends zv{constructor(){super(Wd.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=this.capacity*2,n=new Array(t),r=this.length();for(let o=0;o<r;o++)n[o]=this.get(this.wrap(this.begin+o));this.data=n,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}Wd.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Mv(s){return new OM(s)}function jy(s){return new LM(s)}function FM(s,t){return new Vv(s,t)}function _M(s,t=kr.FAIL){return new HM(s,t)}class Ot{async toArray(){const t=[];let n=await this.next();for(;!n.done;)t.push(n.value),n=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),n=[];let r=await t.next();for(;!r.done;)n.push(r.value),r=await t.next();return n}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let n=await this.next(),r=t(n.value);for(;!n.done&&r;)n=await this.next(),r=t(n.value)}handleErrors(t){return new UM(this,t)}filter(t){return new VM(this,t)}map(t){return new WM(this,t)}mapAsync(t){return new Bv(this,t)}serialMapAsync(t){return new Bv(this,t).serial()}flatmap(t){return new GM(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(n=>n===!0)}rowMajorBatch(t,n=!0){return new BM(this,t,n)}columnMajorBatch(t,n=!0,r=Lv){return this.rowMajorBatch(t,n).map(a=>TM(a,r))}concatenate(t,n){return new Vv(Mv([this,t]),n)}take(t){return t<0||t==null?this:new MM(this,t)}skip(t){return t<0||t==null?this:new zM(this,t)}prefetch(t){return new Wv(this,t)}shuffle(t,n){return new jM(this,t,n)}serial(){return new PM(this)}}class OM extends Ot{constructor(t){super();this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:DM(t),done:!1}}}class LM extends Ot{constructor(t){super();this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class PM extends Ot{constructor(t){super();this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class zM extends Ot{constructor(t,n){super();this.upstream=t,this.maxCount=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;$e(t.value)}return this.upstream.next()}}class MM extends Ot{constructor(t,n){super();this.upstream=t,this.maxCount=n,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class BM extends Ot{constructor(t,n,r=!0){super();this.upstream=t,this.batchSize=n,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(n.value)}return{value:t,done:!1}}}class VM extends Ot{constructor(t,n){super();this.upstream=t,this.predicate=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;$e(t.value)}}}class WM extends Ot{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const n=Ps(t.value),r=this.transform(t.value),o=Ps(r);for(const a of n)nh(a,o)||a.dispose();return{value:r,done:!1}}}class UM extends Ot{constructor(t,n){super();this.upstream=t,this.handler=n,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Bv extends Ot{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const n=Ps(t.value),r=await this.transform(t.value),o=Ps(r);for(const a of n)nh(a,o)||a.dispose();return{value:r,done:!1}}}class qy extends Ot{constructor(){super();this.outputQueue=new Wd,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class GM extends qy{constructor(t,n){super();this.upstream=t,this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const n=Ps(t.value),r=this.transform(t.value),o=Ps(r);this.outputQueue.pushAll(r);for(const a of n)nh(a,o)||a.dispose();return!0}}class Vv extends Ot{constructor(t,n){super();this.baseErrorHandler=n,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){const r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(t)):n}}var kr;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(kr||(kr={}));class HM extends Ot{constructor(t,n=kr.FAIL){super();this.iterators=t,this.mismatchMode=n,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let n=0,r=0;function o(i){return i instanceof Ot?{value:i.next().then(c=>(n++,c.done&&r++,c.value)),recurse:!1}:{value:null,recurse:!0}}const a=await Pv(this.iterators,o);if(n===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case kr.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case kr.SHORTEST:return{value:null,done:!0};case kr.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Wv extends Ot{constructor(t,n){super();this.upstream=t,this.bufferSize=n,this.buffer=new zv(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class jM extends Wv{constructor(t,n,r){super(t,n);this.upstream=t,this.windowSize=n,this.upstreamExhausted=!1,this.random=Ga.alea(r||Vt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),n=await this.buffer.shuffleExcise(t);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class ii{constructor(){this.size=null}batch(t,n=!0){const r=this;k(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:n?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),Nn(async()=>(await r.iterator()).columnMajorBatch(t,n,XM),o)}concatenate(t){const n=this;let r;return this.size===1/0||t.size===1/0?r=1/0:this.size!=null&&t.size!=null?r=this.size+t.size:r=null,Nn(async()=>(await n.iterator()).concatenate(await t.iterator()),r)}filter(t){const n=this;let r;return this.size===1/0?r=1/0:r=null,Nn(async()=>(await n.iterator()).filter(o=>V(()=>t(o))),r)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const n=this;return Nn(async()=>(await n.iterator()).map(r=>V(()=>t(r))),this.size)}mapAsync(t){const n=this;return Nn(async()=>(await n.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const n=this;return Nn(async()=>(await n.iterator()).prefetch(t),this.size)}repeat(t){const n=this;let r;return this.size!=null&&t>0?r=this.size*t:t===0?r=0:this.size!=null&&(t===void 0||t<0)?r=1/0:r=null,Nn(async()=>{const o=jy(async()=>({value:await n.iterator(),done:!1}));return FM(o.take(t))},r)}skip(t){const n=this;let r;return this.size!=null&&t>=0&&this.size>=t?r=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?r=0:r=null,Nn(async()=>(await n.iterator()).skip(t),r)}shuffle(t,n,r=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const o=this,a=Ga.alea(n||Vt().toString());return Nn(async()=>{let i=a.int32();return r&&(i+=a.int32()),(await o.iterator()).shuffle(t,i.toString())},this.size)}take(t){const n=this;let r;return this.size!=null&&this.size>t?r=t:this.size!=null&&this.size<=t?r=this.size:r=null,Nn(async()=>(await n.iterator()).take(t),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}ii.MAX_BUFFER_SIZE=1e4;function Nn(s,t=null){return new class extends ii{constructor(){super(...arguments);this.size=t}async iterator(){return s()}}}function qM(s){return Nn(async()=>Mv(s),s.length)}function KM(s){if(!ai(s))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(s))for(let n=0;n<s.length;n++)t=t==null?s[n].size:Math.min(t,s[n].size);else if(s instanceof Object)for(const n in s)t=t==null?s[n].size:Math.min(t,s[n].size);return Nn(async()=>{const n=await Pv(s,r=>{if(r instanceof ii)return{value:r.iterator(),recurse:!1};if(ai(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return _M(n,kr.SHORTEST)},t)}function XM(s){if(s===null)return null;const t=s[0];return EM(t)?{value:YM(s),recurse:!1}:{value:null,recurse:!0}}function YM(s){if(s.length===0)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Pe?$n(s):Vn(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Uv extends ii{constructor(t){super();this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const Ud='"',kc=Symbol("out"),Gv=Symbol("field"),Gd=Symbol("quote"),Ky=Symbol("quoteafterquote"),Hv=Symbol("quoteinquote");class jv extends ii{constructor(t,n){super();this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Uv(t),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(k(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&k(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const n=this.fullColumnNames.reduce((o,a)=>(o[a]=o[a]+1||1,o),{}),r=Object.keys(n).filter(o=>n[o]>1);if(k(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(const o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");const r=n.value;return this.parseRow(r,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(n=>this.makeDataElement(n))}makeDataElement(t){const n=this.parseRow(t),r={},o={};for(let a=0;a<this.fullColumnNames.length;a++){const i=this.fullColumnNames[a],l=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!l)){const c=n[a];let u=null;if(c==="")if(l&&l.default!==void 0)u=l.default;else{if(l&&(l.required||l.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);u=void 0}else{const h=Number(c);if(isNaN(h))l&&l.dtype==="bool"?u=this.getBoolean(c):u=c;else if(!l||!l.dtype)u=h;else switch(l.dtype){case"float32":u=h;break;case"int32":u=Math.floor(h);break;case"bool":u=this.getBoolean(c);break;default:u=h}}l&&l.isLabel?o[i]=u:r[i]=u}}return Object.keys(o).length===0?r:{xs:r,ys:o}}getBoolean(t){return t==="1"||t.toLowerCase()==="true"?1:0}parseRow(t,n=!0){const r=[];let o=0;const a=t.length;let i=kc;for(let l=0;l<a;l++)switch(i){case kc:switch(t.charAt(l)){case Ud:o=l+1,i=Gd;break;case this.delimiter:if(o=l+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),i=kc;break;default:i=Gv,o=l;break}break;case Gv:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l)),i=kc,o=l+1;break}break;case Gd:switch(t.charAt(l)){case Ud:i=Ky;break}break;case Ky:switch(t.charAt(l)){case this.delimiter:r.push(t.substring(o,l-1)),i=kc,o=l+1;break;case Ud:i=Gd;break;default:i=Hv;break}break;case Hv:switch(t.charAt(l)){case Ud:i=Gd;break}break}if(i===Ky?r.push(t.substring(o,a-1)):r.push(t.substring(o)),n&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Xy extends Ot{constructor(t){super();this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(q().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const n=new Xy(t);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,n;const r=await this.getAudioData();if(this.includeSpectrogram){const o=this.flattenQueue(r.freqDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const o=this.flattenQueue(r.timeDataQueue);n=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],n=[];let r=0;return new Promise(o=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:t,timeDataQueue:n}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(a),o({freqDataQueue:t,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const n=t[0].length,r=new Float32Array(t.length*n);return t.forEach((o,a)=>r.set(o,a*n)),r}getTensorFromAudioDataArray(t,n){const r=new Float32Array(H(n));return r.set(t,r.length-t.length),Vn(r,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Yy extends Ot{constructor(t,n){super();if(this.webcamVideoElement=t,this.webcamConfig=n,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ht([0],"int32"),this.webcamConfig.centerCrop){const r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-r)/2,i=(1-o)/2,l=a+r,c=o+i;this.cropBox=to([i,a,c,l],[1,4])}else this.cropBox=to([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,n={}){if(q().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=n.resizeWidth,t.height=n.resizeHeight}const r=new Yy(t,n);return await r.start(),r}async start(){this.webcamConfig.facingMode&&k(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=f0(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return V(()=>{const n=on(ne(t,"float32"),0);let r;r=jn.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const o=r.shape;return P(r,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class qv{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Kv extends Ot{split(t){return new ZM(this,t)}}class ZM extends Kv{constructor(t,n){super();this.upstream=t,this.impl=new JM(t,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class JM extends qy{constructor(t,n){super();this.upstream=t,this.separator=n,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const n=t.value.split(this.separator);n[0]=this.carryover+n[0];for(const r of n.slice(0,-1))this.outputQueue.push(r);return this.carryover=n[n.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class QM extends Ot{decodeUTF8(){return new eB(this)}}class eB extends Kv{constructor(t){super();this.upstream=t,this.impl=new tB(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class tB extends qy{constructor(t){super();if(this.upstream=t,q().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:n}=require("string_decoder");this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n;if(t.done)return!1;n=t.value;let r;return q().get("IS_BROWSER")?r=this.decoder.decode(n,{stream:!0}):r=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(r),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Xv extends QM{constructor(t,n={}){super();this.file=t,this.options=n,k(t instanceof Uint8Array||(q().get("IS_BROWSER")?t instanceof File||t instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,r)=>{const o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,o)));else{const a=new FileReader;a.onload=l=>{let c=a.result;if(c instanceof ArrayBuffer&&(c=new Uint8Array(c)),!(c instanceof Uint8Array))return r(new TypeError("FileReader returned unknown type."));n(c)},a.onabort=l=>r(new Error("Aborted")),a.onerror=l=>r(new Error(l.type));const i=this.file.slice(this.offset,o);a.readAsArrayBuffer(i)}this.offset=o}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function nB(s,t={}){let n,r;typeof s=="string"?n=s:(n=s.url,r=sB(s));const o=await Mx(n,r);if(o.ok){const a=new Uint8Array(await o.arrayBuffer());return new Xv(a,t)}else throw new Error(o.statusText)}const sB=s=>({method:s.method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Yv(s){return typeof s=="string"&&s.substr(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Zv extends qv{constructor(t,n={}){super();this.input=t,this.options=n}async iterator(){if(Yv(this.input)&&q().get("IS_NODE")){const t=require("fs");this.input=t.readFileSync(this.input.substr(7))}return new Xv(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Jv extends qv{constructor(t,n={}){super();this.url=t,this.fileOptions=n}async iterator(){return Yv(this.url)?new Zv(this.url,this.fileOptions).iterator():nB(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function rB(s,t={}){return new jv(new Jv(s),t)}function oB(s){const t=jy(s);return Nn(async()=>t)}function aB(s){return Nn(async()=>{const t=await s();return jy(()=>t.next())})}async function iB(s,t){return Yy.create(s,t)}async function lB(s){return Xy.create(s)}/** @license See the LICENSE file. */const Qv="3.9.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cB=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",array:qM,Dataset:ii,zip:KM,CSVDataset:jv,TextLineDataset:Uv,csv:rB,func:oB,generator:aB,microphone:lB,webcam:iB,FileDataSource:Zv,URLDataSource:Jv,version_data:Qv});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function de(s,t){Array.isArray(s)||(s=[s]),s.forEach(n=>{n!=null&&k(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uB=zh;class Hd extends Uc{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new Mp(this,dr())}nextDataId(){return Hd.nextDataId++}write(t,n,r){this.firstUse&&(this.firstUse=!1,q().get("IS_NODE")&&sn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:t,dtype:r,refCount:1}),o}makeTensorInfo(t,n,r){let o;if(n==="string"&&r!=null&&r.length>0&&gs(r[0])){const a=r.map(i=>ys(i));o=this.write(a,t,n)}else o=this.write(r,t,n);return{dataId:o,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){const n=this.data.get(t);n.refCount--}}move(t,n,r,o,a){this.data.set(t,{values:n,dtype:o,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:n,complexTensorInfos:r}=this.data.get(t);if(n==="complex64"){const o=this.readSync(r.real.dataId),a=this.readSync(r.imag.dataId);return qs(o,a)}return this.data.get(t).values}bufferSync(t){const n=this.readSync(t.dataId);let r=n;if(t.dtype==="string")try{r=n.map(o=>Vr(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Se(t.shape,t.dtype,r)}makeOutput(t,n,r){const o=this.write(t,n,r);return dr().makeTensorFromDataId(o,n,r,this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(t);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const n=Vt();return t(),{kernelMs:Vt()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){de([t],"where");const n=this.readSync(t.dataId);return uB(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Hd.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(s){const t=new Float32Array(s.length);for(let n=0;n<s.length;++n)t[n]=Math.abs(s[n]);return t}const hB=s=>{const{x:t}=s.inputs,n=s.backend;de(t,"abs");let r=new Float32Array(H(t.shape));const o=n.data.get(t.dataId).values;return r=e$(o),n.makeOutput(r,t.shape,"float32")},dB={kernelName:Ti,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(s){return(t,n,r,o,a)=>{const i=Te(t,n),l=i.length,c=ge(i),u=H(i),h=Nt(a,u),d=t.length,p=n.length,f=ge(t),m=ge(n),g=za(t,i),y=za(n,i);if(g.length+y.length===0)for(let b=0;b<h.length;++b)h[b]=s(r[b%r.length],o[b%o.length]);else for(let b=0;b<h.length;++b){const x=Eo(b,l,c),w=x.slice(-d);g.forEach(N=>w[N]=0);const v=Qn(w,d,f),C=x.slice(-p);y.forEach(N=>C[N]=0);const I=Qn(C,p,m);h[b]=s(r[v],o[I])}return[h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(s){const{inputs:t,backend:n}=s,{real:r,imag:o}=t,a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,l=n.makeTensorInfo(r.shape,"complex64"),c=n.data.get(l.dataId);return c.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(o.shape,"float32",i)},l}const pB={kernelName:Qc,backendName:"cpu",kernelFunc:kn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jd(s,t,n="float32"){if(n==="complex64"){const o=jd(s,t,"float32"),a=jd(s,t,"float32");return kn({inputs:{real:o,imag:a},backend:s})}const r=Bt(H(t),n);return s.makeTensorInfo(t,n,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(s){const{inputs:t,backend:n}=s,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const fB={kernelName:Yo,backendName:"cpu",kernelFunc:Ts};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,a)}const mB={kernelName:Au,backendName:"cpu",kernelFunc:mo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dtype:a}=r;if(a==="complex64"){if(o.dtype==="complex64")return Ts({inputs:{x:o},backend:n});const i=jd(n,o.shape,o.dtype),l=Ir({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),c=kn({inputs:{real:l,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}if(o.dtype==="complex64"){const i=mo({inputs:{input:o},backend:n}),l=Ir({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),l}if(!Gp(o.dtype,a)){const i=Ts({inputs:{x:o},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){const i=n.data.get(o.dataId).values,l=Int32Array.from(i);return n.makeTensorInfo(o.shape,"int32",l)}if(a==="bool"){const i=n.data.get(o.dataId).values,l=lr([0],o.dtype),[c,u]=$t((h,d)=>h!==d?1:0)(o.shape,[],i,l,"bool");return n.makeTensorInfo(u,"bool",c)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}const gB={kernelName:Po,backendName:"cpu",kernelFunc:Ir};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(s,t,n,r){return n==null?({inputs:o,backend:a})=>{const{a:i,b:l}=o,c=a;de([i,l],s);const u=c.data.get(i.dataId).values,h=c.data.get(l.dataId).values,d=i.dtype==="string"?ro(u):u,p=i.dtype==="string"?ro(h):h,f=r||i.dtype,[m,g]=t(i.shape,l.shape,d,p,f);return c.makeTensorInfo(g,f,m)}:({inputs:o,backend:a})=>{const{a:i,b:l}=o,c=a;if(i.dtype==="complex64"||l.dtype==="complex64"){const u=Ir({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,g=Ir({inputs:{x:l},backend:c,attrs:{dtype:"complex64"}}),y=c.data.get(g.dataId),b=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,w=c.data.get(b.dataId).values,v=c.data.get(x.dataId).values,[C,I,N]=n(i.shape,l.shape,f,m,w,v),S=c.makeTensorInfo(N,"float32",C),E=c.makeTensorInfo(N,"float32",I),A=kn({inputs:{real:S,imag:E},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(S),c.disposeIntermediateTensorInfo(E),A}else{const u=c.data.get(i.dataId).values,h=c.data.get(l.dataId).values,d=r||i.dtype,[p,f]=t(i.shape,l.shape,u,h,d);return c.makeTensorInfo(f,d,p)}}}function Zy(s){return(t,n,r,o,a,i)=>{const l=Te(t,n),c=H(l),u=l.length,h=ge(l),d=Nt("float32",c),p=Nt("float32",c),f=za(t,l),m=za(n,l),g=qs(r,o),y=qs(a,i),b=t.length,x=ge(t),w=n.length,v=ge(n);if(f.length+m.length===0)for(let C=0;C<d.length;C++){const I=C%g.length,N=C%y.length,S=s(g[I*2],g[I*2+1],y[N*2],y[N*2+1]);d[C]=S.real,p[C]=S.imag}else for(let C=0;C<d.length;C++){const I=Eo(C,u,h),N=I.slice(-b);f.forEach(D=>N[D]=0);const S=Qn(N,b,x),E=I.slice(-w);m.forEach(D=>E[D]=0);const A=Qn(E,w,v),_=s(g[S*2],g[S*2+1],y[A*2],y[A*2+1]);d[C]=_.real,p[C]=_.imag}return[d,p,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t$=$t((s,t)=>s+t),yB=Zy((s,t,n,r)=>({real:s+n,imag:t+r})),Ic=Lt(Lr,t$,yB),bB={kernelName:Lr,backendName:"cpu",kernelFunc:Ic};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jy(s,t,n,r,o){const a=H(r),i=Bt(o,n);for(let l=0;l<s.length;l++){const c=s[l];if(c<0)throw new Error("Input x must be non-negative!");c>=o||(a>0?i[c]+=t[l]:i[c]+=1)}return i}function n$(s,t,n,r=!1){const o=s.shape[0],a=s.shape[1],i=Se([o,n],t.dtype);for(let l=0;l<o;l++)for(let c=0;c<a;c++){const u=s.get(l,c);if(u<0)throw new Error("Input x must be non-negative!");u>=n||(r?i.set(1,l,u):t.size>0?i.set(i.get(l,u)+t.get(l,c),l,u):i.set(i.get(l,u)+1,l,u))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(s){return(t,n,r)=>{const o=Nt(n,t.length);for(let a=0;a<t.length;++a)o[a]=s(t[a],r);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(s,t,n){return({inputs:r,attrs:o,backend:a})=>{const{x:i}=r;if(de(i,s),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const l=a,c=l.data.get(i.dataId).values,u=H(i.shape),h=n||i.dtype,d=Yt(h,u);for(let p=0;p<u;++p)d[p]=t(c[p],o);return l.makeTensorInfo(i.shape,h,d)}}function li(s,t,n){return({inputs:r,attrs:o,backend:a})=>{const{x:i}=r;if(de(i,s),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const l=a,c=l.data.get(i.dataId).values,u=n||i.dtype,h=t(c,u,o);return l.makeTensorInfo(i.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s$=Sr(s=>Math.ceil(s)),xB=li(zo,s$),wB={kernelName:zo,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(s,t,n,r){const o=Yt(n,H(t));if(r&&n!=="string"){let a=0;s.forEach(i=>{const l=H(i.shape);o.set(i.vals,a),a+=l})}else{let a=0;s.forEach(i=>{const l=n==="string"?ro(i.vals):i.vals;let c=0;for(let u=0;u<i.shape[0];++u){const h=u*t[1]+a;for(let d=0;d<i.shape[1];++d)o[h+d]=l[c++]}a+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o$=$t((s,t)=>s===t?1:0),a$=Lt(Gi,o$,null,"bool"),vB={kernelName:Gi,backendName:"cpu",kernelFunc:a$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i$=Sr(s=>Math.exp(s)),l$=li(Ho,i$),$B={kernelName:Ho,backendName:"cpu",kernelFunc:l$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c$=Sr(s=>Math.expm1(s)),CB=li(jo,c$),NB={kernelName:jo,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u$=Sr(s=>Math.floor(s)),kB=li(qo,u$),IB={kernelName:qo,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(s,t,n,r,o,a,i,l,c){const u=Se([r,a],n);for(let h=0;h<r;h++){const d=[];let p=0;for(let f=0;f<o;f++){const m=s[h*o+f];p+=m*i[f],d.push(m)}if(p<0||p>=c/a)throw new Error(`Invalid indices: ${d} does not index into ${l}`);for(let f=0;f<a;f++)u.values[h*a+f]=t.get(...t.indexToLoc(p*a+f))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(s,t,n){const r=Se(n,s.dtype);for(let o=0;o<r.size;++o){const i=r.indexToLoc(o).slice(),l=i[0],c=i[2],u=t.locToIndex([l,c]);i[2]=t.values[u];const h=s.locToIndex(i);r.values[o]=s.values[h]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p$=$t((s,t)=>s>t?1:0),SB=Lt(Ki,p$,null,"bool"),TB={kernelName:Ki,backendName:"cpu",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f$=$t((s,t)=>s>=t?1:0),EB=Lt(Xo,f$,null,"bool"),AB={kernelName:Xo,backendName:"cpu",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m$=$t((s,t)=>s<t?1:0),DB=Lt(Yi,m$,null,"bool"),RB={kernelName:Yi,backendName:"cpu",kernelFunc:DB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g$=$t((s,t)=>s<=t?1:0),FB=Lt(Zi,g$,null,"bool"),_B={kernelName:Zi,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(s,t,n){const r=(t-s)/(n-1),o=Bt(n,"float32");o[0]=s;for(let a=1;a<o.length;a++)o[a]=o[a-1]+r;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b$=Sr(s=>Math.log(s)),OB=li(ea,b$),LB={kernelName:ea,backendName:"cpu",kernelFunc:OB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(s,t,n,r){const o=Nt(r,H(n));for(let a=0;a<o.length;++a){const i=a*t;let l=s[i];for(let c=0;c<t;++c){const u=s[i+c];(Number.isNaN(u)||u>l)&&(l=u)}o[a]=l}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$=$t((s,t)=>Math.max(s,t)),PB=Lt(na,w$),zB={kernelName:na,backendName:"cpu",kernelFunc:PB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$=$t((s,t)=>Math.min(s,t)),MB=Lt(sa,v$),BB={kernelName:sa,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qy=$t((s,t)=>s*t),VB=Zy((s,t,n,r)=>({real:s*n-t*r,imag:s*r+t*n})),qd=Lt(oa,Qy,VB),WB={kernelName:oa,backendName:"cpu",kernelFunc:qd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(s,t,n){const r=Ls(-1,n);return Qy([],t,r,s,n)}function UB(s){const{inputs:t,backend:n}=s,{x:r}=t;de(r,"neg");const o=n.data.get(r.dataId).values,[a,i]=$$(o,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}const GB={kernelName:ll,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C$=$t((s,t)=>s!==t?1:0),HB=Lt(cl,C$,null,"bool"),jB={kernelName:cl,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(s,t,n,r,o){const a=t.length,i=H(t),l=ge(t),c=ge(o),u=Nt(n,H(o));for(let h=0;h<i;++h){const d=Eo(h,a,l),p=new Array(d.length);for(let m=0;m<p.length;m++)p[m]=d[r[m]];const f=Qn(p,a,c);u[f]=s[h]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fn(s){const{inputs:t,attrs:n,backend:r}=s,{x:o}=t,{perm:a}=n;de(o,"transpose");const i=o.shape.length,l=new Array(i);for(let d=0;d<l.length;d++)l[d]=o.shape[a[d]];const c=r.data.get(o.dataId).values,u=eb(c,o.shape,o.dtype,a,l);return{dataId:r.write(u,l,o.dtype),shape:l,dtype:o.dtype}}const qB={kernelName:kl,backendName:"cpu",kernelFunc:Fn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(s,t,n,r){const[o,a]=Ft(s,r),i=fn(t,"int32"),l=Bt(H(o),i),c=H(a);for(let u=0;u<l.length;++u){const h=u*c;let d=1;for(let p=0;p<c;++p)d*=n[h+p];l[u]=d}return{outVals:l,outShape:o,outDtype:i}}function KB(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;de(o,"prod");const l=o.shape.length,c=ke(a,o.shape),u=gt(c,l);let h=c,d=o;const p=[];u!=null&&(d=Fn({inputs:{x:o},backend:n,attrs:{perm:u}}),p.push(d),h=xt(h.length,l));const f=n.data.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=N$(d.shape,d.dtype,f,h);let b=g;return i&&(b=mt(g,c)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(b,y,m)}const XB={kernelName:Tu,backendName:"cpu",kernelFunc:KB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(s,t,n,r){const o=s===t,a=s<t&&n<0,i=t<s&&n>1;if(o||a||i)return Bt(0,r);const l=Math.abs(Math.ceil((t-s)/n)),c=Bt(l,r);t<s&&n===1&&(n=-1),c[0]=s;for(let u=1;u<c.length;u++)c[u]=c[u-1]+n;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$=Sr(s=>1/Math.sqrt(s)),YB=li(ha,I$),ZB={kernelName:ha,backendName:"cpu",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB=Sr(s=>1/(1+Math.exp(-s))),S$=Ve(ga,s=>1/(1+Math.exp(-s))),QB={kernelName:ga,backendName:"cpu",kernelFunc:S$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(s,t,n,r,o){const a=Df(r,t,n),i=H(n),l=ge(r);if(a){const d=Rf(t,l);return o==="string"?s.slice(d,d+i):s.subarray(d,d+i)}const c=o==="string"?ro(s):s,u=Se(r,o,c),h=Se(n,o);for(let d=0;d<h.size;++d){const p=h.indexToLoc(d),f=p.map((m,g)=>m+t[g]);h.set(u.get(...f),...p)}return o==="string"?Ow(h.values):h.values}function go(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,size:i}=r;de(o,"slice");const[l,c]=uh(o,a,i);Af(o,l,c);const u=n.data.get(o.dataId).values,h=T$(u,l,c,o.shape,o.dtype);return n.makeTensorInfo(c,o.dtype,h)}const eV={kernelName:wl,backendName:"cpu",kernelFunc:go};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(s,t,n,r,o,a,i){const l=t[0],c=a[0],u=new Array(c),h=new Array(l),d=t[1];if(c===0){if(l!==0)throw new Error(`Received SparseTensor with denseShape[0] = 0 but
         indices.shape[0] = ${l}`);const y=Yt(n,0),b=Yt(o,0);return[y,[0,d],b,u,h]}let p=!0,f=0;const m=new Array(c).fill(0);for(let y=0;y<l;++y){const b=s[y*d];if(b<0)throw new Error(`indices(${y}, 0) is invalid: ${b} < 0`);if(b>=c)throw new Error(`indices(${y}, 0) is invalid: ${b} >= ${c}`);++m[b],p=p&&b>=f,f=b}let g=!0;for(let y=0;y<c;++y){const b=m[y]===0;u[y]=b,g=g&&!b,m[y]=Math.max(m[y],1),y>0&&(m[y]+=m[y-1])}if(g&&p){const y=s,b=r;for(let x=0;x<l;++x)h[x]=x;return[y,[l,d],b,u,h]}else{const y=m[c-1],b=Yt(n,y*d),x=Yt(o,y),w=new Array(c).fill(0);for(let v=0;v<l;++v){const C=s[v*d],I=w[C],N=(C===0?0:m[C-1])+I;w[C]++;for(let S=0;S<d;++S)b[N*d+S]=s[v*d+S];x[N]=r[v],h[v]=N}for(let v=0;v<c;++v)if(w[v]===0){const I=v===0?0:m[v-1];b[I*d+0]=v;for(let N=1;N<d;++N)b[I*d+N]=0;x[I]=i}return[b,[y,d],x,u,h]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(s,t,n,r,o){const a=H(r),i=t[0],l=o.length,c=[];let u=1,h=-1;for(let y=0;y<l;++y){const b=o[y];if(b===-1){if(h!==-1)throw new Error(`only one output dimension may be -1, not both ${h} and ${y}`);h=y,c.push(1)}else{if(b<0)throw new Error(`size ${y} must be non-negative, not ${b}`);u*=b,c.push(b)}}if(h!==-1){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const y=Math.trunc(a/u);if(u*y!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}
          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${c}`);c[h]=y}const d=H(c);if(d!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${c}`);const p=r.length,f=[];if(p>0){f[p-1]=1;for(let y=p-2;y>=0;--y)f[y]=f[y+1]*r[y+1]}const m=[];if(l>0){m[l-1]=1;for(let y=l-2;y>=0;--y)m[y]=m[y+1]*c[y+1]}const g=Yt(n,i*l);for(let y=0;y<i;++y){let b=0;for(let x=0;x<p;++x)b+=s[y*p+x]*f[x];for(let x=0;x<l;++x)g[y*l+x]=Math.trunc(b/m[x]),b%=m[x]}return[g,[i,l],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(s,t,n,r,o,a=!1,i=0){const l=r.length;if(l!==o.length)throw new Error("segmentIds and indices should have same size.");const c=[t[0],s.length/t[0]],u=c[1],d=l>0?o[l-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const f=p.reduce((w,v)=>w*v,1),m=Yt(n,f);if(l===0)return d>0&&m.fill(i),[m,p];if(d<=0)throw new Error("segment ids must be >= 0");let g=0,y=1,b=0,x=o[g];for(;;){let w=0;if(y<l){if(w=o[y],x===w){++y;continue}if(x>=w)throw new Error("segment ids are not increasing")}if(x<0||x>=d)throw new Error(`Segment id ${x} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);x>b&&m.fill(i,b*u,x*u);for(let v=g;v<y;++v){const C=r[v];if(C<0||C>=c[0])throw new Error(`Bad: indices[${v}] == ${r[v]} out of range [0, ${c[0]})`);for(let I=0;I<u;I++)m[x*u+I]+=s[C*u+I]}if(a)for(let v=0;v<u;v++)m[x*u+v]/=y-g;if(g=y,++y,b=x+1,x=w,y>l)break}return b<d&&m.fill(i,b*u,d*u),[m,p]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV=Sr(s=>Math.sqrt(s)),nV=Ve(ba,s=>Math.sqrt(s)),sV={kernelName:ba,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D$=$t((s,t)=>{const n=s-t;return n*n}),rV=Lt(xa,D$),oV={kernelName:xa,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(s,t,n,r){const o=Se(s,t.dtype);for(let a=0;a<o.size;a++){const i=o.indexToLoc(a),l=new Array(i.length);for(let c=0;c<l.length;c++)l[c]=i[c]*n[c]+r[c];o.set(t.get(...l),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aV{constructor(t,n,r,o,a,i){this.separator=ys(t),this.nGramWidths=n,this.leftPad=ys(r),this.rightPad=ys(o),this.padWidth=a,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,n){const r=this.getPadWidth(n);return Math.max(0,t+2*r-n+1)}createNGrams(t,n,r,o,a,i){for(let l=0;l<a;++l){const c=this.getPadWidth(i),u=Math.max(0,c-l),h=Math.max(0,c-(a-(l+1))),d=i-(u+h),p=n+(u>0?0:l-c);let f=0;f+=u*this.leftPad.length;for(let x=0;x<d;++x)f+=t[p+x].length;f+=h*this.rightPad.length,f+=(u+h+d-1)*this.separator.length,r[o+l]=new Uint8Array(f);const g=r[o+l];let y=0;const b=x=>x.forEach(w=>g[y++]=w);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(t[p+x]),b(this.separator);if(d>0){b(t[p+d-1]);for(let x=0;x<h;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<h-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,n){const r=t.length,o=n.length;if(o>0){let c=n[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let u=1;u<o;++u){let h=n[u]>=c;if(h=h&&n[u]<=r,!h)throw new Error(`Invalid split value ${n[u]}, must be in [${c}, ${r}]`);c=n[u]}if(c!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${c}`)}const a=o-1,i=Yt("int32",o);if(r===0||o===0){const c=new Array(r);for(let u=0;u<=a;++u)i[u]=0;return[c,i]}i[0]=0;for(let c=1;c<=a;++c){const u=n[c]-n[c-1];let h=0;this.nGramWidths.forEach(d=>{h+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&h===0&&(h=1),i[c]=i[c-1]+h}const l=new Array(i[a]);for(let c=0;c<a;++c){const u=n[c];let h=i[c];if(this.nGramWidths.forEach(d=>{const p=n[c+1]-n[c],f=this.getNumNGrams(p,d);this.createNGrams(t,u,l,h,f,d),h+=f}),this.preserveShort&&h===i[c]){const d=n[c+1]-n[c];if(d===0)continue;const p=d+2*this.padWidth,f=1;this.createNGrams(t,u,l,h,f,p)}}return[l,i]}}function F$(s,t,n,r,o,a,i,l){return new aV(n,r,o,a,i,l).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(s,t,n,r){if(!s.length)return;if(t.length===0){for(let a=0;a<s.length;++a)r.push(s.subarray(a,a+1));return}if(t.length===1){const a=t[0];let i=s.indexOf(a);for(;i!==-1;){const l=s.subarray(0,i);(!n||l.length!==0)&&r.push(l),s=s.subarray(i+1),i=s.indexOf(a)}(!n||s.length!==0)&&r.push(s);return}let o=0;for(let a=0;a<s.length+1;a++)if(a===s.length||t.indexOf(s[a])!==-1){const i=s.subarray(o,a);(!n||i.length!==0)&&r.push(i),o=a+1}}function _$(s,t,n){const r=s.length,o=[];let a=0,i=0;const l=new Array(r);for(let p=0;p<r;++p){const f=o.length;iV(s[p],t,n,o);const m=o.length-f;l[p]=m,a+=m,i=Math.max(i,m)}const c=Yt("int32",a*2),u=new Array(a),h=[r,i];let d=0;for(let p=0;p<r;++p)for(let f=0;f<l[p];++f)c[d*2]=p,c[d*2+1]=f,u[d]=o[d],++d;return[c,u,h]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(s,t){const n=Yt("int32",s.length);for(let r=0;r<s.length;++r)n[r]=zx(s[r]).modulo(t).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$=$t((s,t)=>s-t),lV=Zy((s,t,n,r)=>({real:s-n,imag:t-r})),nb=Lt(wa,L$,lV),cV={kernelName:wa,backendName:"cpu",kernelFunc:nb};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(s,t){const n=new Array(s.rank);for(let o=0;o<n.length;o++)n[o]=s.shape[o]*t[o];const r=Se(n,s.dtype);for(let o=0;o<r.values.length;++o){const a=r.indexToLoc(o),i=new Array(s.rank);for(let c=0;c<i.length;c++)i[c]=a[c]%s.shape[c];const l=s.locToIndex(i);r.values[o]=s.values[l]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc=(s,t)=>{const n=t.value-s.value;return n===0?s.index-t.index:n};function z$(s,t,n=0,r=s.length-1){for(;r>n;){if(r-n>600){const l=r-n+1,c=t-n+1,u=Math.log(l),h=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*h*(l-h)/l)*Math.sign(c-l/2),p=Math.max(n,Math.floor(t-c*h/l+d)),f=Math.min(r,Math.floor(t+(l-c)*h/l+d));z$(s,t,p,f)}const o=s[t];let a=n,i=r;for(Fs(s,n,t),Sc(s[r],o)>0&&Fs(s,n,r);a<i;){for(Fs(s,a,i),a++,i--;Sc(s[a],o)<0;)a=a+1;for(;Sc(s[i],o)>0;)i=i-1}Sc(s[n],o)===0?Fs(s,n,i):(i=i+1,Fs(s,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function M$(s,t,n,r,o){const a=t[t.length-1],[i,l]=[s.length/a,a],c=Nt(n,i*r),u=Nt("int32",i*r);for(let d=0;d<i;d++){const p=d*l,f=s.subarray(p,p+l);let m=new Array(f.length);f.forEach((x,w)=>m[w]={value:x,index:w}),r<m.length&&(z$(m,r),m=m.slice(0,r)),o&&m.sort(Sc);const g=d*r,y=c.subarray(g,g+r),b=u.subarray(g,g+r);for(let x=0;x<r;x++)y[x]=m[x].value,b[x]=m[x].index}const h=t.slice();return h[h.length-1]=r,[Se(h,n,c),Se(h,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(s,t,n,r){const o=ke(t,n)[0],a=[1,n[0],1];for(let m=0;m<o;m++)a[0]*=n[m];a[1]=n[o];for(let m=o+1;m<n.length;m++)a[2]*=n[m];const i={},l=new Int32Array(n[o]),c=new kt(a,r,s),u=[],h=a[0]===1&&a[2]===1;for(let m=0;m<n[o];m++){let g;if(h)g=s[m].toString();else{const y=[];for(let b=0;b<a[0];b++)for(let x=0;x<a[2];x++)y.push(c.get(b,m,x));g=y.join(",")}if(i[g]!==void 0)l[m]=i[g];else{const y=Object.keys(i).length;i[g]=y,l[m]=y,u.push(m)}}const d=a.slice();d[1]=Object.keys(i).length;const p=new kt(d,r);u.forEach((m,g)=>{for(let y=0;y<a[0];y++)for(let b=0;b<a[2];b++)p.set(c.get(y,m,b),y,g,b)});const f=n.slice();return f[o]=d[1],{outputValues:p.values,outputShape:f,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uV=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",simpleAbsImpl:e$,addImpl:t$,bincountImpl:Jy,bincountReduceImpl:n$,ceilImpl:s$,concatImpl:r$,equalImpl:o$,expImpl:i$,expm1Impl:c$,floorImpl:u$,gatherNdImpl:h$,gatherV2Impl:d$,greaterImpl:p$,greaterEqualImpl:f$,lessImpl:m$,lessEqualImpl:g$,linSpaceImpl:y$,logImpl:b$,maxImpl:x$,maximumImpl:w$,minimumImpl:v$,multiplyImpl:Qy,negImpl:$$,notEqualImpl:C$,prodImpl:N$,rangeImpl:k$,rsqrtImpl:I$,sigmoidImpl:JB,sliceImpl:T$,sparseFillEmptyRowsImpl:E$,sparseReshapeImpl:A$,sparseSegmentReductionImpl:tb,sqrtImpl:tV,squaredDifferenceImpl:D$,stridedSliceImpl:R$,stringNGramsImpl:F$,stringSplitImpl:_$,stringToHashBucketFastImpl:O$,subImpl:L$,tileImpl:P$,topKImpl:M$,transposeImpl:eb,uniqueImpl:B$});/** @license See the LICENSE file. */const hV="3.9.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Pf("cpu",()=>new Hd,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V$=Ve(Uo,s=>s>=0?s:Math.exp(s)-1),dV={kernelName:Uo,backendName:"cpu",kernelFunc:V$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{alpha:a}=r;de([o],"leakyRelu");const i=H(o.shape),l=n.data.get(o.dataId).values,c=Nt("float32",i);for(let u=0;u<l.length;u++)c[u]=l[u]<0?a*l[u]:l[u];return n.makeTensorInfo(o.shape,"float32",c)}const pV={kernelName:Xi,backendName:"cpu",kernelFunc:W$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fV=$t((s,t)=>s<0?t*s:s);function U$(s){const{inputs:t,backend:n}=s,{x:r,alpha:o}=t;de([r,o],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,[l,c]=fV(r.shape,o.shape,a,i,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const mV={kernelName:fl,backendName:"cpu",kernelFunc:U$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G$=Ve(la,s=>Math.max(0,s)),gV={kernelName:la,backendName:"cpu",kernelFunc:G$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$=Ve(ca,s=>Math.min(Math.max(0,s),6)),yV={kernelName:ca,backendName:"cpu",kernelFunc:H$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(s,t,n,r,o){if(n==="linear")return Ts({inputs:{x:t},backend:s});if(n==="relu")return G$({inputs:{x:t},backend:s});if(n==="elu")return V$({inputs:{x:t},backend:s});if(n==="relu6")return H$({inputs:{x:t},backend:s});if(n==="prelu")return U$({inputs:{x:t,alpha:r},backend:s});if(n==="leakyrelu")return W$({inputs:{x:t},backend:s,attrs:{alpha:o}});if(n==="sigmoid")return S$({inputs:{x:t},backend:s});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{shape:a}=r,i=H(o.shape),l=Up(a,i),c=H(l);k(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(o.dataId);const u=n.data.get(o.dataId);if(u.complexTensorInfos!=null){const h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;h.shape=l,d.shape=l}return{dataId:o.dataId,shape:l,dtype:o.dtype}}const bV={kernelName:ml,backendName:"cpu",kernelFunc:nt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a}=t,{transposeA:i,transposeB:l}=r;de([o,a],"matMul");const c=o.shape.length,u=a.shape.length,h=i?o.shape[c-2]:o.shape[c-1],d=l?a.shape[u-1]:a.shape[u-2],p=i?o.shape[c-1]:o.shape[c-2],f=l?a.shape[u-2]:a.shape[u-1],m=o.shape.slice(0,-2),g=a.shape.slice(0,-2),y=H(m),b=H(g),x=y===b||y===1||b===1;k(c>=2&&u>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const v=(y>b?o.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,f]);k(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${o.shape} and ${a.shape} and transposeA=${i} and transposeB=${l} must match.`);const C=i?[y,h,p]:[y,p,h],I=l?[b,f,d]:[b,d,f],N=nt({inputs:{x:o},backend:n,attrs:{shape:C}}),S=nt({inputs:{x:a},backend:n,attrs:{shape:I}}),E=i?N.shape[1]:N.shape[2],A=i?N.shape[2]:N.shape[1],_=l?S.shape[1]:S.shape[2],D=Math.max(y,b),O=n.data.get(N.dataId).values,B=n.data.get(S.dataId).values,W=ge(N.shape),M=ge(S.shape),[j,U,K]=i?[W[0],1,W[1]]:[W[0],W[1],1],[Z,J,Q]=l?[1,M[1],M[0]]:[M[1],1,M[0]],te=A*_,oe=Se([D,A,_],N.dtype),ae=oe.values,le=n.blockSize;for(let he=0;he<D;he++)for(let be=0;be<A;be+=le)for(let xe=0;xe<_;xe+=le)for(let ve=0;ve<E;ve+=le){const De=Math.min(be+le,A),Me=Math.min(xe+le,_),it=Math.min(ve+le,E);for(let Ze=be;Ze<De;Ze++)for(let je=xe;je<Me;je++){let qe=0;for(let Je=ve;Je<it;Je++){const dt=Math.min(he,y-1)*j,As=Math.min(he,b-1)*Q,Pt=O[dt+Ze*U+Je*K],ms=B[Je*Z+je*J+As];qe+=Pt*ms}ae[he*te+(Ze*_+je)]+=qe}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(v,oe.dtype,oe.values)}const xV={kernelName:_i,backendName:"cpu",kernelFunc:j$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a,bias:i,preluActivationWeights:l}=t,{transposeA:c,transposeB:u,activation:h,leakyreluAlpha:d}=r;let p,f,m;const g=[];p=j$({inputs:{a:o,b:a},attrs:{transposeA:c,transposeB:u},backend:n}),i&&(f=Ic({inputs:{a:p,b:i},backend:n}),g.push(p),p=f),h&&(m=sb(n,p,h,l,d),g.push(p),p=m);for(const b of g)n.disposeIntermediateTensorInfo(b);return p}const vV={kernelName:El,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V=Ve(Ao,s=>Math.acos(s)),CV={kernelName:Ao,backendName:"cpu",kernelFunc:$V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV=Ve(Do,s=>Math.acosh(s)),kV={kernelName:Do,backendName:"cpu",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(s){const{inputs:t,backend:n}=s,r=t;de(t,"addN");const o=r.map(l=>n.data.get(l.dataId).values),a=Se(r[0].shape,r[0].dtype),i=a.values;for(let l=0;l<r.length;l++){const c=o[l];for(let u=0;u<i.length;u++)i[u]+=c[u]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}const SV={kernelName:Ei,backendName:"cpu",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;de(o,"all");const l=ke(a,o.shape);let c=l;const u=gt(c,o.shape.length);let h=o;u!=null&&(h=Fn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=xt(c.length,o.shape.length)),Ut("all",c,h.shape.length);const[d,p]=Ft(h.shape,c),f=H(p),m=Bt(H(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let w=g[x];for(let v=0;v<f;++v){const C=g[x+v];w=w&&C}m[b]=w}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=mt(d,l),x=nt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const EV={kernelName:Kc,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;de(o,"any");const l=ke(a,o.shape);let c=l;const u=gt(c,o.shape.length);let h=o;u!=null&&(h=Fn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=xt(c.length,o.shape.length)),Ut("any",c,h.shape.length);const[d,p]=Ft(h.shape,c),f=H(p),m=Bt(H(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let w=g[x];for(let v=0;v<f;++v){const C=g[x+v];w=w||C}m[b]=w}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=mt(d,l),x=nt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const DV={kernelName:Xc,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;de(o,"argMax");let i=ke(a,o.shape);const l=gt(i,o.shape.length);let c=o;const u=[];l!=null&&(c=Fn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=xt(i.length,c.shape.length)),i=[i[0]],Ut("argMax",i,c.shape.length);const[h,d]=Ft(c.shape,i),p=H(h),f=Bt(p,"int32"),m=H(d),g=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],w=0;for(let v=0;v<m;++v){const C=g[b+v];C>x&&(x=C,w=v)}f[y]=w}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(h,"int32",f)}const FV={kernelName:Ai,backendName:"cpu",kernelFunc:RV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;de(o,"argMin");let i=ke(a,o.shape);const l=gt(i,o.shape.length);let c=o;const u=[];l!=null&&(c=Fn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=xt(i.length,c.shape.length)),i=[i[0]],Ut("argMin",i,c.shape.length);const[h,d]=Ft(c.shape,i),p=H(h),f=Bt(p,"int32"),m=H(d),g=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const b=y*m;let x=g[b],w=0;for(let v=0;v<m;++v){const C=g[b+v];C<x&&(x=C,w=v)}f[y]=w}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(h,"int32",f)}const OV={kernelName:Di,backendName:"cpu",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV=Ve(Ro,s=>Math.asin(s)),PV={kernelName:Ro,backendName:"cpu",kernelFunc:LV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV=Ve(Fo,s=>Math.asinh(s)),MV={kernelName:Fo,backendName:"cpu",kernelFunc:zV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV=Ve(_o,s=>Math.atan(s)),VV={kernelName:_o,backendName:"cpu",kernelFunc:BV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=$t((s,t)=>Math.atan2(s,t)),UV=Lt(Lo,WV),GV={kernelName:Lo,backendName:"cpu",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV=Ve(Oo,s=>Math.atanh(s)),jV={kernelName:Oo,backendName:"cpu",kernelFunc:HV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(s,t,n,r,o,a){const i=o.strideHeight,l=o.strideWidth,c=o.dilationHeight,u=o.dilationWidth,h=o.effectiveFilterHeight,d=o.effectiveFilterWidth,p=o.padInfo.top,f=o.padInfo.left,m=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Se(o.outShape,n),y=g.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let v=0;v<o.batchSize;++v){const C=v*b,I=v*r[0];for(let N=0;N<o.inChannels;++N)for(let S=0;S<o.outHeight;++S){const E=S*i-p,A=Math.max(0,E),_=Math.min(o.inHeight,h+E),D=C+S*x;for(let O=0;O<o.outWidth;++O){const B=O*l-f,W=Math.max(0,B),M=Math.min(o.inWidth,d+B);let j=m,U=0,K=0;for(let J=A;J<_;J+=c){const Q=I+J*r[1];for(let te=W;te<M;te+=u){const oe=Q+te*r[2],ae=s[oe+N];a==="max"&&ae>j?j=ae:a==="avg"&&(U+=ae,K++)}if(isNaN(j))break}const Z=D+O*w+N;y[Z]=a==="avg"?U/K:j}}}return g}function q$(s,t,n,r,o=!1,a=!1){const i=Se(r.outShape,"int32"),l=r.strideHeight,c=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=Se(t,n,s);for(let y=0;y<r.batchSize;++y)for(let b=0;b<r.inChannels;++b)for(let x=0;x<r.outHeight;++x){const w=x*l-f;let v=w;for(;v<0;)v+=u;const C=Math.min(r.inHeight,d+w);for(let I=0;I<r.outWidth;++I){const N=I*c-m;let S=N;for(;S<0;)S+=h;const E=Math.min(r.inWidth,p+N);let A=Number.NEGATIVE_INFINITY,_=-1;for(let D=v;D<C;D+=u){const O=D-w;for(let B=S;B<E;B+=h){const W=B-N,M=g.get(y,D,B,b);M>A&&(A=M,o?_=a?((y*r.inHeight+D)*r.inWidth+B)*r.inChannels+b:(D*r.inWidth+B)*r.inChannels+b:_=O*p+W)}}i.set(_,y,x,I,b)}}return i}function K$(s,t,n,r,o,a){const i=o.strideDepth,l=o.strideHeight,c=o.strideWidth,u=o.dilationDepth,h=o.dilationHeight,d=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,g=o.padInfo.front,y=o.padInfo.top,b=o.padInfo.left,x=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Se(o.outShape,n),v=w.values,C=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[3]*o.outShape[4],S=o.outShape[4];for(let E=0;E<o.batchSize;++E){const A=E*C,_=E*r[0];for(let D=0;D<o.inChannels;++D)for(let O=0;O<o.outDepth;++O){const B=O*i-g;let W=B;for(;W<0;)W+=u;const M=Math.min(o.inDepth,p+B),j=A+O*I;for(let U=0;U<o.outHeight;++U){const K=U*l-y;let Z=K;for(;Z<0;)Z+=h;const J=Math.min(o.inHeight,f+K),Q=j+U*N;for(let te=0;te<o.outWidth;++te){const oe=te*c-b;let ae=oe;for(;ae<0;)ae+=d;const le=Math.min(o.inWidth,m+oe),he=Q+te*S;let be=x,xe=0,ve=0;for(let Me=W;Me<M;Me+=u){const it=_+Me*r[1];for(let Ze=Z;Ze<J;Ze+=h){const je=it+Ze*r[2];for(let qe=ae;qe<le;qe+=d){const Je=je+qe*r[3],dt=s[Je+D];if(a==="max"&&dt>be?be=dt:a==="avg"&&(xe+=dt,ve++),isNaN(be))break}if(isNaN(be))break}if(isNaN(be))break}const De=he+D;v[De]=a==="avg"?xe/ve:be}}}}return w}function qV(s,t){const n=Se(t.outShape,"int32"),r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let y=0;y<t.inChannels;++y)for(let b=0;b<t.outDepth;++b){const x=b*r-p;let w=x;for(;w<0;)w+=i;const v=Math.min(t.inDepth,u+x);for(let C=0;C<t.outHeight;++C){const I=C*o-f;let N=I;for(;N<0;)N+=l;const S=Math.min(t.inHeight,h+I);for(let E=0;E<t.outWidth;++E){const A=E*a-m;let _=A;for(;_<0;)_+=c;const D=Math.min(t.inWidth,d+A);let O=Number.NEGATIVE_INFINITY,B=-1;for(let W=w;W<v;W+=i){const M=W-x;for(let j=N;j<S;j+=l){const U=j-I;for(let K=_;K<D;K+=c){const Z=K-A,J=s.get(g,W,j,K,y);J>=O&&(O=J,B=M*h*d+U*h+Z)}}}n.set(B,g,b,C,E,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;de(o,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;k(Wt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Wn(o.shape,a,i,u,l,c);let d;if(h.filterWidth===1&&h.filterHeight===1&&Ae(h.inShape,h.outShape))d=Ts({inputs:{x:o},backend:n});else{const p=n.data.get(o.dataId).values,f=ge(o.shape),m=rb(p,o.shape,o.dtype,f,h,"avg");d=n.makeTensorInfo(h.outShape,o.dtype,m.values)}return d}const XV={kernelName:Ri,backendName:"cpu",kernelFunc:KV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r;de(o,"avgPool3d");const h=Bs(o.shape,a,i,1,l,c,u),d=n.data.get(o.dataId).values,p=K$(d,o.shape,o.dtype,ge(o.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}const ZV={kernelName:Fi,backendName:"cpu",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r;de([o,a],"avgPool3DGrad");const h=Bs(a.shape,i,l,1,c,u),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,w=h.dilationWidth,v=h.effectiveFilterDepth,C=h.effectiveFilterHeight,I=h.effectiveFilterWidth,N=v-1-h.padInfo.front,S=I-1-h.padInfo.left,E=C-1-h.padInfo.top,A=Se(a.shape,"float32"),_=1/(m*g*y),D=n.bufferSync(o);for(let O=0;O<h.batchSize;++O)for(let B=0;B<h.inChannels;++B)for(let W=0;W<h.inDepth;++W)for(let M=0;M<h.inHeight;++M)for(let j=0;j<h.inWidth;++j){const U=W-N,K=M-E,Z=j-S;let J=0;for(let Q=0;Q<v;Q+=b){const te=(U+Q)/d;if(!(te<0||te>=h.outDepth||Math.floor(te)!==te))for(let oe=0;oe<C;oe+=x){const ae=(K+oe)/p;if(!(ae<0||ae>=h.outHeight||Math.floor(ae)!==ae))for(let le=0;le<I;le+=w){const he=(Z+le)/f;if(he<0||he>=h.outWidth||Math.floor(he)!==he)continue;J+=D.get(O,te,ae,he,B)}}}A.set(J*_,O,W,M,j,B)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}const QV={kernelName:Zc,backendName:"cpu",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a;de([o,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:u}=r,h=Wn(i.shape,l,c,1,u),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,v=b-1-h.padInfo.top,C=Se(i.shape,"float32"),I=1/(f*m),N=n.data.get(o.dataId).values,S=Se(o.shape,"float32",N);for(let E=0;E<h.batchSize;++E)for(let A=0;A<h.inChannels;++A)for(let _=0;_<h.inHeight;++_)for(let D=0;D<h.inWidth;++D){const O=_-v,B=D-w;let W=0;for(let M=0;M<b;M+=g){const j=(O+M)/d;if(!(j<0||j>=h.outHeight||Math.floor(j)!==j))for(let U=0;U<x;U+=y){const K=(B+U)/p;if(K<0||K>=h.outWidth||Math.floor(K)!==K)continue;W+=S.get(E,j,K,A)}}C.set(W*I,E,_,D,A)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const t4={kernelName:Yc,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,scale:a,offset:i,mean:l,variance:c}=t;k(l.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(a==null||l.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),de([o,l,c,a,i],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);const h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(c.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,w=d.length;let v=0,C=0,I=0,N=0;for(let S=0;S<h.length;++S)g[S]=m[v++]+(h[S]-d[C++])*f[I++]/Math.sqrt(p[N++]+u),v>=y&&(v=0),C>=w&&(C=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(o.shape,o.dtype,g)}const s4={kernelName:ji,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,crops:i}=r;de([o],"batchToSpaceND");const l=a.reduce((b,x)=>b*x),c=oc(o.shape,a,l),u=ac(c.length,a.length),h=ic(o.shape,a,l),d=Am(i,a.length),p=Dm(h,i,a.length),f=nt({inputs:{x:o},backend:n,attrs:{shape:c}}),m=Fn({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nt({inputs:{x:m},backend:n,attrs:{shape:h}}),y=go({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const o4={kernelName:Oi,backendName:"cpu",kernelFunc:r4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i}=r,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,u=Jy(l,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}const i4={kernelName:Jc,backendName:"cpu",kernelFunc:a4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(s){const{inputs:t,backend:n}=s,{s0:r,s1:o}=t,a=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,l=Te(Array.from(a),Array.from(i));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const c4={kernelName:Zp,backendName:"cpu",kernelFunc:l4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u4=Ve(Mo,(s,t)=>{const n=t;return s>n.clipValueMax?n.clipValueMax:s<n.clipValueMin?n.clipValueMin:s}),h4={kernelName:Mo,backendName:"cpu",kernelFunc:u4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4=s=>{const{x:t}=s.inputs,n=s.backend,r=new Float32Array(H(t.shape)),o=n.data.get(t.dataId),a=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values;for(let u=0;u<l.length;u++){const h=l[u],d=c[u];r[u]=Math.hypot(h,d)}return n.makeOutput(r,t.shape,"float32")},p4={kernelName:Li,backendName:"cpu",kernelFunc:d4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,a)}const f4={kernelName:bu,backendName:"cpu",kernelFunc:ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r,a=ke(o,t[0].shape)[0];let i=Cs(t.map(g=>g.shape),a);if(H(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(g=>H(g.shape)>0);if(l.length===1)return Ts({inputs:{x:l[0]},backend:n});const c=l.map(g=>g.shape);if(Sm(c,a),l[0].dtype==="complex64"){const g=l.map(v=>mo({inputs:{input:v},backend:n})),y=l.map(v=>ci({inputs:{input:v},backend:n})),b=ui({inputs:g,backend:n,attrs:{axis:a}}),x=ui({inputs:y,backend:n,attrs:{axis:a}}),w=kn({inputs:{real:b,imag:x},backend:n});return g.forEach(v=>n.disposeIntermediateTensorInfo(v)),y.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),w}const u=l.map(g=>{const y=H(g.shape.slice(a));return nt({inputs:{x:g},backend:n,attrs:{shape:[-1,y]}})}),h=u.map(g=>({vals:n.data.get(g.dataId).values,shape:g.shape}));i=Cs(u.map(g=>g.shape),1);const d=u[0].shape[0]===1,p=r$(h,i,t[0].dtype,d),f=Cs(l.map(g=>g.shape),a),m=n.makeTensorInfo(f,t[0].dtype,p);return u.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const m4={kernelName:Pi,backendName:"cpu",kernelFunc:ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dataFormat:c,dilations:u,dimRoundingMode:h}=r;de([o,a],"conv2d");const d=Vs(c),p=Rt(o.shape,a.shape,i,u,l,h,!1,d),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,x=p.padInfo.top,w=p.dataFormat==="channelsLast",v=new kt(p.outShape,o.dtype),C=ge(o.shape),I=ge(a.shape),N=C[0],S=w?C[1]:C[2],E=w?C[2]:1,A=w?1:C[1],_=v.strides[0],D=w?v.strides[1]:v.strides[2],O=w?v.strides[2]:1,B=w?1:v.strides[1],W=n.data.get(o.dataId).values,M=n.data.get(a.dataId).values,j=v.values;for(let U=0;U<p.batchSize;++U){const K=U*N,Z=U*_;for(let J=0;J<p.outHeight;++J){const Q=Z+J*D,te=J*p.strideHeight-x;for(let oe=0;oe<f;++oe){const ae=te+oe*g;if(ae<0||ae>=p.inHeight)continue;const le=oe*I[0],he=K+ae*S;for(let be=0;be<p.outWidth;++be){const xe=Q+be*O,ve=be*p.strideWidth-b;for(let De=0;De<m;++De){const Me=ve+De*y;if(Me<0||Me>=p.inWidth)continue;const it=le+De*I[1],Ze=he+Me*E;let je=it;for(let qe=0;qe<p.inChannels;++qe){const Je=W[Ze+qe*A];for(let dt=0;dt<p.outChannels;++dt)j[xe+dt*B]+=Je*M[je+dt];je+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,j)}const g4={kernelName:zi,backendName:"cpu",kernelFunc:X$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,dataFormat:c,dimRoundingMode:u,filterShape:h}=r;de([o,a],"conv2dBackpropFilter");const d=Vs(c),p=Rt(o.shape,h,i,1,l,u,!1,d),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b=p.dataFormat==="channelsLast",x=new kt(p.filterShape,"float32"),w=p.padInfo.left,v=p.padInfo.top,C=n.data.get(o.dataId).values,I=n.data.get(a.dataId).values,N=new kt(o.shape,o.dtype,C),S=new kt(a.shape,a.dtype,I);for(let E=0;E<g;++E){const A=Math.max(0,Math.ceil((v-E)/f)),_=Math.min(p.outHeight,(p.inHeight+v-E)/f);for(let D=0;D<y;++D){const O=Math.max(0,Math.ceil((w-D)/m)),B=Math.min(p.outWidth,(p.inWidth+w-D)/m);for(let W=0;W<p.inChannels;++W)for(let M=0;M<p.outChannels;++M){let j=0;for(let U=0;U<p.batchSize;++U)for(let K=A;K<_;++K){const Z=E+K*f-v;for(let J=O;J<B;++J){const Q=D+J*m-w;b?j+=N.get(U,Z,Q,W)*S.get(U,K,J,M):j+=N.get(U,W,Z,Q)*S.get(U,M,K,J)}}x.set(j,E,D,W,M)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const b4={kernelName:eu,backendName:"cpu",kernelFunc:y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{inputShape:i,strides:l,pad:c,dataFormat:u,dimRoundingMode:h}=r;de([o,a],"conv2dBackpropInput");const d=ge(a.shape),p=ge(o.shape);let f=Vs(u);const m=Rt(i,a.shape,l,1,c,h,!1,f),g=new kt(m.inShape,"float32"),y=g.values,b=n.data.get(o.dataId).values,x=n.data.get(a.dataId).values,[w,v,C]=d,{batchSize:I,filterHeight:N,filterWidth:S,inChannels:E,inHeight:A,inWidth:_,outChannels:D,outHeight:O,outWidth:B,strideHeight:W,strideWidth:M}=m;f=m.dataFormat;const j=N-1-m.padInfo.top,U=S-1-m.padInfo.left,K=f==="channelsLast",Z=g.strides[0],J=K?g.strides[1]:g.strides[2],Q=K?g.strides[2]:1,te=K?1:g.strides[1],oe=p[0],ae=K?p[1]:p[2],le=K?p[2]:1,he=K?1:p[1];for(let be=0;be<I;++be)for(let xe=0;xe<E;++xe)for(let ve=0;ve<A;++ve){const De=ve-j,Me=Math.max(0,Math.ceil(De/W)),it=Math.min(O,(N+De)/W);for(let Ze=0;Ze<_;++Ze){const je=Ze-U,qe=Math.max(0,Math.ceil(je/M)),Je=Math.min(B,(S+je)/M);let dt=0;for(let Pt=Me;Pt<it;++Pt){const ms=Pt*W-De;for(let Sn=qe;Sn<Je;++Sn){const Rr=Sn*M-je,Jn=oe*be+ae*Pt+le*Sn,Ds=w*(N-1-ms)+v*(S-1-Rr)+C*xe;for(let tr=0;tr<D;++tr){const nr=b[Jn+he*tr],sr=x[Ds+tr];dt+=nr*sr}}}const As=Z*be+J*ve+Q*Ze+te*xe;y[As]=dt}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const w4={kernelName:Mi,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r;de([o,a],"conv3d");const u=pr(o.shape,a.shape,i,c,l),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,x=y.left,w=y.top,v=new kt(u.outShape,o.dtype),C=n.data.get(o.dataId).values,I=n.data.get(a.dataId).values,N=v.values,S=ge(o.shape),E=ge(a.shape);for(let A=0;A<u.batchSize;++A){const _=A*S[0],D=A*v.strides[0];for(let O=0;O<u.outDepth;++O){const B=D+O*v.strides[1],W=O*u.strideDepth-b;for(let M=0;M<h;++M){const j=W+M*f;if(j<0||j>=u.inDepth)continue;const U=M*E[0],K=_+j*S[1];for(let Z=0;Z<u.outHeight;++Z){const J=B+Z*v.strides[2],Q=Z*u.strideHeight-w;for(let te=0;te<d;++te){const oe=Q+te*m;if(oe<0||oe>=u.inHeight)continue;const ae=U+te*E[1],le=K+oe*S[2];for(let he=0;he<u.outWidth;++he){const be=J+he*u.outChannels,xe=he*u.strideWidth-x;for(let ve=0;ve<p;++ve){const De=xe+ve*g;if(De<0||De>=u.inWidth)continue;const Me=ae+ve*E[2],it=le+De*u.inChannels;let Ze=Me;for(let je=0;je<u.inChannels;++je){const qe=C[it+je];for(let Je=0;Je<u.outChannels;++Je)N[be+Je]+=qe*I[Ze+Je];Ze+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const $4={kernelName:Bi,backendName:"cpu",kernelFunc:v4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,filterShape:c}=r;de([o,a],"conv3dBackpropFilterV2");const u=ge(o.shape),h=ge(a.shape),d=pr(o.shape,c,i,1,l),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,y=d.filterHeight,b=d.filterWidth,x=new kt(d.filterShape,"float32"),w=x.values,[v,C,I,N]=x.strides,S=n.data.get(a.dataId).values,[E,A,_,D]=h,O=n.data.get(o.dataId).values,[B,W,M,j]=u,U=d.padInfo.front,K=d.padInfo.left,Z=d.padInfo.top;for(let J=0;J<g;++J){const Q=Math.max(0,Math.ceil((U-J)/p)),te=Math.min(d.outDepth,(d.inDepth+U-J)/p),oe=J*v;for(let ae=0;ae<y;++ae){const le=Math.max(0,Math.ceil((Z-ae)/f)),he=Math.min(d.outHeight,(d.inHeight+Z-ae)/f),be=ae*C+oe;for(let xe=0;xe<b;++xe){const ve=Math.max(0,Math.ceil((K-xe)/m)),De=Math.min(d.outWidth,(d.inWidth+K-xe)/m),Me=xe*I+be;for(let it=0;it<d.inChannels;++it){const Ze=it*N+Me;for(let je=0;je<d.outChannels;++je){let qe=0;for(let Je=0;Je<d.batchSize;++Je){const dt=Je*B,As=Je*E;for(let Pt=Q;Pt<te;++Pt){const Sn=(J+Pt*p-U)*W+dt,Rr=Pt*A+As;for(let Jn=le;Jn<he;++Jn){const tr=(ae+Jn*f-Z)*M+Sn,nr=Jn*_+Rr;for(let sr=ve;sr<De;++sr){const yp=(xe+sr*m-K)*j+tr,bp=sr*D+nr;qe+=O[yp+it]*S[bp+je]}}}}w[Ze+je]=qe}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const N4={kernelName:tu,backendName:"cpu",kernelFunc:C4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{pad:i,strides:l,inputShape:c}=r;de([o],"conv3dBackpropInputV2");const u=ge(o.shape),h=ge(a.shape),d=pr(c,a.shape,l,1,i),p=new kt(d.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,x=n.data.get(o.dataId).values,[w,v,C,I]=u,N=n.data.get(a.dataId).values,[S,E,A,_]=h,{batchSize:D,filterDepth:O,filterHeight:B,filterWidth:W,inChannels:M,inDepth:j,inHeight:U,inWidth:K,outChannels:Z,outDepth:J,outHeight:Q,outWidth:te,strideDepth:oe,strideHeight:ae,strideWidth:le}=d,he=O-1-d.padInfo.front,be=B-1-d.padInfo.top,xe=W-1-d.padInfo.left;for(let ve=0;ve<D;++ve)for(let De=0;De<M;++De)for(let Me=0;Me<j;++Me){const it=Me-he,Ze=Math.max(0,Math.ceil(it/oe)),je=Math.min(J,(O+it)/oe);for(let qe=0;qe<U;++qe){const Je=qe-be,dt=Math.max(0,Math.ceil(Je/ae)),As=Math.min(Q,(B+Je)/ae);for(let Pt=0;Pt<K;++Pt){const ms=Pt-xe,Sn=Math.max(0,Math.ceil(ms/le)),Rr=Math.min(te,(W+ms)/le);let Jn=0;for(let Ds=Ze;Ds<je;++Ds){const tr=Ds*oe-it;for(let nr=dt;nr<As;++nr){const sr=nr*ae-Je;for(let Ni=Sn;Ni<Rr;++Ni){const yp=Ni*le-ms,bp=w*ve+v*Ds+C*nr+I*Ni,zN=S*(O-1-tr)+E*(B-1-sr)+A*(W-1-yp)+_*De;for(let Bc=0;Bc<Z;++Bc){const MN=x[bp+Bc],BN=N[zN+Bc];Jn+=MN*BN}}}}f[m*ve+g*Me+y*qe+b*Pt+De]=Jn}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const I4={kernelName:nu,backendName:"cpu",kernelFunc:k4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4=Ve(Bo,s=>Math.cos(s)),T4={kernelName:Bo,backendName:"cpu",kernelFunc:S4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=Ve(Vo,s=>Math.cosh(s)),A4={kernelName:Vo,backendName:"cpu",kernelFunc:E4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(s){const{inputs:t,backend:n,attrs:r}=s,{image:o,boxes:a,boxInd:i}=t,{cropSize:l,method:c,extrapolationValue:u}=r,[h,d,p,f]=o.shape,m=a.shape[0],[g,y]=l,b=Se([m,g,y,f],"float32"),x=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,C=ge(o.shape),I=ge(b.shape);for(let N=0;N<m;N++){const S=N*4,E=x[S],A=x[S+1],_=x[S+2],D=x[S+3],O=w[N];if(O>=h)continue;const B=g>1?(_-E)*(d-1)/(g-1):0,W=y>1?(D-A)*(p-1)/(y-1):0;for(let M=0;M<g;M++){const j=g>1?E*(d-1)+M*B:.5*(E+_)*(d-1);if(j<0||j>d-1){for(let U=0;U<y;U++)for(let K=0;K<f;K++){const Z=K+U*I[2]+M*I[1]+N*I[0];b.values[Z]=u}continue}if(c==="bilinear"){const U=Math.floor(j),K=Math.ceil(j),Z=j-U;for(let J=0;J<y;J++){const Q=y>1?A*(p-1)+J*W:.5*(A+D)*(p-1);if(Q<0||Q>p-1){for(let le=0;le<f;le++){const he=le+J*I[2]+M*I[1]+N*I[0];b.values[he]=u}continue}const te=Math.floor(Q),oe=Math.ceil(Q),ae=Q-te;for(let le=0;le<f;le++){let he=le+te*C[2]+U*C[1]+O*C[0];const be=v[he];he=le+oe*C[2]+U*C[1]+O*C[0];const xe=v[he];he=le+te*C[2]+K*C[1]+O*C[0];const ve=v[he];he=le+oe*C[2]+K*C[1]+O*C[0];const De=v[he],Me=be+(xe-be)*ae,it=ve+(De-ve)*ae;he=le+J*I[2]+M*I[1]+N*I[0],b.values[he]=Me+(it-Me)*Z}}}else for(let U=0;U<y;++U){const K=y>1?A*(p-1)+U*W:.5*(A+D)*(p-1);if(K<0||K>p-1){for(let Q=0;Q<f;Q++){const te=Q+U*I[2]+M*I[1]+N*I[0];b.values[te]=u}continue}const Z=Math.round(K),J=Math.round(j);for(let Q=0;Q<f;Q++){const te=Q+Z*C[2]+J*C[1]+O*C[0],oe=Q+U*I[2]+M*I[1]+N*I[0];b.values[oe]=v[te]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const R4={kernelName:su,backendName:"cpu",kernelFunc:D4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,exclusive:i,reverse:l}=r;de(o,"cumsum");const c=gt([a],o.shape.length);let u=o;c!=null&&(u=Fn({inputs:{x:o},backend:n,attrs:{perm:c}}));const h=xt(1,o.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const d=fn(u.dtype,"int32"),p=Bt(H(u.shape),d),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=l?(b,x)=>b+m-x-1:(b,x)=>b+x;for(let b=0;b<f.length;b+=m)for(let x=0;x<m;x++){const w=g(b,x);if(x===0)p[w]=i?0:f[w];else{const v=g(b,x-1);p[w]=i?f[v]+p[v]:f[w]+p[v]}}const y=n.makeTensorInfo(u.shape,d,p);if(c!=null){const b=Wa(c),x=Fn({inputs:{x:y},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),x}return y}const _4={kernelName:Vi,backendName:"cpu",kernelFunc:F4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i,binaryOutput:l}=r;if(o.shape.length===1){const c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=Jy(c,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,h)}else if(o.shape.length===2){const c=n.bufferSync(o),u=n.bufferSync(a),h=n$(c,u,i,l);return n.makeTensorInfo(h.shape,a.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const L4={kernelName:ru,backendName:"cpu",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockSize:a,dataFormat:i}=r;k(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),k(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`);const l=o.shape[0],c=o.shape[1],u=o.shape[2],h=o.shape[3],d=c*a,p=u*a,f=h/(a*a),m=n.data.get(o.dataId).values,g=new Float32Array(l*d*p*f);let y=0;for(let b=0;b<l;++b)for(let x=0;x<d;++x){const w=Math.floor(x/a),v=x%a;for(let C=0;C<p;++C){const I=Math.floor(C/a),N=C%a,S=(v*a+N)*f;for(let E=0;E<f;++E){const _=E+S+h*(I+u*(w+c*b));g[y++]=m[_]}}}return n.makeTensorInfo([l,d,p,f],o.dtype,g)}const z4={kernelName:ou,backendName:"cpu",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c,dimRoundingMode:u}=r;de([o,a],"depthwiseConv2DNative");const h=ge(o.shape),d=ge(a.shape);let p=c;p==null&&(p=[1,1]),k(Wt(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=Rt(o.shape,a.shape,i,p,l,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,w=x.left,v=x.top,C=f.outChannels/f.inChannels,I=new kt(f.outShape,o.dtype),N=n.data.get(o.dataId).values,S=n.data.get(a.dataId).values,E=I.values;for(let A=0;A<f.batchSize;++A){const _=A*h[0],D=A*I.strides[0];for(let O=0;O<f.outHeight;++O){const B=D+O*I.strides[1],W=O*f.strideHeight-v;for(let M=0;M<m;++M){const j=W+M*y;if(j<0||j>=f.inHeight)continue;const U=M*d[0],K=_+j*h[1];for(let Z=0;Z<f.outWidth;++Z){const J=B+Z*I.strides[2],Q=Z*f.strideWidth-w;for(let te=0;te<g;++te){const oe=Q+te*b;if(oe<0||oe>=f.inWidth)continue;const ae=U+te*d[1],le=K+oe*f.inChannels;let he=J,be=ae;for(let xe=0;xe<f.inChannels;++xe){const ve=N[le+xe];for(let De=0;De<C;++De)E[he+De]+=ve*S[be+De];he+=C,be+=C}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const M4={kernelName:Wi,backendName:"cpu",kernelFunc:Y$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,filterShape:h}=r;de([o,a],"depthwiseConv2dNativeBackpropFilter");const d=Rt(o.shape,h,i,l,c,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=new kt(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,v=n.data.get(o.dataId).values,C=new kt(o.shape,o.dtype,v),I=n.data.get(a.dataId).values,N=new kt(a.shape,a.dtype,I);for(let S=0;S<m;++S){const E=Math.max(0,Math.ceil((x-S)/p)),A=Math.min(d.outHeight,(d.inHeight+x-S)/p);for(let _=0;_<g;++_){const D=Math.max(0,Math.ceil((b-_)/f)),O=Math.min(d.outWidth,(d.inWidth+b-_)/f);for(let B=0;B<d.outChannels;++B){const W=Math.trunc(B/w),M=B%w;let j=0;for(let U=0;U<d.batchSize;++U)for(let K=E;K<A;++K){const Z=S+K*p-x;for(let J=D;J<O;++J){const Q=_+J*f-b;j+=C.get(U,Z,Q,W)*N.get(U,K,J,B)}}y.set(j,S,_,W,M)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const V4={kernelName:au,backendName:"cpu",kernelFunc:B4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W4(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,inputShape:h}=r;de([o,a],"depthwiseConv2DNativeBackpropInput");const d=ge(o.shape),p=ge(a.shape),f=Rt(h,a.shape,i,l,c,u,!0),m=new kt(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,w=n.data.get(o.dataId).values,[v,C,I]=d,N=n.data.get(a.dataId).values,[S,E,A]=p,{batchSize:_,filterHeight:D,filterWidth:O,inChannels:B,inHeight:W,inWidth:M,outChannels:j,outHeight:U,outWidth:K,strideHeight:Z,strideWidth:J}=f,Q=D-1-f.padInfo.top,te=O-1-f.padInfo.left,oe=j/B;for(let ae=0;ae<_;++ae)for(let le=0;le<B;++le)for(let he=0;he<W;++he){const be=he-Q,xe=Math.max(0,Math.ceil(be/Z)),ve=Math.min(U,(D+be)/Z);for(let De=0;De<M;++De){const Me=De-te,it=Math.max(0,Math.ceil(Me/J)),Ze=Math.min(K,(O+Me)/J);let je=0;for(let qe=xe;qe<ve;++qe){const Je=qe*Z-be;for(let dt=it;dt<Ze;++dt){const As=dt*J-Me,Pt=v*ae+C*qe+I*dt,ms=S*(D-1-Je)+E*(O-1-As)+A*le;for(let Sn=0;Sn<oe;++Sn){const Rr=le*oe+Sn,Jn=w[Pt+Rr],Ds=N[ms+Sn];je+=Jn*Ds}}}g[y*ae+b*he+x*De+le]=je}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const U4={kernelName:iu,backendName:"cpu",kernelFunc:W4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(s){const{inputs:t,backend:n}=s,{x:r}=t,o=H(r.shape),a=n.data.get(r.dataId).values,i=Se([o,o],r.dtype),l=i.values;for(let u=0;u<a.length;u++)l[u*o+u]=a[u];const c=[...r.shape,...r.shape];return n.makeTensorInfo(c,i.dtype,i.values)}const H4={kernelName:lu,backendName:"cpu",kernelFunc:G4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4={kernelName:Ui,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o}=s,{strides:a,pad:i,dilations:l}=n,c=t,u=c.data.get(r.dataId).values,h=r.shape.length,d=c.data.get(o.dataId).values,p=o.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:C,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:E,outShape:A}=Vl(r.shape,o.shape,a,i,"NHWC",l),_=H(A),D=A.length,O=Yt(r.dtype,_);for(let W=0;W<f;++W)for(let M=0;M<b;++M){const j=M*v-w.top;for(let U=0;U<x;++U){const K=U*C-w.left;for(let Z=0;Z<y;++Z){let J=Number.MIN_SAFE_INTEGER;for(let te=0;te<I;++te){const oe=j+te*S;if(oe>=0&&oe<m)for(let ae=0;ae<N;++ae){const le=K+ae*E;if(le>=0&&le<g){const he=Qn([W,oe,le,Z],h,ge(r.shape)),be=Qn([te,ae,Z],p,ge(o.shape)),xe=u[he]+d[be];xe>J&&(J=xe)}}}const Q=Qn([W,M,U,Z],D,ge(A));O[Q]=J}}}return{dataId:c.write(lr(O,r.dtype),A,r.dtype),shape:A,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4={kernelName:uu,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o,dy:a}=s,{strides:i,pad:l,dilations:c}=n,u=t,h=Tn(r.shape,u.data.get(r.dataId).values),d=Tn(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:E}=Vl(r.shape,o.shape,i,l,"NHWC",c);k(a.rank===E.length,()=>`Error in ${uu}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);const A=Tn(E,u.data.get(a.dataId).values),_=jp(o.shape,o.dtype);for(let O=0;O<p;++O)for(let B=0;B<y;++B){const W=B*w-x.top;for(let M=0;M<b;++M){const j=M*v-x.left;for(let U=0;U<g;++U){let K=Number.MIN_SAFE_INTEGER,Z=0,J=0;for(let Q=0;Q<C;++Q){const te=W+Q*N;if(te>=0&&te<f)for(let oe=0;oe<I;++oe){const ae=j+oe*S;if(ae>=0&&ae<m){const le=h[O][te][ae][U]+d[Q][oe][U];le>K&&(K=le,Z=Q,J=oe)}}}_[Z][J][U]+=A[O][B][M][U]}}}return{dataId:u.write(lr(_,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:cu,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:n})=>{const{x:r,filter:o,dy:a}=s,{strides:i,pad:l,dilations:c}=n,u=t,h=Tn(r.shape,u.data.get(r.dataId).values),d=Tn(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:C,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:E}=Vl(r.shape,o.shape,i,l,"NHWC",c);k(a.rank===E.length,()=>`Error in ${cu}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);const A=Tn(E,u.data.get(a.dataId).values),_=jp(r.shape,r.dtype);for(let O=0;O<p;++O)for(let B=0;B<y;++B){const W=B*w-x.top;for(let M=0;M<b;++M){const j=M*v-x.left;for(let U=0;U<g;++U){let K=Number.MIN_SAFE_INTEGER,Z=W<0?0:W,J=j<0?0:j;for(let Q=0;Q<C;++Q){const te=W+Q*N;if(te>=0&&te<f)for(let oe=0;oe<I;++oe){const ae=j+oe*S;if(ae>=0&&ae<m){const le=h[O][te][ae][U]+d[Q][oe][U];le>K&&(K=le,Z=te,J=ae)}}}_[O][Z][J][U]+=A[O][B][M][U]}}}return{dataId:u.write(lr(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tc(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;de(o,"sum");let l;o.dtype==="bool"?l=Ir({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):l=Ts({inputs:{x:o},backend:n});const c=l.shape.length,u=ke(a,l.shape),h=gt(u,c);let d=u,p=l;h!=null&&(p=Fn({inputs:{x:l},backend:n,attrs:{perm:h}}),d=xt(d.length,c)),Ut("sum",d,p.shape.length);const[f,m]=Ft(p.shape,d),g=fn(p.dtype,"int32");let y=jd(n,f,g);const b=H(m),x=n.data.get(y.dataId).values,w=n.data.get(p.dataId).values;for(let v=0;v<x.length;++v){const C=v*b;let I=0;for(let N=0;N<b;++N)I+=w[C+N];x[v]=I}if(i){const v=mt(y.shape,u),C=y;y=nt({inputs:{x:y},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(C)}return n.disposeIntermediateTensorInfo(l),h!=null&&n.disposeIntermediateTensorInfo(p),y}const X4={kernelName:vl,backendName:"cpu",kernelFunc:Tc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(s){const{inputs:t,backend:n,attrs:r}=s,{equation:o}=r,a=t,{allDims:i,summedDims:l,idDims:c}=Bm(o,a.length);Wm(i.length,c,a);const{path:u,steps:h}=Um(l,c),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const y of h[g]){const{permutationIndices:b,expandDims:x}=Vm(f,c[y]);let w;Gm(b)?w=a[y]:(w=Fn({inputs:{x:a[y]},backend:n,attrs:{perm:b}}),m.push(w));const v=w.shape.slice();for(let C=0;C<x.length;++C)v.splice(x[C],0,1);Ae(w.shape,v)||(w=nt({inputs:{x:w},backend:n,attrs:{shape:v}}),m.push(w)),p===null?p=w:(p=qd({inputs:{a:w,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=Tc({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&n.disposeIntermediateTensorInfo(g);return p}const Z4={kernelName:hu,backendName:"cpu",kernelFunc:Y4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(s){const{inputs:t,backend:n}=s,{dy:r,y:o}=t;de([r,o],"eluGrad");const a=new Float32Array(H(o.shape)),i=n.data.get(o.dataId).values,l=n.data.get(r.dataId).values;for(let c=0;c<i.length;++c){const u=i[c];u>=1?a[c]=l[c]:a[c]=l[c]*(u+1)}return n.makeTensorInfo(o.shape,"float32",a)}const Q4={kernelName:du,backendName:"cpu",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW=Rm,tW=Fm,nW=_m,sW=Om,rW=Lm,oW=Pm,aW=Ve(Go,s=>{const t=Math.sign(s),n=Math.abs(s),r=1/(1+eW*n);return t*(1-((((oW*r+rW)*r+sW)*r+nW)*r+tW)*r*Math.exp(-n*n))}),iW={kernelName:Go,backendName:"cpu",kernelFunc:aW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(s){const{inputs:t,backend:n,attrs:r}=s,{input:o}=t,{dim:a}=r,i=o.shape.length,l=o.shape.slice();let c=a;return a<0&&(k(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+a+1),l.splice(c,0,1),nt({inputs:{x:o},backend:n,attrs:{shape:l}})}const lW={kernelName:Hi,backendName:"cpu",kernelFunc:Kd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW=$t((s,t)=>s/t),ob=Lt(Wo,cW),ab={kernelName:Wo,backendName:"cpu",kernelFunc:ob};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(s,t,n){const r=s.shape,o=r[0],a=r[1],i=n.data.get(s.dataId),l=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,u=[o,a],h=H(u),d=Nt("float32",h),p=Nt("float32",h);for(let y=0;y<o;y++){const b=go({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,a]}}),x=go({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,a]}}),w=kn({inputs:{real:b,imag:x},backend:n}),{real:v,imag:C}=uW(w,t,n),I=qs(v,C);for(let N=0;N<a;N++){const S=zm(I,N);d[y*a+N]=S.real,p[y*a+N]=S.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w)}const f=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",p),g=kn({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function uW(s,t,n){const r=H(s.shape),o=n.data.get(s.dataId),a=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(hW(r)){const l=ib(a,i,r,t,n),c=[s.shape[0],s.shape[1]];if(t){const u=n.makeTensorInfo(c,"float32",l.real),h=n.makeTensorInfo(c,"float32",l.imag),d=n.makeTensorInfo([],"float32",Ls(r,"float32")),p=Ts({inputs:{x:d},backend:n}),f=ab.kernelFunc({inputs:{a:u,b:d},backend:n}),m=ab.kernelFunc({inputs:{a:h,b:p},backend:n}),g=n.data.get(f.dataId).values,y=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),{real:g,imag:y}}return l}else{const l=qs(a,i),c=dW(l,r,t);return kw(c)}}function hW(s){return(s&s-1)==0}function ib(s,t,n,r,o){if(n===1)return{real:s,imag:t};const a=qs(s,t),i=n/2,l=Iw(a),c=l.real,u=l.imag,h=[c.length],d=o.makeTensorInfo(h,"float32",c),p=o.makeTensorInfo(h,"float32",u),f=kn({inputs:{real:d,imag:p},backend:o}),m=Sw(a),g=m.real,y=m.imag,b=[g.length],x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=kn({inputs:{real:x,imag:w},backend:o}),C=ib(c,u,i,r,o),I=C.real,N=C.imag,S=[I.length],E=o.makeTensorInfo(S,"float32",I),A=o.makeTensorInfo(S,"float32",N),_=kn({inputs:{real:E,imag:A},backend:o}),D=ib(g,y,i,r,o),O=D.real,B=D.imag,W=[O.length],M=o.makeTensorInfo(W,"float32",O),j=o.makeTensorInfo(W,"float32",B),U=kn({inputs:{real:M,imag:j},backend:o}),K=Ew(n,r),Z=[K.real.length],J=o.makeTensorInfo(Z,"float32",K.real),Q=o.makeTensorInfo(Z,"float32",K.imag),te=kn({inputs:{real:J,imag:Q},backend:o}),oe=qd({inputs:{a:te,b:U},backend:o}),ae=Ic({inputs:{a:_,b:oe},backend:o}),le=nb({inputs:{a:_,b:oe},backend:o}),he=mo({inputs:{input:ae},backend:o}),be=mo({inputs:{input:le},backend:o}),xe=ci({inputs:{input:ae},backend:o}),ve=ci({inputs:{input:le},backend:o}),De=ui({inputs:[he,be],backend:o,attrs:{axis:0}}),Me=ui({inputs:[xe,ve],backend:o,attrs:{axis:0}}),it=o.data.get(De.dataId).values,Ze=o.data.get(Me.dataId).values;return o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(A),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(U),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(te),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo(De),o.disposeIntermediateTensorInfo(Me),{real:it,imag:Ze}}function dW(s,t,n){const r=new Float32Array(t*2);for(let o=0;o<t;o++){let a=0,i=0;for(let l=0;l<t;l++){const c=Aw(o*l,t,n),u=zm(s,l);a+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(a/=t,i/=t),Tw(r,a,i,o)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pW(s){const{inputs:t,backend:n}=s,{input:r}=t,o=H(r.shape),a=r.shape[r.shape.length-1],i=o/a,l=nt({inputs:{x:r},backend:n,attrs:{shape:[i,a]}}),c=Z$(l,!1,n),u=nt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),u}const fW={kernelName:pu,backendName:"cpu",kernelFunc:pW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(s){const{backend:t,attrs:n}=s,{shape:r,value:o,dtype:a}=n,i=a||To(o),l=Yt(i,H(r));return gW(l,o,i),t.makeTensorInfo(r,i,l)}const mW={kernelName:fu,backendName:"cpu",kernelFunc:lb};function gW(s,t,n){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:mu,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,o=n,a=Nt(r.dtype,H(r.shape)),[i,l,c,u]=r.shape,h=o.data.get(r.dataId).values;for(let p=0;p<i;p++){const f=p*c*l*u;for(let m=0;m<l;m++){const g=m*(c*u);for(let y=0;y<c;y++){const b=y*u;for(let x=0;x<u;x++){const w=Math.round(c-y-1),v=f+g+b+x;let C=h[v];if(w>=0&&w<c){const I=w*u,N=f+g+I+x;C=h[N]}a[v]=C}}}}return{dataId:o.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=$t((s,t)=>Math.floor(s/t)),xW=Lt(Ko,bW,null,"int32"),wW={kernelName:Ko,backendName:"cpu",kernelFunc:xW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let g=X$({inputs:{x:o,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(i){const y=g;g=Ic({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(f){const y=g;g=sb(n,g,f,l,m),n.disposeIntermediateTensorInfo(y)}return g}const $W={kernelName:Al,backendName:"cpu",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let g=Y$({inputs:{x:o,filter:a},backend:n,attrs:{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p}});if(i){const y=g;g=Ic({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(y)}if(f){const y=g;g=sb(n,g,f,l,m),n.disposeIntermediateTensorInfo(y)}return g}const NW={kernelName:Dl,backendName:"cpu",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(s){const{inputs:t,backend:n}=s,{params:r,indices:o}=t,a=H(r.shape),i=o.shape,l=i[i.length-1],[c,u,h,d]=lh(r,o);if(u===0)return n.makeTensorInfo(c,r.dtype,[]);const p=n.data.get(o.dataId).values,f=n.bufferSync(r),m=h$(p,f,r.dtype,u,l,h,d,r.shape,a);return n.makeTensorInfo(c,r.dtype,m.values)}const IW={kernelName:gu,backendName:"cpu",kernelFunc:kW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,indices:a}=t,{axis:i,batchDims:l}=r;de([o,a],"gatherV2");let c=l;l==null&&(c=0);const u=H(a.shape),h=ke(i,o.shape)[0],d=jm(o,a,h,c),p=nt({inputs:{x:o},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),f=nt({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,u/d.batchSize]}}),m=[d.batchSize,d.outerSize,u/d.batchSize,d.sliceSize],g=n.bufferSync(f),y=n.bufferSync(p),b=d$(y,g,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}const TW={kernelName:qi,backendName:"cpu",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(s){const{inputs:t,backend:n}=s,{input:r}=t,o=H(r.shape),a=r.shape[r.shape.length-1],i=o/a,l=nt({inputs:{x:r},backend:n,attrs:{shape:[i,a]}}),c=Z$(l,!0,n),u=nt({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),u}const AW={kernelName:yu,backendName:"cpu",kernelFunc:EW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW=Ve(Zo,s=>Number.isFinite(s)?1:0,"bool"),RW={kernelName:Zo,backendName:"cpu",kernelFunc:DW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW=Ve(Jo,s=>Math.abs(s)===1/0?1:0,"bool"),_W={kernelName:Jo,backendName:"cpu",kernelFunc:FW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=Ve(Qo,s=>Number.isNaN(s)?1:0,"bool"),LW={kernelName:Qo,backendName:"cpu",kernelFunc:OW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){const{backend:t,attrs:n}=s,{start:r,stop:o,num:a}=n,i=y$(r,o,a);return t.makeTensorInfo([i.length],"float32",i)}const zW={kernelName:xu,backendName:"cpu",kernelFunc:PW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW=Ve(ta,s=>Math.log1p(s)),BW={kernelName:ta,backendName:"cpu",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=$t((s,t)=>s&&t),WW=Lt(Ji,VW,null,"bool"),UW={kernelName:Ji,backendName:"cpu",kernelFunc:WW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW=Ve(Qi,s=>s?0:1,"bool"),HW={kernelName:Qi,backendName:"cpu",kernelFunc:GW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW=$t((s,t)=>s||t),qW=Lt(el,jW,null,"bool"),KW={kernelName:el,backendName:"cpu",kernelFunc:qW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{depthRadius:a,bias:i,alpha:l,beta:c}=r;de(o,"LRN");const u=o.shape[3],h=u-1,d=n.data.get(o.dataId).values,p=H(o.shape),f=new Float32Array(p);function m(g){const y=g%u;let b=g-y+Math.max(0,y-a);const x=g-y+Math.min(y+a,h);let w=0;for(;b<=x;b++){const v=d[b];w+=v*v}return w}for(let g=0;g<p;g++){const y=m(g),b=d[g]*Math.pow(i+l*y,-c);f[g]=b}return n.makeTensorInfo(o.shape,o.dtype,f)}const YW={kernelName:tl,backendName:"cpu",kernelFunc:XW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,y:a,dy:i}=t,{depthRadius:l,bias:c,alpha:u,beta:h}=r;de(i,"LRNGrad");const d=H(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(o.dataId).values,g=n.data.get(a.dataId).values,y=new Float32Array(d),b=d;for(let x=0;x<b;x++){const w=x%p,v=x-w+Math.max(0,w-l),C=x-w+Math.min(p,w+l+1);let I=0;for(let N=v;N<C;N++)I+=Math.pow(m[N],2);I=u*I+c;for(let N=v;N<C;N++){let S=-2*u*h*m[N]*g[x]/I;x===N&&(S+=Math.pow(I,-h)),S*=f[x],y[N]+=S}}return n.makeTensorInfo(i.shape,o.dtype,y)}const JW={kernelName:wu,backendName:"cpu",kernelFunc:ZW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reductionIndices:a,keepDims:i}=r,l=n;let c=o.shape;const u=c.length,h=ke(a,c);let d=h;const p=gt(d,u);let f=l.data.get(o.dataId).values;if(p!=null){const v=new Array(u);for(let C=0;C<v.length;C++)v[C]=c[p[C]];f=eb(f,c,o.dtype,p,v),d=xt(d.length,u),c=v}de(o,"max"),Ut("max",d,u);const[m,g]=Ft(c,d),y=H(g),b=x$(f,y,m,o.dtype),x=l.write(b,m,o.dtype);let w=m;return i&&(w=mt(m,h)),{dataId:x,shape:w,dtype:o.dtype}}const QW={kernelName:nl,backendName:"cpu",kernelFunc:J$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;de(o,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;k(Wt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Wn(o.shape,a,i,u,l,c);let d;if(h.filterWidth===1&&h.filterHeight===1&&Ae(h.inShape,h.outShape))d=Ts({inputs:{x:o},backend:n});else{const p=n.data.get(o.dataId).values,f=ge(o.shape),m=rb(p,o.shape,o.dtype,f,h,"max");d=n.makeTensorInfo(h.outShape,o.dtype,m.values)}return d}const tU={kernelName:sl,backendName:"cpu",kernelFunc:eU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r;de(o,"maxPool3d");const h=Bs(o.shape,a,i,1,l,c,u),d=n.data.get(o.dataId).values,p=K$(d,o.shape,o.dtype,ge(o.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}const sU={kernelName:rl,backendName:"cpu",kernelFunc:nU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=r;de([o,a],"maxPool3DGrad");const h=Bs(a.shape,i,l,1,c,u),d=n.bufferSync(a),p=qV(d,h),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,C=h.effectiveFilterWidth,I=w-1-h.padInfo.front,N=C-1-h.padInfo.left,S=v-1-h.padInfo.top,E=Se(a.shape,"float32"),A=n.bufferSync(o);for(let _=0;_<h.batchSize;++_)for(let D=0;D<h.inChannels;++D)for(let O=0;O<h.inDepth;++O)for(let B=0;B<h.inHeight;++B)for(let W=0;W<h.inWidth;++W){const M=O-I,j=B-S,U=W-N;let K=0;for(let Z=0;Z<w;Z+=y){const J=(M+Z)/f;if(!(J<0||J>=h.outDepth||Math.floor(J)!==J))for(let Q=0;Q<v;Q+=b){const te=(j+Q)/m;if(!(te<0||te>=h.outHeight||Math.floor(te)!==te))for(let oe=0;oe<C;oe+=x){const ae=(U+oe)/g;if(ae<0||ae>=h.outWidth||Math.floor(ae)!==ae)continue;const le=w*v*C-1-p.get(_,J,te,ae,D),he=Z*v*C+Q*C+oe,be=le===he?1:0;if(be===0)continue;K+=A.get(_,J,te,ae,D)*be}}}E.set(K,_,O,B,W,D)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const oU={kernelName:$u,backendName:"cpu",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a,output:i}=t,l=a;de([a,i],"maxPoolGrad");const{filterSize:c,strides:u,pad:h,dimRoundingMode:d}=r,p=Wn(l.shape,c,u,1,h,d),f=n.data.get(l.dataId).values,m=Se(p.outShape,l.dtype,q$(f,l.shape,l.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterHeight,v=p.effectiveFilterWidth,C=v-1-p.padInfo.left,I=w-1-p.padInfo.top,N=Se(l.shape,"float32"),S=n.data.get(o.dataId).values,E=Se(o.shape,"float32",S);for(let A=0;A<p.batchSize;++A)for(let _=0;_<p.inChannels;++_)for(let D=0;D<p.inHeight;++D)for(let O=0;O<p.inWidth;++O){const B=D-I,W=O-C;let M=0;for(let j=0;j<w;j+=b){const U=(B+j)/g;if(!(U<0||U>=p.outHeight||Math.floor(U)!==U))for(let K=0;K<v;K+=x){const Z=(W+K)/y;if(Z<0||Z>=p.outWidth||Math.floor(Z)!==Z)continue;const J=w*v-1-m.get(A,U,Z,_),Q=j*v+K,te=J===Q?1:0;if(te===0)continue;M+=E.get(A,U,Z,_)*te}}N.set(M,A,D,O,_)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const iU={kernelName:vu,backendName:"cpu",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(s,t,n,r,o){const a=ge(t),i=rb(s,t,n,a,o,"max"),l=q$(s,t,n,o,!0,r);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU={kernelName:Cu,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{filterSize:o,strides:a,pad:i,includeBatchInIndex:l}=t,c=n;de(r,"MaxPoolWithArgmax");const u=c.data.get(r.dataId).values,h=Wn(r.shape,o,a,[1,1],i),[d,p]=lU(u,r.shape,r.dtype,l,h),f=c.write(d,h.outShape,r.dtype),m=c.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=ke(a,o.shape),u=Ft(o.shape,l)[1],h=H(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([h]));d.push(p);const f=Ir({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});d.push(f);const m=ob({inputs:{a:f,b:p},backend:n});d.push(m);const g=Tc({inputs:{x:m},backend:n,attrs:{axis:a,keepDims:i}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),g}const hU={kernelName:ol,backendName:"cpu",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;de(o,"min");const l=ke(a,o.shape);let c=l;const u=gt(c,o.shape.length);let h=o;u!=null&&(h=Fn({inputs:{x:o},backend:n,attrs:{perm:u}}),c=xt(c.length,o.shape.length)),Ut("min",c,h.shape.length);const[d,p]=Ft(h.shape,c),f=H(p),m=Bt(H(d),h.dtype),g=n.data.get(h.dataId).values;for(let b=0;b<m.length;++b){const x=b*f;let w=g[x];for(let v=0;v<f;++v){const C=g[x+v];(Number.isNaN(C)||C<w)&&(w=C)}m[b]=w}u!=null&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(d,h.dtype,m);if(i){const b=mt(d,l),x=nt({inputs:{x:y},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(y),x}return y}const pU={kernelName:al,backendName:"cpu",kernelFunc:dU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,mode:i}=r;de(o,"mirrorPad");const l=a.map((w,v)=>w[0]+o.shape[v]+w[1]),c=a.map(w=>w[0]),u=a.map((w,v)=>w[0]+o.shape[v]),h=i==="reflect"?0:1,d=n.data.get(o.dataId).values,p=o.shape.length,f=ge(o.shape),m=H(l),g=l.length,y=ge(l),b=Nt(o.dtype,m);for(let w=0;w<m;w++){let v=Eo(w,g,y);for(let I=0;I<g;I++)v[I]<c[I]?v[I]=c[I]*2-v[I]-h:v[I]>=u[I]&&(v[I]=(u[I]-1)*2-v[I]+h);v=v.map((I,N)=>I-c[N]);const C=Qn(v,p,f);b[w]=d[C]}return{dataId:n.write(b,l,o.dtype),shape:l,dtype:o.dtype}}const mU={kernelName:il,backendName:"cpu",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=$t((s,t)=>{const n=s%t;return s<0&&t<0||s>=0&&t>=0?n:(n+t)%t}),yU=Lt(ra,gU),bU={kernelName:ra,backendName:"cpu",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{dim:a}=r,i=o.shape.length;let l=a;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const c=ke([l],o.shape),u=J$({inputs:{x:o},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),h=mt(u.shape,c),d=nt({inputs:{x:u},backend:n,attrs:{shape:h}}),p=nb({inputs:{a:o,b:d},backend:n}),f=l$({inputs:{x:p},backend:n}),m=Tc({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),g=nt({inputs:{x:m},backend:n,attrs:{shape:h}}),y=ob({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const xU={kernelName:Nl,backendName:"cpu",kernelFunc:Q$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{numSamples:a,seed:i,normalized:l}=r;de(o,"multinomial");const c=l?o:Q$({inputs:{logits:o},backend:n,attrs:{dim:-1}}),u=c.shape[0],h=c.shape[1],d=n.data.get(c.dataId).values,p=[u,a],f=Bt(H(p),"int32");for(let m=0;m<u;++m){const g=m*h,y=new Float32Array(h-1);y[0]=d[g];for(let w=1;w<y.length;++w)y[w]=y[w-1]+d[g+w];const b=Ga.alea(i.toString()),x=m*a;for(let w=0;w<a;++w){const v=b();f[x+w]=y.length;for(let C=0;C<y.length;C++)if(v<y[C]){f[x+w]=C;break}}}return l||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",f)}const vU={kernelName:Nu,backendName:"cpu",kernelFunc:wU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U=Hh;function CU(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=r;de(o,"NonMaxSuppression");const u=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d}=$U(u,h,i,l,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const NU={kernelName:ku,backendName:"cpu",kernelFunc:CU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU=jh;function IU(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,padToMaxOutputSize:u}=r;de(o,"NonMaxSuppressionPadded");const h=n.data.get(o.dataId).values,d=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:f}=kU(h,d,i,l,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const SU={kernelName:Iu,backendName:"cpu",kernelFunc:IU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=qh;function EU(s){const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=r;de(o,"NonMaxSuppressionWithScore");const h=n.data.get(o.dataId).values,d=n.data.get(a.dataId).values,p=i,f=l,m=c,g=u,{selectedIndices:y,selectedScores:b}=TU(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const AU={kernelName:Su,backendName:"cpu",kernelFunc:EU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o}=t,{depth:a,onValue:i,offValue:l}=r;de(o,"oneHot");const c=H(o.shape),u=new Float32Array(c*a);u.fill(l);const h=n.data.get(o.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<a&&(u[d*a+h[d]]=i);return n.makeTensorInfo([...o.shape,a],"int32",u)}const RU={kernelName:hl,backendName:"cpu",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const o=mo({inputs:{input:r},backend:n}),a=Xd({inputs:{x:o},backend:n}),i=ci({inputs:{input:r},backend:n}),l=Xd({inputs:{x:i},backend:n}),c=kn({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return lb({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const FU={kernelName:Tl,backendName:"cpu",kernelFunc:Xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const o=mo({inputs:{input:r},backend:n}),a=eC({inputs:{x:o},backend:n}),i=ci({inputs:{input:r},backend:n}),l=Xd({inputs:{x:i},backend:n}),c=kn({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return lb({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const _U={kernelName:ul,backendName:"cpu",kernelFunc:eC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r;if(t.length===1)return Kd({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const a=t[0].shape,i=t[0].dtype;t.forEach(h=>{zt(a,h.shape,"All tensors passed to stack must have matching shapes"),k(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=t.map(h=>{const d=Kd({inputs:{input:h},backend:n,attrs:{dim:o}});return l.push(d),d}),u=ui({inputs:c,backend:n,attrs:{axis:o}});return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const OU={kernelName:dl,backendName:"cpu",kernelFunc:tC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,constantValue:i}=r;de(o,"pad");const l=a.map((x,w)=>x[0]+o.shape[w]+x[1]),c=a.map(x=>x[0]),u=n.data.get(o.dataId).values,h=H(o.shape),d=o.shape.length,p=ge(o.shape),f=H(l),m=l.length,g=ge(l),y=Nt(o.dtype,f);i!==0&&y.fill(i);for(let x=0;x<h;x++){const v=Eo(x,d,p).map((I,N)=>I+c[N]),C=Qn(v,m,g);y[C]=u[x]}return{dataId:n.write(y,l,o.dtype),shape:l,dtype:o.dtype}}const nC={kernelName:pl,backendName:"cpu",kernelFunc:LU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU=$t((s,t)=>Math.pow(s,t)),zU=Lt(aa,PU),MU={kernelName:aa,backendName:"cpu",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(s){const{backend:t,attrs:n}=s,{start:r,stop:o,dtype:a,step:i}=n,l=k$(r,o,i,a);return t.makeTensorInfo([l.length],a,l)}const VU={kernelName:Eu,backendName:"cpu",kernelFunc:BU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU=Ve(ia,s=>1/s),UU={kernelName:ia,backendName:"cpu",kernelFunc:WU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r;de(o,"resizeBilinear");const c=ge(o.shape),[u,h]=l,[d,p,f,m]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(H([d,u,h,m])),b=[a&&u>1?p-1:p,a&&h>1?f-1:f],x=[a&&u>1?u-1:u,a&&h>1?h-1:h];let w=0;const v=b[0]/x[0],C=b[1]/x[1];for(let I=0;I<d;I++)for(let N=0;N<u;N++){let S;i?S=v*(N+.5)-.5:S=v*N;const E=Math.max(0,Math.floor(S)),A=S-E,_=Math.min(p-1,Math.ceil(S)),D=I*c[0]+E*c[1],O=I*c[0]+_*c[1];for(let B=0;B<h;B++){let W;i?W=C*(B+.5)-.5:W=C*B;const M=Math.max(0,Math.floor(W)),j=W-M,U=Math.min(f-1,Math.ceil(W)),K=D+M*c[2],Z=O+M*c[2],J=D+U*c[2],Q=O+U*c[2];for(let te=0;te<m;te++){const oe=g[K+te],ae=g[Z+te],le=g[J+te],he=g[Q+te],be=oe+(le-oe)*j,xe=ae+(he-ae)*j,ve=be+(xe-be)*A;y[w++]=ve}}}return n.makeTensorInfo([d,u,h,m],"float32",y)}const HU={kernelName:yl,backendName:"cpu",kernelFunc:GU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jU(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r;de([a,o],"resizeBilinearGrad");const l=ge(o.shape),[c,u,h,d]=o.shape,[,p,f]=a.shape,m=new Float32Array(c*u*h*d),g=[i&&p>1?u-1:u,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],w=n.data.get(a.dataId).values;let v=0;for(let C=0;C<c;C++){const I=C*l[0];for(let N=0;N<p;N++){const S=N*b,E=Math.floor(S),A=Math.min(Math.ceil(S),u-1),_=I+E*l[1],D=I+A*l[1],O=S-E,B=1-O;for(let W=0;W<f;W++){const M=W*x,j=Math.floor(M),U=Math.min(Math.ceil(M),h-1),K=M-j,Z=1-K,J=_+j*l[2],Q=_+U*l[2],te=D+j*l[2],oe=D+U*l[2],ae=B*Z,le=B*K,he=O*Z,be=O*K;for(let xe=0;xe<d;xe++){const ve=w[v++];m[J+xe]+=ve*ae,m[Q+xe]+=ve*le,m[te+xe]+=ve*he,m[oe+xe]+=ve*be}}}}return n.makeTensorInfo([c,h,u,d],"float32",m)}const qU={kernelName:Ru,backendName:"cpu",kernelFunc:jU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r;de(o,"resizeNearestNeighbor");const c=ge(o.shape),[u,h]=l,[d,p,f,m]=o.shape,g=n.data.get(o.dataId).values,y=new Float32Array(d*u*h*m),b=[a&&u>1?p-1:p,a&&h>1?f-1:f],x=[a&&u>1?u-1:u,a&&h>1?h-1:h],w=b[0]/x[0],v=b[1]/x[1];let C=0;for(let I=0;I<d;I++){const N=I*c[0];for(let S=0;S<u;S++){const E=i?w*(S+.5):w*S;let A=Math.min(p-1,a?Math.round(E):Math.floor(E));i&&(A=Math.max(0,A));const _=N+A*c[1];for(let D=0;D<h;D++){const O=i?v*(D+.5):v*D;let B=Math.min(f-1,a?Math.round(O):Math.floor(O));i&&(B=Math.max(0,B));const W=_+B*c[2];for(let M=0;M<m;M++){const j=g[W+M];y[C++]=j}}}}return n.makeTensorInfo([d,u,h,m],o.dtype,y)}const XU={kernelName:gl,backendName:"cpu",kernelFunc:KU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r;de([a,o],"resizeNearestNeighborGrad");const l=ge(o.shape),c=ge(a.shape),[u,h,d,p]=o.shape,[,f,m]=a.shape,g=new Float32Array(u*h*d*p),y=n.data.get(a.dataId).values,b=[i&&f>1?h-1:h,i&&m>1?d-1:d],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],w=b[0]/x[0],v=b[1]/x[1],C=1/w,I=1/v,N=Math.ceil(C)*2+2,S=Math.ceil(I)*2+2;for(let E=0;E<u;E++){const A=E*l[0];for(let _=0;_<h;_++){const D=A+_*l[1],O=Math.floor(_*C),B=Math.floor(O-N/2);for(let W=0;W<d;W++){const M=D+W*l[2],j=Math.floor(W*I),U=Math.floor(j-S/2);for(let K=0;K<p;K++){let Z=0;for(let J=0;J<N;J++){const Q=J+B;if(Q<0||Q>=f)continue;const te=A+Q*c[1],oe=Q*w,ae=Math.min(h-1,i?Math.round(oe):Math.floor(oe));if(_===ae)for(let le=0;le<S;le++){const he=le+U;if(he<0||he>=m)continue;const be=te+he*c[2],xe=he*v,ve=Math.min(d-1,i?Math.round(xe):Math.floor(xe));W===ve&&(Z+=y[be+K])}}g[M+K]=Z}}}}return n.makeTensorInfo(o.shape,o.dtype,g)}const ZU={kernelName:Du,backendName:"cpu",kernelFunc:YU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dims:a}=r;de(o,"reverse");const i=o.shape.length,l=ke(a,o.shape);if(i===0)return Ts({inputs:{x:o},backend:n});const c=new kt(o.shape,o.dtype),u=n.bufferSync(o);for(let h=0;h<c.size;h++){const d=c.indexToLoc(h),p=d.slice();l.forEach(f=>p[f]=o.shape[f]-1-p[f]),c.set(u.get(...p),...d)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}const QU={kernelName:bl,backendName:"cpu",kernelFunc:JU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:Ku,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,{radians:o,fillValue:a,center:i}=t,l=n,c=Nt(r.dtype,H(r.shape)),[u,h,d,p]=r.shape,[f,m]=Em(i,h,d),g=255,y=Math.sin(o),b=Math.cos(o),x=l.data.get(r.dataId).values;for(let v=0;v<u;v++){const C=v*d*h*p;for(let I=0;I<h;I++){const N=I*(d*p);for(let S=0;S<d;S++){const E=S*p;for(let A=0;A<p;A++){const _=[u,I,S,A],D=_[2],O=_[1];let B=(D-f)*b-(O-m)*y,W=(D-f)*y+(O-m)*b;B=Math.round(B+f),W=Math.round(W+m);let M=a;if(typeof a!="number"&&(A===3?M=g:M=a[A]),B>=0&&B<d&&W>=0&&W<h){const U=W*(d*p),K=B*p,Z=C+U+K+A;M=x[Z]}const j=C+N+E+A;c[j]=M}}}}return{dataId:l.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tG=Ve(ua,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2==0?t:t+1}),nG={kernelName:ua,backendName:"cpu",kernelFunc:tG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(s,t,n,r,o,a,i,l,c,u){const h=[r/o,o],d=s.values,p=t.values;if(r===0)return Se(n,t.dtype);const f=Se(h,t.dtype);f.values.fill(c);for(let m=0;m<a;m++){const g=[];let y=0;for(let b=0;b<i;b++){const x=d[m*i+b];g.push(x),y+=x*l[b]}if(y<0||y>=r/o)throw new Error(`Invalid indices: ${g} does not index into ${n}`);for(let b=0;b<o;b++)u?f.values[y*o+b]+=p[m*o+b]:f.values[y*o+b]=t.rank===0?p[0]:p[m*o+b]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o,updates:a}=t,{shape:i}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_a(a,o,i),p=!0,f=n.bufferSync(o),m=n.bufferSync(a),g=sC(f,m,i,d,u,c,l,h,0,p);return n.makeTensorInfo(i,g.dtype,g.values)}const rG={kernelName:Fu,backendName:"cpu",kernelFunc:sG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(s){const{inputs:t,backend:n}=s,{condition:r,t:o,e:a}=t;de([r,o,a],"select");const i=r.shape.length,l=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=fn(o.dtype,a.dtype),d=Bt(H(o.shape),h);let p=0;const f=i===0||i>1||o.shape.length===1?1:H(o.shape.slice(1));for(let m=0;m<l.length;m++)for(let g=0;g<f;g++)l[m]===1?d[p++]=c[m]:d[p++]=u[m];return n.makeTensorInfo(o.shape,h,d)}const aG={kernelName:xl,backendName:"cpu",kernelFunc:oG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=sd,lG=rd,cG=Ve(da,s=>s>=0?lG*s:iG*(Math.exp(s)-1)),uG={kernelName:da,backendName:"cpu",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hG=Ve(ma,s=>s<0?-1:s>0?1:0),dG={kernelName:ma,backendName:"cpu",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG=Ve(pa,s=>Math.sin(s)),fG={kernelName:pa,backendName:"cpu",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG=Ve(fa,s=>Math.sinh(s)),gG={kernelName:fa,backendName:"cpu",kernelFunc:mG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG=11920928955078125e-23,rC=Math.log(yG)+2,bG=Ve(ya,s=>{const t=s>-rC,n=s<rC,r=Math.exp(s);let o;return n?o=r:t?o=s:o=Math.log(1+r),o}),xG={kernelName:ya,backendName:"cpu",kernelFunc:bG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,paddings:i}=r;de([o],"spaceToBatchND");const l=H(a),c=[[0,0]];c.push(...i);for(let I=1+a.length;I<o.shape.length;++I)c.push([0,0]);const u=nC.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),h=oc(u.shape,a,l,!1),d=ac(h.length,a.length,!1),p=ic(u.shape,a,l,!1),g=nt({inputs:{x:u},backend:n,attrs:{shape:h}}),x=Fn({inputs:{x:g},backend:n,attrs:{perm:d}}),C=nt({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),C}const vG={kernelName:$l,backendName:"cpu",kernelFunc:wG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(s){const{inputs:t,backend:n}=s,{indices:r,values:o,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values[0],[d,p,f,m,g]=E$(l,r.shape,r.dtype,c,o.dtype,u,h);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],o.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const CG={kernelName:_u,backendName:"cpu",kernelFunc:$G};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(s){const{inputs:t,backend:n}=s,{inputIndices:r,inputShape:o,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(o.dataId).values),l=n.data.get(r.dataId).values,c=Array.from(n.data.get(a.dataId).values),[u,h,d]=A$(l,r.shape,r.dtype,i,c);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const kG={kernelName:Ou,backendName:"cpu",kernelFunc:NG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[u,h]=tb(i,r.shape,r.dtype,l,c,!0);return n.makeTensorInfo(h,r.dtype,u)}const SG={kernelName:Lu,backendName:"cpu",kernelFunc:IG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[u,h]=tb(i,r.shape,r.dtype,l,c);return n.makeTensorInfo(h,r.dtype,u)}const EG={kernelName:Pu,backendName:"cpu",kernelFunc:TG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(s){const{inputs:t,backend:n,attrs:r}=s,{sparseIndices:o,sparseValues:a,defaultValue:i}=t,{outputShape:l}=r,{sliceRank:c,numUpdates:u,sliceSize:h,strides:d,outputSize:p}=_a(a,o,l),f=!1,m=n.bufferSync(o),g=n.bufferSync(a),y=n.data.get(i.dataId).values[0],b=sC(m,g,l,p,h,u,c,d,y,f);return n.makeTensorInfo(l,b.dtype,b.values)}const DG={kernelName:zu,backendName:"cpu",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{numOrSizeSplits:a,axis:i}=r,l=ke(i,o.shape)[0],c=Hm(o,a,l),u=new Array(o.shape.length).fill(0),h=o.shape.slice();return c.map(d=>{const p=[...h];p[l]=d;const f=go({inputs:{x:o},backend:n,attrs:{begin:u,size:p}});return u[l]+=d,f})}const FG={kernelName:Cl,backendName:"cpu",kernelFunc:RG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G={kernelName:Mu,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:n}=s,r=t;de(n,"square");const o=r.data.get(n.dataId).values,a=new Float32Array(o.length);for(let l=0;l<o.length;++l){const c=o[l];a[l]=c*c}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=Ve(Na,(s,t)=>{const n=t;return isNaN(s)?NaN:s>0?1:n.alpha}),LG={kernelName:Na,backendName:"cpu",kernelFunc:OG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,end:i,strides:l,beginMask:c,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r;de(o,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=Ff(o.shape,a,i,l,c,u,h,d,p),w=nt({inputs:{x:o},backend:n,attrs:{shape:b}});let v;if(f){const I=go({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=nt({inputs:{x:I},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(I)}else if(x.some(I=>I===0))v=n.makeTensorInfo(x,o.dtype,[]);else{const I=n.bufferSync(w),N=R$(x,I,g,m);v=n.makeTensorInfo(N.shape,N.dtype,N.values)}const C=nt({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),C}const zG={kernelName:Bu,backendName:"cpu",kernelFunc:PG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s){const{inputs:t,backend:n,attrs:r}=s,{separator:o,nGramWidths:a,leftPad:i,rightPad:l,padWidth:c,preserveShortSequences:u}=r,{data:h,dataSplits:d}=t,p=n.data.get(h.dataId).values,f=n.data.get(d.dataId).values,[m,g]=F$(p,f,o,a,i,l,c,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",g)]}const BG={kernelName:Vu,backendName:"cpu",kernelFunc:MG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(s){const{inputs:t,backend:n,attrs:r}=s,{skipEmpty:o}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[u,h,d]=_$(l,c,o),p=h.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const WG={kernelName:Wu,backendName:"cpu",kernelFunc:VG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(s){const{inputs:t,backend:n,attrs:r}=s,{numBuckets:o}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(a.dataId).values,l=O$(i,o);return n.makeTensorInfo(a.shape,"int32",l)}const GG={kernelName:Uu,backendName:"cpu",kernelFunc:UG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG=Ve(va,s=>Math.tan(s)),jG={kernelName:va,backendName:"cpu",kernelFunc:HG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG=Ve($a,s=>Math.tanh(s)),KG={kernelName:$a,backendName:"cpu",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reps:a}=r;de(o,"tile");const i=P$(n.bufferSync(o),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const YG={kernelName:Ca,backendName:"cpu",kernelFunc:XG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{k:a,sorted:i}=r;de(o,"topk");const l=n.data.get(o.dataId).values,[c,u]=M$(l,o.shape,o.dtype,a,i);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const JG={kernelName:Gu,backendName:"cpu",kernelFunc:ZG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(s){const{inputs:t,attrs:n,backend:r}=s,{image:o,transforms:a}=t,{interpolation:i,fillMode:l,fillValue:c,outputShape:u}=n,[h,d,p,f]=o.shape,[m,g]=u!=null?u:[d,p],y=[h,m,g,f],b=ge(o.shape),x=b[0],w=b[1],v=b[2],C=Nt(o.dtype,H(y));C.fill(c);const I=r.data.get(o.dataId).values,N=r.data.get(a.dataId).values;for(let E=0;E<h;++E){const A=a.shape[0]===1?N:N.subarray(E*8,E*8+8);for(let _=0;_<m;++_)for(let D=0;D<g;++D)for(let O=0;O<f;++O){let B;const W=A[6]*D+A[7]*_+1;if(W===0)continue;const M=(A[0]*D+A[1]*_+A[2])/W,j=(A[3]*D+A[4]*_+A[5])/W,U=oC(M,p,l),K=oC(j,d,l);switch(i){case"nearest":B=oH(I,d,p,x,w,v,E,K,U,O,c);break;case"bilinear":B=aH(I,d,p,x,w,v,E,K,U,O,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const Z=E*x+_*w+D*v+O;C[Z]=B}return r.makeTensorInfo(y,o.dtype,C)}return{dataId:r.write(C,y,o.dtype),shape:o.shape,dtype:o.dtype}}const eH={kernelName:Hu,backendName:"cpu",kernelFunc:QG};function oC(s,t,n){switch(n){case"reflect":return tH(s,t);case"wrap":return nH(s,t);case"nearest":return rH(s,t);case"constant":default:return sH(s)}}function tH(s,t){let n=s;if(n<0)if(t<=1)n=0;else{const r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{const r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return or(0,n,t-1)}function nH(s,t){let n=s;if(n<0)if(t<=1)n=0;else{const r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{const r=t-1;n-=t*Math.trunc(n/r)}return or(0,n,t-1)}function sH(s,t){return s}function rH(s,t){return or(0,s,t-1)}function Ec(s,t,n,r,o,a,i,l,c,u,h){const d=i*r+l*o+c*a+u;return 0<=l&&l<t&&0<=c&&c<n?s[d]:h}function oH(s,t,n,r,o,a,i,l,c,u,h){const d=Math.round(l),p=Math.round(c);return Ec(s,t,n,r,o,a,i,d,p,u,h)}function aH(s,t,n,r,o,a,i,l,c,u,h){const d=Math.floor(l),p=Math.floor(c),f=d+1,m=p+1,g=(m-c)*Ec(s,t,n,r,o,a,i,d,p,u,h)+(c-p)*Ec(s,t,n,r,o,a,i,d,m,u,h),y=(m-c)*Ec(s,t,n,r,o,a,i,f,p,u,h)+(c-p)*Ec(s,t,n,r,o,a,i,f,m,u,h);return(f-l)*g+(l-d)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(s){const{inputs:t,attrs:n,backend:r}=s,{axis:o}=n,{x:a}=t;de(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:l,outputShape:c,indices:u}=B$(i,o,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,l),r.makeTensorInfo([u.length],"int32",u)]}const lH={kernelName:ju,backendName:"cpu",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(s){const{inputs:t,backend:n,attrs:r}=s,{value:o}=t;let{axis:a}=r;a<0&&(a+=o.shape.length);const i=o.shape.length,l=o.shape[a],c=new Array(i-1);let u=0;for(let f=0;f<i;f++)f!==a&&(c[u++]=o.shape[f]);const h=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const p=new Array(l);for(let f=0;f<p.length;f++){h[a]=f;const m=go({inputs:{x:o},backend:n,attrs:{begin:h,size:d}});p[f]=nt({inputs:{x:m},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m)}return p}const uH={kernelName:Il,backendName:"cpu",kernelFunc:cH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,segmentIds:a}=t,{numSegments:i}=r;de(o,"unsortedSegmentSum");const l=o.shape.length,c=a.shape.length,u=[],h=[],d=l-c;let p=a;for(let m=0;m<d;++m){const g=Kd({inputs:{input:p},backend:n,attrs:{dim:m+1}});p=g,h.push(g)}for(let m=0;m<i;++m){const g=Ls(m,"int32"),y=n.makeTensorInfo([],"int32",g),b=a$({inputs:{a:y,b:p},backend:n}),x=Ir({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),w=qd({inputs:{a:x,b:o},backend:n}),v=Tc({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});u.push(v),h.push(y),h.push(b),h.push(x),h.push(w),h.push(v)}const f=tC({inputs:u,backend:n,attrs:{axis:0}});return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const dH={kernelName:Sl,backendName:"cpu",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=[vV,dB,CV,kV,bB,SV,EV,DV,FV,OV,PV,MV,VV,GV,jV,XV,ZV,QV,t4,xV,s4,o4,i4,c4,gB,wB,h4,pB,p4,m4,b4,w4,g4,N4,I4,$4,T4,A4,R4,_4,L4,z4,M4,V4,U4,H4,j4,K4,q4,ab,Z4,dV,Q4,vB,iW,$B,lW,NB,fW,mW,yW,IB,wW,$W,NW,IW,TW,TB,AB,fB,AW,f4,RW,_W,LW,pV,RB,_B,zW,LB,BW,UW,HW,KW,YW,JW,zB,tU,sU,oU,iU,cU,QW,hU,pU,BB,mU,bU,vU,WB,GB,NU,SU,AU,jB,RU,_U,OU,nC,MU,mV,XB,VU,mB,UU,gV,yV,bV,HU,qU,XU,ZU,QU,eG,nG,ZB,rG,aG,uG,QB,dG,fG,gG,eV,xU,xG,vG,CG,kG,SG,EG,DG,FG,sV,_G,oV,LG,zG,BG,WG,GG,cV,X4,jG,KG,YG,JG,qB,eH,lH,uH,dH,FU];for(const s of pH)Zu(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo={},cb={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function fH(s,t){yo[s]=t}function Es(s){if(!(s in yo)){const n=gH(s);if(n!==null)yo[s]=n;else return console.log("Could not get context for WebGL version",s),null}const t=yo[s];return t.isContextLost()?(delete yo[s],Es(s)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),yo[s])}function mH(s){if(typeof OffscreenCanvas!="undefined"&&s===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function gH(s){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=mH(s);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete yo[s]},!1),s===1?t.getContext("webgl",cb)||t.getContext("experimental-webgl",cb):t.getContext("webgl2",cb)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ac;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(Ac||(Ac={}));var _n;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(_n||(_n={}));var jt;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(jt||(jt={}));function Dc(s,t){return[t,s]}function yH(s,t){return s*t}function Yd(s){const t=H(s),n=Math.ceil(t/4);return Gc(n)}function hi(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function bH(s,t){const[n,r]=hi(s,t);return n*r*4}function ub(s,t){const n=s;let r,o,a,i,l,c,u,h,d,p;return q().getNumber("WEBGL_VERSION")===2?(r=n.R32F,o=n.R16F,a=n.RGBA16F,i=n.RGBA32F,l=n.RED,u=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=s.RGBA,o=s.RGBA,a=s.RGBA,i=n.RGBA,l=s.RGBA,u=4,h=4,d=t!=null?t.HALF_FLOAT_OES:null,p=s.FLOAT),c=s.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(s,t){const n=t();return q().getBool("DEBUG")&&xH(s),n}function xH(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+CH(s,t))}const wH=596e-10,vH=65504;function $H(s){return!!(q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||wH<Math.abs(s)&&Math.abs(s)<vH)}function CH(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Zd(s,t){return Js(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function NH(s,t){const n=Js(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(s,()=>s.shaderSource(n,t)),fe(s,()=>s.compileShader(n)),s.getShaderParameter(n,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function kH(s,t){const n=Js(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(s,()=>s.shaderSource(n,t)),fe(s,()=>s.compileShader(n)),s.getShaderParameter(n,s.COMPILE_STATUS)===!1)throw SH(t,s.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const IH=/ERROR: [0-9]+:([0-9]+):/g;function SH(s,t){const n=IH.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const r=+n[1],o=s.split(`
`),a=o.length.toString().length+2,i=o.map((d,p)=>_r((p+1).toString(),a)+d);let l=0;for(let d=0;d<i.length;d++)l=Math.max(i[d].length,l);const c=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(c.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${_r(u[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function TH(s){return Js(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function EH(s,t){if(fe(s,()=>s.linkProgram(t)),s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function hb(s,t){if(fe(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AH(s,t){const n=Js(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return fe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),fe(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),n}function DH(s,t){const n=Js(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return fe(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,n)),fe(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),n}function RH(s){return Js(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function FH(s,t){const n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const r=`[${s}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(s>n||t>n){const r=`[${s}x${t}]`,o=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+o+".")}}function _H(s){return Js(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function aC(s,t,n,r,o,a,i){const l=s.getAttribLocation(t,n);return l===-1?!1:(fe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,r)),fe(s,()=>s.vertexAttribPointer(l,o,s.FLOAT,!1,a,i)),fe(s,()=>s.enableVertexAttribArray(l)),!0)}function OH(s,t,n){BH(s,n),fe(s,()=>s.activeTexture(s.TEXTURE0+n)),fe(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function LH(s,t,n){return Js(s,()=>s.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function PH(s,t,n){return s.getUniformLocation(t,n)}function zH(s,t,n,r){fe(s,()=>OH(s,t,r)),fe(s,()=>s.uniform1i(n,r))}function db(s,t,n){fe(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,n)),fe(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function iC(s,t){fe(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),fe(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function Jd(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+MH(s,t))}function MH(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Js(s,t,n){const r=fe(s,()=>t());if(r==null)throw new Error(n);return r}function BH(s,t){const n=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+s.TEXTURE0;if(r<s.TEXTURE0||r>n){const o=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${o}.`)}}function di(s,t=2){return H(s.slice(0,s.length-t))}function pi(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function pb(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[di(s),...pi(s)]),t}function VH(s,t=!1){let n=q().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,s=s.map((o,a)=>a>=s.length-2?Vp(s[a]):s[a]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=Os(s).newShape);let r=H(s);if(s.length<=1&&r<=n)return[1,r];if(s.length===2&&s[0]<=n&&s[1]<=n)return s;if(s.length===3&&s[0]*s[1]<=n&&s[2]<=n)return[s[0]*s[1],s[2]];if(s.length===3&&s[0]<=n&&s[1]*s[2]<=n)return[s[0],s[1]*s[2]];if(s.length===4&&s[0]*s[1]*s[2]<=n&&s[3]<=n)return[s[0]*s[1]*s[2],s[3]];if(s.length===4&&s[0]<=n&&s[1]*s[2]*s[3]<=n)return[s[0],s[1]*s[2]*s[3]];if(t){const o=di(s);let a=2,i=2;return s.length&&([a,i]=pi(s)),r=o*(a/2)*(i/2),Gc(r).map(l=>l*2)}return Gc(r)}function Qd(s){return s%2==0}function ep(s,t){if(s=s.slice(-2),t=t.slice(-2),Ae(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const n=s.slice(-1)[0],r=t.slice(-1)[0];if(n===r||Qd(n)&&Qd(r)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&Qd(s[0])&&Qd(t[0])}let fb,mb;function WH(s){if(fb==null){const t=Es(s);fb=t.getParameter(t.MAX_TEXTURE_SIZE)}return fb}function UH(s){if(mb==null){const t=Es(s);mb=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mb)}function GH(s){if(s===0)return 0;let t;const n=Es(s);return Zn(n,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:Zn(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Zn(s,t){return s.getExtension(t)!=null}function lC(s){try{if(Es(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function HH(s){if(s===0)return!1;const t=Es(s);if(s===1){if(!Zn(t,"OES_texture_float"))return!1}else if(!Zn(t,"EXT_color_buffer_float"))return!1;return gb(t)}function jH(s){if(s===0)return!1;const t=Es(s);if(s===1){if(!Zn(t,"OES_texture_float")||!Zn(t,"WEBGL_color_buffer_float"))return!1}else{if(Zn(t,"EXT_color_buffer_float"))return gb(t);const r="EXT_color_buffer_half_float";if(Zn(t,r)){const o=t.getExtension(r);return qH(t,o)}return!1}return gb(t)}function gb(s){const t=ub(s),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const r=1,o=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,r,o,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,a),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const i=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(a),i}function qH(s,t){const n=ub(s,t),r=s.createTexture();s.bindTexture(s.TEXTURE_2D,r);const o=1,a=1;s.texImage2D(s.TEXTURE_2D,0,n.internalFormatHalfFloat,o,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,i),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,r,0);const l=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(r),s.deleteFramebuffer(i),l}function KH(s){return s!==2?!1:Es(s).fenceSync!=null}function Rc(s,t){Array.isArray(s)||(s=[s]),s.forEach(n=>{n!=null&&k(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=q();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>lC(2)?2:lC(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>WH(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>UH(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=ye.getNumber("WEBGL_VERSION");return s===0?0:GH(s)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!df());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>HH(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>jH(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>KH(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>df()&&ye.getBool("IS_CHROME")?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(){let s,t,n,r,o,a,i,l,c,u;return q().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",n="out",r="in",o="texture",a="outputColor",i="out vec4 outputColor;",l=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",n="varying",r="varying",o="texture2D",a="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:n,varyingFs:r,texture2D:o,output:a,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:c,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(s,t,n="index"){const r=ge(t);return r.map((o,a)=>{const i=`int ${s[a]} = ${n} / ${o}`,l=a===r.length-1?`int ${s[a+1]} = ${n} - ${s[a]} * ${o}`:`index -= ${s[a]} * ${o}`;return`${i}; ${l};`}).join("")}function tp(s,t,n="index"){const r=ge(t);return r.map((o,a)=>{const i=`int ${s[a]} = ${n} / outShapeStrides[${a}]`,l=a===r.length-1?`int ${s[a+1]} = ${n} - ${s[a]} * outShapeStrides[${a}]`:`index -= ${s[a]} * outShapeStrides[${a}]`;return`${i}; ${l};`}).join("")}function XH(s,t){const n=s.length,r=s.map(a=>`${t}[${a}]`),o=new Array(n-1);o[n-2]=r[n-1];for(let a=n-3;a>=0;--a)o[a]=`(${o[a+1]} * ${r[a+1]})`;return o}function YH(s,t,n="index"){const r=s.map((a,i)=>i),o=XH(r,t);return o.map((a,i)=>{const l=`int ${s[i]} = ${n} / ${o[i]}`,c=i===o.length-1?`int ${s[i+1]} = ${n} - ${s[i]} * ${o[i]}`:`index -= ${s[i]} * ${o[i]}`;return`${l}; ${c};`}).join("")}function yb(s){const t=ge(s).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function bb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const cC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:uC}=Lw;function ZH(s,t,n){const r=[];if(s.forEach(f=>{const m=H(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),n.enableShapeUniforms){const{uniformShape:g}=xb(n.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const o=r.join(`
`),a=s.map(f=>JH(f,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,l=en(),c=tj(l);let u,h,d=rj(l);return t.isPacked?(u=QH(t.logicalShape,i,n.enableShapeUniforms),h=sj(l)):(u=ej(t.logicalShape,i,n.enableShapeUniforms),h=nj(l)),n.packedInputs&&(d+=lj),[d,c,h,o,u,a,n.userCode].join(`
`)}function fi(s,t=!1){const n=s.shapeInfo.logicalShape;switch(n.length){case 0:return wj(s,t);case 1:return $j(s,t);case 2:return Nj(s,t);case 3:return Ij(s,t);case 4:return Tj(s,t);case 5:return Ej(s);case 6:return Aj(s);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function hC(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return xj(s);case 1:return vj(s,t);case 2:return Cj(s,t);case 3:return kj(s,t);default:return Sj(s,t)}}function JH(s,t,n=!1,r){let o="";n?o+=hC(s,r):o+=fi(s,r);const a=s.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?o+=Dj(s,t):o+=Rj(s,t)),o}function QH(s,t,n){switch(s.length){case 0:return dC();case 1:return cj(s,t,n);case 2:return yj(s,t,n);case 3:return hj(s,t,n);default:return pj(s,t,n)}}function ej(s,t,n){switch(s.length){case 0:return dC();case 1:return uj(s,t,n);case 2:return bj(s,t,n);case 3:return dj(s,t,n);case 4:return fj(s,t,n);case 5:return mj(s,t);case 6:return gj(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function tj(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function nj(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function sj(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function rj(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oj}
    ${aj}
    ${ij}
  `}const oj=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,aj=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ij=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,lj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function dC(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function cj(s,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function uj(s,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function hj(s,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(s[2]/2),a=o*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function dj(s,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${tp(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const r=bo(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function pj(s,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(s[s.length-1]/2),a=o*Math.ceil(s[s.length-2]/2);let i=a,l="",c="b, r, c";for(let u=2;u<s.length-1;u++)i*=s[s.length-u-1],l=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+l,c=`b${u}, `+c;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${l}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${s.length}(${c});
    }
  `}function fj(s,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${tp(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const r=bo(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function mj(s,t){const n=bo(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function gj(s,t){const n=bo(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function yj(s,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Ae(s,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const o=Math.ceil(s[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function bj(s,t,n){return Ae(s,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function xo(s){return`offset${s}`}function xj(s){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=en();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function wj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(s.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[o,a]=s.shapeInfo.texShape;if(o===1&&a===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=xo(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[l,c]=s.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${l}, ${c}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function vj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=s.shapeInfo.texShape,a=en();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function $j(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(s.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${mi(s)}
      }
    `;const o=s.shapeInfo.texShape,a=o[0],i=o[1];if(i===1&&a===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const l=xo(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${l});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${l});
      return sampleTexture(${n}, uv);
    }
  `}function Cj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape,i=a[0],l=a[1],c=en();if(a!=null&&Ae(n,a))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${c.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${c.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],h=Math.ceil(n[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${r}, uv);
    }
  `}function Nj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape;if(a!=null&&Ae(n,a)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const p=a[0],f=a[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:i,keptDims:l}=Os(n),c=i;if(c.length<n.length){const p=gi(s,c),f=["row","col"];return`
      ${fi(p,t)}
      float ${o}(int row, int col) {
        return ${o}(${yi(f,l)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${mi(s)}
      }
    `;const u=a[0],h=a[1],d=xo(r);return h===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${h}, index);
    return sampleTexture(${r}, uv);
  }
`}function kj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=s.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){const p=n.slice(1),f=[1,2],m=gi(s,p),g=["b","row","col"];return`
        ${hC(m,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${yi(g,f)});
        }
      `}const l=en();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;const c=i[0],u=i[1],h=Math.ceil(n[2]/2),d=h*Math.ceil(n[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${h}, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function Ij(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:l,keptDims:c}=Os(n),u=l;if(u.length<n.length){const g=gi(s,u),y=["row","col","depth"];return`
        ${fi(g,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${yi(y,c)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${mi(s)}
      }
    `;const h=s.shapeInfo.texShape,d=h[0],p=h[1],f=s.shapeInfo.flatOffset;if(p===a&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===i&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=xo(r);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function Sj(s,t){const n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=en();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${n}, uv);
    }
  `;const a=s.shapeInfo.logicalShape,i=a.length,l=s.shapeInfo.texShape,c=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],u=c[0],h=c[1],d=Math.ceil(a[i-1]/2);let p=d*Math.ceil(a[i-2]/2),f="int b, int row, int col",m=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let g=2;g<i-1;g++)f=`int b${g}, `+f,p*=a[i-g-1],m=`b${g} * ${p} + `+m;return`
    vec4 ${r}(${f}) {
      int index = ${m};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});
      return ${o.texture2D}(${n}, uv);
    }
  `}function Tj(s,t){const n=s.shapeInfo.logicalShape,r=s.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,l=n[1]*i,{newShape:c,keptDims:u}=Os(n);if(c.length<n.length){const x=gi(s,c),w=["row","col","depth","depth2"];return`
      ${fi(x,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${yi(w,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${a}, 1)));
        ${mi(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,p=d[0],f=d[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&h==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===a&&h==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=xo(r);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${p}, ${f}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function Ej(s){const t=s.shapeInfo.logicalShape,n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],a=t[3]*o,i=t[2]*a,l=t[1]*i,{newShape:c,keptDims:u}=Os(t);if(c.length<t.length){const g=gi(s,c),y=["row","col","depth","depth2","depth3"];return`
      ${fi(g)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${yi(y,u)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${a}, ${o})) +
          depth3;
        ${mi(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=xo(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${a} +
          depth2 * ${o} + depth3 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Aj(s){const t=s.shapeInfo.logicalShape,n=s.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:a}=Os(t);if(o.length<t.length){const y=gi(s,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${fi(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${yi(b,a)});
      }
    `}const i=t[5],l=t[4]*i,c=t[3]*l,u=t[2]*c,h=t[1]*u;if(s.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${u}, ${c}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${mi(s)}
      }
    `;const d=s.shapeInfo.flatOffset,p=s.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;const g=xo(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${u} + depth * ${c} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function mi(s){const t=s.name,n=H(s.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Dj(s,t){const n=s.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",a=s.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=uC(s.shapeInfo.logicalShape,t.logicalShape),c=He(i),u=i-a;let h;const d=["x","y","z","w","u","v"];a===0?h="":i<2&&l.length>=1?h="coords = 0;":h=l.map(x=>`coords.${d[x+u]} = 0;`).join(`
`);let p="";i<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((x,w)=>`coords.${d[w+u]}`).join(", ");let f="return outputValue;";const g=H(s.shapeInfo.logicalShape)===1,b=H(t.logicalShape)===1;if(a===1&&!g&&!b)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!b)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(l.length){const x=a-2,w=a-1;l.indexOf(x)>-1&&l.indexOf(w)>-1?f="return vec4(outputValue.x);":l.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${c} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${r}(${p});
      ${f}
    }
  `}function Rj(s,t){const n=s.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",a=t.texShape,i=s.shapeInfo.texShape,l=s.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!s.shapeInfo.isUniform&&l===c&&s.shapeInfo.flatOffset==null&&Ae(i,a))return`
      float ${o}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const u=He(c),h=uC(s.shapeInfo.logicalShape,t.logicalShape),d=c-l;let p;const f=["x","y","z","w","u","v"];l===0?p="":c<2&&h.length>=1?p="coords = 0;":p=h.map(g=>`coords.${f[g+d]} = 0;`).join(`
`);let m="";return c<2&&l>0?m="coords":m=s.shapeInfo.logicalShape.map((g,y)=>`coords.${f[y+d]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${r}(${m});
    }
  `}function He(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function xb(s,t,n){const{newShape:r,keptDims:o}=Os(t),a=t.length,i=s&&a===3&&t[0]===1,l=i?t.slice(1):r,c=!s&&a>1&&!Ae(t,n)&&r.length<a||i;return{useSqueezeShape:c,uniformShape:c?l:t,keptDims:o}}function gi(s,t){const n=JSON.parse(JSON.stringify(s));return n.shapeInfo.logicalShape=t,n}function yi(s,t){return t.map(n=>s[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(s,t,n,r){const o=n.map((w,v)=>{const C={logicalShape:w.shape,texShape:w.isUniform?null:w.texData.texShape,isUniform:w.isUniform,isPacked:w.isUniform?!1:w.texData.isPacked,flatOffset:null};return w.texData!=null&&w.texData.slice!=null&&w.texData.slice.flatOffset>0&&(C.flatOffset=w.texData.slice.flatOffset),{name:t.variableNames[v],shapeInfo:C}}),a=o.map(w=>w.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=ZH(o,i,t),c=s.createProgram(l);let u=null;const h=s.getUniformLocation(c,"NAN",!1);q().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(c,"INFINITY",!1));const d=!1,p={},f={},m={};for(let w=0;w<t.variableNames.length;w++){const v=t.variableNames[w];p[v]=s.getUniformLocation(c,v,d),p[`offset${v}`]=s.getUniformLocation(c,`offset${v}`,d),t.enableShapeUniforms&&(f[`${v}Shape`]=s.getUniformLocation(c,`${v}Shape`,d),m[`${v}TexShape`]=s.getUniformLocation(c,`${v}TexShape`,d))}let g,y,b;t.enableShapeUniforms&&(g=s.getUniformLocation(c,"outShape",d),b=s.getUniformLocation(c,"outShapeStrides",d),y=s.getUniformLocation(c,"outTexShape",d));const x=[];return t.customUniforms&&t.customUniforms.forEach((w,v)=>{x[v]=s.getUniformLocation(c,w.name,d)}),{program:t,source:l,webGLProgram:c,uniformLocations:p,customUniformLocations:x,inShapeInfos:a,outShapeInfo:i,infLoc:u,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}function pC(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((n,r)=>{const o=n.logicalShape,a=t[r],i=a.shape;if(!Ae(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(n.isUniform&&a.isUniform)return;const l=n.texShape,c=a.isUniform?null:a.texData.texShape;if(!Ae(l,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${c} must match`)})}function _j(s,t,n,r,o){t.program.enableShapeUniforms||(pC(t.inShapeInfos,n),pC([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?s.setOutputPackedMatrixTexture(a,i[0],i[1]):s.setOutputMatrixTexture(a,i[0],i[1]),s.setProgram(t.webGLProgram),q().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),n.forEach((c,u)=>{const h=t.program.variableNames[u],d=t.uniformLocations[h],p=t.uniformLocations[`offset${h}`],f=t.inShapesLocations[`${h}Shape`],m=t.inTexShapesLocations[`${h}TexShape`];if(f){const{uniformShape:g}=xb(t.program.packedInputs,c.shape,c.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(m&&s.gl.uniform2i(m,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(H(c.shape)<2)s.gl.uniform1f(d,c.uniformValues[0]);else{let g=c.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(d,g)}return}c.texData.slice!=null&&p!=null&&s.gl.uniform1i(p,c.texData.slice.flatOffset),s.setInputMatrixTexture(c.texData.texture,d,u)}});const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:s.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:s.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:s.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:s.gl.uniform4iv(l,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){const c=ge(r.shape);switch(r.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(c));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(c));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(c));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((c,u)=>{const h=t.customUniformLocations[u],d=o[u];if(c.type==="float")s.gl.uniform1fv(h,d);else if(c.type==="vec2")s.gl.uniform2fv(h,d);else if(c.type==="vec3")s.gl.uniform3fv(h,d);else if(c.type==="vec4")s.gl.uniform4fv(h,d);else if(c.type==="int")s.gl.uniform1iv(h,d);else if(c.type==="ivec2")s.gl.uniform2iv(h,d);else if(c.type==="ivec3")s.gl.uniform3iv(h,d);else if(c.type==="ivec4")s.gl.uniform4iv(h,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),s.executeProgram()}function Oj(s,t,n){let r="";t.concat(n).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!i.isUniform){const c=i.texData.texShape,{useSqueezeShape:u,uniformShape:h,keptDims:d}=xb(s.packedInputs,i.shape,c);let p="",f="",m="";if(h.length===1&&s.packedInputs){const C=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];p=`${C[0]>1}_${C[1]>1}`}else if(h.length===2&&!s.packedInputs)f=`${h[0]>1}_${h[1]>1}`;else if(h.length>2&&!s.packedInputs){const C=ge(h);m=`${C[0]===c[1]}_${C[C.length-1]===c[1]}`}const g=i.shape.length,y=h.length===2&&Ae(i.shape,c),b=H(i.shape)===1,x=za(i.shape,n.shape),w=!s.packedInputs&&g===n.shape.length&&Ae(c,n.texData.texShape),v=s.packedInputs||h.length>2?"":`${c[0]>1}_${c[1]>1}`;r+=`${g}_${w}_${u?d:""}_${h.length}_${b}_${x}_${y}_${p}_${f}_${m}_${v}_${l}`}else{const c=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${c}_${l}`}});const o=s.userCode;let a=s.constructor.name;return a+="_"+r+"_"+o+`${q().getNumber("WEBGL_VERSION")}`,a}function On(s){return q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lj{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ac.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=en();this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?tp(["r","c","d"],t):bo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ac.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=en();this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?tp(["r","c","d"],t):bo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zj{constructor(t){this.variableNames=["A"],this.outTexUsage=_n.DOWNLOAD;const n=en();this.outputShape=t,this.userCode=`
      ${cC}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mj{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=_n.DOWNLOAD;const n=en();this.outputShape=t,this.userCode=`
      ${cC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bj{constructor(t,n=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=en();this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?bb():yb(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vj{constructor(t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=en();this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length);let o="",a="result";n&&(a="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const c=i*2+l;o+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?bb():yb(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${r.output} = ${a};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(s){const t=en(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return NH(s,n)}function Uj(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return AH(s,t)}function Gj(s){const t=new Uint16Array([0,1,2,2,1,3]);return DH(s,t)}function Fc(s,t,n,r,o,a){FH(t,n);const i=RH(s),l=s.TEXTURE_2D;return fe(s,()=>s.bindTexture(l,i)),fe(s,()=>s.texParameteri(l,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),fe(s,()=>s.texParameteri(l,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),fe(s,()=>s.texParameteri(l,s.TEXTURE_MIN_FILTER,s.NEAREST)),fe(s,()=>s.texParameteri(l,s.TEXTURE_MAG_FILTER,s.NEAREST)),fe(s,()=>s.texImage2D(l,0,r,t,n,0,o,a,null)),fe(s,()=>s.bindTexture(s.TEXTURE_2D,null)),i}function fC(s){return s.internalFormatFloat}function Hj(s,t,n,r){const[o,a]=Dc(t,n);return Fc(s,o,a,fC(r),r.textureFormatFloat,s.FLOAT)}function mC(s){return s.internalFormatHalfFloat}function jj(s,t,n,r){const[o,a]=Dc(t,n);return Fc(s,o,a,mC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function gC(s){return s.downloadTextureFormat}function qj(s,t,n,r){const[o,a]=Dc(t,n);return Fc(s,o,a,gC(r),s.RGBA,s.UNSIGNED_BYTE)}function yC(s){return s.internalFormatPackedFloat}function Kj(s,t,n,r){const[o,a]=hi(t,n);return Fc(s,o,a,yC(r),s.RGBA,s.FLOAT)}function bC(s){return s.internalFormatPackedHalfFloat}function Xj(s,t,n,r){const[o,a]=hi(t,n);return Fc(s,o,a,bC(r),s.RGBA,r.textureTypeHalfFloat)}function Yj(s,t,n){const r=0,o=3*4,a=3*4+2*4;return fe(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),aC(s,t,"clipSpacePos",n,3,a,r)&&aC(s,t,"uv",n,2,a,o)}function Zj(s,t,n,r,o,a){fe(s,()=>s.bindTexture(s.TEXTURE_2D,t));let i,l,c;o instanceof Uint8Array?(i=new Uint8Array(n*r*4),l=s.UNSIGNED_BYTE,c=s.RGBA):(i=new Float32Array(n*r*4),l=s.FLOAT,c=a.internalFormatPackedFloat),i.set(o),fe(s,()=>s.texImage2D(s.TEXTURE_2D,0,c,n,r,0,s.RGBA,l,i)),fe(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function Jj(s,t,n){fe(s,()=>s.bindTexture(s.TEXTURE_2D,t)),n.data instanceof Uint8Array?fe(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,n.width,n.height,0,s.RGBA,s.UNSIGNED_BYTE,n.data)):fe(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,n)),fe(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function Qj(s,t,n,r){const o=s.createBuffer();fe(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,o));const l=4*4*t*n;return fe(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,l,s.STREAM_READ)),fe(s,()=>s.readPixels(0,0,n,t,s.RGBA,s.FLOAT,0)),fe(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),o}function eq(s,t,n){const r=s,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}function tq(s,t,n,r){const[o,a]=Dc(t,n),i=4,l=new Uint8Array(yH(t*n,i));return fe(s,()=>s.readPixels(0,0,o,a,r.downloadTextureFormat,s.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function nq(s,t,n,r,o,a,i,l){const c=s,u=new Float32Array(bH(a,i));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function sq(s,t,n){const r=new Float32Array(t*n*4);return fe(s,()=>s.readPixels(0,0,n,t,s.RGBA,s.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rq{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const n=q().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,fH(n,t)):this.gl=Es(n);let r="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(q().getNumber("WEBGL_VERSION")===1){const a="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Zd(this.gl,a),Zn(this.gl,i))this.textureHalfFloatExtension=Zd(this.gl,i);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Zn(this.gl,o))this.colorBufferHalfFloatExtension=Zd(this.gl,o);else if(q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Zn(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Zn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Uj(this.gl),this.indexBuffer=Gj(this.gl),this.framebuffer=_H(this.gl),this.textureConfig=ub(this.gl,this.textureHalfFloatExtension)}get debug(){return q().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;fe(t,()=>t.finish()),fe(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),fe(t,()=>t.deleteFramebuffer(this.framebuffer)),fe(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),fe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),fe(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,n){return this.throwIfDisposed(),Hj(this.gl,t,n,this.textureConfig)}createFloat16MatrixTexture(t,n){return this.throwIfDisposed(),jj(this.gl,t,n,this.textureConfig)}createUnsignedBytesMatrixTexture(t,n){return this.throwIfDisposed(),qj(this.gl,t,n,this.textureConfig)}uploadPixelDataToTexture(t,n){this.throwIfDisposed(),Jj(this.gl,t,n)}uploadDenseMatrixToTexture(t,n,r,o){this.throwIfDisposed(),Zj(this.gl,t,n,r,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,n){return this.throwIfDisposed(),Xj(this.gl,t,n,this.textureConfig)}createPackedMatrixTexture(t,n){return this.throwIfDisposed(),Kj(this.gl,t,n,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(iC(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,n,r){return this.downloadMatrixDriver(t,()=>tq(this.gl,n,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,n,r,o,a,i){return nq(this.gl,t,n,r,o,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,n){return eq(this.gl,t,n)}createBufferFromTexture(t,n,r){this.bindTextureToFrameBuffer(t);const o=Qj(this.gl,n,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let n,r;if(q().getBool("WEBGL_FENCE_API_ENABLED")){const o=t,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{const i=o.clientWaitSync(a,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},n=a}else q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(n,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:n,isFencePassed:r}}downloadMatrixFromPackedTexture(t,n,r){return this.downloadMatrixDriver(t,()=>sq(this.gl,n,r))}createProgram(t){this.throwIfDisposed();const n=this.gl,r=kH(n,t);this.vertexShader==null&&(this.vertexShader=Wj(n));const o=TH(n);return fe(n,()=>n.attachShader(o,this.vertexShader)),fe(n,()=>n.attachShader(o,r)),EH(n,o),this.debug&&hb(n,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=Yj(n,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&fe(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&hb(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,n,r=!0){return this.throwIfDisposed(),r?LH(this.gl,t,n):PH(this.gl,t,n)}getAttributeLocation(t,n){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(t,n))}getUniformLocationNoThrow(t,n){return this.throwIfDisposed(),this.gl.getUniformLocation(t,n)}setInputMatrixTexture(t,n,r){this.throwIfDisposed(),this.throwIfNoProgram(),zH(this.gl,t,n,r)}setOutputMatrixTexture(t,n,r){this.setOutputMatrixTextureDriver(t,r,n)}setOutputPackedMatrixTexture(t,n,r){this.throwIfDisposed();const[o,a]=hi(n,r);this.setOutputMatrixTextureDriver(t,o,a)}setOutputMatrixWriteRegion(t,n,r,o){this.setOutputMatrixWriteRegionDriver(r,t,o,n)}setOutputPackedMatrixWriteRegion(t,n,r,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&hb(this.gl,this.program),Jd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),fe(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Zd(this.gl,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,o=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(o.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),n=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,n),n}endQuery(){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,r=this.getQueryTimerExtensionWebGL2();n.endQuery(r.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Wp(()=>this.disposed||this.isQueryAvailable(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,n){if(n===0)return null;if(n===2){const r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,n){if(n===0)return!0;if(n===2){const r=this.gl,o=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),o=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(n=>{this.addItemToPoll(()=>t.isFencePassed(),()=>n())})}pollItems(){const t=oq(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=t;++n){const{resolveFn:r}=this.itemsToPoll[n];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,n){this.itemsToPoll.push({isDoneFn:t,resolveFn:n}),!(this.itemsToPoll.length>1)&&Wp(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),db(this.gl,t,this.framebuffer),this.debug&&Jd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(db(this.gl,this.outputTexture,this.framebuffer),this.debug&&Jd(this.gl)):iC(this.gl,this.framebuffer)}downloadMatrixDriver(t,n){this.bindTextureToFrameBuffer(t);const r=n();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,n,r){this.throwIfDisposed();const o=this.gl;db(o,t,this.framebuffer),this.debug&&Jd(o),this.outputTexture=t,fe(o,()=>o.viewport(0,0,n,r)),fe(o,()=>o.scissor(0,0,n,r))}setOutputMatrixWriteRegionDriver(t,n,r,o){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(t,n,r,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function oq(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:aq,bincountImpl:xC,bincountReduceImpl:iq,ceilImpl:lq,concatImpl:cq,equalImpl:uq,expImpl:hq,expm1Impl:dq,floorImpl:pq,gatherNdImpl:fq,gatherV2Impl:mq,greaterImpl:gq,greaterEqualImpl:yq,lessImpl:bq,lessEqualImpl:xq,linSpaceImpl:wq,logImpl:vq,maxImpl:$q,maximumImpl:Cq,minimumImpl:Nq,multiplyImpl:kq,negImpl:Iq,notEqualImpl:Sq,prodImpl:Tq,rangeImpl:Eq,rsqrtImpl:Aq,sigmoidImpl:Dq,simpleAbsImpl:wC,sliceImpl:Rq,sparseFillEmptyRowsImpl:Fq,sparseReshapeImpl:_q,sparseSegmentReductionImpl:vC,sqrtImpl:Oq,stridedSliceImpl:Lq,stringNGramsImpl:Pq,stringSplitImpl:zq,stringToHashBucketFastImpl:Mq,subImpl:Bq,tileImpl:Vq,topKImpl:Wq,transposeImpl:wb,uniqueImpl:Uq}=uV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(s,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${s}.${n}`)}function tn(s,t){return t===1?[s]:$C(s,t)}function Gq(s,t){if(s===1)return"rc";let n="";for(let r=0;r<s;r++)n+=t[r],r<s-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hq{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const n=t.length;if(n===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const r=tn("rc",n),o=He(n),a=qq(n,t,r),i=Kq(n,t[t.length-1],t[t.length-2],r),l=Xq(t,r);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${l}));
          }
        }
      `}}}function jq(s,t){const n=[];for(let r=0;r<=1;r++)for(let o=0;o<=1;o++){let a=`${r===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<s;i++)a=`${t[t.length-1-i]},`+a;n.push(a)}return n}function qq(s,t,n){if(s===1)return`rc > ${t[0]}`;let r="";for(let o=s-2;o<s;o++)r+=`${n[o]} >= ${t[o]}`,o<s-1&&(r+="||");return r}function Kq(s,t,n,r){if(s===1)return"";const o=r.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${n};
  `}function Xq(s,t){const n=s.length,r=jq(n,t);return n===1?`getA(rc),
            rc + 1 >= ${s[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${r[0]}),
          cEdge ? 0. : getA(${r[1]}),
          rEdge ? 0. : getA(${r[2]}),
          rEdge || cEdge ? 0. : getA(${r[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CC{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length);let r="";for(let o=0;o<4;o++){let a="thisRC = rc;";o%2==1&&(a+="thisRC.z += 1;"),o>1&&(a+="thisRC.y += 1;"),r+=`
        ${a}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${Yq(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?bb():yb(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${r}

        setOutput(result);
      }
    `}}function Yq(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?YH(["r","c","d"],"inputShape"):bo(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,n,r){const o=kC(n,r),a=IC(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=NC(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const c=this.freeTextures[a].shift();return this.usedTextures[a].push(c),c}let l;return o===jt.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===jt.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===jt.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===jt.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===jt.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,n,r,o){if(this.freeTextures==null)return;const a=kC(r,o),i=IC(n,a,o);i in this.freeTextures||(this.freeTextures[i]=[]);const l=NC(n,a,this.gpgpu.gl,this.gpgpu.textureConfig,o),c=q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const u=this.usedTextures[i],h=u.indexOf(t);if(h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(h,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n)});for(const t in this.usedTextures)this.usedTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Jq(s,t){const n=s;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function NC(s,t,n,r,o){const a=Qq(t,r);let i;if(o){const[c,u]=hi(s[0],s[1]);i=c*u}else{const[c,u]=Dc(s[0],s[1]);i=c*u}const l=Jq(n,a);return i*l}function Qq(s,t){switch(s){case jt.PACKED_2X2_FLOAT32:return yC(t);case jt.PACKED_2X2_FLOAT16:return bC(t);case jt.UNPACKED_FLOAT32:return fC(t);case jt.UNPACKED_FLOAT16:return mC(t);case jt.PACKED_4X1_UNSIGNED_BYTE:return gC(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function e6(s){return q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?jt.PACKED_2X2_FLOAT32:jt.UNPACKED_FLOAT32:s?jt.PACKED_2X2_FLOAT16:jt.UNPACKED_FLOAT16}function kC(s,t){if(s===_n.UPLOAD)return jt.PACKED_2X2_FLOAT32;if(s===_n.RENDER||s==null)return e6(t);if(s===_n.DOWNLOAD||s===_n.PIXELS)return jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function IC(s,t,n){return`${s[0]}_${s[1]}_${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tr{constructor(t,n){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ps="if (isnan(x)) return x;",t6="return x;",SC="return abs(x);",n6="return (x >= 0.0) ? x : (exp(x) - 1.0);",s6=ps+`
  return (x < 0.0) ? 0.0 : x;
`,r6=ps+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,np="return x;",o6="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6="return x;",i6=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,l6=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,c6=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,u6="return 1.0 / (1.0 + exp(-1.0 * x));";class bi{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h6{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const n=t.length,r=tn("rc",n),o=He(n),a=Gq(n,r),i=r.slice(-2),l=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=zh,p6=1e-7,f6=1e-4,sp={};function m6(s){return s in sp||(sp[s]={}),sp[s]}const g6=q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),y6=600;function b6(){return q().global.screen==null?1024:q().global.screen.height*q().global.screen.width*window.devicePixelRatio*y6/1024/1024}class rp extends Uc{constructor(t){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){const n=Es(q().getNumber("WEBGL_VERSION"));this.binaryCache=m6(q().getNumber("WEBGL_VERSION")),this.gpgpu=new rq(n),this.canvas=n.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new Zq(this.gpgpu),this.numMBBeforeWarning=b6(),this.texData=new Mp(this,dr())}nextDataId(){return rp.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,n,r){if((q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||q().getBool("DEBUG"))&&this.checkNumericalProblems(t),r==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:n,dtype:r,values:t,usage:_n.UPLOAD,refCount:1}),o}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){const n=this.texData.get(t);n.refCount--}}move(t,n,r,o,a){if(q().getBool("DEBUG")&&this.checkNumericalProblems(n),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:o,values:n,usage:_n.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const n=this.texData.get(t),{values:r,dtype:o,complexTensorInfos:a,slice:i,shape:l,isPacked:c}=n;if(i!=null){let p;c?p=new bi(l,np):p=new Tr(l,np);const f=this.runWebGLProgram(p,[{dataId:t,shape:l,dtype:o}],o),m=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(r!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return r;const u=this.activeTimers!=null;let h;u&&(h=Vt());let d;if(o==="complex64"){const p=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);d=qs(p,f)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=Vt()-h),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const m=this.pendingRead.get(t);return new Promise(g=>m.push(g))}const n=this.texData.get(t),{values:r,shape:o,slice:a,dtype:i,complexTensorInfos:l,isPacked:c}=n;if(a!=null){let m;c?m=new bi(o,np):m=new Tr(o,np);const g=this.runWebGLProgram(m,[{dataId:t,shape:o,dtype:i}],i),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(r!=null)return this.convertAndCacheOnCPU(t);if(!q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&q().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,h;if(i!=="complex64"&&q().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(t);const m=this.texData.get(h.dataId);u=this.gpgpu.createBufferFromTexture(m.texture,...Yd(o))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const m=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),g=m[0],y=m[1];d=qs(g,y)}else if(u==null)d=this.getValuesFromTexture(t);else{const m=H(o);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,m)}if(h!=null&&this.disposeIntermediateTensorInfo(h),u!=null){const m=this.gpgpu.gl;fe(m,()=>m.deleteBuffer(u))}const p=this.convertAndCacheOnCPU(t,d),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(m=>m(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&dr().removeDataId(t,this),this.pendingDeletes--),p}bufferSync(t){const n=this.readSync(t.dataId);let r=n;if(t.dtype==="string")try{r=n.map(o=>Vr(o))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Se(t.shape,t.dtype,r)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){const r=t[n];if(!$H(r))throw q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:n,dtype:r,isPacked:o}=this.texData.get(t),a=H(n);if(q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(t),f=this.texData.get(p.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...Yd(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(p),m}const i=q().getBool("WEBGL_PACK")&&o===!0,l=i?pb(n):n,c=i?new Mj(l):new zj(l),u=this.runWebGLProgram(c,[{shape:l,dtype:r,dataId:t}],"float32"),h=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture,h.texShape[0],h.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const n=this.activeTimers,r=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=r,o=!0):this.activeTimers.push(r),this.activeTimers=r,t();const a=_s(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),i=_s(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=n,o&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(a);l.kernelMs=fx(c),l.getExtraProfileInfo=()=>c.map((u,h)=>({name:i[h],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Vt(),endMs:null}}endTimer(t){return q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Vt(),t)}async getQueryTime(t){if(q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:r}=this.texData.get(t);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:n,dtype:r,texShape:o,usage:a,isPacked:i,slice:l}=this.texData.get(t),c=l&&l.origDataId||t,u=this.dataRefCount.get(c);u>1?this.dataRefCount.set(c,u-1):(this.dataRefCount.delete(c),n!=null&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(n,o,a,i)));const h=this.texData.get(t);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=g6){return q().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>this.texData.get(r.dataId).texture==null&&H(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){sn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=t.dataSync();return d6(t.shape,n)}packedUnaryOp(t,n,r){const o=new bi(t.shape,n),a=this.compileAndRun(o,[t],r);return dr().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const o=wC(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,o)}if(q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,SC,t.dtype);const n=new Tr(t.shape,SC),r=this.compileAndRun(n,[t]);return dr().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}makeTensorInfo(t,n,r){let o;if(n==="string"&&r!=null&&r.length>0&&gs(r[0])){const a=r.map(i=>ys(i));o=this.write(a,t,n)}else o=this.write(r,t,n);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:n}}makeOutput(t,n,r){const{dataId:o}=this.makeTensorInfo(t,n,r);return dr().makeTensorFromDataId(o,t,n,this)}unpackTensor(t){const n=new h6(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){const n=new Hq(t.shape),r=!0;return this.runWebGLProgram(n,[t],t.dtype,null,r)}packedReshape(t,n){const r=[di(t.shape),...pi(t.shape)],o={dtype:t.dtype,shape:r,dataId:t.dataId},a=[di(n),...pi(n)],i=new CC(a,r),l=!0,c=[r],u=this.runWebGLProgram(i,[o],t.dtype,c,l);return{dataId:u.dataId,shape:n,dtype:u.dtype}}decode(t){const n=this.texData.get(t),{isPacked:r,shape:o,dtype:a}=n,i=pb(o);let l;const c=Yd(i);r?l=new Pj(i):l=new Lj(i);const u=!0,h=[c],d=this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:t}],a,h,u);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(t,n,r,o,a=!1){const i=this.makeTensorInfo(t.outputShape,r),l=this.texData.get(i.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Ac.DENSE){const y=Yd(t.outputShape);l.texShape=y.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),H(i.shape)===0)return l.values=Nt(i.dtype,0),i;const c=[],u=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(b.texture==null){if(!t.packedInputs&&H(y.shape)<=q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}else if(!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!ep(b.shape,y.shape)){const x=y,w=y.shape;y.shape=b.shape,y=this.packedReshape(y,w),c.push(y),b=this.texData.get(y.dataId),x.shape=w}return this.uploadToGPU(y.dataId),{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:l,isUniform:!1},d=Oj(t,u,h),p=this.getAndSaveBinary(d,()=>Fj(this.gpgpu,t,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),_j(this.gpgpu,p,u,h,o),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=q().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=Vt();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!q().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&a===!1){const y=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),y}return i}compileAndRun(t,n,r,o,a=!1){return r=r||n[0].dtype,this.runWebGLProgram(t,n,r,o,a)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=q().getBool("DEBUG");q().set("DEBUG",!1);const n=this.abs(me(1e-8)).dataSync()[0];if(q().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?p6:f6}uploadToGPU(t){const n=this.texData.get(t),{shape:r,dtype:o,values:a,texture:i,usage:l,isPacked:c}=n;if(i!=null)return;const u=this.activeTimers!=null;let h;u&&(h=Vt());let d=n.texShape;if(d==null&&(d=VH(r,c),n.texShape=d),a!=null){const p=pb(r);let f,m=d[1],g=d[0];const y=a instanceof Uint8Array;c?([m,g]=hi(d[0],d[1]),f=new Vj(p,y)):f=new Bj(p,y);const b=this.makeTensorInfo([g,m],o);y?this.texData.get(b.dataId).usage=_n.PIXELS:this.texData.get(b.dataId).usage=_n.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),m,g,a);const x=[[g,m]],w=!0,v=this.runWebGLProgram(f,[b],o,x,w),C=this.texData.get(v.dataId);n.texture=C.texture,n.texShape=C.texShape,n.isPacked=C.isPacked,n.usage=C.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(v.dataId),n.values=null,u&&(this.uploadWaitMs+=Vt()-h)}else{const p=this.acquireTexture(d,l,o,c);n.texture=p}}convertAndCacheOnCPU(t,n){const r=this.texData.get(t),{dtype:o}=r;return this.releaseGPUData(t),n!=null&&(r.values=x6(n,o)),r.values}acquireTexture(t,n,r,o){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,o)}computeBytes(t,n){return t[0]*t[1]*Hc(n)}}rp.nextDataId=0;function x6(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const n=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let r=0;r<n.length;++r)n[r]=Math.round(s[r]);return n}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */const w6="3.9.0";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pf()&&Pf("webgl",()=>new rp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class xi{constructor(t,n,r){this.variableNames=["A","B"],this.outputShape=Te(n,r),this.enableShapeUniforms=On(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const op=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class _c{constructor(t,n,r,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Te(n,r);const a=this.outputShape.length;this.enableShapeUniforms=On(a);let i="";if(o)if(a===0||H(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${He(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=tn("coords",a);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${c[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${c[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(s){const{inputs:t,backend:n}=s,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const v6={kernelName:Yo,backendName:"webgl",kernelFunc:In};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(s){const{inputs:t,backend:n}=s,{real:r,imag:o}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),l=In({inputs:{x:r},backend:n}),c=In({inputs:{x:o},backend:n});return i.complexTensorInfos={real:l,imag:c},a}const $6={kernelName:Qc,backendName:"webgl",kernelFunc:Er};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EC="return (a < 0.) ? b * a : a;",AC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function C6(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Ls(a,"float32")),l=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(AC,o.shape,i.shape):new xi(EC,o.shape,i.shape),c=n.runWebGLProgram(l,[o,i],o.dtype);return n.disposeIntermediateTensorInfo(i),c}const N6={kernelName:Xi,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DC="return (a < 0.) ? b * a : a;",RC=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function k6(s){const{inputs:t,backend:n}=s,{x:r,alpha:o}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(RC,r.shape,o.shape):new xi(DC,r.shape,o.shape);return n.runWebGLProgram(a,[r,o],r.dtype)}const I6={kernelName:fl,backendName:"webgl",kernelFunc:k6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC="if (isnan(x)) return x;",S6=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,T6=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Le({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:o,backend:a})=>{const{x:i}=o,l=a,c=r||i.dtype;if(l.shouldExecuteOnCPU([i])&&n!=null){const d=l.texData.get(i.dataId),p=n(d.values,c);return l.makeTensorInfo(i.shape,c,p)}const u=q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let h;return u?h=new bi(i.shape,t):h=new Tr(i.shape,s),l.runWebGLProgram(h,[i],c)}}function qt({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:a}){return({inputs:i,backend:l})=>{const{a:c,b:u}=i,h=l;if(r&&c.dtype==="complex64"){const m=h.texData.get(c.dataId),g=h.texData.get(u.dataId),[y,b]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(w=>{const[v,C]=w,I={dataId:v.dataId,dtype:v.dtype,shape:c.shape},N={dataId:C.dataId,dtype:C.dtype,shape:u.shape},S=new xi(s,c.shape,u.shape);return h.runWebGLProgram(S,[I,N],fn(v.dtype,C.dtype))}),x=Er({inputs:{real:y,imag:b},backend:h});return h.disposeIntermediateTensorInfo(y),h.disposeIntermediateTensorInfo(b),x}const d=a||fn(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||h.shouldExecuteOnCPU([c,u]))&&o!=null){const m=h.texData.get(c.dataId).values,g=h.texData.get(u.dataId).values,y=c.dtype==="string"?ro(m):m,b=c.dtype==="string"?ro(g):g,[x,w]=o(c.shape,u.shape,y,b,d),v=h.makeTensorInfo(w,d),C=h.texData.get(v.dataId);return C.values=x,v}const p=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return p?f=new _c(t,c.shape,u.shape,n):f=new xi(s,c.shape,u.shape),h.runWebGLProgram(f,[c,u],d)}}function ap(s,t=!1){if(s==="linear")return t?a6:t6;if(s==="relu")return t?l6:s6;if(s==="elu")return t?i6:n6;if(s==="relu6")return t?c6:r6;if(s==="prelu")return t?RC:DC;if(s==="leakyrelu")return t?AC:EC;if(s==="sigmoid")return t?u6:o6;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _C{constructor(t,n,r,o=!1,a=!1,i=!1,l=null,c=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=On(this.outputShape.length);const h=o?t[1]:t[2],d=Math.ceil(h/2),p=o?"i * 2, rc.y":"rc.y, i * 2",f=a?"rc.z, i * 2":"i * 2, rc.z",m=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",b="";l&&(c?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:y=`vec4 activation(vec4 x) {
          ${l}
        }`,b="result = activation(result);");const x=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",v="rc.x";t[0]<n[0]?w=`int(min(float(rc.x), ${t[0]-1}.))`:n[0]<t[0]&&(v=`int(min(float(rc.x), ${n[0]-1}.))`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${w};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class LC{constructor(t,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Te(n,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC="return a * b;";function vb(s){const{inputs:t,backend:n}=s,{a:r,b:o}=t,a=fn(r.dtype,o.dtype);if(r.dtype==="complex64"){const l=n.texData.get(r.dataId),c=n.texData.get(o.dataId),u=new LC(OC.REAL,r.shape,o.shape),h=new LC(OC.IMAG,r.shape,o.shape),d=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:o.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:o.shape}],p=n.runWebGLProgram(u,d,"float32"),f=n.runWebGLProgram(h,d,"float32"),m=Er({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}if(n.shouldExecuteOnCPU([r,o])){const l=n.texData.get(r.dataId),c=n.texData.get(o.dataId),[u,h]=kq(r.shape,o.shape,l.values,c.values,a),d=n.makeTensorInfo(h,a),p=n.texData.get(d.dataId);return p.values=u,d}let i;return q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new _c(PC,r.shape,o.shape):i=new xi(PC,r.shape,o.shape),n.runWebGLProgram(i,[r,o],a)}const E6={kernelName:oa,backendName:"webgl",kernelFunc:vb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(s,t,n){const r=[di(s.shape),...pi(s.shape)],o={dtype:s.dtype,shape:r,dataId:s.dataId},a=[di(t),...pi(t)],i=new CC(a,r),l=!0,c=[r],u=n.runWebGLProgram(i,[o],s.dtype,c,l);return{dataId:u.dataId,shape:t,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{shape:a}=r,i=n,l=H(o.shape),c=Up(a,l),u=H(c);k(l===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${o.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const h=i.texData.get(o.dataId);return h.isPacked&&!ep(o.shape,c)&&!(h.texture!==null&&ep(h.shape,c))?A6(o,c,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype})}const D6={kernelName:ml,backendName:"webgl",kernelFunc:ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zC{constructor(t,n){this.variableNames=["x"];const{windowSize:r,batchSize:o,inSize:a,outSize:i}=t;this.outputShape=[o,i];const l=Math.floor(r/4)*4,c=r%4;let u="sumValue += dot(values, ones);";if(n!=null){const d=1/n;u=`sumValue += dot(values * ${Ct(d)?d.toPrecision(2):d}, ones);`}let h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R6{constructor(t,n){this.variableNames=["x"];const{windowSize:r,batchSize:o,inSize:a,outSize:i}=t;this.outputShape=[o,i];let l="0.0",c="";n==="prod"?l="1.0":n==="min"?(l="1.0 / 1e-20",c="min"):n==="max"&&(l="-1.0 / 1e-20",c="max");let u=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?u="sumValue":n==="prod"?u="prodValue":n==="all"?u="allValue":n==="any"&&(u="anyValue");const h=Math.floor(r/4)*4,d=r%4;let p=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";n==="all"?(l="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):n==="any"&&(l="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let m="";a%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const n=t.length?t[t.length-1].outSize:s[1],r=nd(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function wo(s,t,n,r){const o=F6(s.shape);let a=s;for(let i=0;i<o.length;i++){const{inSize:l,windowSize:c,outSize:u}=o[i];let h,d;n==="mean"?h=i===0?new zC({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u},l):new zC({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u}):h=new R6({windowSize:c,inSize:l,batchSize:s.shape[0],outSize:u},n),d=a,a=r.runWebGLProgram(h,[a],t),d.dataId!==s.dataId&&r.disposeIntermediateTensorInfo(d)}return a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _6{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[n[i]];this.outputShape=r,this.rank=r.length;const o=He(this.rank),a=O6(n);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}function O6(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let o=0;o<s.length;o++)r[s[o]]=n[o];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L6{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(t.length);for(let h=0;h<r.length;h++)r[h]=t[n[h]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=He(this.rank),a=$C("rc",this.rank),i=new Array(this.rank);for(let h=0;h<n.length;h++)i[n[h]]=a[h];const l=`vec2(${i.slice(-2).join()})`,c=`++${a[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${c}) {
        result[1] = ${u};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${c}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(s,t,n){const r=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new L6(s.shape,t):new _6(s.shape,t);return n.runWebGLProgram(r,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(s,t,n,r){const o=t,a=s.shape.length,i=ke(o,s.shape);let l=i;const c=gt(l,a),u=c!=null;let h=s;u&&(h=ip(s,c,r),l=xt(l.length,a)),Ut("sum",l,a);const[d,p]=Ft(h.shape,l);let f=d;n&&(f=mt(d,i));const m=H(p),y=H(s.shape)/m,b=ie({inputs:{x:h},attrs:{shape:[y,m]},backend:r}),x=th(s.dtype),w=wo(b,x,"sum",r),v=ie({inputs:{x:w},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),u&&r.disposeIntermediateTensorInfo(h),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r;return P6(o,a,i,n)}const z6={kernelName:vl,backendName:"webgl",kernelFunc:lp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{perm:a}=r,i=n,l=o.shape.length,c=new Array(l);for(let h=0;h<c.length;h++)c[h]=o.shape[a[h]];let u;if(i.shouldExecuteOnCPU([o])){const d=i.texData.get(o.dataId).values,p=wb(d,o.shape,o.dtype,a,c);u=i.makeTensorInfo(c,o.dtype);const f=i.texData.get(u.dataId);f.values=p}else u=ip(o,a,i);return u}const M6={kernelName:kl,backendName:"webgl",kernelFunc:nn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MC=1e3;function cp({a:s,b:t,transposeA:n,transposeB:r,backend:o,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:c=null}){const u=s.shape.length,h=t.shape.length,d=n?s.shape[u-2]:s.shape[u-1],p=r?t.shape[h-1]:t.shape[h-2],f=n?s.shape[u-1]:s.shape[u-2],m=r?t.shape[h-2]:t.shape[h-1],g=s.shape.slice(0,-2),y=t.shape.slice(0,-2),b=H(g),x=H(y),w=b===x||b===1||x===1;k(u>=2&&h>=2&&w,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`);const C=(b>x?s.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);k(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const I=n?[b,d,f]:[b,f,d],N=r?[x,m,p]:[x,p,m],S=ie({inputs:{x:s},backend:o,attrs:{shape:I}}),E=ie({inputs:{x:t},backend:o,attrs:{shape:N}}),A=[S,E],_=Math.max(b,x),D=n?S.shape[1]:S.shape[2],O=a!=null,B=i!=null,W=c==="leakyrelu",M=c!=null?ap(c,!0):null,j=O||B||W||M!=null;let U;if((f===1||m===1)&&D>MC&&j===!1){let Z=S,J=E;n&&(Z=nn({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),A.push(Z)),r&&(J=nn({inputs:{x:E},backend:o,attrs:{perm:[0,2,1]}}),A.push(J));const Q=m!==1,te=m===1;let oe=Z;Q&&(oe=ie({inputs:{x:Z},backend:o,attrs:{shape:[_,D,1]}}),A.push(oe));const ae=m===1?2:1;let le=J;te&&(le=ie({inputs:{x:J},backend:o,attrs:{shape:[_,1,D]}}),A.push(le));const he=vb({inputs:{a:oe,b:le},backend:o});U=lp({inputs:{x:he},backend:o,attrs:{axis:ae,keepDims:!0}}),A.push(he)}else{const Z=fn(s.dtype,t.dtype),J=new _C(I,N,[_,f,m],n,r,O,M,B,W),Q=[S,E];if(a!=null&&Q.push(a),B&&Q.push(i),W){const te=o.makeTensorInfo([],"float32",Ls(l,"float32"));Q.push(te),A.push(te)}U=o.runWebGLProgram(J,Q,Z)}const K=ie({inputs:{x:U},backend:o,attrs:{shape:C}});A.push(U);for(const Z of A)o.disposeIntermediateTensorInfo(Z);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a,bias:i,preluActivationWeights:l}=t,{transposeA:c,transposeB:u,activation:h,leakyreluAlpha:d}=r;return cp({a:o,b:a,transposeA:c,transposeB:u,backend:n,bias:i,preluActivationWeights:l,leakyreluAlpha:d,activation:h})}const V6={kernelName:El,backendName:"webgl",kernelFunc:B6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC="return abs(x);";function W6(s){const{inputs:t,backend:n}=s,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const a=n.texData.get(r.dataId),i=wC(a.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let o;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new bi(r.shape,BC):o=new Tr(r.shape,BC),n.runWebGLProgram(o,[r],r.dtype)}const U6={kernelName:Ti,backendName:"webgl",kernelFunc:W6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6=ps+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,H6=Le({opSnippet:G6}),j6={kernelName:Ao,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6=ps+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,K6=Le({opSnippet:q6}),X6={kernelName:Do,backendName:"webgl",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC="return a + b;",Y6=qt({opSnippet:VC,packedOpSnippet:VC,supportsComplex:!0,cpuKernelImpl:aq}),Z6={kernelName:Lr,backendName:"webgl",kernelFunc:Y6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J6{constructor(t,n){this.outputShape=[],this.outputShape=t,this.variableNames=n.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});const o=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q6{constructor(t,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=n.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});const o=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function up(s){const{inputs:t,backend:n}=s,r=t;if(r.length===1)return In({inputs:{x:r[0]},backend:n});if(r.length>q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(r.length/2),u=up({inputs:r.slice(0,c),backend:n}),h=up({inputs:r.slice(c),backend:n});return up({inputs:[u,h],backend:n})}const o=r.map(c=>c.dtype).reduce((c,u)=>fn(c,u)),a=r.map(c=>c.shape),l=q().getBool("WEBGL_PACK")?new Q6(r[0].shape,a):new J6(r[0].shape,a);return n.runWebGLProgram(l,r,o)}const eK={kernelName:Ei,backendName:"webgl",kernelFunc:up};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=ke(a,o.shape);let u=c;const h=gt(u,l);let d=o;h!=null&&(d=nn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=xt(u.length,l)),Ut("all",u,l);const[p,f]=Ft(d.shape,u),m=H(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=wo(g,g.dtype,"all",n);let b;if(i){const x=mt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const nK={kernelName:Kc,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=ke(a,o.shape);let u=c;const h=gt(u,l);let d=o;h!=null&&(d=nn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=xt(u.length,l)),Ut("any",u,l);const[p,f]=Ft(d.shape,u),m=H(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=wo(g,g.dtype,"any",n);let b;if(i){const x=mt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const rK={kernelName:Xc,backendName:"webgl",kernelFunc:sK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oK{constructor(t,n,r){this.variableNames=["A"];const{windowSize:o,batchSize:a,outSize:i}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const l=n==="max"?">":"<",c=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aK{constructor(t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],i=Math.ceil(a/n);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const l=this.outputShape,c=l.length,u=He(c),h=tn("coords",c);let d,p;if(i===1){p=c+1;const S=He(p);d=`
        ${S} sourceLocR = ${S}(${h.join()}, 0);
        ++${h[c-1]};
        ${S} sourceLocG = ${S}(${h.join()}, 0);
        ++${h[c-2]};
        ${S} sourceLocA = ${S}(${h.join()}, 0);
        --${h[c-1]};
        ${S} sourceLocB = ${S}(${h.join()}, 0);
        --${h[c-2]};`}else p=c,d=`
        ${u} sourceLocR = coords;
        ++${h[c-1]};
        ${u} sourceLocG = coords;
        ++${h[c-2]};
        ${u} sourceLocA = coords;
        --${h[c-1]};
        ${u} sourceLocB = coords;
        --${h[c-2]};`;const f=["x","y","z","w","u","v"].slice(0,p),m="."+f[p-1],g=f.map(S=>"int "+S),y=tn("sourceLocR",p-1).concat("inIdx.r"),b=tn("sourceLocG",p-1).concat("inIdx.g"),x=tn("sourceLocB",p-1).concat("inIdx.b"),w=tn("sourceLocA",p-1).concat("inIdx.a"),v=r==="max"?"greaterThan":"lessThan",C=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,I=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,N=o?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[c-1]} < ${l[c-1]-1};
        bool hasNextRow = ${h[c-2]} < ${l[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(s,t,n,r=null){let o=t.shape[0],a=t.shape[1];r!=null&&(o=r.shape[0],a=r.shape[1]);const i=nd(a),l={windowSize:i,inSize:a,batchSize:o,outSize:Math.ceil(a/i)},c=new oK(l,n,r==null),u=[t];r!=null&&u.push(r);const h=s.runWebGLProgram(c,u,"int32");if(h.shape[1]===1)return h;const d=WC(s,t,n,h);return s.disposeIntermediateTensorInfo(h),d}function UC(s,t,n,r=null){const o=r!=null?r.shape:t.shape,a=o[o.length-1],i=nd(a),l=new aK(o,i,n,r==null),c=r==null?[t]:[t,r],u=s.runWebGLProgram(l,c,"int32");if(u.shape.length===t.shape.length){const h=UC(s,t,n,u);return s.disposeIntermediateTensorInfo(u),h}return u}function GC(s,t,n,r){const o=[n];if(Ut("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,t.shape.length),!q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],i=s.texData.get(t.dataId),l=i!==null&&i.isPacked;let c=t;l&&(c=s.unpackTensor(t),a.push(c));const[u,h]=Ft(c.shape,o),d=H(h),p=ie({inputs:{x:c},backend:s,attrs:{shape:[-1,d]}});a.push(p);const f=WC(s,p,r);a.push(f);const m=ie({inputs:{x:f},backend:s,attrs:{shape:u}});return a.forEach(g=>s.disposeIntermediateTensorInfo(g)),m}return UC(s,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;let i=ke(a,o.shape);const l=gt(i,o.shape.length);let c=o;const u=[];l!=null&&(c=nn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=xt(i.length,c.shape.length)),Ut("argMax",[i[0]],c.shape.length);const h=GC(n,c,i[0],"max");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}const lK={kernelName:Ai,backendName:"webgl",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a}=r;let i=ke(a,o.shape);const l=gt(i,o.shape.length);let c=o;const u=[];l!=null&&(c=nn({inputs:{x:o},backend:n,attrs:{perm:l}}),u.push(c),i=xt(i.length,c.shape.length)),Ut("argMin",[i[0]],c.shape.length);const h=GC(n,c,i[0],"min");return u.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}const uK={kernelName:Di,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK=ps+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,dK=Le({opSnippet:hK}),pK={kernelName:Ro,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK=ps+"return log(x + sqrt(x * x + 1.0));",mK=Le({opSnippet:fK}),gK={kernelName:Fo,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=ps+`
  return atan(x);
`,bK=Le({opSnippet:yK}),xK={kernelName:_o,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK=S6+`
  return atan(a, b);
`,vK=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+T6+`
  return result;
`,$K=qt({opSnippet:wK,packedOpSnippet:vK}),CK={kernelName:Lo,backendName:"webgl",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=ps+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,kK=Le({opSnippet:NK}),IK={kernelName:Oo,backendName:"webgl",kernelFunc:kK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oc{constructor(t,n,r,o=!1,a=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=t.padInfo.top,m=t.padInfo.left;this.outputShape=t.outShape;const g=n==="avg",y=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(g||(x="-1.0 / 1e-20"),r){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${c});
        const ivec2 pads = ivec2(${f}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?a?y:b:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let v=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(v="avgValue / count");const C=Math.floor(i/4)*4,I=i%4,N=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${f}, ${m});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${C};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${v});
      }
    `}}class $b{constructor(t,n,r,o=!1,a=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,c=t.strideHeight,u=t.strideWidth,h=t.dilationDepth,d=t.dilationHeight,p=t.dilationWidth,f=t.effectiveFilterDepth,m=t.effectiveFilterHeight,g=t.effectiveFilterWidth,y=t.padInfo.front,b=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const w=n==="avg";let v="0.0";if(w||(v="-1.0 / 1e-20"),r){const A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${c}, ${u});
        const ivec3 pads = ivec3(${y}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let I=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(I="avgValue / count");const N=Math.floor(i/4)*4,S=i%4,E=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${c}, ${u});
      const ivec3 pads = ivec3(${y}, ${b}, ${x});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${N};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
          setOutput(${I});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;Rc(o,"avgPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;k(Wt(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Wn(o.shape,a,i,u,l,c);if(h.filterWidth===1&&h.filterHeight===1&&Ae(h.inShape,h.outShape))return In({inputs:{x:o},backend:n});const d=new Oc(h,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}const TK={kernelName:Ri,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c,dataFormat:u}=r,h=[1,1,1],d=Bs(o.shape,a,i,h,l,c,u),p=new $b(d,"avg",!1);return n.runWebGLProgram(p,[o],"float32")}const AK={kernelName:Fi,backendName:"webgl",kernelFunc:EK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DK{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=c-1-t.padInfo.top,d=u-1-t.padInfo.left,p=1/(n*r);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class RK{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterDepth,r=t.filterHeight,o=t.filterWidth,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=d-1-t.padInfo.front,g=p-1-t.padInfo.top,y=f-1-t.padInfo.left,b=1/(n*r*o);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a,{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,d=[1,1,1],p=Bs(i.shape,l,c,d,u,h),f=new RK(p);return n.runWebGLProgram(f,[o],i.dtype)}const _K={kernelName:Zc,backendName:"webgl",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a;Rc([o,a],"avgPoolGrad");const{filterSize:l,strides:c,pad:u}=r,h=Wn(i.shape,l,c,1,u),d=new DK(h);return n.runWebGLProgram(d,[o],i.dtype)}const LK={kernelName:Yc,backendName:"webgl",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(s){const{inputs:t,backend:n,attrs:r}=s,{a:o,b:a}=t,{transposeA:i,transposeB:l}=r;return cp({a:o,b:a,transposeA:i,transposeB:l,backend:n})}const zK={kernelName:_i,backendName:"webgl",kernelFunc:PK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MK{constructor(t,n,r,o,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Te(t,n),Te(t,r);let l="0.0";o!=null&&(Te(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="1.0";a!=null&&(Te(t,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BK{constructor(t,n,r,o,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Te(t,n),Te(t,r);let l="vec4(0.0)";o!=null&&(Te(t,o),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let c="vec4(1.0)";a!=null&&(Te(t,a),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=({inputs:s,backend:t,attrs:n})=>{const{x:r,mean:o,variance:a,offset:i,scale:l}=s;k(o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(l==null||o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=[r,o,a];let h=null;i!=null&&(h=i.shape,u.push(i));let d=null;l!=null&&(d=l.shape,u.push(l));const p=q().getBool("WEBGL_PACK_NORMALIZATION")?new BK(r.shape,o.shape,a.shape,h,d,c):new MK(r.shape,o.shape,a.shape,h,d,c);return t.runWebGLProgram(p,u,u[0].dtype)},WK={kernelName:ji,backendName:"webgl",kernelFunc:VK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const n=He(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=GK(this.rank);let o;const a=t.map((i,l)=>`sourceLoc.${Cb[l]} = start[${l}] + coords.${Cb[l]};`);o=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${r}));
      }
    `}}const Cb=["x","y","z","w","u","v"];function GK(s){if(s===1)return"sourceLoc";if(s<=6)return Cb.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HK{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=He(this.rank),r=tn("coords",this.rank),o=tn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${a})`,l=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${n}(${t.map((h,d)=>`start[${d}]`).join()});`:t.map((h,d)=>`${o[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${l}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(s,t,n,r){const o=r.texData.get(s.dataId),a=r.makeTensorInfo(n,s.dtype),i=r.texData.get(a.dataId);Object.assign(i,o),i.refCount=1,i.shape=n,i.dtype=s.dtype;let l=Rf(t,ge(s.shape));o.slice&&(l+=o.slice.flatOffset),i.slice={flatOffset:l,origDataId:o.slice&&o.slice.origDataId||s.dataId};const c=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,c+1),a}function wi(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,size:i}=r,[l,c]=uh(o,a,i);if(Af(o,l,c),H(c)===0)return n.makeTensorInfo(c,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||o.dtype==="string"){const d=n.texData.get(o.dataId),p=Rq(d.values,l,c,o.shape,o.dtype);return n.makeTensorInfo(c,o.dtype,p)}const{isPacked:u}=n.texData.get(o.dataId),h=Df(o.shape,l,c);if(u||!h){const d=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HK(c):new UK(c),p=[l];return n.runWebGLProgram(d,[o],o.dtype,p)}return n.uploadToGPU(o.dataId),jK(o,l,c,n)}const qK={kernelName:wl,backendName:"webgl",kernelFunc:wi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,crops:i}=r;k(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce((x,w)=>x*w),c=oc(o.shape,a,l),u=ac(c.length,a.length),h=ic(o.shape,a,l),d=Am(i,a.length),p=Dm(h,i,a.length),f=[],m=ie({inputs:{x:o},backend:n,attrs:{shape:c}}),g=nn({inputs:{x:m},backend:n,attrs:{perm:u}}),y=ie({inputs:{x:g},backend:n,attrs:{shape:h}}),b=wi({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),b},XK={kernelName:Oi,backendName:"webgl",kernelFunc:KK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i}=r,l=n.readSync(o.dataId),c=n.readSync(a.dataId),u=xC(l,c,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}const ZK={kernelName:Jc,backendName:"webgl",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK="return float(a != b);",HC=qt({opSnippet:JK,cpuKernelImpl:Sq,dtype:"bool"}),QK={kernelName:cl,backendName:"webgl",kernelFunc:HC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.texData.get(r.dataId);return In({inputs:{x:o.complexTensorInfos.real},backend:n})}const e5={kernelName:Au,backendName:"webgl",kernelFunc:Lc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5="return float(int(x));";function n5(s,t){const n=new Tr(s.shape,t5),r=t.runWebGLProgram(n,[s],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nb(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dtype:a}=r;if(a==="complex64"){if(o.dtype==="complex64")return In({inputs:{x:o},backend:n});const i=wt(o.shape),l=Nb({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),c=Er({inputs:{real:l,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(l),c}if(o.dtype==="complex64"){const i=Lc({inputs:{input:o},backend:n}),l=Nb({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),l}if(!Gp(o.dtype,a)){const i=In({inputs:{x:o},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return n5(o,n);if(a==="bool"){const i=n.makeTensorInfo([],"bool",Nt("bool",1)),c=HC({inputs:{a:o,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),c}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${a}`)}const s5={kernelName:Po,backendName:"webgl",kernelFunc:Nb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC="return ceil(x);",r5=Le({opSnippet:jC,packedOpSnippet:jC,cpuKernelImpl:lq}),o5={kernelName:zo,backendName:"webgl",kernelFunc:r5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a5{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i5{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{clipValueMin:a,clipValueMax:i}=r;let l;q().getBool("WEBGL_PACK_CLIP")?l=new i5(o.shape):l=new a5(o.shape);const c=[[a],[i]];return n.runWebGLProgram(l,[o],o.dtype,c)}const c5={kernelName:Mo,backendName:"webgl",kernelFunc:l5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u5{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function h5(s){const{inputs:t,backend:n}=s,{x:r}=t,o=n.texData.get(r.dataId),a=new u5(r.shape),i=[qC(r,o.complexTensorInfos.real),qC(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}const d5={kernelName:Li,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p5{constructor(t){this.outputShape=[],this.outputShape=Cs(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const n=new Array(t.length-1);n[0]=t[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+t[i][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const l=n[i-1];r.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const o=n.length,a=n[n.length-1];r.push(`else setOutput(getT${o}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f5{constructor(t,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cs(t,n);const r=this.outputShape,o=r.length,a=He(o),i=tn("coords",o),l=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((g,y)=>`T${y}`);const c=new Array(t.length-1);c[0]=t[0][n];for(let g=1;g<c.length;g++)c[g]=c[g-1]+t[g][n];const u=l[n],h=l.slice(-2),d=l.join();let p=`if (${u} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${h.join()}));
        }`;for(let g=1;g<c.length;g++){const y=c[g-1];p+=`
        if (${u} < ${c[g]}  && ${u} >= ${c[g-1]}) {
          return getChannel(
            getT${g}(${hp(l,u,y)}),
            vec2(${hp(h,u,y)}));
        }`}const f=c.length,m=c[c.length-1];p+=`
        return getChannel(
          getT${f}(${hp(l,u,m)}),
          vec2(${hp(h,u,m)}));`,this.userCode=`
      float getValue(${l.map(g=>"int "+g)}) {
        ${p}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${r[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${r[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${r[o-2]} &&
            ${i[o-1]} < ${r[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function hp(s,t,n){const r=s.indexOf(t);return s.map((a,i)=>i===r?`${a} - ${n}`:a).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dp(s){const{inputs:t,backend:n}=s,{input:r}=t,o=n.texData.get(r.dataId);return In({inputs:{x:o.complexTensorInfos.imag},backend:n})}const m5={kernelName:bu,backendName:"webgl",kernelFunc:dp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(s,t,n){const r=s[0].dtype;if(r==="complex64"){const h=s.map(g=>Lc({inputs:{input:g},backend:n})),d=s.map(g=>dp({inputs:{input:g},backend:n})),p=vi(h,t,n),f=vi(d,t,n),m=Er({inputs:{real:p,imag:f},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}let o=n.shouldExecuteOnCPU(s);if(r==="string"&&(o=!0),o){const h=s.map(b=>{const x=H(b.shape.slice(t));return ie({inputs:{x:b},backend:n,attrs:{shape:[-1,x]}})}),d=h.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),p=Cs(h.map(b=>b.shape),1),f=h[0].shape[0]===1,m=cq(d,p,r,f),g=Cs(s.map(b=>b.shape),t),y=n.makeTensorInfo(g,r,m);return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}if(s.length>q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const h=Math.floor(s.length/2),d=vi(s.slice(0,h),t,n),p=vi(s.slice(h),t,n),f=vi([d,p],t,n);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new f5(s.map(d=>d.shape),t);return n.runWebGLProgram(h,s,r)}const{tensors2D:a,outShape:i}=g5(s,t,n),l=new p5(a.map(h=>h.shape)),c=n.runWebGLProgram(l,a,r);a.forEach(h=>n.disposeIntermediateTensorInfo(h));const u=ie({inputs:{x:c},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(c),u}function g5(s,t,n){const r=Cs(s.map(a=>a.shape),t);return{tensors2D:s.map(a=>ie({inputs:{x:a},attrs:{shape:[-1,H(a.shape.slice(t))]},backend:n})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r,a=ke(o,t[0].shape)[0],i=Cs(t.map(u=>u.shape),a);if(H(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(u=>H(u.shape)>0);if(l.length===1)return In({inputs:{x:l[0]},backend:n});const c=l.map(u=>u.shape);return Sm(c,a),vi(l,a,n)}const y5={kernelName:Pi,backendName:"webgl",kernelFunc:KC};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XC{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,c=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,y=t.dataFormat==="channelsLast",b=y?1:2,x=y?2:3,w=y?3:1;let v="",C="";r&&(o?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:v=`
          float activation(float x) {
            ${r}
          }
        `,C="result = activation(result);");const I=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${C}
        setOutput(result);
      }
    `}}class b5{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const n=t.padInfo.front,r=t.padInfo.top,o=t.padInfo.left,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterDepth,p=t.filterHeight,f=t.filterWidth,m=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${i}, ${l});
      const ivec3 pads = ivec3(${n}, ${r}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x5{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=On(this.outputShape.length);const{dataFormat:r}=n,o=en(),a=r==="channelsLast",i=a?0:1,l=a?1:2,c=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let u="";for(let h=0;h<=1;h++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.y + ${d};
          pos = rc.x + ${h};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${h*2+d}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${h*2+d}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC({x:s,filter:t,convInfo:n,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const c=s.shape,u=r.texData.get(s.dataId),h=n.inChannels,d=c[0]*c[1]*c[2],p=n.outChannels,f=n.dataFormat==="channelsLast",m=!1,g=!1;let y;const b=[];if(!((d===1||p===1)&&h>MC)&&u.isPacked&&f&&u.texture!=null&&c[2]%2!=0&&Ae(u.shape.slice(-3),c.slice(-3))){const v=c[0]*c[1]*(c[2]+1),C={dataId:s.dataId,shape:[1,v,n.inChannels],dtype:s.dtype},I=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,k(ep(u.shape,C.shape),()=>`packed reshape ${u.shape} to ${C.shape} isn't free`);const N=ie({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(N);const S=cp({a:C,b:N,backend:r,transposeA:m,transposeB:g,bias:o,activation:l,preluActivationWeights:a,leakyreluAlpha:i}),E=r.texData.get(S.dataId);k(E.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=I,E.shape=n.outShape,y=In({inputs:{x:S},backend:r}),y.shape=n.outShape,b.push(S)}else{const v=f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],C=ie({inputs:{x:s},backend:r,attrs:{shape:[1,v,n.inChannels]}}),I=ie({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),N=cp({a:C,b:I,transposeA:m,transposeB:g,backend:r,bias:o,activation:l,preluActivationWeights:a,leakyreluAlpha:i});y=ie({inputs:{x:N},backend:r,attrs:{shape:n.outShape}}),b.push(C),b.push(I),b.push(N)}for(const v of b)r.disposeIntermediateTensorInfo(v);return y}function ZC({x:s,filter:t,convInfo:n,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:c,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m=f==="channelsLast",g=c*u*h,y=p*d,b=[g,y],x=!0,w=!1,v=[],C=ie({inputs:{x:s},backend:r,attrs:{shape:s.shape.slice(1)}}),I=ie({inputs:{x:t},backend:r,attrs:{shape:[1,g,H(t.shape)/g]}});v.push(C),v.push(I);const N=new x5(b,n),S=[C.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(N,[C],"float32",S),A=ie({inputs:{x:E},backend:r,attrs:{shape:[1,b[0],b[1]]}});v.push(E),v.push(A);const _=o!=null,D=a!=null,O=l==="leakyrelu",B=l?ap(l,!0):null,W=new _C(A.shape,I.shape,[1,y,n.outChannels],x,w,_,B,D,O),M=[A,I];if(o&&M.push(o),D&&M.push(a),O){const Z=r.makeTensorInfo([],"float32",Ls(i,"float32"));M.push(Z),v.push(Z)}const j=r.runWebGLProgram(W,M,"float32"),U=m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d],K=ie({inputs:{x:j},backend:r,attrs:{shape:U}});v.push(j);for(const Z of v)r.disposeIntermediateTensorInfo(Z);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dataFormat:c,dilations:u,dimRoundingMode:h}=r,d=Vs(c),p=Rt(o.shape,a.shape,i,u,l,h,!1,d);let f;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))f=YC({x:o,filter:a,convInfo:p,backend:n});else if(q().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=ZC({x:o,filter:a,convInfo:p,backend:n});else{const g=new XC(p);f=n.runWebGLProgram(g,[o,a],"float32")}const m=ie({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}const v5={kernelName:zi,backendName:"webgl",kernelFunc:w5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $5{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,a=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class C5{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dataFormat==="channelsLast",l=n-1-t.padInfo.top,c=r-1-t.padInfo.left,u=i?1:2,h=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class N5{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${a};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class k5{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterDepth,r=t.filterHeight,o=t.filterWidth,a=t.strideDepth,i=t.strideHeight,l=t.strideWidth,c=n-1-t.padInfo.front,u=r-1-t.padInfo.top,h=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${u}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,dataFormat:c,dimRoundingMode:u,filterShape:h}=r,d=Vs(c),p=Rt(o.shape,h,i,1,l,u,!1,d),f=new $5(p);return n.runWebGLProgram(f,[o,a],"float32")}const S5={kernelName:eu,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T5(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{inputShape:i,strides:l,pad:c,dataFormat:u,dimRoundingMode:h}=r,d=Vs(u),p=Rt(i,a.shape,l,1,c,h,!1,d),f=new C5(p);return n.runWebGLProgram(f,[o,a],"float32")}const E5={kernelName:Mi,backendName:"webgl",kernelFunc:T5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r,u=pr(o.shape,a.shape,i,c,l),h=new b5(u);return n.runWebGLProgram(h,[o,a],"float32")}const D5={kernelName:Bi,backendName:"webgl",kernelFunc:A5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,pad:l,filterShape:c}=r,u=pr(o.shape,c,i,1,l),h=new N5(u);return n.runWebGLProgram(h,[o,a],"float32")}const F5={kernelName:tu,backendName:"webgl",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{pad:i,strides:l,inputShape:c}=r,u=pr(c,a.shape,l,1,i),h=new k5(u);return n.runWebGLProgram(h,[o,a],"float32")}const O5={kernelName:nu,backendName:"webgl",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=FC+`
  return cos(x);
`,P5=Le({opSnippet:L5}),z5={kernelName:Bo,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,B5=Le({opSnippet:M5}),V5={kernelName:Vo,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W5{constructor(t,n,r,o,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,c,u]=t,[h]=n,[d,p]=r;this.outputShape=[h,d,p,u];const f=o==="bilinear"?1:0,[m,g]=[`${l-1}.0`,`${c-1}.0`],[y,b,x]=d>1?[`${(l-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[w,v,C]=p>1?[`${(c-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${v};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=s=>{const{inputs:t,backend:n,attrs:r}=s,{image:o,boxes:a,boxInd:i}=t,{cropSize:l,method:c,extrapolationValue:u}=r,h=new W5(o.shape,a.shape,l,c,u);return n.runWebGLProgram(h,[o,a,i],"float32")},G5={kernelName:su,backendName:"webgl",kernelFunc:U5};class JC{constructor(t,n,r){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=t;const o=t.length,a=n?"0.0":`getX(${QC(o,"coords")})`,i=t[t.length-1];let l="",c="";n?(l=r?`end != ${i-1}`:"end != 0",c=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${i}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${He(o)} coords = getOutputCoords();
        int end = ${eN(o,"coords")};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${eN(o,"coords")} = idx;
          val += getX(${QC(o,"coords")});
        }
        setOutput(val);
      }
    `}}function QC(s,t){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${s} is not yet supported`)}function eN(s,t){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,exclusive:i,reverse:l}=r,c=o.shape.length,u=gt([a],c);let h=o;u!=null&&(h=nn({inputs:{x:o},backend:n,attrs:{perm:u}}));const d=xt(1,c)[0];if(d!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${a}`);const p=h.shape[d];let f=In({inputs:{x:h},backend:n});for(let m=0;m<=Math.ceil(Math.log2(p))-1;m++){const g=new JC(h.shape,!1,l),y=[[m]],b=f;f=n.runWebGLProgram(g,[f],f.dtype,y),n.disposeIntermediateTensorInfo(b)}if(i){const m=new JC(h.shape,i,l),g=f;f=n.runWebGLProgram(m,[f],f.dtype),n.disposeIntermediateTensorInfo(g)}if(u!=null){const m=Wa(u),g=nn({inputs:{x:f},backend:n,attrs:{perm:m}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),g}return f}const j5={kernelName:Vi,backendName:"webgl",kernelFunc:H5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,weights:a}=t,{size:i,binaryOutput:l}=r;if(o.shape.length===1){const c=n.readSync(o.dataId),u=n.readSync(a.dataId),h=xC(c,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,h)}else if(o.shape.length===2){const c=n.bufferSync(o),u=n.bufferSync(a),h=iq(c,u,i,l);return n.makeTensorInfo(h.shape,a.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const K5={kernelName:ru,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X5{constructor(t,n,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=n,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockSize:a,dataFormat:i}=r;k(a>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`);const l=o.shape[0],c=i==="NHWC"?o.shape[1]:o.shape[2],u=i==="NHWC"?o.shape[2]:o.shape[3],h=i==="NHWC"?o.shape[3]:o.shape[1],d=c*a,p=u*a,f=h/(a*a),m=i==="NHWC"?[l,d,p,f]:[l,f,d,p],g=new X5(m,a,i);return n.runWebGLProgram(g,[o],o.dtype)}const Z5={kernelName:ou,backendName:"webgl",kernelFunc:Y5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tN{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=On(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,c=t.outChannels/t.inChannels;let u="",h="";r&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:u=`
          float activation(float x) {
            ${r}
          }
        `,h="result = activation(result);");const d=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nN{constructor(t,n=!1,r=null,o=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=On(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,c=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=d;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)f+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;for(let b=0;b<h;b++){for(let x=0;x<d;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + ${b} * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(p+1)/2;x++){const w=x*2;if(f+=`
          xC = xCCorner + ${w*u};
          `,c===1){if(w<d&&(l%2==1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?f+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<d)){const v=l%2==0?Vp(u):u;u%2==0&&l%2==1||u%2!=0&&l%2!=1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1&&(f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                      xTexelC${w} = getX(batch, xR, xCOffset, d1);
                      xTexelC${w}Ready = 1;
                    }
                    `),f+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                  `):v===1?f+=`
                    xC${w+1} = xTexelC${w};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<d&&(l%2==1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<d&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<d&&(f+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<d&&(f+=`
            wTexel = getW(${b}, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<d&&(f+=`
              wTexel = getW(${b}, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
        }
      `}let m="",g="";r&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,g="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c,dimRoundingMode:u}=r;let h=c;h==null&&(h=[1,1]),k(Wt(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=Rt(o.shape,a.shape,i,h,l,u,!0);let p;q().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?p=new nN(d):p=new tN(d);const f=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[o,a],"float32",f)}const Q5={kernelName:Wi,backendName:"webgl",kernelFunc:J5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eX{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,r=t.strideWidth,o=t.padInfo.top,a=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class tX{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=n-1-t.padInfo.top,l=r-1-t.padInfo.left,c=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,dy:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,filterShape:h}=r,d=Rt(o.shape,h,i,l,c,u,!0),p=new eX(d);return n.runWebGLProgram(p,[o,a],"float32")}const sX={kernelName:au,backendName:"webgl",kernelFunc:nX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,filter:a}=t,{strides:i,dilations:l,pad:c,dimRoundingMode:u,inputShape:h}=r,d=Rt(h,a.shape,i,l,c,u,!0),p=new tX(d);return n.runWebGLProgram(p,[o,a],"float32")}const oX={kernelName:iu,backendName:"webgl",kernelFunc:rX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aX{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(s){const{inputs:t,backend:n}=s,{x:r}=t,o=[...r.shape,...r.shape],a=H(r.shape),i=ie({inputs:{x:r},backend:n,attrs:{shape:[a]}}),l=new aX(a),c=n.runWebGLProgram(l,[i],i.dtype),u=ie({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}const lX={kernelName:lu,backendName:"webgl",kernelFunc:iX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cX{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:n,inWidth:r,padInfo:o,strideHeight:a,strideWidth:i,filterHeight:l,filterWidth:c,dilationHeight:u,dilationWidth:h}=t,{top:d,left:p}=o;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${i});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a}=t,{strides:i,pad:l,dilations:c}=r,u=Vl(o.shape,a.shape,i,l,"NHWC",c);let h;const d=new cX(u);h=n.runWebGLProgram(d,[o,a],"float32");const p=ie({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),p}const hX={kernelName:Ui,backendName:"webgl",kernelFunc:uX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(s){const{inputs:t,backend:n,attrs:r}=s,{equation:o}=r,a=t,{allDims:i,summedDims:l,idDims:c}=Bm(o,a.length);Wm(i.length,c,a);const{path:u,steps:h}=Um(l,c),d=h.length;let p=null,f=i.length;const m=[];for(let g=0;g<d;++g){for(const y of h[g]){const{permutationIndices:b,expandDims:x}=Vm(f,c[y]);let w;Gm(b)?w=a[y]:(w=nn({inputs:{x:a[y]},backend:n,attrs:{perm:b}}),m.push(w));const v=w.shape.slice();for(let C=0;C<x.length;++C)v.splice(x[C],0,1);Ae(w.shape,v)||(w=ie({inputs:{x:w},backend:n,attrs:{shape:v}}),m.push(w)),p===null?p=w:(p=vb({inputs:{a:w,b:p},backend:n}),m.push(p))}g<d-1&&(u[g]>=0&&(p=lp({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const g of m)g!==p&&n.disposeIntermediateTensorInfo(g);return p}const pX={kernelName:hu,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX="return (x >= 0.0) ? x : (exp(x) - 1.0);",mX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,gX=Le({opSnippet:fX,packedOpSnippet:mX}),yX={kernelName:Uo,backendName:"webgl",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX="return (b >= 1.0) ? a : a * (b + 1.0);",xX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,wX=s=>{const{inputs:t,backend:n}=s,{dy:r,y:o}=t,a=q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _c(xX,r.shape,o.shape):new xi(bX,r.shape,o.shape);return n.runWebGLProgram(a,[r,o],r.dtype)},vX={kernelName:du,backendName:"webgl",kernelFunc:wX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X=`
  return vec4(equal(a, b));
`,CX="return float(a == b);",NX=qt({opSnippet:CX,packedOpSnippet:$X,dtype:"bool",cpuKernelImpl:uq}),kX={kernelName:Gi,backendName:"webgl",kernelFunc:NX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Rm};
  float a1 = ${Fm};
  float a2 = ${_m};
  float a3 = ${Om};
  float a4 = ${Lm};
  float a5 = ${Pm};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,SX=Le({opSnippet:IX}),TX={kernelName:Go,backendName:"webgl",kernelFunc:SX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN="return exp(x);",rN=Le({opSnippet:sN,packedOpSnippet:sN,cpuKernelImpl:hq}),EX={kernelName:Ho,backendName:"webgl",kernelFunc:rN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kb(s){const{inputs:t,attrs:n,backend:r}=s,{dim:o}=n,{input:a}=t,i=a.shape.length,l=a.shape.slice();let c=o;return o<0&&(k(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+o+1),l.splice(c,0,1),ie({inputs:{x:a},backend:r,attrs:{shape:l}})}const AX={kernelName:Hi,backendName:"webgl",kernelFunc:kb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN="return exp(x) - 1.0;",DX=Le({opSnippet:oN,packedOpSnippet:oN,cpuKernelImpl:dq}),RX={kernelName:jo,backendName:"webgl",kernelFunc:DX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aN{constructor(t,n,r){this.variableNames=["real","imag"];const o=n[1];this.outputShape=n;const a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${o}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(s,t,n){const r=n.texData.get(s.dataId),o=H(s.shape),a=s.shape[s.shape.length-1],i=o/a,l=ie({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),c=l.shape,u=new aN("real",c,t),h=new aN("imag",c,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(u,d,"float32"),f=n.runWebGLProgram(h,d,"float32"),m=Er({inputs:{real:p,imag:f},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f);const g=ie({inputs:{x:m},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(s){const{inputs:t,backend:n}=s,{input:r}=t;return iN(r,!1,n)}const _X={kernelName:pu,backendName:"webgl",kernelFunc:FX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OX{constructor(t,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pc(s){const{backend:t,attrs:n}=s,{shape:r,value:o}=n;let{dtype:a}=n;if(a=a||To(o),a==="string"){const i=Yt(a,H(r));return i.fill(o),t.makeTensorInfo(r,a,i)}else{const i=new OX(r,o),l=[[o]];return t.runWebGLProgram(i,[],a,l)}}const LX={kernelName:fu,backendName:"webgl",kernelFunc:Pc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PX{constructor(t){this.variableNames=["Image"],this.outputShape=[];const n=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX={kernelName:mu,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:n}=s,r=t,o=new PX(n.shape);return r.runWebGLProgram(o,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN="return floor(x);",MX=Le({opSnippet:lN,packedOpSnippet:lN,cpuKernelImpl:pq}),BX={kernelName:qo,backendName:"webgl",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,WX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,UX=qt({opSnippet:VX,packedOpSnippet:WX,dtype:"int32"}),GX={kernelName:Ko,backendName:"webgl",kernelFunc:UX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(t){this.variableNames=["A"];const n=en(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${r}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jX{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=en(),[r,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${r}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX={kernelName:qu,backendName:"webgl",kernelFunc:KX};let $i;function KX(s){const{inputs:t,backend:n,attrs:r}=s;let{pixels:o}=t;const{numChannels:a}=r,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,l=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[c,u]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],h=[u,c],d=[u,c,a];(l||i)&&($i==null&&($i=document.createElement("canvas").getContext("2d")),$i.canvas.width=c,$i.canvas.height=u,$i.drawImage(o,0,0,c,u),o=$i.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=_n.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),o);const f=q().getBool("WEBGL_PACK")?new jX(d):new HX(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,g=Vs(h),y=Rt(o.shape,a.shape,c,d,u,p,!1,g);let b;const x=[];if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))b=YC({x:o,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(q().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)b=ZC({x:o,filter:a,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const v=i!=null,C=l!=null,I=f==="leakyrelu",N=f?ap(f,!1):null,S=new XC(y,v,N,C,I),E=[o,a];if(i&&E.push(i),l&&E.push(l),I){const A=n.makeTensorInfo([],"float32",Ls(m,"float32"));E.push(A),x.push(A)}b=n.runWebGLProgram(S,E,"float32")}const w=ie({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const YX={kernelName:Al,backendName:"webgl",kernelFunc:XX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,filter:a,bias:i,preluActivationWeights:l}=t,{strides:c,pad:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=[];let g=h;g==null&&(g=[1,1]),k(Wt(c,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${g}'`);const y=Rt(o.shape,a.shape,c,g,u,d,!0),b=q().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=p?ap(p,b):null,w=[o,a],v=i!=null,C=l!=null,I=p==="leakyrelu";if(v&&w.push(i),C&&w.push(l),I){const A=n.makeTensorInfo([],"float32",Ls(f,"float32"));w.push(A),m.push(A)}let N;b?N=new nN(y,v,x,C,I):N=new tN(y,v,x,C,I);const S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],E=n.runWebGLProgram(N,w,"float32",S);return m.forEach(A=>n.disposeIntermediateTensorInfo(A)),E}const JX={kernelName:Dl,backendName:"webgl",kernelFunc:ZX};class QX{constructor(t,n,r){this.sliceDim=t,this.strides=n,this.variableNames=["x","indices"],this.outputShape=r;const o=He(n.length),a=He(r.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(s){const{inputs:t,backend:n}=s,{params:r,indices:o}=t,a=o.shape,i=a[a.length-1],l=H(r.shape),[c,u,h,d]=lh(r,o),p=ie({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),f=ie({inputs:{x:r},backend:n,attrs:{shape:[H(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=n.readSync(o.dataId),x=n.bufferSync(r),w=fq(b,x,r.dtype,u,i,h,d,r.shape,l);return n.makeTensorInfo(c,r.dtype,w.values)}const m=new QX(i,d,[u,h]),g=n.runWebGLProgram(m,[f,p],f.dtype),y=ie({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}const t8={kernelName:gu,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n8{constructor(t,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const r=He(this.rank),o=s8(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function s8(s,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let o=0;o<s.length;o++)o===2?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[o]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,indices:a}=t,{axis:i,batchDims:l}=r,c=ke(i,o.shape)[0],u=jm(o,a,c,l),h=H(a.shape),d=[],p=ie({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ie({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});d.push(p),d.push(f);const m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([o,a])||o.dtype==="string"){const x=n.bufferSync(f),w=n.bufferSync(p),v=mq(w,x,m);return d.forEach(C=>n.disposeIntermediateTensorInfo(C)),n.makeTensorInfo(u.outputShape,v.dtype,v.values)}const g=new n8(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);d.push(y);const b=ie({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return d.forEach(x=>n.disposeIntermediateTensorInfo(x)),b}const r8={kernelName:qi,backendName:"webgl",kernelFunc:cN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8="return float(a > b);",a8=`
  return vec4(greaterThan(a, b));
`,i8=qt({opSnippet:o8,packedOpSnippet:a8,cpuKernelImpl:gq,dtype:"bool"}),l8={kernelName:Ki,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8="return float(a >= b);",u8=`
  return vec4(greaterThanEqual(a, b));
`,h8=qt({opSnippet:c8,packedOpSnippet:u8,dtype:"bool",cpuKernelImpl:yq}),d8={kernelName:Xo,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(s){const{inputs:t,backend:n}=s,{input:r}=t;return iN(r,!0,n)}const f8={kernelName:yu,backendName:"webgl",kernelFunc:p8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8="return float(!isnan(x) && !isinf(x));",g8=Le({opSnippet:m8,dtype:"bool"}),y8={kernelName:Zo,backendName:"webgl",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8="return float(isinf(x));",x8=Le({opSnippet:b8,dtype:"bool"}),w8={kernelName:Jo,backendName:"webgl",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8="return float(isnan(x));",$8=Le({opSnippet:v8,dtype:"bool"}),C8={kernelName:Qo,backendName:"webgl",kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8="return float(a < b);",k8=`
  return vec4(lessThan(a, b));
`,I8=qt({opSnippet:N8,packedOpSnippet:k8,cpuKernelImpl:bq,dtype:"bool"}),S8={kernelName:Yi,backendName:"webgl",kernelFunc:I8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T8="return float(a <= b);",E8=`
  return vec4(lessThanEqual(a, b));
`,A8=qt({opSnippet:T8,packedOpSnippet:E8,cpuKernelImpl:xq,dtype:"bool"}),D8={kernelName:Zi,backendName:"webgl",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(s){const{backend:t,attrs:n}=s,{start:r,stop:o,num:a}=n,i=wq(r,o,a);return t.makeTensorInfo([i.length],"float32",i)}const F8={kernelName:xu,backendName:"webgl",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=`if (x < 0.0) return NAN;
  return log(x);`,O8=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,L8=Le({opSnippet:_8,packedOpSnippet:O8,cpuKernelImpl:vq}),P8={kernelName:ea,backendName:"webgl",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8="return log(1.0 + x);",M8=Le({opSnippet:z8}),B8={kernelName:ta,backendName:"webgl",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8="return float(a >= 1.0 && b >= 1.0);",W8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,U8=qt({opSnippet:V8,packedOpSnippet:W8,dtype:"bool"}),G8={kernelName:Ji,backendName:"webgl",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8="return float(!(x >= 1.0));",j8=Le({opSnippet:H8}),q8={kernelName:Qi,backendName:"webgl",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8="return float(a >= 1.0 || b >= 1.0);",X8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Y8=qt({opSnippet:K8,packedOpSnippet:X8,dtype:"bool"}),Z8={kernelName:el,backendName:"webgl",kernelFunc:Y8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J8{constructor(t,n,r,o,a){this.variableNames=["x"],this.outputShape=[];const i=n,l=t[3]-1;this.outputShape=t;let c;const u=`float(${r}) + float(${o}) * sum`;a===.5?c=`inversesqrt(${u})`:a===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q8{constructor(t,n,r,o,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,l=t[3]-1;this.outputShape=t;let c;const u=`float(${r}) + float(${o}) * sum`;a===.5?c=`inversesqrt(${u})`:a===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eY=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{depthRadius:a,bias:i,alpha:l,beta:c}=r,u=q().getBool("WEBGL_PACK_NORMALIZATION")?new Q8(o.shape,a,i,l,c):new J8(o.shape,a,i,l,c);return n.runWebGLProgram(u,[o],o.dtype)},tY={kernelName:tl,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nY{constructor(t,n,r,o,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=n,this.bias=r,this.alpha=o,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o,y:a,dy:i}=t,{depthRadius:l,bias:c,alpha:u,beta:h}=r,d=new nY(o.shape,l,c,u,h);return n.runWebGLProgram(d,[o,a,i],o.dtype)},rY={kernelName:wu,backendName:"webgl",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(s,t,n,r){const o=H(t),i=H(s.shape)/o,l=ie({inputs:{x:s},attrs:{shape:[i,o]},backend:r}),c=wo(l,s.dtype,"max",r),u=ie({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reductionIndices:a,keepDims:i}=r,l=o.shape.length,c=ke(a,o.shape);let u=c;const h=gt(u,l),d=h!=null,p=n.shouldExecuteOnCPU([o]);let f=o;if(d){if(p){const w=n.texData.get(f.dataId).values,v=new Array(l);for(let N=0;N<v.length;N++)v[N]=o.shape[h[N]];const C=wb(w,o.shape,o.dtype,h,v);f=n.makeTensorInfo(v,o.dtype);const I=n.texData.get(f.dataId);I.values=C}else f=ip(o,h,n);u=xt(u.length,l)}Ut("max",u,l);const[m,g]=Ft(f.shape,u);let y=m;i&&(y=mt(m,c));let b;if(p){const w=n.texData.get(f.dataId).values,v=$q(w,H(g),y,o.dtype);b=n.makeTensorInfo(y,o.dtype);const C=n.texData.get(b.dataId);C.values=v}else b=oY(f,g,y,n);return d&&n.disposeIntermediateTensorInfo(f),b}const aY={kernelName:nl,backendName:"webgl",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iY=TC+`
  return max(a, b);
`,lY=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+op+`
  return result;
`,cY=qt({opSnippet:iY,packedOpSnippet:lY,cpuKernelImpl:Cq}),uY={kernelName:na,backendName:"webgl",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t;Rc(o,"maxPool");const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=r,u=1;k(Wt(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=Wn(o.shape,a,i,u,l,c);if(h.filterWidth===1&&h.filterHeight===1&&Ae(h.inShape,h.outShape))return In({inputs:{x:o},backend:n});const d=new Oc(h,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}const dY={kernelName:sl,backendName:"webgl",kernelFunc:hY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{filterSize:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=r,h=[1,1,1],d=Bs(o.shape,a,i,h,l,u,c),p=new $b(d,"max",!1);return n.runWebGLProgram(p,[o],o.dtype)}const fY={kernelName:rl,backendName:"webgl",kernelFunc:pY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=a-1-t.padInfo.top,c=i-1-t.padInfo.left,u=a*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class gY{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=c-1-t.padInfo.front,p=u-1-t.padInfo.top,f=h-1-t.padInfo.left,m=c*u*h-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a}=t,i=a,{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=r,d=[1,1,1],p=Bs(i.shape,l,c,d,u,h),f=new $b(p,"max",!0),m=n.runWebGLProgram(f,[i],i.dtype),g=new gY(p),y=n.runWebGLProgram(g,[o,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}const bY={kernelName:$u,backendName:"webgl",kernelFunc:yY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(s){const{inputs:t,backend:n,attrs:r}=s,{dy:o,input:a,output:i}=t,l=a;Rc([a,i],"maxPoolGrad");const{filterSize:c,strides:u,pad:h,dimRoundingMode:d}=r,p=Wn(l.shape,c,u,1,h,d),f=!0,m=new Oc(p,"max",f),g=n.runWebGLProgram(m,[l],l.dtype),y=new mY(p),b=n.runWebGLProgram(y,[o,g],l.dtype);return n.disposeIntermediateTensorInfo(g),b}const wY={kernelName:vu,backendName:"webgl",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(s,t,n,r){let o=new Oc(n,"max",!1);const a=r.runWebGLProgram(o,[s],"float32");o=new Oc(n,"max",!0,!0,t);const i=r.runWebGLProgram(o,[s],"float32");return[a,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y={kernelName:Cu,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{filterSize:o,strides:a,pad:i,includeBatchInIndex:l}=t,c=n;k(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];k(Wt(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const h=Wn(r.shape,o,a,u,i),[d,p]=vY(r,l,h,c);return[d,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(s,t,n,r){const o=H(t),i=H(s.shape)/o,l=ie({inputs:{x:s},attrs:{shape:[i,o]},backend:r}),c=wo(l,"float32","mean",r),u=ie({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY={kernelName:ol,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{x:r}=s,{keepDims:o,axis:a}=t,i=n,l=r.shape.length,c=ke(a,r.shape);let u=c;const h=gt(u,l),d=h!=null,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const v=i.texData.get(m.dataId).values,C=new Array(l);for(let S=0;S<C.length;S++)C[S]=r.shape[h[S]];const I=wb(v,r.shape,r.dtype,h,C);m=i.makeTensorInfo(C,r.dtype);const N=i.texData.get(m.dataId);N.values=I}else m=ip(r,h,i);f.push(m),u=xt(u.length,l)}Ut("sum",u,l);const[g,y]=Ft(m.shape,u);let b=g;o&&(b=mt(g,c));const x=CY(m,y,b,i);for(const w of f)i.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=ke(a,o.shape);let u=c;const h=gt(u,l);let d=o;h!=null&&(d=nn({inputs:{x:o},backend:n,attrs:{perm:h}}),u=xt(u.length,o.shape.length)),Ut("min",u,l);const[p,f]=Ft(d.shape,u),m=H(f),g=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),y=wo(g,g.dtype,"min",n);let b;if(i){const x=mt(p,c);b=ie({inputs:{x:y},backend:n,attrs:{shape:x}})}else b=ie({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),h!=null&&n.disposeIntermediateTensorInfo(d),b}const IY={kernelName:al,backendName:"webgl",kernelFunc:kY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SY=TC+`
  return min(a, b);
`,TY=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+op+`
  return result;
`,EY=qt({opSnippet:SY,packedOpSnippet:TY,cpuKernelImpl:Nq}),AY={kernelName:sa,backendName:"webgl",kernelFunc:EY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DY{constructor(t,n,r){this.variableNames=["x"],this.outputShape=n.map((h,d)=>h[0]+t[d]+h[1]);const o=t.length,a=He(o),i=n.map(h=>h[0]).join(","),l=n.map((h,d)=>h[0]+t[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=r==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RY{constructor(t,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((m,g)=>m[0]+t[g]+m[1]);const o=t.length,a=He(o),i=n.map(m=>m[0]).join(","),l=n.map((m,g)=>m[0]+t[g]).join(","),c=tn("rc",o),u=tn("source",o),h=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,p=r==="reflect"?0:1;let f="";if(o===1){const m=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;f=`
        ${a} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${h}) {
          ${m}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const m=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;f=`
        ${a} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${h}) {
          ${m}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${c[o-2]} += 1;
        if(${c[o-2]} < ${this.outputShape[o-2]}) {
          ${m}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${c[o-1]} += 1;
          if(${h}) {
            ${m}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY=({inputs:s,backend:t,attrs:n})=>{const{x:r}=s,{paddings:o,mode:a}=n,i=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RY(r.shape,o,a):new DY(r.shape,o,a);return t.runWebGLProgram(i,[r],r.dtype)},_Y={kernelName:il,backendName:"webgl",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OY=`if (b == 0.0) return NAN;
  return mod(a, b);`,LY=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+op+`
  return result;
`,PY=qt({opSnippet:OY,packedOpSnippet:LY}),zY={kernelName:ra,backendName:"webgl",kernelFunc:PY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MY{constructor(t,n,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY=`
if (a == b) {
  return 1.0;
};
return a / b;`,VY=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,hN=qt({opSnippet:BY,packedOpSnippet:VY,checkOutOfBounds:!0}),WY={kernelName:Wo,backendName:"webgl",kernelFunc:hN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dN="return a - b;",pN=qt({opSnippet:dN,packedOpSnippet:dN,supportsComplex:!0,cpuKernelImpl:Bq}),UY={kernelName:wa,backendName:"webgl",kernelFunc:pN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{dim:a}=r,i=ke([a],o.shape),l=uN({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=mt(l.shape,i),u=ie({inputs:{x:l},backend:n,attrs:{shape:c}}),h=pN({inputs:{a:o,b:u},backend:n}),d=rN({inputs:{x:h},backend:n}),p=lp({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),f=ie({inputs:{x:p},backend:n,attrs:{shape:c}}),m=hN({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const GY={kernelName:Nl,backendName:"webgl",kernelFunc:fN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(s){const{inputs:t,backend:n,attrs:r}=s,{logits:o}=t,{numSamples:a,seed:i,normalized:l}=r,c=l?o:fN({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),u=c.shape[0],h=c.shape[1],d=new MY(u,h,a),p=[[i]],f=n.runWebGLProgram(d,[c],"int32",p);return l||n.disposeIntermediateTensorInfo(c),f}const jY={kernelName:Nu,backendName:"webgl",kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mN="return -x;";function qY(s){const{inputs:t,backend:n}=s,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const a=n.texData.get(r.dataId),[i,l]=Iq(a.values,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,i)}let o;return q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new bi(r.shape,mN):o=new Tr(r.shape,mN),n.runWebGLProgram(o,[r],r.dtype)}const KY={kernelName:ll,backendName:"webgl",kernelFunc:qY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY=Hh;function YY(s){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=r,u=n.readSync(o.dataId),h=n.readSync(a.dataId),{selectedIndices:d}=XY(u,h,i,l,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const ZY={kernelName:ku,backendName:"webgl",kernelFunc:YY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY=jh;function QY(s){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,padToMaxOutputSize:u}=r,h=n.readSync(o.dataId),d=n.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=JY(h,d,i,l,c,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const e7={kernelName:Iu,backendName:"webgl",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=qh;function n7(s){sn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=s,{boxes:o,scores:a}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=r,h=n.readSync(o.dataId),d=n.readSync(a.dataId),p=i,f=l,m=c,g=u,{selectedIndices:y,selectedScores:b}=t7(h,d,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const s7={kernelName:Su,backendName:"webgl",kernelFunc:n7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r7{constructor(t,n,r,o){this.variableNames=["indices"],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=s=>{const{inputs:t,backend:n,attrs:r}=s,{indices:o}=t,{depth:a,onValue:i,offValue:l}=r,c=H(o.shape),u=new r7(c,a,i,l),h=ie({inputs:{x:o},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(u,[h],o.dtype);n.disposeIntermediateTensorInfo(h);const p=[...o.shape,a],f=ie({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},a7={kernelName:hl,backendName:"webgl",kernelFunc:o7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pp(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="complex64"){const o=Lc({inputs:{input:r},backend:n}),a=pp({inputs:{x:o},backend:n}),i=dp({inputs:{input:r},backend:n}),l=pp({inputs:{x:i},backend:n}),c=Er({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return Pc({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const i7={kernelName:Tl,backendName:"webgl",kernelFunc:pp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(s){const{inputs:t,backend:n}=s,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const o=Lc({inputs:{input:r},backend:n}),a=gN({inputs:{x:o},backend:n}),i=dp({inputs:{input:r},backend:n}),l=pp({inputs:{x:i},backend:n}),c=Er({inputs:{real:a,imag:l},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}else return Pc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const l7={kernelName:ul,backendName:"webgl",kernelFunc:gN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(s){const{inputs:t,backend:n,attrs:r}=s,{axis:o}=r;if(t.length===1)return kb({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const a=t[0].shape,i=t[0].dtype;t.forEach(h=>{zt(a,h.shape,"All tensors passed to stack must have matching shapes"),k(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],c=t.map(h=>{const d=kb({inputs:{input:h},backend:n,attrs:{dim:o}});return l.push(d),d}),u=KC({inputs:c,backend:n,attrs:{axis:o}});return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),u}const u7={kernelName:dl,backendName:"webgl",kernelFunc:c7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h7{constructor(t,n,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((u,h)=>u[0]+t[h]+u[1]);const o=t.length,a=He(o),i=n.map(u=>u[0]).join(","),l=n.map((u,h)=>u[0]+t[h]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${l});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d7{constructor(t,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((g,y)=>g[0]+t[y]+g[1]);const o=t.length,a=He(o),i=n.map(g=>g[0]).join(","),l=n.map((g,y)=>g[0]+t[y]).join(","),c=tn("rc",o),u=tn("source",o),h=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${c[o-1]} += 1;
       if(${h}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${c[o-2]} += 1;
       if(${c[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${c[o-1]} += 1;
         if(${h}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,y=o===1?2:4;g<y;g++)m+=`
        ${p[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${d});
        }
      `;m+=o===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${l});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{paddings:a,constantValue:i}=r;if(H(o.shape)===0){const u=a.map((h,d)=>h[0]+o.shape[d]+h[1]);return Pc({backend:n,attrs:{shape:u,value:i,dtype:o.dtype}})}const l=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new d7(o.shape,a,i):new h7(o.shape,a,i),c=[[i]];return n.runWebGLProgram(l,[o],o.dtype,c)},p7={kernelName:pl,backendName:"webgl",kernelFunc:yN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,m7=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+op+`
  return result;
`,g7=qt({opSnippet:f7,packedOpSnippet:m7}),y7={kernelName:aa,backendName:"webgl",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{axis:a,keepDims:i}=r,l=o.shape.length,c=[],u=ke(a,o.shape);let h=u;const d=gt(h,l);let p=o;d!=null&&(p=nn({inputs:{x:o},backend:n,attrs:{perm:d}}),h=xt(h.length,l),c.push(p)),Ut("prod",h,l);let f;if(n.shouldExecuteOnCPU([p])){const m=n.texData.get(p.dataId).values,{outVals:g,outShape:y,outDtype:b}=Tq(p.shape,p.dtype,m,h);f=n.makeTensorInfo(y,b,g)}else{const[m,g]=Ft(p.shape,h),y=H(g),b=ie({inputs:{x:p},backend:n,attrs:{shape:[-1,y]}}),x=th(o.dtype),w=wo(b,x,"prod",n);f=ie({inputs:{x:w},backend:n,attrs:{shape:m}}),c.push(b),c.push(w)}if(i){c.push(f);const m=mt(f.shape,u);f=ie({inputs:{x:f},backend:n,attrs:{shape:m}})}return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const x7={kernelName:Tu,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN=s=>{const{backend:t,attrs:n}=s,{start:r,stop:o,step:a,dtype:i}=n,l=Eq(r,o,a,i);return t.makeTensorInfo([l.length],i,l)},w7={kernelName:Eu,backendName:"webgl",kernelFunc:bN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7="return 1.0 / x;",$7=Le({opSnippet:v7}),C7={kernelName:ia,backendName:"webgl",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7=ps+`
  return (x < 0.0) ? 0.0 : x;
`,k7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,I7=Le({opSnippet:N7,packedOpSnippet:k7}),S7={kernelName:la,backendName:"webgl",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=ps+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,E7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,A7=Le({opSnippet:T7,packedOpSnippet:E7}),D7={kernelName:ca,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R7{constructor(t,n,r,o,a){this.variableNames=["A"],this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r];let p;a?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F7{constructor(t,n,r,o,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r];let p;a?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r,[c,u]=l,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new F7(o.shape,c,u,a,i):new R7(o.shape,c,u,a,i);return n.runWebGLProgram(h,[o],"float32")}const O7={kernelName:yl,backendName:"webgl",kernelFunc:_7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L7{constructor(t,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,a]=n,[,i,l]=t,c=[r&&i>1?o-1:o,r&&l>1?a-1:a],u=[r&&i>1?i-1:i,r&&l>1?l-1:l],h=c[0]/u[0],d=c[1]/u[1],p=1/h,f=1/d,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r,l=new L7(a.shape,o.shape,i);return n.runWebGLProgram(l,[a],a.dtype)}const z7={kernelName:Ru,backendName:"webgl",kernelFunc:P7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M7{constructor(t,n,r,o,a){this.variableNames=["A"],this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r],p=o?"0.5":"0.0";let f;a?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B7{constructor(t,n,r,o,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,c,u]=t;this.outputShape=[i,n,r,u];const h=[o&&n>1?l-1:l,o&&r>1?c-1:c],d=[o&&n>1?n-1:n,o&&r>1?r-1:r],p=o?"0.5":"0.0";let f;a?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(s){const{inputs:t,backend:n,attrs:r}=s,{images:o}=t,{alignCorners:a,halfPixelCenters:i,size:l}=r,[c,u]=l,h=q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new B7(o.shape,c,u,a,i):new M7(o.shape,c,u,a,i);return n.runWebGLProgram(h,[o],o.dtype)}const W7={kernelName:gl,backendName:"webgl",kernelFunc:V7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U7{constructor(t,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,o,a]=n,[,i,l]=t,c=[r&&i>1?o-1:o,r&&l>1?a-1:a],u=[r&&i>1?i-1:i,r&&l>1?l-1:l],h=c[0]/u[0],d=c[1]/u[1],p=1/h,f=1/d,m=Math.ceil(p)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${f});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(s){const{inputs:t,backend:n,attrs:r}=s,{images:o,dy:a}=t,{alignCorners:i}=r,l=new U7(a.shape,o.shape,i);return n.runWebGLProgram(l,[a],a.dtype)}const H7={kernelName:Du,backendName:"webgl",kernelFunc:G7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j7{constructor(t,n){this.variableNames=["x"];const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const o=l=>n.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,a=t.map((l,c)=>o(c)).join(","),i=He(r);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q7{constructor(t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const o=tn("rc",r),a=`${o[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${o[r-2]} + 1 < ${this.outputShape[r-2]}`,l=He(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(o.slice())};
          if(${a}){
            result.g = ${u(o.slice())};
          }
          if(${i}) {
            result.b = ${h(o.slice())};
            if(${a}) {
              result.a = ${d(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(m){return p(m)}function u(m){return m[r-1]="("+m[r-1]+" + 1)",p(m)}function h(m){return m[r-2]="("+m[r-2]+" + 1)",p(m)}function d(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",p(m)}function p(m){const g=t.map((x,w)=>f(w,m)),y=g.join(","),b=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${b}))`}function f(m,g){return n.indexOf(m)!==-1&&t[m]!==1?`${t[m]} - ${g[m]} - 1`:`${g[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{dims:a}=r,i=o.shape.length,l=ke(a,o.shape);if(i===0)return In({inputs:{x:o},backend:n});const c=q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new q7(o.shape,l):new j7(o.shape,l);return n.runWebGLProgram(c,[o],o.dtype)}const X7={kernelName:bl,backendName:"webgl",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y7{constructor(t,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=t[1],o=t[2];this.outputShape=t;let a="";typeof n=="number"?a=`float outputValue = ${n.toFixed(2)};`:a=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7={kernelName:Ku,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:n})=>{const{image:r}=s,{radians:o,fillValue:a,center:i}=t,l=n,c=new Y7(r.shape,a),[u,h]=Em(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(c,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J7=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Q7=Le({opSnippet:J7}),e9={kernelName:ua,backendName:"webgl",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9="return inversesqrt(x);",n9=Le({opSnippet:t9,cpuKernelImpl:Aq}),s9={kernelName:ha,backendName:"webgl",kernelFunc:n9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xN{constructor(t,n,r,o,a,i,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=He(a.length),u=He(i.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`,m=n>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(s){const{inputs:t,backend:n,attrs:r}=s,{indices:o,updates:a}=t,{shape:i}=r,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=_a(a,o,i),p=[d/u,u];if(d===0)return n.makeTensorInfo(i,o.dtype);const f=ie({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=ie({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new xN(c,l,f.shape.length,m.shape.length,h,p),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=ie({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}const o9={kernelName:Fu,backendName:"webgl",kernelFunc:r9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a9{constructor(t,n,r){this.variableNames=["c","a","b"],this.outputShape=n;let o,a;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)a="resRC",o="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],u=[];for(let h=0;h<n.length;h++)u.push(`${l[h]}`),h<t&&c.push(`${l[h]}`);o=c.join(),a=u.join()}const i=He(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(s){const{inputs:t,backend:n}=s,{condition:r,t:o,e:a}=t,i=new a9(r.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[r,o,a],fn(o.dtype,a.dtype))}const l9={kernelName:xl,backendName:"webgl",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${sd};
  float scale = ${rd};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,u9=Le({opSnippet:c9}),h9={kernelName:da,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN="return 1.0 / (1.0 + exp(-1.0 * x));",d9=Le({opSnippet:wN,packedOpSnippet:wN,cpuKernelImpl:Dq}),p9={kernelName:ga,backendName:"webgl",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f9=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,m9=Le({opSnippet:f9}),g9={kernelName:ma,backendName:"webgl",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y9=FC+`
  return sin(x);
`,b9=Le({opSnippet:y9}),x9={kernelName:pa,backendName:"webgl",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,v9=Le({opSnippet:w9}),$9={kernelName:fa,backendName:"webgl",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,N9=Le({opSnippet:C9}),k9={kernelName:ya,backendName:"webgl",kernelFunc:N9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I9=s=>{const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{blockShape:a,paddings:i}=r;k(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=a.reduce((b,x)=>b*x),c=[[0,0]];c.push(...i);for(let b=1+a.length;b<o.shape.length;++b)c.push([0,0]);const u=[],h=yN({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),d=oc(h.shape,a,l,!1),p=ac(d.length,a.length,!1),f=ic(h.shape,a,l,!1),m=ie({inputs:{x:h},backend:n,attrs:{shape:d}}),g=nn({inputs:{x:m},backend:n,attrs:{perm:p}}),y=ie({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(h),u.push(m),u.push(g),u.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},S9={kernelName:$l,backendName:"webgl",kernelFunc:I9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(s){const{inputs:t,backend:n}=s,{indices:r,values:o,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=n.readSync(r.dataId),c=n.readSync(o.dataId),u=n.readSync(a.dataId),h=n.readSync(i.dataId)[0],[d,p,f,m,g]=Fq(l,r.shape,r.dtype,c,o.dtype,u,h);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],o.dtype,f),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(y=>Number(y)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const E9={kernelName:_u,backendName:"webgl",kernelFunc:T9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(s){const{inputs:t,backend:n}=s,{inputIndices:r,inputShape:o,newShape:a}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(o.dataId)),l=n.readSync(r.dataId),c=Array.from(n.readSync(a.dataId)),[u,h,d]=_q(l,r.shape,r.dtype,i,c);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([d.length],a.dtype,new Int32Array(d))]}const D9={kernelName:Ou,backendName:"webgl",kernelFunc:A9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);const i=n.readSync(r.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId),[u,h]=vC(i,r.shape,r.dtype,l,c,!0);return n.makeTensorInfo(h,r.dtype,u)}const F9={kernelName:Lu,backendName:"webgl",kernelFunc:R9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(s){const{inputs:t,backend:n}=s,{data:r,indices:o,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);const i=n.readSync(r.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId),[u,h]=vC(i,r.shape,r.dtype,l,c);return n.makeTensorInfo(h,r.dtype,u)}const O9={kernelName:Pu,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(s){const{inputs:t,backend:n,attrs:r}=s,{sparseIndices:o,sparseValues:a,defaultValue:i}=t,{outputShape:l}=r,{sliceRank:c,numUpdates:u,strides:h,outputSize:d}=_a(a,o,l),p=!1,f=new xN(u,c,o.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,o,i],a.dtype),g=ie({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(m),g}const P9={kernelName:zu,backendName:"webgl",kernelFunc:L9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{numOrSizeSplits:a,axis:i}=r,l=ke(i,o.shape)[0],c=Hm(o,a,l),u=o.shape.length,h=new Array(u).fill(0),d=o.shape.slice();return c.map(p=>{const f=[...d];f[l]=p;const m=wi({inputs:{x:o},backend:n,attrs:{begin:h,size:f}});return h[l]+=p,m})}const M9={kernelName:Cl,backendName:"webgl",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN="return sqrt(x);",B9=Le({opSnippet:vN,packedOpSnippet:vN,cpuKernelImpl:Oq}),V9={kernelName:ba,backendName:"webgl",kernelFunc:B9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9="return x * x;",U9=Le({opSnippet:W9}),G9={kernelName:Mu,backendName:"webgl",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N="return (a - b) * (a - b);",H9=qt({opSnippet:$N,packedOpSnippet:$N}),j9={kernelName:xa,backendName:"webgl",kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9({inputs:s,attrs:t,backend:n}){const{x:r}=s,o=ps+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Tr(r.shape,o);return n.runWebGLProgram(a,[r],r.dtype)}const K9={kernelName:Na,backendName:"webgl",kernelFunc:q9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X9{constructor(t,n,r){this.variableNames=["x"],this.outputShape=r;const o=r.length,a=He(r.length),i=He(r.length);let l="";if(o===1)l="coords * strides + begin";else{let c=0;l=r.map((u,h)=>(c++,r.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${c-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${t});
      ${a} strides = ${a}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{begin:a,end:i,strides:l,beginMask:c,endMask:u,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=Ff(o.shape,a,i,l,c,u,h,d,p),w=ie({inputs:{x:o},backend:n,attrs:{shape:b}});let v;if(f){const I=wi({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=ie({inputs:{x:I},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(I)}else if(x.some(I=>I===0))v=n.makeTensorInfo(x,o.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const S=n.texData.get(w.dataId).values,E=Se(w.shape,w.dtype,S),A=Lq(x,E,g,m);v=n.makeTensorInfo(x,w.dtype,A.values)}else{const N=new X9(m,g,x);v=n.runWebGLProgram(N,[w],w.dtype)}const C=ie({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),C}const Z9={kernelName:Bu,backendName:"webgl",kernelFunc:Y9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(s){const{inputs:t,backend:n,attrs:r}=s,{separator:o,nGramWidths:a,leftPad:i,rightPad:l,padWidth:c,preserveShortSequences:u}=r,{data:h,dataSplits:d}=t,p=n.readSync(h.dataId),f=n.readSync(d.dataId),[m,g]=Pq(p,f,o,a,i,l,c,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",g)]}const Q9={kernelName:Vu,backendName:"webgl",kernelFunc:J9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eZ(s){const{inputs:t,backend:n,attrs:r}=s,{skipEmpty:o}=r,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[u,h,d]=zq(l,c,o),p=h.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const tZ={kernelName:Wu,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(s){const{inputs:t,backend:n,attrs:r}=s,{numBuckets:o}=r,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),l=Mq(i,o);return n.makeTensorInfo(a.shape,"int32",l)}const sZ={kernelName:Uu,backendName:"webgl",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rZ="return tan(x);",oZ=Le({opSnippet:rZ}),aZ={kernelName:va,backendName:"webgl",kernelFunc:oZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lZ=Le({opSnippet:iZ}),cZ={kernelName:$a,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uZ{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[i]*n[i];this.outputShape=r,this.rank=r.length;const o=He(this.rank),a=hZ(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function hZ(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let o=0;o<s.length;o++)r.push(`imod(${n[o]}, ${s[o]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{reps:a}=r;if(o.dtype==="string"||o.shape.length>5){const c=n.readSync(o.dataId),u=o.dtype==="string"?c.map(p=>Vr(p)):c,h=Se(o.shape,o.dtype,u),d=Vq(h,a);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new uZ(o.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const dZ={kernelName:Ca,backendName:"webgl",kernelFunc:CN};class pZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class fZ{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function NN(s){let t=1;for(;t<s;)t*=2;return t}function mZ(s){const{inputs:t,backend:n,attrs:r}=s,{x:o}=t,{k:a,sorted:i}=r,l=q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([o])||h<l||a>c){const A=n.readSync(o.dataId),[_,D]=Wq(A,u,o.dtype,a,i);return[n.makeTensorInfo(_.shape,_.dtype,_.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return u[u.length-1]=0,[n.makeTensorInfo(u,o.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(h===1)return[o,Pc({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(o.dataId),p=d!==null&&d.isPacked,f=p?n.unpackTensor(o):o,g=H(u)/h,y=ie({inputs:{x:f},attrs:{shape:[g,h]},backend:n});p&&vo(n,f);const b=NN(a),x=NN(h);let w=null;const v=()=>w===null?[y,y]:[y,w],C=(A,_,D)=>{const O=v(),B=new pZ(D),M=[[h],[w===null?1:0],[Number.NEGATIVE_INFINITY],[A],[_]],j=w;w=n.runWebGLProgram(B,O,"int32",M),vo(n,j)};for(let A=1;A<b;A*=2){const _=A*2;for(let D=A;D>=1;D/=2)C(_,D,[g,x])}for(let A=x;A>b;A/=2){const _=v(),D=new fZ([g,A/2]),B=[[h],[w===null?1:0],[b]],W=w;w=n.runWebGLProgram(D,_,"int32",B),vo(n,W);const M=b/2,j=M*2;for(let U=M;U>=1;U/=2)C(j,U,w.shape)}let I=w;w=wi({inputs:{x:w},backend:n,attrs:{begin:0,size:[g,a]}}),vo(n,I);let N=cN({inputs:{x:y,indices:w},backend:n,attrs:{axis:1,batchDims:1}});vo(n,y);const S=u.slice(0,-1);S.push(a),I=w,w=ie({inputs:{x:w},attrs:{shape:S},backend:n}),vo(n,I);const E=N;return N=ie({inputs:{x:N},attrs:{shape:S},backend:n}),vo(n,E),[N,w]}const gZ={kernelName:Gu,backendName:"webgl",kernelFunc:mZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(t,n,r,o,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=r==="nearest"?1:2;let c;switch(o){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(s){const{inputs:t,backend:n,attrs:r}=s,{image:o,transforms:a}=t,{interpolation:i,fillMode:l,fillValue:c,outputShape:u}=r,[h,d,p,f]=o.shape,[m,g]=u!=null?u:[d,p],y=[h,m,g,f],b=new yZ(d,p,i,l,c,y);return n.runWebGLProgram(b,[o,a],"float32")}const xZ={kernelName:Hu,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(s){const{inputs:t,attrs:n,backend:r}=s,{axis:o}=n,{x:a}=t;Rc(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:l,outputShape:c,indices:u}=Uq(i,o,a.shape,a.dtype);return[r.makeTensorInfo(c,a.dtype,l),r.makeTensorInfo([u.length],"int32",u)]}const vZ={kernelName:ju,backendName:"webgl",kernelFunc:wZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Z(s){const{inputs:t,backend:n,attrs:r}=s,{value:o}=t;let{axis:a}=r;a<0&&(a+=o.shape.length);const i=o,l=i.shape.length,c=o.shape[a],u=new Array(l-1);let h=0;for(let g=0;g<l;g++)g!==a&&(u[h++]=i.shape[g]);const d=[],p=new Array(l).fill(0),f=i.shape.slice();f[a]=1;const m=new Array(c);for(let g=0;g<m.length;g++){p[a]=g;const y=wi({inputs:{x:i},backend:n,attrs:{begin:p,size:f}}),b=ie({inputs:{x:y},backend:n,attrs:{shape:u}});m[g]=b,d.push(y)}return d.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const CZ={kernelName:Il,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NZ{constructor(t,n){this.variableNames=["x","segmentIds"];const r=t.windowSize,o=t.batchSize,a=t.inSize,i=t.numSegments,l=i*Math.ceil(a/r);this.outputShape=[o,l];const c="0.0",u="sumValue",h=Math.floor(r/4)*4,d=r%4,p=`
        sumValue += dot(values, segFilter);
    `;let f="";a%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let m="";a%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kZ(s){const{inputs:t,backend:n,attrs:r}=s,{x:o,segmentIds:a}=t,{numSegments:i}=r,l=o.shape.length,c=[];let u=0;const h=gt([u],l);let d=o;h!=null&&(d=nn({inputs:{x:o},backend:n,attrs:{perm:h}}),c.push(d),u=xt(1,l)[0]);const p=_w(d.shape,u,i),f=H([d.shape[u]]),m=ie({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});c.push(m);const g=th(o.dtype),y=(v,C,I,N,S)=>{const E=v.shape[0],A=v.shape[1],_=Fw(A,S),D={windowSize:_,inSize:A,batchSize:E,numSegments:S},O=new NZ(D,C),B=n.compileAndRun(O,[v,I],N);if(c.push(B),B.shape[1]===S)return B;const W=bN({backend:n,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),M=CN({inputs:{x:W},backend:n,attrs:{reps:[A/_]}});return c.push(W),c.push(M),y(B,C,M,N,S)},b=y(m,"unsortedSegmentSum",a,g,i),x=ie({inputs:{x:b},backend:n,attrs:{shape:p}});let w=x;if(h!=null){c.push(x);const v=Wa(h);w=nn({inputs:{x:w},backend:n,attrs:{perm:v}})}return c.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const IZ={kernelName:Sl,backendName:"webgl",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ=[tY,rY,V6,U6,j6,X6,Z6,eK,nK,rK,lK,uK,pK,gK,CK,xK,IK,AK,TK,_K,LK,zK,WK,XK,ZK,s5,o5,c5,d5,$6,y5,S5,E5,v5,F5,O5,D5,z5,V5,G5,j5,K5,Z5,sX,oX,Q5,lX,hX,pX,yX,vX,kX,TX,EX,AX,RX,_X,LX,zX,BX,GX,qX,YX,JX,t8,r8,l8,d8,v6,f8,m5,y8,w8,C8,N6,S8,D8,F8,B8,P8,G8,q8,Z8,aY,fY,dY,bY,wY,$Y,uY,NY,IY,AY,_Y,zY,jY,E6,KY,ZY,e7,s7,QK,a7,l7,u7,p7,y7,I6,x7,w7,e5,WY,C7,D7,S7,D6,O7,z7,W7,H7,X7,Z7,e9,s9,o9,l9,h9,p9,g9,x9,$9,qK,GY,k9,S9,E9,D9,F9,O9,P9,M9,V9,G9,j9,K9,Z9,Q9,tZ,sZ,UY,z6,aZ,cZ,dZ,gZ,xZ,M6,vZ,CZ,IZ,i7];for(const s of SZ)Zu(s);/** @license See the LICENSE file. */const TZ="3.9.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ={"tfjs-core":T0,"tfjs-backend-cpu":hV,"tfjs-backend-webgl":w6,"tfjs-data":Qv,"tfjs-layers":Ed,"tfjs-converter":_v,tfjs:TZ};var AZ=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",data:cB,version:EZ,AdadeltaOptimizer:Xh,AdagradOptimizer:Yh,AdamOptimizer:Zh,AdamaxOptimizer:Jh,MomentumOptimizer:Qh,Optimizer:js,RMSPropOptimizer:ed,SGDOptimizer:rc,Tensor:Pe,TensorBuffer:kt,Variable:Pl,get Rank(){return of},sumOutType:th,upcastType:fn,get Reduction(){return Jt},customGrad:ws,grad:hE,grads:dE,valueAndGrad:pE,valueAndGrads:fE,variableGrads:q0,Environment:vx,env:q,get ENV(){return Kp},nextFrame:td,KernelBackend:Uc,DataStorage:Mp,abs:bt,acos:zf,acosh:Mf,add:Y,addN:A0,all:ph,any:Bl,argMax:qr,argMin:Bf,asin:Vf,asinh:Wf,atan:Uf,atan2:Gf,atanh:Hf,avgPool:Wl,avgPool3d:Kf,basicLSTMCell:a2,batchToSpaceND:Ul,batchNorm:Yr,batchNorm2d:D0,batchNorm3d:R0,batchNorm4d:F0,bincount:Xf,broadcastArgs:_0,broadcastTo:La,buffer:Se,cast:ne,ceil:Yf,clipByValue:rn,clone:Ms,complex:cr,concat:ft,concat1d:O0,concat2d:L0,concat3d:P0,concat4d:z0,conv1d:mh,conv2d:Ws,conv2dTranspose:gh,conv3d:Jf,conv3dTranspose:B0,cos:Gl,cosh:yh,cumsum:bh,denseBincount:V0,depthToSpace:Qf,depthwiseConv2d:Pa,diag:L2,dilation2d:em,div:pe,divNoNan:tm,dot:W0,einsum:U0,elu:Ma,equal:gn,erf:nm,exp:yn,expandDims:on,expm1:sm,eye:rm,fill:Ba,floor:Va,floorDiv:dh,gather:Zr,greater:an,greaterEqual:mr,imag:xh,isFinite:G0,isInf:H0,isNaN:om,leakyRelu:Hl,less:wh,lessEqual:gr,linspace:j0,localResponseNormalization:am,log:bn,log1p:jl,logSigmoid:K0,logSoftmax:$h,logSumExp:lm,logicalAnd:Gn,logicalNot:ql,logicalOr:Ch,logicalXor:Y0,matMul:Ie,max:Un,maxPool:Kl,maxPool3d:cm,maxPoolWithArgmax:Z0,maximum:vs,mean:ut,meshgrid:RE,min:Xl,minimum:Ua,mirrorPad:um,mod:hm,moments:Nh,mul:L,multiRNNCell:BE,multinomial:J0,neg:rt,notEqual:Qr,oneHot:Ra,ones:xn,onesLike:wn,outerProduct:HE,pad:Us,pad1d:KE,pad2d:YE,pad3d:JE,pad4d:eA,pool:Q0,pow:Gs,prelu:Zl,print:o0,prod:kh,rand:cA,randomGamma:xA,randomNormal:iw,randomUniform:Ha,range:ja,real:Jl,reciprocal:pm,relu:ss,relu6:Ih,reshape:P,reverse:vn,reverse1d:TA,reverse2d:AA,reverse3d:RA,reverse4d:_A,round:Sh,rsqrt:Th,scalar:me,selu:Eh,separableConv2d:fm,setdiff1dAsync:lw,sigmoid:ns,sign:mm,sin:Ah,sinh:Dh,slice:Fe,slice1d:Rh,slice2d:gm,slice3d:Fh,slice4d:Ql,softmax:ec,softplus:Jr,spaceToBatchND:Yl,fft:tc,ifft:qa,irfft:_h,rfft:nc,split:ln,sqrt:Gt,square:We,squaredDifference:Oh,squeeze:$s,stack:$n,step:Ka,stridedSlice:ym,sub:ce,sum:ue,tan:bm,tanh:Xr,tensor:Vn,tensor1d:Ht,tensor2d:to,tensor3d:d0,tensor4d:aD,tensor5d:iD,tensor6d:lD,tile:An,topk:xm,truncatedNormal:Lh,unique:Ph,unsortedSegmentSum:wm,unstack:Hn,variable:cw,where:Kt,whereAsync:vm,zeros:wt,zerosLike:_e,op:F,OP_SCOPE_SUFFIX:Kx,booleanMaskAsync:gD,transpose:Re,norm:Mh,movingAverage:xD,scatterND:hw,sparseToDense:$m,gatherND:dw,dropout:pw,enclosingPowerOfTwo:fw,cosineWindow:Cm,inTopKAsync:SD,image:jn,linalg:Nw,losses:iF,spectral:oF,fused:_D,signal:aF,sparse:sc,string:Kh,train:so,enableProdMode:yT,enableDebugMode:bT,disableDeprecationWarnings:xT,deprecationWarn:wT,disposeVariables:vT,engine:dr,memory:hh,profile:$T,tidy:V,dispose:$e,keep:Dt,time:CT,setBackend:NT,ready:kT,getBackend:IT,removeBackend:ST,findBackend:TT,findBackendFactory:ET,registerBackend:Pf,backend:E0,setPlatform:AT,getKernel:Xu,getGradient:Jp,getKernelsForBackend:Yu,registerKernel:Zu,registerGradient:kx,unregisterKernel:EI,unregisterGradient:AI,copyRegisteredKernels:DI,Abs:Ti,Acos:Ao,Acosh:Do,Add:Lr,AddN:Ei,All:Kc,Any:Xc,ArgMax:Ai,ArgMin:Di,Asin:Ro,Asinh:Fo,Atan:_o,Atanh:Oo,Atan2:Lo,AvgPool:Ri,AvgPoolGrad:Yc,AvgPool3D:Fi,AvgPool3DGrad:Zc,BatchMatMul:_i,BatchToSpaceND:Oi,Bincount:Jc,BroadcastTo:Cx,BroadcastArgs:Zp,Cast:Po,Ceil:zo,ClipByValue:Mo,Complex:Qc,ComplexAbs:Li,Concat:Pi,Conv2D:zi,Conv2DBackpropFilter:eu,Conv2DBackpropInput:Mi,Conv3D:Bi,Conv3DBackpropFilterV2:tu,Conv3DBackpropInputV2:nu,Cos:Bo,Cosh:Vo,Cumsum:Vi,CropAndResize:su,DenseBincount:ru,DepthToSpace:ou,DepthwiseConv2dNative:Wi,DepthwiseConv2dNativeBackpropFilter:au,DepthwiseConv2dNativeBackpropInput:iu,Diag:lu,Dilation2D:Ui,Dilation2DBackpropInput:cu,Dilation2DBackpropFilter:uu,RealDiv:Wo,Einsum:hu,Elu:Uo,EluGrad:du,Erf:Go,Equal:Gi,Exp:Ho,ExpandDims:Hi,Expm1:jo,FFT:pu,Fill:fu,FlipLeftRight:mu,Floor:qo,FloorDiv:Ko,FusedBatchNorm:ji,GatherV2:qi,GatherNd:gu,Greater:Ki,GreaterEqual:Xo,Identity:Yo,IFFT:yu,Imag:bu,IsFinite:Zo,IsInf:Jo,IsNan:Qo,LeakyRelu:Xi,Less:Yi,LessEqual:Zi,LinSpace:xu,Log:ea,Log1p:ta,LogicalAnd:Ji,LogicalNot:Qi,LogicalOr:el,LogSoftmax:Nx,LRN:tl,LRNGrad:wu,Max:nl,Maximum:na,MaxPool:sl,MaxPoolGrad:vu,MaxPool3D:rl,MaxPool3DGrad:$u,MaxPoolWithArgmax:Cu,Mean:ol,Min:al,Minimum:sa,MirrorPad:il,Mod:ra,Multinomial:Nu,Multiply:oa,Neg:ll,NotEqual:cl,NonMaxSuppressionV3:ku,NonMaxSuppressionV4:Iu,NonMaxSuppressionV5:Su,OnesLike:ul,OneHot:hl,Pack:dl,PadV2:pl,Pool:TI,Pow:aa,Prelu:fl,Prod:Tu,Range:Eu,Real:Au,Reciprocal:ia,Relu:la,Reshape:ml,ResizeNearestNeighbor:gl,ResizeNearestNeighborGrad:Du,ResizeBilinear:yl,ResizeBilinearGrad:Ru,Relu6:ca,Reverse:bl,Round:ua,Rsqrt:ha,ScatterNd:Fu,Select:xl,Selu:da,Slice:wl,Sin:pa,Sinh:fa,Sign:ma,Sigmoid:ga,Softplus:ya,Sqrt:ba,Sum:vl,SpaceToBatchND:$l,SplitV:Cl,Softmax:Nl,SparseFillEmptyRows:_u,SparseReshape:Ou,SparseSegmentMean:Lu,SparseSegmentSum:Pu,SparseToDense:zu,SquaredDifference:xa,Square:Mu,StridedSlice:Bu,StringNGrams:Vu,StringSplit:Wu,StringToHashBucketFast:Uu,Sub:wa,Tan:va,Tanh:$a,Tile:Ca,TopK:Gu,Transform:Hu,Transpose:kl,Unique:ju,Unpack:Il,UnsortedSegmentSum:Sl,ZerosLike:Tl,Step:Na,FromPixels:qu,RotateWithOffset:Ku,_FusedMatMul:El,FusedConv2D:Al,FusedDepthwiseConv2D:Dl,version_core:T0,browser:oT,io:jS,math:JS,serialization:lT,test_util:gT,util:MI,backend_util:Lw,tensor_util:ZI,slice_util:k0,gather_util:aT,scatter_util:iT,device_util:tS,kernel_impls:dF,CallbackList:p1,CustomCallback:m1,History:f1,Callback:bv,callbacks:nz,EarlyStopping:wv,InputSpec:vt,SymbolicTensor:is,LayersModel:Xs,input:z1,loadLayersModel:l3,model:a3,registerCallbackConstructor:c3,sequential:i3,RNN:hs,Sequential:po,LayerVariable:l1,version_layers:Ed,constraints:vO,initializers:sL,layers:FP,metrics:XP,models:YP,regularizers:ez,GraphModel:Fv,loadGraphModel:IM,deregisterOp:rz,registerOp:sz,version_converter:_v}),zc=Fb(AZ),$o={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty($o,"__esModule",{value:!0});$o.cropTensor=$o.capture=void 0;var Co=zc;function DZ(s,t){return Co.tidy(function(){var n=Co.browser.fromPixels(s),r=kN(n,t),o=r.expandDims(0);return o.toFloat().div(Co.scalar(127)).sub(Co.scalar(1))})}$o.capture=DZ;function kN(s,t,n){var r=Math.min(s.shape[0],s.shape[1]),o=s.shape[0]/2,a=o-r/2,i=s.shape[1]/2,l=i-r/2;if(t&&!n){var c=s.slice([a,l,0],[r,r,3]);c=c.reshape([r*r,1,3]);var u=[.2989,.587,.114];return c=Co.mul(c,u),c=c.reshape([r,r,3]),c=Co.sum(c,-1),c=Co.expandDims(c,-1),c}return s.slice([a,l,0],[r,r,3])}$o.cropTensor=kN;var fs={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty(fs,"__esModule",{value:!0});fs.cropTo=fs.resizeMinTo=fs.resizeMaxTo=fs.resize=void 0;var fp=function(){return document.createElement("canvas")};function Ib(s,t,n){n===void 0&&(n=fp()),n.width=s.width*t,n.height=s.height*t;var r=n.getContext("2d");return r.drawImage(s,0,0,n.width,n.height),n}fs.resize=Ib;function RZ(s,t,n){n===void 0&&(n=fp());var r=Math.max(s.width,s.height);return Ib(s,t/r,n)}fs.resizeMaxTo=RZ;function FZ(s,t,n){n===void 0&&(n=fp());var r=Math.min(s.width,s.height);return Ib(s,t/r,n)}fs.resizeMinTo=FZ;function _Z(s,t,n,r){n===void 0&&(n=!1),r===void 0&&(r=fp());var o=s.width,a=s.height;s instanceof HTMLVideoElement&&(o=s.videoWidth,a=s.videoHeight);var i=Math.min(o,a),l=t/i,c=Math.ceil(o*l),u=Math.ceil(a*l),h=c-t,d=u-t;r.width=r.height=t;var p=r.getContext("2d");return p.drawImage(s,~~(h/2)*-1,~~(d/2)*-1,c,u),n&&(p.scale(-1,1),p.drawImage(r,t*-1,0)),r}fs.cropTo=_Z;var Mc={};/** @license See the LICENSE file. */Object.defineProperty(Mc,"__esModule",{value:!0});Mc.version=void 0;var OZ="0.8.4-alpha2";Mc.version=OZ;(function(s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var t=Ue&&Ue.__awaiter||function(N,S,E,A){function _(D){return D instanceof E?D:new E(function(O){O(D)})}return new(E||(E=Promise))(function(D,O){function B(j){try{M(A.next(j))}catch(U){O(U)}}function W(j){try{M(A.throw(j))}catch(U){O(U)}}function M(j){j.done?D(j.value):_(j.value).then(B,W)}M((A=A.apply(N,S||[])).next())})},n=Ue&&Ue.__generator||function(N,S){var E={label:0,sent:function(){if(D[0]&1)throw D[1];return D[1]},trys:[],ops:[]},A,_,D,O;return O={next:B(0),throw:B(1),return:B(2)},typeof Symbol=="function"&&(O[Symbol.iterator]=function(){return this}),O;function B(M){return function(j){return W([M,j])}}function W(M){if(A)throw new TypeError("Generator is already executing.");for(;E;)try{if(A=1,_&&(D=M[0]&2?_.return:M[0]?_.throw||((D=_.return)&&D.call(_),0):_.next)&&!(D=D.call(_,M[1])).done)return D;switch(_=0,D&&(M=[M[0]&2,D.value]),M[0]){case 0:case 1:D=M;break;case 4:return E.label++,{value:M[1],done:!1};case 5:E.label++,_=M[1],M=[0];continue;case 7:M=E.ops.pop(),E.trys.pop();continue;default:if(D=E.trys,!(D=D.length>0&&D[D.length-1])&&(M[0]===6||M[0]===2)){E=0;continue}if(M[0]===3&&(!D||M[1]>D[0]&&M[1]<D[3])){E.label=M[1];break}if(M[0]===6&&E.label<D[1]){E.label=D[1],D=M;break}if(D&&E.label<D[2]){E.label=D[2],E.ops.push(M);break}D[2]&&E.ops.pop(),E.trys.pop();continue}M=S.call(N,E)}catch(j){M=[6,j],_=0}finally{A=D=0}if(M[0]&5)throw M[1];return{value:M[0]?M[1]:void 0,done:!0}}};Object.defineProperty(s,"__esModule",{value:!0}),s.loadFromFiles=s.load=s.loadTruncatedMobileNet=s.CustomMobileNet=s.getTopKClasses=s.IMAGE_SIZE=void 0;var r=zc,o=zc,a=$o,i=fs,l=Mc,c=1,u="conv_pw_13_relu",h="out_relu",d=.25,p=.35;s.IMAGE_SIZE=224;var f=function(N){return N.packageVersion=N.packageVersion||l.version,N.packageName=N.packageName||"@teachablemachine/image",N.timeStamp=N.timeStamp||new Date().toISOString(),N.userMetadata=N.userMetadata||{},N.modelName=N.modelName||"untitled",N.labels=N.labels||[],N.imageSize=N.imageSize||s.IMAGE_SIZE,N},m=function(N){return!!N&&Array.isArray(N.labels)},g=function(N,S){if(N===1){if(S!==.25&&S!==.5&&S!==.75&&S!==1)return console.warn("Invalid alpha. Options are: 0.25, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",d.toFixed(2)),d}else if(S!==.35&&S!==.5&&S!==.75&&S!==1)return console.warn("Invalid alpha. Options are: 0.35, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",p.toFixed(2)),p;return S},y=function(N){if(N=N||{},N.checkpointUrl&&N.trainingLayer)return(N.alpha||N.version)&&console.warn("Checkpoint URL passed to modelOptions, alpha options are ignored"),[N.checkpointUrl,N.trainingLayer];if(N.version=N.version||c,N.version===1){N.alpha=N.alpha||d,N.alpha=g(N.version,N.alpha),console.log("Loading mobilenet "+N.version+" and alpha "+N.alpha);var S=N.alpha.toFixed(2);return S==="1.00"&&(S="1.0"),["https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_"+S+"_"+s.IMAGE_SIZE+"/model.json",u]}else{if(N.version===2)return N.alpha=N.alpha||p,N.alpha=g(N.version,N.alpha),console.log("Loading mobilenet "+N.version+" and alpha "+N.alpha),["https://storage.googleapis.com/teachable-machine-models/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_"+N.alpha.toFixed(2)+"_"+s.IMAGE_SIZE+"_no_top/model.json",h];throw new Error("MobileNet V"+N.version+" doesn't exist")}},b=function(N){return t(void 0,void 0,void 0,function(){var S,E;return n(this,function(A){switch(A.label){case 0:return typeof N!="string"?[3,3]:[4,fetch(N)];case 1:return E=A.sent(),[4,E.json()];case 2:return S=A.sent(),[3,4];case 3:if(m(N))S=N;else throw new Error("Invalid Metadata provided");A.label=4;case 4:return[2,f(S)]}})})};function x(N,S,E){return E===void 0&&(E=3),t(this,void 0,void 0,function(){var A;return n(this,function(_){switch(_.label){case 0:return[4,S.data()];case 1:return A=_.sent(),[2,r.tidy(function(){E=Math.min(E,A.length);for(var D=[],O=0;O<A.length;O++)D.push({value:A[O],index:O});D.sort(function(j,U){return U.value-j.value});for(var B=new Float32Array(E),W=new Int32Array(E),O=0;O<E;O++)B[O]=D[O].value,W[O]=D[O].index;for(var M=[],O=0;O<W.length;O++)M.push({className:N[W[O]],probability:B[O]});return M})]}})})}s.getTopKClasses=x;var w=function(){function N(S,E){this.model=S,this._metadata=f(E)}return Object.defineProperty(N,"EXPECTED_IMAGE_SIZE",{get:function(){return s.IMAGE_SIZE},enumerable:!1,configurable:!0}),N.prototype.getMetadata=function(){return this._metadata},N.prototype.getTotalClasses=function(){var S=this.model.output,E=S.shape[1];return E},N.prototype.getClassLabels=function(){return this._metadata.labels},N.prototype.predictTopK=function(S,E,A){return E===void 0&&(E=10),A===void 0&&(A=!1),t(this,void 0,void 0,function(){var _,D,O,B=this;return n(this,function(W){switch(W.label){case 0:return _=i.cropTo(S,this._metadata.imageSize,A),D=r.tidy(function(){var M=a.capture(_,B._metadata.grayscale);return B.model.predict(M)}),[4,x(this._metadata.labels,D,E)];case 1:return O=W.sent(),o.dispose(D),[2,O]}})})},N.prototype.predict=function(S,E){return E===void 0&&(E=!1),t(this,void 0,void 0,function(){var A,_,D,O,B,W=this;return n(this,function(M){switch(M.label){case 0:return A=i.cropTo(S,this._metadata.imageSize,E),_=r.tidy(function(){var j=a.capture(A,W._metadata.grayscale);return W.model.predict(j)}),[4,_.data()];case 1:for(D=M.sent(),O=[],B=0;B<D.length;B++)O.push({className:this._metadata.labels[B],probability:D[B]});return o.dispose(_),[2,O]}})})},N.prototype.dispose=function(){this.truncatedModel.dispose()},N}();s.CustomMobileNet=w;function v(N){return t(this,void 0,void 0,function(){var S,E,A,_,D,O,B,D,O,B;return n(this,function(W){switch(W.label){case 0:return S=y(N),E=S[0],A=S[1],[4,r.loadLayersModel(E)];case 1:return _=W.sent(),N&&N.version===1?(D=_.getLayer(A),O=r.model({inputs:_.inputs,outputs:D.output}),B=r.sequential(),B.add(O),B.add(r.layers.flatten()),[2,B]):(D=_.getLayer(A),O=r.model({inputs:_.inputs,outputs:D.output}),B=r.sequential(),B.add(O),B.add(r.layers.globalAveragePooling2d({})),[2,B])}})})}s.loadTruncatedMobileNet=v;function C(N,S){return t(this,void 0,void 0,function(){var E,A,_;return n(this,function(D){switch(D.label){case 0:return[4,r.loadLayersModel(N)];case 1:return E=D.sent(),S?[4,b(S)]:[3,3];case 2:return _=D.sent(),[3,4];case 3:_=null,D.label=4;case 4:return A=_,[2,new w(E,A)]}})})}s.load=C;function I(N,S,E){return t(this,void 0,void 0,function(){var A,_,D,O;return n(this,function(B){switch(B.label){case 0:return[4,r.loadLayersModel(r.io.browserFiles([N,S]))];case 1:return A=B.sent(),[4,new Response(E).json()];case 2:return _=B.sent(),E?[4,b(_)]:[3,4];case 3:return O=B.sent(),[3,5];case 4:O=null,B.label=5;case 5:return D=O,[2,new w(A,D)]}})})}s.loadFromFiles=I})(zp);var Ci={},IN={exports:{}};(function(s){(function(t,n,r){function o(c){var u=this,h=l();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=h(" "),u.s1=h(" "),u.s2=h(" "),u.s0-=h(c),u.s0<0&&(u.s0+=1),u.s1-=h(c),u.s1<0&&(u.s1+=1),u.s2-=h(c),u.s2<0&&(u.s2+=1),h=null}function a(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function i(c,u){var h=new o(c),d=u&&u.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&a(d,h),p.state=function(){return a(h,{})}),p}function l(){var c=4022871197,u=function(h){h=h.toString();for(var d=0;d<h.length;d++){c+=h.charCodeAt(d);var p=.02519603282416938*c;c=p>>>0,p-=c,p*=c,c=p>>>0,p-=c,c+=p*4294967296}return(c>>>0)*23283064365386963e-26};return u}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.alea=i})(Ue,s,!1)})(IN);var SN={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i})(Ue,s,!1)})(SN);var TN={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:u+=l;for(var h=0;h<u.length+64;h++)c.x^=u.charCodeAt(h)|0,h==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function a(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i})(Ue,s,!1)})(TN);var EN={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.x,d=c.i,p,f;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,c.i=d+1&7,f};function u(h,d){var p,f=[];if(d===(d|0))f[0]=d;else for(d=""+d,p=0;p<d.length;++p)f[p&7]=f[p&7]<<15^d.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8&&(f[7]=-1),h.x=f,h.i=0,p=256;p>0;--p)h.next()}u(c,l)}function a(l,c){return c.x=l.x.slice(),c.i=l.i,c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.x&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i})(Ue,s,!1)})(EN);var AN={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this;c.next=function(){var h=c.w,d=c.X,p=c.i,f,m;return c.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,c.i=p,m+(h^h>>>16)|0};function u(h,d){var p,f,m,g,y,b=[],x=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,x=Math.max(x,d.length)),m=0,g=-32;g<x;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,p=b[g&127]^=f+y,m=p==0?m+1:0);for(m>=128&&(b[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=b[m+34&127],p=b[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,b[m]=f^p;h.w=y,h.X=b,h.i=m}u(c,l)}function a(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function i(l,c){l==null&&(l=+new Date);var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(h.X&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i})(Ue,s,!1)})(AN);var DN={exports:{}};(function(s){(function(t,n,r){function o(l){var c=this,u="";c.next=function(){var d=c.b,p=c.c,f=c.d,m=c.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,c.b=d=d<<20^d>>>12^p,c.c=p=p-f|0,c.d=f<<16^p>>>16^m,c.a=m-d|0},c.a=0,c.b=0,c.c=2654435769|0,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):u+=l;for(var h=0;h<u.length+20;h++)c.b^=u.charCodeAt(h)|0,c.next()}function a(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function i(l,c){var u=new o(l),h=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var p=u.next()>>>11,f=(u.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=u.next,d.quick=d,h&&(typeof h=="object"&&a(h,u),d.state=function(){return a(u,{})}),d}n&&n.exports?n.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i})(Ue,s,!1)})(DN);var RN={exports:{}};(function(s){(function(t,n){var r=(0,eval)("this"),o=256,a=6,i=52,l="random",c=n.pow(o,a),u=n.pow(2,i),h=u*2,d=o-1,p;function f(v,C,I){var N=[];C=C==!0?{entropy:!0}:C||{};var S=b(y(C.entropy?[v,w(t)]:v==null?x():v,3),N),E=new m(N),A=function(){for(var _=E.g(a),D=c,O=0;_<u;)_=(_+O)*o,D*=o,O=E.g(1);for(;_>=h;)_/=2,D/=2,O>>>=1;return(_+O)/D};return A.int32=function(){return E.g(4)|0},A.quick=function(){return E.g(4)/4294967296},A.double=A,b(w(E.S),t),(C.pass||I||function(_,D,O,B){return B&&(B.S&&g(B,E),_.state=function(){return g(E,{})}),O?(n[l]=_,D):_})(A,S,"global"in C?C.global:this==n,C.state)}n["seed"+l]=f;function m(v){var C,I=v.length,N=this,S=0,E=N.i=N.j=0,A=N.S=[];for(I||(v=[I++]);S<o;)A[S]=S++;for(S=0;S<o;S++)A[S]=A[E=d&E+v[S%I]+(C=A[S])],A[E]=C;(N.g=function(_){for(var D,O=0,B=N.i,W=N.j,M=N.S;_--;)D=M[B=d&B+1],O=O*o+M[d&(M[B]=M[W=d&W+D])+(M[W]=D)];return N.i=B,N.j=W,O})(o)}function g(v,C){return C.i=v.i,C.j=v.j,C.S=v.S.slice(),C}function y(v,C){var I=[],N=typeof v,S;if(C&&N=="object")for(S in v)try{I.push(y(v[S],C-1))}catch{}return I.length?I:N=="string"?v:v+"\0"}function b(v,C){for(var I=v+"",N,S=0;S<I.length;)C[d&S]=d&(N^=C[d&S]*19)+I.charCodeAt(S++);return w(C)}function x(){try{var v;return p&&(v=p.randomBytes)?v=v(o):(v=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(v)),w(v)}catch{var C=r.navigator,I=C&&C.plugins;return[+new Date,r,I,r.screen,w(t)]}}function w(v){return String.fromCharCode.apply(0,v)}if(b(n.random(),t),s.exports){s.exports=f;try{p=require("crypto")}catch{}}})([],Math)})(RN);var LZ=IN.exports,PZ=SN.exports,zZ=TN.exports,MZ=EN.exports,BZ=AN.exports,VZ=DN.exports,No=RN.exports;No.alea=LZ;No.xor128=PZ;No.xorwow=zZ;No.xorshift7=MZ;No.xor4096=BZ;No.tychei=VZ;var WZ=No;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var UZ=Ue&&Ue.__extends||function(){var s=function(t,n){return s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,o){r.__proto__=o}||function(r,o){for(var a in o)o.hasOwnProperty(a)&&(r[a]=o[a])},s(t,n)};return function(t,n){s(t,n);function r(){this.constructor=t}t.prototype=n===null?Object.create(n):(r.prototype=n.prototype,new r)}}(),Qs=Ue&&Ue.__awaiter||function(s,t,n,r){function o(a){return a instanceof n?a:new n(function(i){i(a)})}return new(n||(n=Promise))(function(a,i){function l(h){try{u(r.next(h))}catch(d){i(d)}}function c(h){try{u(r.throw(h))}catch(d){i(d)}}function u(h){h.done?a(h.value):o(h.value).then(l,c)}u((r=r.apply(s,t||[])).next())})},er=Ue&&Ue.__generator||function(s,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,o,a,i;return i={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function l(u){return function(h){return c([u,h])}}function c(u){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,o&&(a=u[0]&2?o.return:u[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,u[1])).done)return a;switch(o=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,o=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(s,n)}catch(h){u=[6,h],o=0}finally{r=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(Ci,"__esModule",{value:!0});Ci.createTeachable=Ci.TeachableMobileNet=void 0;var Xt=zc,GZ=zc,HZ=$o,FN=zp,jZ=WZ,qZ=.15,KZ=function(s){return typeof s.dataId=="object"&&typeof s.shape=="object"};function XZ(s,t){var n=new Array(t).fill(0);return n[s]=1,n}function Sb(s,t){for(var n,r=s.length,o=s.slice(),a=r-1;a>0;a-=1){var i=void 0;t?i=Math.floor(t()*(a+1)):i=Math.floor(Math.random()*(a+1)),n=[o[i],o[a]],o[a]=n[0],o[i]=n[1]}return o}var _N=function(s){UZ(t,s);function t(n,r){var o=s.call(this,Xt.sequential(),r)||this;return o.totalSamples=0,o.examples=[],o.truncatedModel=n,o}return Object.defineProperty(t.prototype,"asSequentialModel",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),t.prototype.addExample=function(n,r){return Qs(this,void 0,void 0,function(){var o,a,i;return er(this,function(l){return o=KZ(r)?r:HZ.capture(r,this._metadata.grayscale),a=this.truncatedModel.predict(o),i=a.dataSync(),o.dispose(),a.dispose(),this.examples[n].push(i),this.totalSamples++,[2]})})},t.prototype.predict=function(n,r){return r===void 0&&(r=!1),Qs(this,void 0,void 0,function(){return er(this,function(o){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,s.prototype.predict.call(this,n,r)]})})},t.prototype.predictTopK=function(n,r,o){return r===void 0&&(r=10),o===void 0&&(o=!1),Qs(this,void 0,void 0,function(){return er(this,function(a){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,s.prototype.predictTopK.call(this,n,r,o)]})})},t.prototype.prepare=function(){for(var n in this.examples)if(n.length===0)throw new Error("Add some examples before training");var r=this.convertToTfDataset();this.trainDataset=r.trainDataset,this.validationDataset=r.validationDataset},t.prototype.convertToTfDataset=function(){for(var n=0;n<this.examples.length;n++)this.examples[n]=Sb(this.examples[n],this.seed);for(var r=[],o=[],a=function(d){var p=XZ(d,i.numClasses),f=i.examples[d].length,m=Math.ceil(qZ*f),g=f-m,y=i.examples[d].slice(0,g).map(function(x){return{data:x,label:p}}),b=i.examples[d].slice(g).map(function(x){return{data:x,label:p}});r=r.concat(y),o=o.concat(b)},i=this,n=0;n<this.examples.length;n++)a(n);r=Sb(r,this.seed),o=Sb(o,this.seed);var l=Xt.data.array(r.map(function(d){return d.data})),c=Xt.data.array(o.map(function(d){return d.data})),u=Xt.data.array(r.map(function(d){return d.label})),h=Xt.data.array(o.map(function(d){return d.label}));return{trainDataset:Xt.data.zip({xs:l,ys:u}),validationDataset:Xt.data.zip({xs:c,ys:h})}},t.prototype.save=function(n,r){return Qs(this,void 0,void 0,function(){return er(this,function(o){return[2,this.model.save(n,r)]})})},t.prototype.train=function(n,r){return r===void 0&&(r={}),Qs(this,void 0,void 0,function(){var o,a,i,l,c,u,h,d,p,f=this;return er(this,function(m){switch(m.label){case 0:if(o=r.onTrainEnd||function(){},r.onTrainEnd=function(g){f.__stopTrainingResolve&&(f.__stopTrainingResolve(),f.__stopTrainingResolve=null),o(g)},this.isPrepared||this.prepare(),a=this.getLabels().length,GZ.util.assert(a===this.numClasses,function(){return"Can not train, has "+a+" labels and "+f.numClasses+" classes"}),i=this.truncatedModel.outputs[0].shape.slice(1),l=Xt.util.sizeFromShape(i),this.seed?c=Xt.initializers.varianceScaling({seed:3.14}):c=Xt.initializers.varianceScaling({}),this.trainingModel=Xt.sequential({layers:[Xt.layers.dense({inputShape:[l],units:n.denseUnits,activation:"relu",kernelInitializer:c,useBias:!0}),Xt.layers.dense({kernelInitializer:c,useBias:!1,activation:"softmax",units:this.numClasses})]}),u=Xt.train.adam(n.learningRate),this.trainingModel.compile({optimizer:u,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(n.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return h=this.trainDataset.batch(n.batchSize),d=this.validationDataset.batch(n.batchSize),[4,this.trainingModel.fitDataset(h,{epochs:n.epochs,validationData:d,callbacks:r})];case 1:return m.sent(),p=Xt.sequential(),p.add(this.truncatedModel),p.add(this.trainingModel),this.model=p,u.dispose(),[2,this.model]}})})},t.prototype.prepareDataset=function(){for(var n=0;n<this.numClasses;n++)this.examples[n]=[]},t.prototype.setLabel=function(n,r){this._metadata.labels[n]=r},t.prototype.setLabels=function(n){this._metadata.labels=n,this.prepareDataset()},t.prototype.getLabel=function(n){return this._metadata.labels[n]},t.prototype.getLabels=function(){return this._metadata.labels},t.prototype.setName=function(n){this._metadata.modelName=n},t.prototype.getName=function(){return this._metadata.modelName},t.prototype.stopTraining=function(){var n=this,r=new Promise(function(o,a){n.trainingModel.stopTraining=!0,n.__stopTrainingResolve=o});return r},t.prototype.dispose=function(){this.trainingModel.dispose(),s.prototype.dispose.call(this)},t.prototype.calculateAccuracyPerClass=function(){return Qs(this,void 0,void 0,function(){var n,r,o,a,i,l,c,u,h,d,p,f,m,g,y,b,x,w,p,v=this;return er(this,function(C){switch(C.label){case 0:return n=this.validationDataset.mapAsync(function(I){return Qs(v,void 0,void 0,function(){return er(this,function(N){return[2,I.xs]})})}),r=this.validationDataset.mapAsync(function(I){return Qs(v,void 0,void 0,function(){return er(this,function(N){return[2,I.ys]})})}),o=Math.min(r.size,32),a=Math.ceil(r.size/o),i=n.batch(o),l=r.batch(o),[4,i.iterator()];case 1:return c=C.sent(),[4,l.iterator()];case 2:u=C.sent(),h=[],d=[],p=0,C.label=3;case 3:return p<a?[4,c.next()]:[3,7];case 4:return f=C.sent(),m=this.trainingModel.predict(f.value),g=m.argMax(1),h.push(g),[4,u.next()];case 5:y=C.sent(),b=y.value.argMax(1),d.push(b),f.value.dispose(),m.dispose(),y.value.dispose(),C.label=6;case 6:return p++,[3,3];case 7:if(x=Xt.concat(d),w=Xt.concat(h),a!==1)for(p=0;p<h.length;p++)h[p].dispose(),d[p].dispose();return[2,{reference:x,predictions:w}]}})})},t.prototype.setSeed=function(n){this.seed=jZ(n)},t}(FN.CustomMobileNet);Ci.TeachableMobileNet=_N;function YZ(s,t){return Qs(this,void 0,void 0,function(){var n;return er(this,function(r){switch(r.label){case 0:return[4,FN.loadTruncatedMobileNet(t)];case 1:return n=r.sent(),[2,new _N(n,s)]}})})}Ci.createTeachable=YZ;var mp={};function gp(s){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?gp=function(n){return typeof n}:gp=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},gp(s)}function Tb(s,t,n){var r=n.value;if(typeof r!="function")throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(gp(r)));var o=!1;return{configurable:!0,get:function(){if(o||this===s.prototype||this.hasOwnProperty(t)||typeof r!="function")return r;var i=r.bind(this);return o=!0,Object.defineProperty(this,t,{configurable:!0,get:function(){return i},set:function(c){r=c,delete this[t]}}),o=!1,i},set:function(i){r=i}}}function ON(s){var t;return typeof Reflect!="undefined"&&typeof Reflect.ownKeys=="function"?t=Reflect.ownKeys(s.prototype):(t=Object.getOwnPropertyNames(s.prototype),typeof Object.getOwnPropertySymbols=="function"&&(t=t.concat(Object.getOwnPropertySymbols(s.prototype)))),t.forEach(function(n){if(n!=="constructor"){var r=Object.getOwnPropertyDescriptor(s.prototype,n);typeof r.value=="function"&&Object.defineProperty(s.prototype,n,Tb(s,n,r))}}),s}function ZZ(){return arguments.length===1?ON.apply(void 0,arguments):Tb.apply(void 0,arguments)}var JZ=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",boundMethod:Tb,boundClass:ON,default:ZZ}),QZ=Fb(JZ);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ar=Ue&&Ue.__decorate||function(s,t,n,r){var o=arguments.length,a=o<3?t:r===null?r=Object.getOwnPropertyDescriptor(t,n):r,i;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(s,t,n,r);else for(var l=s.length-1;l>=0;l--)(i=s[l])&&(a=(o<3?i(a):o>3?i(t,n,a):i(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},eJ=Ue&&Ue.__awaiter||function(s,t,n,r){function o(a){return a instanceof n?a:new n(function(i){i(a)})}return new(n||(n=Promise))(function(a,i){function l(h){try{u(r.next(h))}catch(d){i(d)}}function c(h){try{u(r.throw(h))}catch(d){i(d)}}function u(h){h.done?a(h.value):o(h.value).then(l,c)}u((r=r.apply(s,t||[])).next())})},tJ=Ue&&Ue.__generator||function(s,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},r,o,a,i;return i={next:l(0),throw:l(1),return:l(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function l(u){return function(h){return c([u,h])}}function c(u){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,o&&(a=u[0]&2?o.return:u[0]?o.throw||((a=o.return)&&a.call(o),0):o.next)&&!(a=a.call(o,u[1])).done)return a;switch(o=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,o=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(s,n)}catch(h){u=[6,h],o=0}finally{r=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}};Object.defineProperty(mp,"__esModule",{value:!0});mp.Webcam=void 0;var Dr=QZ,nJ=fs,Eb={facingMode:"user",frameRate:24},sJ=function(s){return s.facingMode=s.facingMode||Eb.facingMode,s.frameRate=s.frameRate||Eb.frameRate,s.aspectRatio=s.aspectRatio||Eb.aspectRatio,s},rJ=function(){function s(t,n,r){t===void 0&&(t=400),n===void 0&&(n=400),r===void 0&&(r=!1),this.width=t,this.height=n,this.flip=r}return s.prototype.getWebcam=function(t){if(t===void 0&&(t={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");t.width=640;var n=sJ(t),r=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:n}).then(function(o){return r.srcObject=o,r.addEventListener("loadedmetadata",function(a){var i=r.videoWidth,l=r.videoHeight;r.width=i,r.height=l}),r},function(){return Promise.reject("Could not open your camera. You may have denied access.")})},s.prototype.setup=function(t){return t===void 0&&(t={}),eJ(this,void 0,void 0,function(){var n;return tJ(this,function(r){switch(r.label){case 0:return this.webcam?[3,2]:(n=this,[4,this.getWebcam(t)]);case 1:n.webcam=r.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),r.label=2;case 2:return[2]}})})},s.prototype.play=function(){var t=this.webcam.play();return t},s.prototype.pause=function(){this.webcam.pause()},s.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},s.prototype.update=function(){this.renderCameraToCanvas()},s.prototype.stopStreamedVideo=function(t){var n=t.srcObject,r=n.getTracks();r.forEach(function(o){o.stop()}),t.srcObject=null},s.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var t=this.canvas.getContext("2d");if(this.webcam.videoWidth!==0){var n=nJ.cropTo(this.webcam,this.width,this.flip);t.drawImage(n,0,0)}}},Ar([Dr.default],s.prototype,"getWebcam",null),Ar([Dr.default],s.prototype,"setup",null),Ar([Dr.default],s.prototype,"play",null),Ar([Dr.default],s.prototype,"pause",null),Ar([Dr.default],s.prototype,"stop",null),Ar([Dr.default],s.prototype,"update",null),Ar([Dr.default],s.prototype,"stopStreamedVideo",null),Ar([Dr.default],s.prototype,"renderCameraToCanvas",null),s}();mp.Webcam=rJ;(function(s){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object.defineProperty(s,"__esModule",{value:!0});var t=zp;Object.defineProperty(s,"IMAGE_SIZE",{enumerable:!0,get:function(){return t.IMAGE_SIZE}}),Object.defineProperty(s,"CustomMobileNet",{enumerable:!0,get:function(){return t.CustomMobileNet}}),Object.defineProperty(s,"load",{enumerable:!0,get:function(){return t.load}}),Object.defineProperty(s,"loadFromFiles",{enumerable:!0,get:function(){return t.loadFromFiles}}),Object.defineProperty(s,"loadTruncatedMobileNet",{enumerable:!0,get:function(){return t.loadTruncatedMobileNet}});var n=Ci;Object.defineProperty(s,"TeachableMobileNet",{enumerable:!0,get:function(){return n.TeachableMobileNet}}),Object.defineProperty(s,"createTeachable",{enumerable:!0,get:function(){return n.createTeachable}});var r=mp;Object.defineProperty(s,"Webcam",{enumerable:!0,get:function(){return r.Webcam}});var o=Mc;Object.defineProperty(s,"version",{enumerable:!0,get:function(){return o.version}})})(px);const LN="https://teachablemachine.withgoogle.com/models/wNpy2osdc/",oJ=LN+"model.json",aJ=LN+"metadata.json";function iJ(){const[s,t]=se.exports.useState(null);se.exports.useState("");const[n,r]=se.exports.useState(null),[o,a]=se.exports.useState(),[i,l]=se.exports.useState(),[c,u]=se.exports.useState(),[h,d]=se.exports.useState(!1);se.exports.useEffect(()=>{n===!1&&l("Not dogggggg")},[n]);const p=y=>{u(y.target.files[0])},f=()=>{if(d(!0),c)if(imageFile.size/1024/1024<=.5){t(imageFile);const y=new FileReader;let b=null;y.onloadend=function(){const x=new Image;x.onload=async function(){b=await(await px.load(oJ,aJ)).predict(x),b[0].probability>b[1].probability?(d(!1),alert("doggggggggg")):(d(!1),r(!1))},x.src=y.result},y.readAsDataURL(imageFile)}else d(!1),alert("This image too large, change other image: "+Math.round(e.target.files[0].size/1024/1024*100)/100+"MB");else d(!1)},m=()=>a(!1),g=()=>a(!0);return ee.createElement(ee.Fragment,null,ee.createElement(cI,{style:{marginRight:18},role:"button",size:"30",onClick:g}),ee.createElement(Ln,{show:o,onHide:m},ee.createElement(Ln.Header,{closeButton:!0},ee.createElement(Ln.Title,null,"Add Post")),ee.createElement(Ln.Body,null,ee.createElement("small",null,"Max size: 0.5MB"),ee.createElement("div",{className:"d-flex justify-content-between mb-1"},ee.createElement(Xe.Group,{controlId:"formFile"},ee.createElement(Xe.Control,{type:"file",onChange:p,accept:"image/png, image/jpg, image/jpeg, image/bmp"})),h?ee.createElement(rr,{disabled:!0},ee.createElement(Pp,{as:"span",animation:"grow",size:"sm",role:"status","aria-hidden":"true"}),"Loading..."):ee.createElement(rr,{onClick:f},"Upload")),ee.createElement("img",{src:Bb,alt:"image",className:"img-fluid mb-2",style:{userSelect:"none"}}),i&&ee.createElement(kp,{variant:"danger"},i))))}function lJ(){const[s,t]=se.exports.useState(!1),{setPage:n}=se.exports.useContext(ko);return ee.createElement("div",null,ee.createElement("img",{role:"button",width:"30",height:"30",src:"https://picsum.photos/1000",onClick:()=>{n("profile")},style:{objectFit:"cover",userSelect:"none"},onLoad:()=>t(!0),className:s?"rounded-circle me-3":"d-none"}),!s&&ee.createElement("img",{className:"rounded-circle me-3",src:Bb,height:30,width:30}))}const PN=JSON.parse(localStorage.getItem("accessToken"));function cJ(){const{stateAccessToken:s,setStateAccessToken:t}=se.exports.useContext(ko);return se.exports.useEffect(()=>{t(PN)},[PN,t]),ee.createElement("div",null,ee.createElement("div",{className:s?"d-flex justify-content-around":"d-none"},ee.createElement(iJ,null),ee.createElement(lJ,null),ee.createElement(hI,{role:"button",size:"30",onClick:()=>{t(null),localStorage.removeItem("accessToken")}})),ee.createElement("div",{className:s?"d-none":"d-flex justify-content-around"},ee.createElement(dI,null),ee.createElement(pI,null)))}function bJ(){const[s,t]=se.exports.useState("");return ee.createElement(Lp,{expand:"md",style:{position:"sticky",top:0,background:"white"}},ee.createElement(Bk,null,ee.createElement(nk,null),ee.createElement(Lp.Toggle,{"aria-controls":"basic-navbar-nav"}),ee.createElement(Lp.Collapse,{id:"basic-navbar-nav"},ee.createElement(lI,{find:s,setFind:t}),ee.createElement(cJ,null))))}export{bJ as default};
